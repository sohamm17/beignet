!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADVANCE_BATCH	./intel/intel_batchbuffer.h	73;"	d
ALIGN	./cl_utils.h	98;"	d
ALIGNED	./cl_utils.h	332;"	d
ASSERT	./cl_utils.h	325;"	d
B16	./x11/va_dri2str.h	/^    CARD16  length B16;$/;"	m	struct:__anon114
B16	./x11/va_dri2str.h	/^    CARD16  length B16;$/;"	m	struct:__anon116
B16	./x11/va_dri2str.h	/^    CARD16  length B16;$/;"	m	struct:__anon118
B16	./x11/va_dri2str.h	/^    CARD16  length B16;$/;"	m	struct:__anon120
B16	./x11/va_dri2str.h	/^    CARD16  length B16;$/;"	m	struct:__anon121
B16	./x11/va_dri2str.h	/^    CARD16  length B16;$/;"	m	struct:__anon122
B16	./x11/va_dri2str.h	/^    CARD16  length B16;$/;"	m	struct:__anon124
B16	./x11/va_dri2str.h	/^    CARD16  sequenceNumber B16;$/;"	m	struct:__anon115
B16	./x11/va_dri2str.h	/^    CARD16  sequenceNumber B16;$/;"	m	struct:__anon117
B16	./x11/va_dri2str.h	/^    CARD16  sequenceNumber B16;$/;"	m	struct:__anon119
B16	./x11/va_dri2str.h	/^    CARD16  sequenceNumber B16;$/;"	m	struct:__anon123
B16	./x11/va_dri2str.h	/^    CARD16  sequenceNumber B16;$/;"	m	struct:__anon125
B32	./x11/va_dri2str.h	/^    CARD32  attachment B32;$/;"	m	struct:__anon113
B32	./x11/va_dri2str.h	/^    CARD32  authenticated B32;$/;"	m	struct:__anon119
B32	./x11/va_dri2str.h	/^    CARD32  count B32;$/;"	m	struct:__anon122
B32	./x11/va_dri2str.h	/^    CARD32  count B32;$/;"	m	struct:__anon123
B32	./x11/va_dri2str.h	/^    CARD32  cpp B32;$/;"	m	struct:__anon113
B32	./x11/va_dri2str.h	/^    CARD32  dest B32;$/;"	m	struct:__anon124
B32	./x11/va_dri2str.h	/^    CARD32  deviceNameLength B32;$/;"	m	struct:__anon117
B32	./x11/va_dri2str.h	/^    CARD32  drawable B32;$/;"	m	struct:__anon120
B32	./x11/va_dri2str.h	/^    CARD32  drawable B32;$/;"	m	struct:__anon121
B32	./x11/va_dri2str.h	/^    CARD32  drawable B32;$/;"	m	struct:__anon122
B32	./x11/va_dri2str.h	/^    CARD32  drawable B32;$/;"	m	struct:__anon124
B32	./x11/va_dri2str.h	/^    CARD32  driverNameLength B32;$/;"	m	struct:__anon117
B32	./x11/va_dri2str.h	/^    CARD32  drivertype B32;$/;"	m	struct:__anon116
B32	./x11/va_dri2str.h	/^    CARD32  flags B32;$/;"	m	struct:__anon113
B32	./x11/va_dri2str.h	/^    CARD32  height B32;$/;"	m	struct:__anon123
B32	./x11/va_dri2str.h	/^    CARD32  length B32;$/;"	m	struct:__anon115
B32	./x11/va_dri2str.h	/^    CARD32  length B32;$/;"	m	struct:__anon117
B32	./x11/va_dri2str.h	/^    CARD32  length B32;$/;"	m	struct:__anon119
B32	./x11/va_dri2str.h	/^    CARD32  length B32;$/;"	m	struct:__anon123
B32	./x11/va_dri2str.h	/^    CARD32  length B32;$/;"	m	struct:__anon125
B32	./x11/va_dri2str.h	/^    CARD32  magic B32;$/;"	m	struct:__anon118
B32	./x11/va_dri2str.h	/^    CARD32  majorVersion B32;$/;"	m	struct:__anon114
B32	./x11/va_dri2str.h	/^    CARD32  majorVersion B32;$/;"	m	struct:__anon115
B32	./x11/va_dri2str.h	/^    CARD32  minorVersion B32;$/;"	m	struct:__anon114
B32	./x11/va_dri2str.h	/^    CARD32  minorVersion B32;$/;"	m	struct:__anon115
B32	./x11/va_dri2str.h	/^    CARD32  name B32;$/;"	m	struct:__anon113
B32	./x11/va_dri2str.h	/^    CARD32  pad2 B32;$/;"	m	struct:__anon115
B32	./x11/va_dri2str.h	/^    CARD32  pad2 B32;$/;"	m	struct:__anon117
B32	./x11/va_dri2str.h	/^    CARD32  pad2 B32;$/;"	m	struct:__anon119
B32	./x11/va_dri2str.h	/^    CARD32  pad2 B32;$/;"	m	struct:__anon123
B32	./x11/va_dri2str.h	/^    CARD32  pad2 B32;$/;"	m	struct:__anon125
B32	./x11/va_dri2str.h	/^    CARD32  pad3 B32;$/;"	m	struct:__anon115
B32	./x11/va_dri2str.h	/^    CARD32  pad3 B32;$/;"	m	struct:__anon117
B32	./x11/va_dri2str.h	/^    CARD32  pad3 B32;$/;"	m	struct:__anon119
B32	./x11/va_dri2str.h	/^    CARD32  pad3 B32;$/;"	m	struct:__anon123
B32	./x11/va_dri2str.h	/^    CARD32  pad3 B32;$/;"	m	struct:__anon125
B32	./x11/va_dri2str.h	/^    CARD32  pad4 B32;$/;"	m	struct:__anon115
B32	./x11/va_dri2str.h	/^    CARD32  pad4 B32;$/;"	m	struct:__anon117
B32	./x11/va_dri2str.h	/^    CARD32  pad4 B32;$/;"	m	struct:__anon119
B32	./x11/va_dri2str.h	/^    CARD32  pad4 B32;$/;"	m	struct:__anon123
B32	./x11/va_dri2str.h	/^    CARD32  pad4 B32;$/;"	m	struct:__anon125
B32	./x11/va_dri2str.h	/^    CARD32  pad5 B32;$/;"	m	struct:__anon115
B32	./x11/va_dri2str.h	/^    CARD32  pad5 B32;$/;"	m	struct:__anon117
B32	./x11/va_dri2str.h	/^    CARD32  pad5 B32;$/;"	m	struct:__anon119
B32	./x11/va_dri2str.h	/^    CARD32  pad5 B32;$/;"	m	struct:__anon125
B32	./x11/va_dri2str.h	/^    CARD32  pad6 B32;$/;"	m	struct:__anon119
B32	./x11/va_dri2str.h	/^    CARD32  pad6 B32;$/;"	m	struct:__anon125
B32	./x11/va_dri2str.h	/^    CARD32  pad7 B32;$/;"	m	struct:__anon125
B32	./x11/va_dri2str.h	/^    CARD32  pitch B32;$/;"	m	struct:__anon113
B32	./x11/va_dri2str.h	/^    CARD32  region B32;$/;"	m	struct:__anon124
B32	./x11/va_dri2str.h	/^    CARD32  src B32;$/;"	m	struct:__anon124
B32	./x11/va_dri2str.h	/^    CARD32  width B32;$/;"	m	struct:__anon123
B32	./x11/va_dri2str.h	/^    CARD32  window B32;$/;"	m	struct:__anon116
B32	./x11/va_dri2str.h	/^    CARD32  window B32;$/;"	m	struct:__anon118
BASE_ADDRESS_MODIFY	./intel/intel_defines.h	86;"	d
BASE_EXT_END_ID	./cl_extensions.h	64;"	d
BASE_EXT_START_ID	./cl_extensions.h	63;"	d
BATCH_SIZE	./intel/intel_driver.c	109;"	d	file:
BEGIN_BATCH	./intel/intel_batchbuffer.h	60;"	d
BEIGNET_GIT_SHA1	./git_sha1.h	1;"	d
BEIGNET_GIT_SHA1_STRING	./cl_platform_id.h	65;"	d
BEIGNET_GIT_SHA1_STRING	./cl_platform_id.h	67;"	d
BHI_CMRT	./cl_program.h	/^  BHI_CMRT = 4,$/;"	e	enum:_BINARY_HEADER_INDEX
BHI_COMPIRED_OBJECT	./cl_program.h	/^  BHI_COMPIRED_OBJECT = 1,$/;"	e	enum:_BINARY_HEADER_INDEX
BHI_GEN_BINARY	./cl_program.h	/^  BHI_GEN_BINARY = 3,$/;"	e	enum:_BINARY_HEADER_INDEX
BHI_LIBRARY	./cl_program.h	/^  BHI_LIBRARY = 2,$/;"	e	enum:_BINARY_HEADER_INDEX
BHI_MAX	./cl_program.h	/^  BHI_MAX,$/;"	e	enum:_BINARY_HEADER_INDEX
BHI_SPIR	./cl_program.h	/^  BHI_SPIR = 0,$/;"	e	enum:_BINARY_HEADER_INDEX
BINARY_HEADER_INDEX	./cl_program.h	/^}BINARY_HEADER_INDEX;$/;"	t	typeref:enum:_BINARY_HEADER_INDEX
BINARY_HEADER_LENGTH	./cl_program.c	175;"	d	file:
BITFIELD_BIT	./cl_utils.h	342;"	d
BITFIELD_BIT	./intel/intel_structs.h	828;"	d
BITFIELD_RANGE	./cl_utils.h	343;"	d
BITFIELD_RANGE	./intel/intel_structs.h	829;"	d
BR13_565	./intel/intel_driver.h	71;"	d
BR13_8888	./intel/intel_driver.h	72;"	d
BREAK	./cl_utils.h	313;"	d
BREAKPOINT	./cl_utils.h	324;"	d
BREAK_IF	./cl_utils.h	318;"	d
BUILD_LOG_MAX_SIZE	./cl_program.c	120;"	d	file:
BUILT_IN_NAME	./Android.mk	/^BUILT_IN_NAME := cl_internal_built_in_kernel$/;"	m
Block_descriptor_1	./cl_device_enqueue.c	/^  struct Block_descriptor_1 {$/;"	s	struct:Block_literal	file:
Block_literal	./cl_device_enqueue.c	/^typedef struct Block_literal {$/;"	s	file:
Block_literal	./cl_device_enqueue.c	/^} Block_literal;$/;"	t	typeref:struct:Block_literal	file:
CALLOC	./cl_utils.h	275;"	d
CALLOC_ARRAY	./cl_utils.h	276;"	d
CALLOC_STRUCT	./cl_utils.h	274;"	d
CHECK	./cl_context.c	176;"	d	file:
CHECK_ACCELERATOR_INTEL	./cl_utils.h	237;"	d
CHECK_CONTEXT	./cl_utils.h	122;"	d
CHECK_EVENT	./cl_utils.h	213;"	d
CHECK_GL_CONTEXT	./cl_gl_api.c	46;"	d	file:
CHECK_IMAGE	./cl_utils.h	158;"	d
CHECK_KERNEL	./cl_utils.h	249;"	d
CHECK_MEM	./cl_utils.h	146;"	d
CHECK_PROGRAM	./cl_utils.h	261;"	d
CHECK_QUEUE	./cl_utils.h	134;"	d
CHECK_SAMPLER	./cl_utils.h	225;"	d
CHV_CONFIG_WARNING	./intel/intel_driver.c	939;"	d	file:
CL_DEVICE_BUILT_IN_KERNELS	./cl_device_id.c	45;"	d	file:
CL_DEVICE_TYPE_CUSTOM	./cl_api.c	49;"	d	file:
CL_ENQUEUE_COPY_BUFFER_ALIGN16	./cl_context.h	/^  CL_ENQUEUE_COPY_BUFFER_ALIGN16,$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_BUFFER_ALIGN4	./cl_context.h	/^  CL_ENQUEUE_COPY_BUFFER_ALIGN4 = 0,$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_BUFFER_RECT	./cl_context.h	/^  CL_ENQUEUE_COPY_BUFFER_RECT,$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_BUFFER_RECT_ALIGN4	./cl_context.h	/^  CL_ENQUEUE_COPY_BUFFER_RECT_ALIGN4,$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_BUFFER_TO_IMAGE_2D	./cl_context.h	/^  CL_ENQUEUE_COPY_BUFFER_TO_IMAGE_2D,   \/\/copy buffer to image 2d$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_BUFFER_TO_IMAGE_2D_ALIGN16	./cl_context.h	/^  CL_ENQUEUE_COPY_BUFFER_TO_IMAGE_2D_ALIGN16,$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_BUFFER_TO_IMAGE_3D	./cl_context.h	/^  CL_ENQUEUE_COPY_BUFFER_TO_IMAGE_3D,   \/\/copy buffer to image 3d$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_BUFFER_UNALIGN_DST_OFFSET	./cl_context.h	/^  CL_ENQUEUE_COPY_BUFFER_UNALIGN_DST_OFFSET,$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_BUFFER_UNALIGN_SAME_OFFSET	./cl_context.h	/^  CL_ENQUEUE_COPY_BUFFER_UNALIGN_SAME_OFFSET,$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_BUFFER_UNALIGN_SRC_OFFSET	./cl_context.h	/^  CL_ENQUEUE_COPY_BUFFER_UNALIGN_SRC_OFFSET,$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_IMAGE_1D_ARRAY_TO_1D_ARRAY	./cl_context.h	/^  CL_ENQUEUE_COPY_IMAGE_1D_ARRAY_TO_1D_ARRAY, \/\/copy image 1d array to image 1d array$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_IMAGE_1D_TO_1D	./cl_context.h	/^  CL_ENQUEUE_COPY_IMAGE_1D_TO_1D,             \/\/copy image 1d to image 1d$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_IMAGE_2D_ARRAY_TO_2D	./cl_context.h	/^  CL_ENQUEUE_COPY_IMAGE_2D_ARRAY_TO_2D,       \/\/copy image 2d array to image 2d$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_IMAGE_2D_ARRAY_TO_2D_ARRAY	./cl_context.h	/^  CL_ENQUEUE_COPY_IMAGE_2D_ARRAY_TO_2D_ARRAY, \/\/copy image 2d array to image 2d array$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_IMAGE_2D_ARRAY_TO_3D	./cl_context.h	/^  CL_ENQUEUE_COPY_IMAGE_2D_ARRAY_TO_3D,       \/\/copy image 2d array to image 3d$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_IMAGE_2D_TO_2D	./cl_context.h	/^  CL_ENQUEUE_COPY_IMAGE_2D_TO_2D,             \/\/copy image 2d to image 2d$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_IMAGE_2D_TO_2D_ARRAY	./cl_context.h	/^  CL_ENQUEUE_COPY_IMAGE_2D_TO_2D_ARRAY,       \/\/copy image 2d to image 2d array$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_IMAGE_2D_TO_3D	./cl_context.h	/^  CL_ENQUEUE_COPY_IMAGE_2D_TO_3D,             \/\/copy image 2d to image 3d$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_IMAGE_2D_TO_BUFFER	./cl_context.h	/^  CL_ENQUEUE_COPY_IMAGE_2D_TO_BUFFER,   \/\/copy image 2d to buffer$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_IMAGE_2D_TO_BUFFER_ALIGN16	./cl_context.h	/^  CL_ENQUEUE_COPY_IMAGE_2D_TO_BUFFER_ALIGN16,$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_IMAGE_3D_TO_2D	./cl_context.h	/^  CL_ENQUEUE_COPY_IMAGE_3D_TO_2D,             \/\/copy image 3d to image 2d$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_IMAGE_3D_TO_2D_ARRAY	./cl_context.h	/^  CL_ENQUEUE_COPY_IMAGE_3D_TO_2D_ARRAY,       \/\/copy image 3d to image 2d array$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_IMAGE_3D_TO_3D	./cl_context.h	/^  CL_ENQUEUE_COPY_IMAGE_3D_TO_3D,             \/\/copy image 3d to image 3d$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_COPY_IMAGE_3D_TO_BUFFER	./cl_context.h	/^  CL_ENQUEUE_COPY_IMAGE_3D_TO_BUFFER,   \/\/copy image 3d tobuffer$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_FILL_BUFFER_ALIGN128	./cl_context.h	/^  CL_ENQUEUE_FILL_BUFFER_ALIGN128,     \/\/fill buffer with 128 aligne pattern, pattern size=128$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_FILL_BUFFER_ALIGN2	./cl_context.h	/^  CL_ENQUEUE_FILL_BUFFER_ALIGN2,       \/\/fill buffer with 2 aligne pattern, pattern size=2$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_FILL_BUFFER_ALIGN4	./cl_context.h	/^  CL_ENQUEUE_FILL_BUFFER_ALIGN4,       \/\/fill buffer with 4 aligne pattern, pattern size=4$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_FILL_BUFFER_ALIGN8_16	./cl_context.h	/^  CL_ENQUEUE_FILL_BUFFER_ALIGN8_16,    \/\/fill buffer with 16 aligne pattern, pattern size=16$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_FILL_BUFFER_ALIGN8_32	./cl_context.h	/^  CL_ENQUEUE_FILL_BUFFER_ALIGN8_32,    \/\/fill buffer with 16 aligne pattern, pattern size=32$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_FILL_BUFFER_ALIGN8_64	./cl_context.h	/^  CL_ENQUEUE_FILL_BUFFER_ALIGN8_64,    \/\/fill buffer with 16 aligne pattern, pattern size=64$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_FILL_BUFFER_ALIGN8_8	./cl_context.h	/^  CL_ENQUEUE_FILL_BUFFER_ALIGN8_8,     \/\/fill buffer with 8 aligne pattern, pattern size=8$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_FILL_BUFFER_UNALIGN	./cl_context.h	/^  CL_ENQUEUE_FILL_BUFFER_UNALIGN,      \/\/fill buffer with 1 aligne pattern, pattern size=1$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_FILL_IMAGE_1D	./cl_context.h	/^  CL_ENQUEUE_FILL_IMAGE_1D,             \/\/fill image 1d$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_FILL_IMAGE_1D_ARRAY	./cl_context.h	/^  CL_ENQUEUE_FILL_IMAGE_1D_ARRAY,       \/\/fill image 1d array$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_FILL_IMAGE_2D	./cl_context.h	/^  CL_ENQUEUE_FILL_IMAGE_2D,             \/\/fill image 2d$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_FILL_IMAGE_2D_ARRAY	./cl_context.h	/^  CL_ENQUEUE_FILL_IMAGE_2D_ARRAY,       \/\/fill image 2d array$/;"	e	enum:_cl_internal_ker_type
CL_ENQUEUE_FILL_IMAGE_3D	./cl_context.h	/^  CL_ENQUEUE_FILL_IMAGE_3D,             \/\/fill image 3d$/;"	e	enum:_cl_internal_ker_type
CL_EVENT_INVALID_TIMESTAMP	./cl_event.h	66;"	d
CL_EVENT_IS_BARRIER	./cl_event.h	63;"	d
CL_EVENT_IS_MARKER	./cl_event.h	62;"	d
CL_EVENT_IS_USER	./cl_event.h	64;"	d
CL_EVENT_STATE_UNKNOWN	./cl_event.h	60;"	d
CL_GL_CGL_SHAREGROUP	./cl_context.h	/^  CL_GL_CGL_SHAREGROUP$/;"	e	enum:_cl_gl_context_type
CL_GL_EGL_DISPLAY	./cl_context.h	/^  CL_GL_EGL_DISPLAY,$/;"	e	enum:_cl_gl_context_type
CL_GL_GLX_DISPLAY	./cl_context.h	/^  CL_GL_GLX_DISPLAY,$/;"	e	enum:_cl_gl_context_type
CL_GL_INTEROP	./cl_khr_icd.c	23;"	d	file:
CL_GL_INTEROP	./cl_khr_icd.c	25;"	d	file:
CL_GL_NOSHARE	./cl_context.h	/^  CL_GL_NOSHARE,$/;"	e	enum:_cl_gl_context_type
CL_GL_WGL_HDC	./cl_context.h	/^  CL_GL_WGL_HDC,$/;"	e	enum:_cl_gl_context_type
CL_INTERNAL_KERNEL_MAX	./cl_context.h	/^  CL_INTERNAL_KERNEL_MAX$/;"	e	enum:_cl_internal_ker_type
CL_INTERNAL_KERNEL_MIN	./cl_context.h	/^  CL_INTERNAL_KERNEL_MIN = 0,$/;"	e	enum:_cl_internal_ker_type
CL_MAGIC_ACCELERATOR_INTEL_HEADER	./cl_internals.h	34;"	d
CL_MAGIC_CONTEXT_HEADER	./cl_internals.h	27;"	d
CL_MAGIC_DEAD_HEADER	./cl_internals.h	33;"	d
CL_MAGIC_EVENT_HEADER	./cl_internals.h	31;"	d
CL_MAGIC_KERNEL_HEADER	./cl_internals.h	26;"	d
CL_MAGIC_MEM_HEADER	./cl_internals.h	32;"	d
CL_MAGIC_PROGRAM_HEADER	./cl_internals.h	28;"	d
CL_MAGIC_QUEUE_HEADER	./cl_internals.h	29;"	d
CL_MAGIC_SAMPLER_HEADER	./cl_internals.h	30;"	d
CL_MAP_WRITE_INVALIDATE_REGION	./cl_api.c	48;"	d	file:
CL_MEM_BUFFER1D_IMAGE_TYPE	./cl_mem.h	/^  CL_MEM_BUFFER1D_IMAGE_TYPE$/;"	e	enum:cl_mem_type
CL_MEM_BUFFER_TYPE	./cl_mem.h	/^  CL_MEM_BUFFER_TYPE,$/;"	e	enum:cl_mem_type
CL_MEM_GL_IMAGE_TYPE	./cl_mem.h	/^  CL_MEM_GL_IMAGE_TYPE,$/;"	e	enum:cl_mem_type
CL_MEM_HOST_NO_ACCESS	./cl_api.c	52;"	d	file:
CL_MEM_HOST_READ_ONLY	./cl_api.c	51;"	d	file:
CL_MEM_HOST_WRITE_ONLY	./cl_api.c	50;"	d	file:
CL_MEM_IMAGE_TYPE	./cl_mem.h	/^  CL_MEM_IMAGE_TYPE,$/;"	e	enum:cl_mem_type
CL_MEM_OBJECT_IMAGE1D	./cl_mem.h	34;"	d
CL_MEM_OBJECT_IMAGE1D	./intel/intel_gpgpu.c	45;"	d	file:
CL_MEM_OBJECT_IMAGE1D_ARRAY	./cl_mem.h	35;"	d
CL_MEM_OBJECT_IMAGE1D_ARRAY	./intel/intel_gpgpu.c	46;"	d	file:
CL_MEM_OBJECT_IMAGE1D_BUFFER	./cl_mem.h	36;"	d
CL_MEM_OBJECT_IMAGE1D_BUFFER	./intel/intel_gpgpu.c	47;"	d	file:
CL_MEM_OBJECT_IMAGE2D_ARRAY	./cl_mem.h	37;"	d
CL_MEM_OBJECT_IMAGE2D_ARRAY	./intel/intel_gpgpu.c	48;"	d	file:
CL_MEM_PIPE_TYPE	./cl_mem.h	/^  CL_MEM_PIPE_TYPE,$/;"	e	enum:cl_mem_type
CL_MEM_SUBBUFFER_TYPE	./cl_mem.h	/^  CL_MEM_SUBBUFFER_TYPE,$/;"	e	enum:cl_mem_type
CL_MEM_SVM_TYPE	./cl_mem.h	/^  CL_MEM_SVM_TYPE,$/;"	e	enum:cl_mem_type
CL_NOTYET	./cl_khr_icd.c	28;"	d	file:
CL_NO_TILE	./cl_mem.h	/^  CL_NO_TILE = 0,$/;"	e	enum:cl_image_tiling
CL_OBJECT_ACCELERATOR_INTEL_MAGIC	./cl_accelerator_intel.h	20;"	d
CL_OBJECT_COMMAND_QUEUE_MAGIC	./cl_command_queue.h	56;"	d
CL_OBJECT_CONTEXT_MAGIC	./cl_context.h	133;"	d
CL_OBJECT_DEC_REF	./cl_base_object.h	62;"	d
CL_OBJECT_DESTROY_BASE	./cl_base_object.h	76;"	d
CL_OBJECT_DEVICE_MAGIC	./cl_device_id.h	146;"	d
CL_OBJECT_EVENT_MAGIC	./cl_event.h	55;"	d
CL_OBJECT_GET_REF	./cl_base_object.h	63;"	d
CL_OBJECT_INC_REF	./cl_base_object.h	61;"	d
CL_OBJECT_INIT_BASE	./cl_base_object.h	75;"	d
CL_OBJECT_INVALID_MAGIC	./cl_base_object.h	58;"	d
CL_OBJECT_IS_ACCELERATOR_INTEL	./cl_accelerator_intel.h	21;"	d
CL_OBJECT_IS_BUFFER	./cl_mem.h	115;"	d
CL_OBJECT_IS_COMMAND_QUEUE	./cl_command_queue.h	57;"	d
CL_OBJECT_IS_CONTEXT	./cl_context.h	134;"	d
CL_OBJECT_IS_DEVICE	./cl_device_id.h	147;"	d
CL_OBJECT_IS_EVENT	./cl_event.h	56;"	d
CL_OBJECT_IS_IMAGE	./cl_mem.h	111;"	d
CL_OBJECT_IS_KERNEL	./cl_kernel.h	84;"	d
CL_OBJECT_IS_MEM	./cl_mem.h	108;"	d
CL_OBJECT_IS_PLATFORM	./cl_platform_id.h	48;"	d
CL_OBJECT_IS_PROGRAM	./cl_program.h	80;"	d
CL_OBJECT_IS_SAMPLER	./cl_sampler.h	39;"	d
CL_OBJECT_IS_VALID	./cl_base_object.h	59;"	d
CL_OBJECT_KERNEL_MAGIC	./cl_kernel.h	83;"	d
CL_OBJECT_LOCK	./cl_base_object.h	65;"	d
CL_OBJECT_MEM_MAGIC	./cl_mem.h	107;"	d
CL_OBJECT_NOTIFY_COND	./cl_base_object.h	82;"	d
CL_OBJECT_PLATFORM_MAGIC	./cl_platform_id.h	47;"	d
CL_OBJECT_PROGRAM_MAGIC	./cl_program.h	79;"	d
CL_OBJECT_RELEASE_OWNERSHIP	./cl_base_object.h	78;"	d
CL_OBJECT_RELEASE_OWNERSHIP_WITHLOCK	./cl_base_object.h	80;"	d
CL_OBJECT_SAMPLER_MAGIC	./cl_sampler.h	38;"	d
CL_OBJECT_TAKE_OWNERSHIP	./cl_base_object.h	77;"	d
CL_OBJECT_TAKE_OWNERSHIP_WITHLOCK	./cl_base_object.h	79;"	d
CL_OBJECT_UNLOCK	./cl_base_object.h	66;"	d
CL_OBJECT_WAIT_ON_COND	./cl_base_object.h	81;"	d
CL_TILE_X	./cl_mem.h	/^  CL_TILE_X  = 1,$/;"	e	enum:cl_image_tiling
CL_TILE_Y	./cl_mem.h	/^  CL_TILE_Y  = 2$/;"	e	enum:cl_image_tiling
CMD	./intel/intel_defines.h	53;"	d
CMD_2D	./intel/intel_driver.h	60;"	d
CMD_3DPRIMITIVE	./intel/intel_defines.h	84;"	d
CMD_BINDING_TABLE_POINTERS	./intel/intel_defines.h	79;"	d
CMD_CONSTANT_BUFFER	./intel/intel_defines.h	60;"	d
CMD_CONSTANT_COLOR	./intel/intel_defines.h	83;"	d
CMD_CS_URB_STATE	./intel/intel_defines.h	59;"	d
CMD_DRAWING_RECTANGLE	./intel/intel_defines.h	82;"	d
CMD_GPGPU_WALKER	./intel/intel_defines.h	64;"	d
CMD_LOAD_REGISTER_IMM	./intel/intel_defines.h	67;"	d
CMD_MEDIA	./intel/intel_defines.h	75;"	d
CMD_MEDIA_EX	./intel/intel_defines.h	76;"	d
CMD_MEDIA_GATEWAY_STATE	./intel/intel_defines.h	62;"	d
CMD_MEDIA_STATE_FLUSH	./intel/intel_defines.h	63;"	d
CMD_MEDIA_STATE_POINTERS	./intel/intel_defines.h	74;"	d
CMD_MI	./intel/intel_driver.h	59;"	d
CMD_PIPELINED_POINTERS	./intel/intel_defines.h	78;"	d
CMD_PIPELINE_SELECT	./intel/intel_defines.h	71;"	d
CMD_PIPE_CONTROL	./intel/intel_defines.h	65;"	d
CMD_SAMPLER_PALETTE_LOAD	./intel/intel_defines.h	72;"	d
CMD_STATE_BASE_ADDRESS	./intel/intel_defines.h	69;"	d
CMD_STATE_PREFETCH	./intel/intel_defines.h	61;"	d
CMD_STATE_SIP	./intel/intel_defines.h	70;"	d
CMD_URB_FENCE	./intel/intel_defines.h	58;"	d
CMD_VERTEX_BUFFERS	./intel/intel_defines.h	80;"	d
CMD_VERTEX_ELEMENTS	./intel/intel_defines.h	81;"	d
CMRT_BUFFER	./cl_cmrt.cpp	/^    CMRT_BUFFER,$/;"	e	enum:CMRT_MEM_TYPE	file:
CMRT_MEM_TYPE	./cl_cmrt.cpp	/^enum CMRT_MEM_TYPE$/;"	g	file:
CMRT_SURFACE2D	./cl_cmrt.cpp	/^    CMRT_SURFACE2D,$/;"	e	enum:CMRT_MEM_TYPE	file:
CmrtCleanup	./cl_cmrt.cpp	/^  CmrtCleanup(){}$/;"	f	class:CmrtCleanup
CmrtCleanup	./cl_cmrt.cpp	/^class CmrtCleanup$/;"	c	file:
CompilerSupported	./cl_gbe_loader.cpp	/^int CompilerSupported()$/;"	f
CreateCmDeviceFunc	./cl_cmrt.cpp	/^typedef INT (*CreateCmDeviceFunc)(CmDevice * &pDevice, UINT & version,$/;"	t	file:
CreateCmrtMemory	./cl_cmrt.cpp	/^static bool CreateCmrtMemory(cl_mem mem)$/;"	f	file:
DEBUGP	./cl_utils.h	42;"	d
DEBUGP	./cl_utils.h	45;"	d
DEBUGP_LEVEL	./cl_utils.h	/^enum DEBUGP_LEVEL$/;"	g
DECL_ALL_EXTENSIONS	./cl_extensions.h	/^DECL_ALL_EXTENSIONS$/;"	e	enum:__anon5
DECL_ALL_EXTENSIONS	./cl_extensions.h	46;"	d
DECL_BASE_EXTENSIONS	./cl_extensions.h	6;"	d
DECL_BPP	./cl_image.c	37;"	d	file:
DECL_BPP	./cl_image.c	62;"	d	file:
DECL_D3D_EXTENSIONS	./cl_extensions.h	41;"	d
DECL_EXT	./cl_extensions.c	22;"	d	file:
DECL_EXT	./cl_extensions.c	26;"	d	file:
DECL_EXT	./cl_extensions.h	100;"	d
DECL_EXT	./cl_extensions.h	57;"	d
DECL_EXT	./cl_extensions.h	59;"	d
DECL_EXT	./cl_extensions.h	83;"	d
DECL_EXT	./cl_extensions.h	93;"	d
DECL_EXT	./cl_extensions.h	98;"	d
DECL_FIELD	./cl_device_id.c	1535;"	d	file:
DECL_FIELD	./cl_device_id.c	1546;"	d	file:
DECL_GL_EXTENSIONS	./cl_extensions.h	35;"	d
DECL_INFO_STRING	./cl_device_id.c	323;"	d	file:
DECL_INFO_STRING	./cl_gt_device.h	104;"	d
DECL_INFO_STRING	./cl_gt_device.h	148;"	d
DECL_INFO_STRING	./cl_platform_id.c	29;"	d	file:
DECL_INFO_STRING	./cl_platform_id.c	41;"	d	file:
DECL_INTEL_EXTENSIONS	./cl_extensions.h	28;"	d
DECL_OPT1_EXTENSIONS	./cl_extensions.h	19;"	d
DEFINE_ICD	./cl_khr_icd.h	24;"	d
DEFINE_ICD	./cl_khr_icd.h	29;"	d
DL_ERROR	./cl_utils.h	/^    DL_ERROR$/;"	e	enum:DEBUGP_LEVEL
DL_INFO	./cl_utils.h	/^    DL_INFO,$/;"	e	enum:DEBUGP_LEVEL
DL_WARNING	./cl_utils.h	/^    DL_WARNING,$/;"	e	enum:DEBUGP_LEVEL
DO_ALLOC_ERR	./cl_utils.h	76;"	d
DO_ALLOC_ERROR	./cl_utils.h	100;"	d
DO_IMAGE_ERROR	./cl_mem.c	795;"	d	file:
DO_IMAGE_ERROR	./cl_mem.c	875;"	d	file:
DRAWABLE_HASH_SZ	./x11/dricommon.h	72;"	d
DRI2	./x11/dricommon.h	/^  DRI2 = 2$/;"	e	enum:DRI_VER
DRI2BufferAccum	./x11/va_dri2tokens.h	60;"	d
DRI2BufferBackLeft	./x11/va_dri2tokens.h	55;"	d
DRI2BufferBackRight	./x11/va_dri2tokens.h	57;"	d
DRI2BufferDepth	./x11/va_dri2tokens.h	58;"	d
DRI2BufferFakeFrontLeft	./x11/va_dri2tokens.h	61;"	d
DRI2BufferFakeFrontRight	./x11/va_dri2tokens.h	62;"	d
DRI2BufferFrontLeft	./x11/va_dri2tokens.h	54;"	d
DRI2BufferFrontRight	./x11/va_dri2tokens.h	56;"	d
DRI2BufferStencil	./x11/va_dri2tokens.h	59;"	d
DRI2DriverDRI	./x11/va_dri2.c	62;"	d	file:
DRI2DriverDRI	./x11/va_dri2tokens.h	64;"	d
DRI2NumberErrors	./x11/va_dri2str.h	58;"	d
DRI2NumberEvents	./x11/va_dri2str.h	59;"	d
DRI2NumberRequests	./x11/va_dri2str.h	60;"	d
DRI2_MAJOR	./x11/va_dri2str.h	55;"	d
DRI2_MINOR	./x11/va_dri2str.h	56;"	d
DRI2_NAME	./x11/va_dri2str.h	54;"	d
DRI_VER	./x11/dricommon.h	/^enum DRI_VER$/;"	g
DestroyCmDeviceFunc	./cl_cmrt.cpp	/^typedef INT (*DestroyCmDeviceFunc)(CmDevice * &pDevice);$/;"	t	file:
Display	./intel/intel_driver.h	/^typedef struct _XDisplay Display;$/;"	t	typeref:struct:_XDisplay
EGL_CTX	./cl_context.h	99;"	d
EGL_DISP	./cl_context.h	98;"	d
EGL_EGLEXT_PROTOTYPES	./intel/intel_driver.c	50;"	d	file:
ELEMENTS	./cl_utils.h	273;"	d
ERR	./cl_utils.h	60;"	d
ERR	./cl_utils.h	66;"	d
ERR_IF	./cl_utils.h	81;"	d
EXTENSTION_LENGTH	./cl_device_id.h	23;"	d
EXTFUNC	./cl_api.c	1231;"	d	file:
EXTFUNC	./cl_api.c	1281;"	d	file:
EXT_ID	./cl_extensions.h	53;"	d
EXT_STRUCT_NAME	./cl_extensions.h	54;"	d
EnqueueBarrier	./cl_enqueue.h	/^  EnqueueBarrier,$/;"	e	enum:__anon4
EnqueueCopyBuffer	./cl_enqueue.h	/^  EnqueueCopyBuffer,$/;"	e	enum:__anon4
EnqueueCopyBufferRect	./cl_enqueue.h	/^  EnqueueCopyBufferRect,$/;"	e	enum:__anon4
EnqueueCopyBufferToImage	./cl_enqueue.h	/^  EnqueueCopyBufferToImage,$/;"	e	enum:__anon4
EnqueueCopyImage	./cl_enqueue.h	/^  EnqueueCopyImage,$/;"	e	enum:__anon4
EnqueueCopyImageToBuffer	./cl_enqueue.h	/^  EnqueueCopyImageToBuffer,$/;"	e	enum:__anon4
EnqueueFillBuffer	./cl_enqueue.h	/^  EnqueueFillBuffer,$/;"	e	enum:__anon4
EnqueueFillImage	./cl_enqueue.h	/^  EnqueueFillImage,$/;"	e	enum:__anon4
EnqueueInvalid	./cl_enqueue.h	/^  EnqueueInvalid$/;"	e	enum:__anon4
EnqueueMapBuffer	./cl_enqueue.h	/^  EnqueueMapBuffer,$/;"	e	enum:__anon4
EnqueueMapImage	./cl_enqueue.h	/^  EnqueueMapImage,$/;"	e	enum:__anon4
EnqueueMarker	./cl_enqueue.h	/^  EnqueueMarker,$/;"	e	enum:__anon4
EnqueueMigrateMemObj	./cl_enqueue.h	/^  EnqueueMigrateMemObj,$/;"	e	enum:__anon4
EnqueueNDRangeKernel	./cl_enqueue.h	/^  EnqueueNDRangeKernel,$/;"	e	enum:__anon4
EnqueueNativeKernel	./cl_enqueue.h	/^  EnqueueNativeKernel,$/;"	e	enum:__anon4
EnqueueReadBuffer	./cl_enqueue.h	/^  EnqueueReadBuffer,$/;"	e	enum:__anon4
EnqueueReadBufferRect	./cl_enqueue.h	/^  EnqueueReadBufferRect,$/;"	e	enum:__anon4
EnqueueReadImage	./cl_enqueue.h	/^  EnqueueReadImage,$/;"	e	enum:__anon4
EnqueueReturnSuccesss	./cl_enqueue.h	/^  EnqueueReturnSuccesss = 0, \/* For some case, we have nothing to do, just return SUCCESS. *\/$/;"	e	enum:__anon4
EnqueueSVMFree	./cl_enqueue.h	/^  EnqueueSVMFree,$/;"	e	enum:__anon4
EnqueueSVMMemCopy	./cl_enqueue.h	/^  EnqueueSVMMemCopy,$/;"	e	enum:__anon4
EnqueueSVMMemFill	./cl_enqueue.h	/^  EnqueueSVMMemFill,$/;"	e	enum:__anon4
EnqueueUnmapMemObject	./cl_enqueue.h	/^  EnqueueUnmapMemObject,$/;"	e	enum:__anon4
EnqueueWriteBuffer	./cl_enqueue.h	/^  EnqueueWriteBuffer,$/;"	e	enum:__anon4
EnqueueWriteBufferRect	./cl_enqueue.h	/^  EnqueueWriteBufferRect,$/;"	e	enum:__anon4
EnqueueWriteImage	./cl_enqueue.h	/^  EnqueueWriteImage,$/;"	e	enum:__anon4
FATAL	./cl_utils.h	106;"	d
FATAL_IF	./cl_utils.h	115;"	d
FIELD_SIZE	./cl_mem.c	41;"	d	file:
FILE_PATH_LENGTH	./cl_program.c	777;"	d	file:
FILL_GETINFO_RET	./cl_api.c	56;"	d	file:
FIXUP_IMAGE_ORIGIN	./cl_utils.h	193;"	d
FIXUP_IMAGE_REGION	./cl_utils.h	169;"	d
FLOATING_POINT_IEEE_754	./intel/intel_defines.h	106;"	d
FLOATING_POINT_NON_IEEE_754	./intel/intel_defines.h	107;"	d
FROM_BINARY	./cl_program.h	/^  FROM_BINARY = 2,$/;"	e	enum:__anon7
FROM_CMRT	./cl_program.h	/^  FROM_CMRT = 4,$/;"	e	enum:__anon7
FROM_LLVM	./cl_program.h	/^  FROM_LLVM = 1,$/;"	e	enum:__anon7
FROM_LLVM_SPIR	./cl_program.h	/^  FROM_LLVM_SPIR = 3,$/;"	e	enum:__anon7
FROM_SOURCE	./cl_program.h	/^  FROM_SOURCE = 0,$/;"	e	enum:__anon7
GBE_BIN_GENERATER	./Android.mk	/^GBE_BIN_GENERATER := $(HOST_OUT_EXECUTABLES)\/gbe_bin_generater$/;"	m
GEN7_DEVICE	./cl_gen7_device.h	32;"	d
GEN7_DEVICE	./cl_gen7_device.h	34;"	d
GEN7_L3_CNTL_REG2_ADDRESS_OFFSET	./intel/intel_defines.h	313;"	d
GEN7_L3_CNTL_REG3_ADDRESS_OFFSET	./intel/intel_defines.h	314;"	d
GEN7_L3_SQC_REG1_ADDRESS_OFFSET	./intel/intel_defines.h	312;"	d
GEN7_NUM_VME_RD_LUT_SETS	./intel/intel_structs.h	610;"	d
GEN7_NUM_VME_SEARCH_PATH_STATES	./intel/intel_structs.h	609;"	d
GEN7_PIPE_CONTROL_3D	./intel/intel_defines.h	320;"	d
GEN7_PIPE_CONTROL_GLOBAL_GTT_WRITE	./intel/intel_defines.h	325;"	d
GEN7_PIPE_CONTROL_INSTRUCTION_GFX	./intel/intel_defines.h	321;"	d
GEN7_PIPE_CONTROL_MEDIA	./intel/intel_defines.h	319;"	d
GEN7_PIPE_CONTROL_OPCODE_3D_CONTROL	./intel/intel_defines.h	322;"	d
GEN7_PIPE_CONTROL_SUBOPCODE_3D_CONTROL	./intel/intel_defines.h	323;"	d
GEN7_PIPE_CONTROL_WRITE_TIMESTAMP	./intel/intel_defines.h	324;"	d
GEN8_L3_CNTL_REG_ADDRESS_OFFSET	./intel/intel_defines.h	316;"	d
GEN8_TILEMODE_LINEAR	./intel/intel_defines.h	293;"	d
GEN8_TILEMODE_WMAJOR	./intel/intel_defines.h	294;"	d
GEN8_TILEMODE_XMAJOR	./intel/intel_defines.h	295;"	d
GEN8_TILEMODE_YMAJOR	./intel/intel_defines.h	296;"	d
GEN9_DEVICE	./cl_gen9_device.h	30;"	d
GEN9_DEVICE	./cl_gen9_device.h	32;"	d
GEN9_LIBCL_C_VERSION_STRING	./cl_platform_id.h	76;"	d
GEN9_LIBCL_VERSION_STRING	./cl_platform_id.h	75;"	d
GEN_ADDRESS_ROUNDING_ENABLE_R_MAG	./intel/intel_defines.h	340;"	d
GEN_ADDRESS_ROUNDING_ENABLE_R_MIN	./intel/intel_defines.h	341;"	d
GEN_ADDRESS_ROUNDING_ENABLE_U_MAG	./intel/intel_defines.h	336;"	d
GEN_ADDRESS_ROUNDING_ENABLE_U_MIN	./intel/intel_defines.h	337;"	d
GEN_ADDRESS_ROUNDING_ENABLE_V_MAG	./intel/intel_defines.h	338;"	d
GEN_ADDRESS_ROUNDING_ENABLE_V_MIN	./intel/intel_defines.h	339;"	d
GEN_CMD_MEDIA_OBJECT	./intel/intel_gpgpu.c	51;"	d	file:
GEN_INTERNAL_KER	./Android.mk	/^define GEN_INTERNAL_KER$/;"	m
GEN_MAPFILTER_ANISOTROPIC	./intel/intel_defines.h	330;"	d
GEN_MAPFILTER_LINEAR	./intel/intel_defines.h	329;"	d
GEN_MAPFILTER_NEAREST	./intel/intel_defines.h	328;"	d
GEN_MAX_SAMPLERS	./cl_driver.h	30;"	d
GEN_MAX_SURFACES	./cl_driver.h	29;"	d
GEN_MAX_VME_STATES	./cl_driver.h	31;"	d
GEN_MIPFILTER_LINEAR	./intel/intel_defines.h	334;"	d
GEN_MIPFILTER_NEAREST	./intel/intel_defines.h	333;"	d
GEN_MIPFILTER_NONE	./intel/intel_defines.h	332;"	d
GEN_TEXCOORDMODE_CLAMP	./intel/intel_defines.h	345;"	d
GEN_TEXCOORDMODE_CLAMP_BORDER	./intel/intel_defines.h	347;"	d
GEN_TEXCOORDMODE_CUBE	./intel/intel_defines.h	346;"	d
GEN_TEXCOORDMODE_MIRROR	./intel/intel_defines.h	344;"	d
GEN_TEXCOORDMODE_MIRROR_ONCE	./intel/intel_defines.h	348;"	d
GEN_TEXCOORDMODE_WRAP	./intel/intel_defines.h	343;"	d
GIT_SHA1	./Android.mk	/^GIT_SHA1 = git_sha1.h$/;"	m
GL_EXT_END_ID	./cl_extensions.h	70;"	d
GL_EXT_START_ID	./cl_extensions.h	69;"	d
GPGPU_NO_TILE	./cl_driver.h	/^  GPGPU_NO_TILE = 0,$/;"	e	enum:cl_gpgpu_tiling
GPGPU_TILE_X	./cl_driver.h	/^  GPGPU_TILE_X  = 1,$/;"	e	enum:cl_gpgpu_tiling
GPGPU_TILE_Y	./cl_driver.h	/^  GPGPU_TILE_Y  = 2,$/;"	e	enum:cl_gpgpu_tiling
GbeLoaderInitializer	./cl_gbe_loader.cpp	/^  GbeLoaderInitializer()$/;"	f	struct:GbeLoaderInitializer
GbeLoaderInitializer	./cl_gbe_loader.cpp	/^struct GbeLoaderInitializer$/;"	s	file:
GetCmrtFormat	./cl_cmrt.cpp	/^static VA_CM_FORMAT GetCmrtFormat(_cl_mem_image* image)$/;"	f	file:
HSW_ROW_CHICKEN3_HDC_OFFSET	./intel/intel_defines.h	309;"	d
HSW_SCRATCH1_OFFSET	./intel/intel_defines.h	308;"	d
I965_MAPFILTER_ANISOTROPIC	./intel/intel_defines.h	274;"	d
I965_MAPFILTER_LINEAR	./intel/intel_defines.h	273;"	d
I965_MAPFILTER_NEAREST	./intel/intel_defines.h	272;"	d
I965_MIPFILTER_LINEAR	./intel/intel_defines.h	278;"	d
I965_MIPFILTER_NEAREST	./intel/intel_defines.h	277;"	d
I965_MIPFILTER_NONE	./intel/intel_defines.h	276;"	d
I965_SURCHAN_SELECT_ALPHA	./intel/intel_defines.h	303;"	d
I965_SURCHAN_SELECT_BLUE	./intel/intel_defines.h	302;"	d
I965_SURCHAN_SELECT_GREEN	./intel/intel_defines.h	301;"	d
I965_SURCHAN_SELECT_ONE	./intel/intel_defines.h	299;"	d
I965_SURCHAN_SELECT_RED	./intel/intel_defines.h	300;"	d
I965_SURCHAN_SELECT_ZERO	./intel/intel_defines.h	298;"	d
I965_SURFACEFORMAT_A16_FLOAT	./intel/intel_defines.h	223;"	d
I965_SURFACEFORMAT_A16_UNORM	./intel/intel_defines.h	219;"	d
I965_SURFACEFORMAT_A24X8_UNORM	./intel/intel_defines.h	182;"	d
I965_SURFACEFORMAT_A32X32_FLOAT	./intel/intel_defines.h	148;"	d
I965_SURFACEFORMAT_A32_FLOAT	./intel/intel_defines.h	185;"	d
I965_SURFACEFORMAT_A4P4_UNORM	./intel/intel_defines.h	239;"	d
I965_SURFACEFORMAT_A8_UNORM	./intel/intel_defines.h	235;"	d
I965_SURFACEFORMAT_B10G10R10A2_UNORM	./intel/intel_defines.h	171;"	d
I965_SURFACEFORMAT_B10G10R10A2_UNORM_SRGB	./intel/intel_defines.h	172;"	d
I965_SURFACEFORMAT_B10G10R10X2_UNORM	./intel/intel_defines.h	191;"	d
I965_SURFACEFORMAT_B4G4R4A4_UNORM	./intel/intel_defines.h	206;"	d
I965_SURFACEFORMAT_B4G4R4A4_UNORM_SRGB	./intel/intel_defines.h	207;"	d
I965_SURFACEFORMAT_B5G5R5A1_UNORM	./intel/intel_defines.h	204;"	d
I965_SURFACEFORMAT_B5G5R5A1_UNORM_SRGB	./intel/intel_defines.h	205;"	d
I965_SURFACEFORMAT_B5G5R5X1_UNORM	./intel/intel_defines.h	225;"	d
I965_SURFACEFORMAT_B5G5R5X1_UNORM_SRGB	./intel/intel_defines.h	226;"	d
I965_SURFACEFORMAT_B5G6R5_UNORM	./intel/intel_defines.h	202;"	d
I965_SURFACEFORMAT_B5G6R5_UNORM_SRGB	./intel/intel_defines.h	203;"	d
I965_SURFACEFORMAT_B8G8R8A8_UNORM	./intel/intel_defines.h	155;"	d
I965_SURFACEFORMAT_B8G8R8A8_UNORM_SRGB	./intel/intel_defines.h	156;"	d
I965_SURFACEFORMAT_B8G8R8X8_UNORM	./intel/intel_defines.h	186;"	d
I965_SURFACEFORMAT_B8G8R8X8_UNORM_SRGB	./intel/intel_defines.h	187;"	d
I965_SURFACEFORMAT_BC1_UNORM	./intel/intel_defines.h	245;"	d
I965_SURFACEFORMAT_BC1_UNORM_SRGB	./intel/intel_defines.h	250;"	d
I965_SURFACEFORMAT_BC2_UNORM	./intel/intel_defines.h	246;"	d
I965_SURFACEFORMAT_BC2_UNORM_SRGB	./intel/intel_defines.h	251;"	d
I965_SURFACEFORMAT_BC3_UNORM	./intel/intel_defines.h	247;"	d
I965_SURFACEFORMAT_BC3_UNORM_SRGB	./intel/intel_defines.h	252;"	d
I965_SURFACEFORMAT_BC4_SNORM	./intel/intel_defines.h	264;"	d
I965_SURFACEFORMAT_BC4_UNORM	./intel/intel_defines.h	248;"	d
I965_SURFACEFORMAT_BC5_SNORM	./intel/intel_defines.h	265;"	d
I965_SURFACEFORMAT_BC5_UNORM	./intel/intel_defines.h	249;"	d
I965_SURFACEFORMAT_DXT1_RGB	./intel/intel_defines.h	256;"	d
I965_SURFACEFORMAT_FXT1	./intel/intel_defines.h	257;"	d
I965_SURFACEFORMAT_I16_FLOAT	./intel/intel_defines.h	221;"	d
I965_SURFACEFORMAT_I16_UNORM	./intel/intel_defines.h	217;"	d
I965_SURFACEFORMAT_I24X8_UNORM	./intel/intel_defines.h	180;"	d
I965_SURFACEFORMAT_I32X32_FLOAT	./intel/intel_defines.h	150;"	d
I965_SURFACEFORMAT_I32_FLOAT	./intel/intel_defines.h	183;"	d
I965_SURFACEFORMAT_I8_UNORM	./intel/intel_defines.h	236;"	d
I965_SURFACEFORMAT_L16A16_FLOAT	./intel/intel_defines.h	192;"	d
I965_SURFACEFORMAT_L16A16_UNORM	./intel/intel_defines.h	179;"	d
I965_SURFACEFORMAT_L16_FLOAT	./intel/intel_defines.h	222;"	d
I965_SURFACEFORMAT_L16_UNORM	./intel/intel_defines.h	218;"	d
I965_SURFACEFORMAT_L24X8_UNORM	./intel/intel_defines.h	181;"	d
I965_SURFACEFORMAT_L32A32_FLOAT	./intel/intel_defines.h	142;"	d
I965_SURFACEFORMAT_L32X32_FLOAT	./intel/intel_defines.h	149;"	d
I965_SURFACEFORMAT_L32_FLOAT	./intel/intel_defines.h	184;"	d
I965_SURFACEFORMAT_L8A8_UNORM	./intel/intel_defines.h	220;"	d
I965_SURFACEFORMAT_L8_UNORM	./intel/intel_defines.h	237;"	d
I965_SURFACEFORMAT_MONO8	./intel/intel_defines.h	253;"	d
I965_SURFACEFORMAT_P4A4_UNORM	./intel/intel_defines.h	238;"	d
I965_SURFACEFORMAT_R10G10B10A2_UINT	./intel/intel_defines.h	159;"	d
I965_SURFACEFORMAT_R10G10B10A2_UNORM	./intel/intel_defines.h	157;"	d
I965_SURFACEFORMAT_R10G10B10A2_UNORM_SRGB	./intel/intel_defines.h	158;"	d
I965_SURFACEFORMAT_R10G10B10X2_USCALED	./intel/intel_defines.h	195;"	d
I965_SURFACEFORMAT_R10G10B10_SNORM_A2_UNORM	./intel/intel_defines.h	160;"	d
I965_SURFACEFORMAT_R11G11B10_FLOAT	./intel/intel_defines.h	173;"	d
I965_SURFACEFORMAT_R16G16B16A16_FLOAT	./intel/intel_defines.h	136;"	d
I965_SURFACEFORMAT_R16G16B16A16_SINT	./intel/intel_defines.h	134;"	d
I965_SURFACEFORMAT_R16G16B16A16_SNORM	./intel/intel_defines.h	133;"	d
I965_SURFACEFORMAT_R16G16B16A16_SSCALED	./intel/intel_defines.h	151;"	d
I965_SURFACEFORMAT_R16G16B16A16_UINT	./intel/intel_defines.h	135;"	d
I965_SURFACEFORMAT_R16G16B16A16_UNORM	./intel/intel_defines.h	132;"	d
I965_SURFACEFORMAT_R16G16B16A16_USCALED	./intel/intel_defines.h	152;"	d
I965_SURFACEFORMAT_R16G16B16X16_FLOAT	./intel/intel_defines.h	147;"	d
I965_SURFACEFORMAT_R16G16B16X16_UNORM	./intel/intel_defines.h	146;"	d
I965_SURFACEFORMAT_R16G16B16_SNORM	./intel/intel_defines.h	267;"	d
I965_SURFACEFORMAT_R16G16B16_SSCALED	./intel/intel_defines.h	268;"	d
I965_SURFACEFORMAT_R16G16B16_UNORM	./intel/intel_defines.h	266;"	d
I965_SURFACEFORMAT_R16G16B16_USCALED	./intel/intel_defines.h	269;"	d
I965_SURFACEFORMAT_R16G16_FLOAT	./intel/intel_defines.h	170;"	d
I965_SURFACEFORMAT_R16G16_SINT	./intel/intel_defines.h	168;"	d
I965_SURFACEFORMAT_R16G16_SNORM	./intel/intel_defines.h	167;"	d
I965_SURFACEFORMAT_R16G16_SSCALED	./intel/intel_defines.h	198;"	d
I965_SURFACEFORMAT_R16G16_UINT	./intel/intel_defines.h	169;"	d
I965_SURFACEFORMAT_R16G16_UNORM	./intel/intel_defines.h	166;"	d
I965_SURFACEFORMAT_R16G16_USCALED	./intel/intel_defines.h	199;"	d
I965_SURFACEFORMAT_R16_FLOAT	./intel/intel_defines.h	216;"	d
I965_SURFACEFORMAT_R16_SINT	./intel/intel_defines.h	214;"	d
I965_SURFACEFORMAT_R16_SNORM	./intel/intel_defines.h	213;"	d
I965_SURFACEFORMAT_R16_SSCALED	./intel/intel_defines.h	229;"	d
I965_SURFACEFORMAT_R16_UINT	./intel/intel_defines.h	215;"	d
I965_SURFACEFORMAT_R16_UNORM	./intel/intel_defines.h	212;"	d
I965_SURFACEFORMAT_R16_USCALED	./intel/intel_defines.h	230;"	d
I965_SURFACEFORMAT_R1_UINT	./intel/intel_defines.h	242;"	d
I965_SURFACEFORMAT_R24_UNORM_X8_TYPELESS	./intel/intel_defines.h	177;"	d
I965_SURFACEFORMAT_R32G32B32A32_FLOAT	./intel/intel_defines.h	116;"	d
I965_SURFACEFORMAT_R32G32B32A32_SINT	./intel/intel_defines.h	117;"	d
I965_SURFACEFORMAT_R32G32B32A32_SNORM	./intel/intel_defines.h	120;"	d
I965_SURFACEFORMAT_R32G32B32A32_SSCALED	./intel/intel_defines.h	123;"	d
I965_SURFACEFORMAT_R32G32B32A32_UINT	./intel/intel_defines.h	118;"	d
I965_SURFACEFORMAT_R32G32B32A32_UNORM	./intel/intel_defines.h	119;"	d
I965_SURFACEFORMAT_R32G32B32A32_USCALED	./intel/intel_defines.h	124;"	d
I965_SURFACEFORMAT_R32G32B32X32_FLOAT	./intel/intel_defines.h	122;"	d
I965_SURFACEFORMAT_R32G32B32_FLOAT	./intel/intel_defines.h	125;"	d
I965_SURFACEFORMAT_R32G32B32_SINT	./intel/intel_defines.h	126;"	d
I965_SURFACEFORMAT_R32G32B32_SNORM	./intel/intel_defines.h	129;"	d
I965_SURFACEFORMAT_R32G32B32_SSCALED	./intel/intel_defines.h	130;"	d
I965_SURFACEFORMAT_R32G32B32_UINT	./intel/intel_defines.h	127;"	d
I965_SURFACEFORMAT_R32G32B32_UNORM	./intel/intel_defines.h	128;"	d
I965_SURFACEFORMAT_R32G32B32_USCALED	./intel/intel_defines.h	131;"	d
I965_SURFACEFORMAT_R32G32_FLOAT	./intel/intel_defines.h	137;"	d
I965_SURFACEFORMAT_R32G32_SINT	./intel/intel_defines.h	138;"	d
I965_SURFACEFORMAT_R32G32_SNORM	./intel/intel_defines.h	144;"	d
I965_SURFACEFORMAT_R32G32_SSCALED	./intel/intel_defines.h	153;"	d
I965_SURFACEFORMAT_R32G32_UINT	./intel/intel_defines.h	139;"	d
I965_SURFACEFORMAT_R32G32_UNORM	./intel/intel_defines.h	143;"	d
I965_SURFACEFORMAT_R32G32_USCALED	./intel/intel_defines.h	154;"	d
I965_SURFACEFORMAT_R32_FLOAT	./intel/intel_defines.h	176;"	d
I965_SURFACEFORMAT_R32_FLOAT_X8X24_TYPELESS	./intel/intel_defines.h	140;"	d
I965_SURFACEFORMAT_R32_SINT	./intel/intel_defines.h	174;"	d
I965_SURFACEFORMAT_R32_SNORM	./intel/intel_defines.h	194;"	d
I965_SURFACEFORMAT_R32_SSCALED	./intel/intel_defines.h	200;"	d
I965_SURFACEFORMAT_R32_UINT	./intel/intel_defines.h	175;"	d
I965_SURFACEFORMAT_R32_UNORM	./intel/intel_defines.h	193;"	d
I965_SURFACEFORMAT_R32_USCALED	./intel/intel_defines.h	201;"	d
I965_SURFACEFORMAT_R5G5_SNORM_B6_UNORM	./intel/intel_defines.h	224;"	d
I965_SURFACEFORMAT_R64G64B64A64_FLOAT	./intel/intel_defines.h	262;"	d
I965_SURFACEFORMAT_R64G64B64_FLOAT	./intel/intel_defines.h	263;"	d
I965_SURFACEFORMAT_R64G64_FLOAT	./intel/intel_defines.h	121;"	d
I965_SURFACEFORMAT_R64_FLOAT	./intel/intel_defines.h	145;"	d
I965_SURFACEFORMAT_R8G8B8A8_SINT	./intel/intel_defines.h	164;"	d
I965_SURFACEFORMAT_R8G8B8A8_SNORM	./intel/intel_defines.h	163;"	d
I965_SURFACEFORMAT_R8G8B8A8_SSCALED	./intel/intel_defines.h	196;"	d
I965_SURFACEFORMAT_R8G8B8A8_UINT	./intel/intel_defines.h	165;"	d
I965_SURFACEFORMAT_R8G8B8A8_UNORM	./intel/intel_defines.h	161;"	d
I965_SURFACEFORMAT_R8G8B8A8_UNORM_SRGB	./intel/intel_defines.h	162;"	d
I965_SURFACEFORMAT_R8G8B8A8_USCALED	./intel/intel_defines.h	197;"	d
I965_SURFACEFORMAT_R8G8B8X8_UNORM	./intel/intel_defines.h	188;"	d
I965_SURFACEFORMAT_R8G8B8X8_UNORM_SRGB	./intel/intel_defines.h	189;"	d
I965_SURFACEFORMAT_R8G8B8_SNORM	./intel/intel_defines.h	259;"	d
I965_SURFACEFORMAT_R8G8B8_SSCALED	./intel/intel_defines.h	260;"	d
I965_SURFACEFORMAT_R8G8B8_UNORM	./intel/intel_defines.h	258;"	d
I965_SURFACEFORMAT_R8G8B8_USCALED	./intel/intel_defines.h	261;"	d
I965_SURFACEFORMAT_R8G8_SINT	./intel/intel_defines.h	210;"	d
I965_SURFACEFORMAT_R8G8_SNORM	./intel/intel_defines.h	209;"	d
I965_SURFACEFORMAT_R8G8_SSCALED	./intel/intel_defines.h	227;"	d
I965_SURFACEFORMAT_R8G8_UINT	./intel/intel_defines.h	211;"	d
I965_SURFACEFORMAT_R8G8_UNORM	./intel/intel_defines.h	208;"	d
I965_SURFACEFORMAT_R8G8_USCALED	./intel/intel_defines.h	228;"	d
I965_SURFACEFORMAT_R8_SINT	./intel/intel_defines.h	233;"	d
I965_SURFACEFORMAT_R8_SNORM	./intel/intel_defines.h	232;"	d
I965_SURFACEFORMAT_R8_SSCALED	./intel/intel_defines.h	240;"	d
I965_SURFACEFORMAT_R8_UINT	./intel/intel_defines.h	234;"	d
I965_SURFACEFORMAT_R8_UNORM	./intel/intel_defines.h	231;"	d
I965_SURFACEFORMAT_R8_USCALED	./intel/intel_defines.h	241;"	d
I965_SURFACEFORMAT_R9G9B9E5_SHAREDEXP	./intel/intel_defines.h	190;"	d
I965_SURFACEFORMAT_RAW	./intel/intel_defines.h	270;"	d
I965_SURFACEFORMAT_X24_TYPELESS_G8_UINT	./intel/intel_defines.h	178;"	d
I965_SURFACEFORMAT_X32_TYPELESS_G8X24_UINT	./intel/intel_defines.h	141;"	d
I965_SURFACEFORMAT_YCRCB_NORMAL	./intel/intel_defines.h	243;"	d
I965_SURFACEFORMAT_YCRCB_SWAPUV	./intel/intel_defines.h	254;"	d
I965_SURFACEFORMAT_YCRCB_SWAPUVY	./intel/intel_defines.h	244;"	d
I965_SURFACEFORMAT_YCRCB_SWAPY	./intel/intel_defines.h	255;"	d
I965_SURFACERETURNFORMAT_FLOAT32	./intel/intel_defines.h	287;"	d
I965_SURFACERETURNFORMAT_S1	./intel/intel_defines.h	288;"	d
I965_SURFACE_1D	./intel/intel_defines.h	109;"	d
I965_SURFACE_2D	./intel/intel_defines.h	110;"	d
I965_SURFACE_3D	./intel/intel_defines.h	111;"	d
I965_SURFACE_BUFFER	./intel/intel_defines.h	113;"	d
I965_SURFACE_CUBE	./intel/intel_defines.h	112;"	d
I965_SURFACE_NULL	./intel/intel_defines.h	114;"	d
I965_TEXCOORDMODE_CLAMP	./intel/intel_defines.h	282;"	d
I965_TEXCOORDMODE_CLAMP_BORDER	./intel/intel_defines.h	284;"	d
I965_TEXCOORDMODE_CUBE	./intel/intel_defines.h	283;"	d
I965_TEXCOORDMODE_MIRROR	./intel/intel_defines.h	281;"	d
I965_TEXCOORDMODE_MIRROR_ONCE	./intel/intel_defines.h	285;"	d
I965_TEXCOORDMODE_WRAP	./intel/intel_defines.h	280;"	d
I965_TILEWALK_XMAJOR	./intel/intel_defines.h	290;"	d
I965_TILEWALK_YMAJOR	./intel/intel_defines.h	291;"	d
INLINE	./cl_utils.h	25;"	d
INTEL_EXT_END_ID	./cl_extensions.h	68;"	d
INTEL_EXT_START_ID	./cl_extensions.h	67;"	d
INTEL_UNSUPPORTED_FORMAT	./cl_image.h	28;"	d
INTEL_VENDOR_ID	./cl_device_data.h	24;"	d
INVALID_CHIP_ID	./cl_device_data.h	23;"	d
INVALID_DEVICE_IF	./cl_utils.h	91;"	d
INVALID_VALUE_IF	./cl_utils.h	86;"	d
IS_1D_IMAGE	./cl_mem.h	162;"	d
IS_2D_IMAGE	./cl_mem.h	166;"	d
IS_3D_IMAGE	./cl_mem.h	169;"	d
IS_BASE_EXTENSION	./cl_extensions.h	72;"	d
IS_BAYTRAIL_T	./cl_device_data.h	87;"	d
IS_BROADWELL	./cl_device_data.h	233;"	d
IS_BROXTON	./cl_device_data.h	309;"	d
IS_BRW_GT1	./cl_device_data.h	211;"	d
IS_BRW_GT2	./cl_device_data.h	218;"	d
IS_BRW_GT3	./cl_device_data.h	225;"	d
IS_CFL_GT1	./cl_device_data.h	400;"	d
IS_CFL_GT2	./cl_device_data.h	407;"	d
IS_CFL_GT3	./cl_device_data.h	418;"	d
IS_CHERRYVIEW	./cl_device_data.h	239;"	d
IS_COFFEELAKE	./cl_device_data.h	425;"	d
IS_EGL_CONTEXT	./cl_context.h	97;"	d
IS_G45	./cl_device_data.h	35;"	d
IS_G4X	./cl_device_data.h	40;"	d
IS_GEMINILAKE	./cl_device_data.h	371;"	d
IS_GEN6	./cl_device_data.h	59;"	d
IS_GEN7	./cl_device_data.h	91;"	d
IS_GEN75	./cl_device_data.h	191;"	d
IS_GEN8	./cl_device_data.h	245;"	d
IS_GEN9	./cl_device_data.h	427;"	d
IS_GL_EXTENSION	./cl_extensions.h	74;"	d
IS_GL_IMAGE	./cl_mem.h	84;"	d
IS_GM45	./cl_device_data.h	39;"	d
IS_HASWELL	./cl_device_data.h	159;"	d
IS_IGDNG	./cl_device_data.h	44;"	d
IS_IGDNG_D	./cl_device_data.h	42;"	d
IS_IGDNG_M	./cl_device_data.h	43;"	d
IS_IMAGE	./cl_mem.h	83;"	d
IS_IMAGE_ARRAY	./cl_mem.h	171;"	d
IS_IVB_GT1	./cl_device_data.h	77;"	d
IS_IVB_GT2	./cl_device_data.h	82;"	d
IS_IVYBRIDGE	./cl_device_data.h	90;"	d
IS_KABYLAKE	./cl_device_data.h	366;"	d
IS_KBL_GT1	./cl_device_data.h	336;"	d
IS_KBL_GT15	./cl_device_data.h	343;"	d
IS_KBL_GT2	./cl_device_data.h	349;"	d
IS_KBL_GT3	./cl_device_data.h	358;"	d
IS_KBL_GT4	./cl_device_data.h	363;"	d
IS_OPT1_EXTENSION	./cl_extensions.h	73;"	d
IS_SAMPLER_ARG	./cl_sampler.c	55;"	d	file:
IS_SKL_GT1	./cl_device_data.h	271;"	d
IS_SKL_GT2	./cl_device_data.h	278;"	d
IS_SKL_GT3	./cl_device_data.h	287;"	d
IS_SKL_GT4	./cl_device_data.h	295;"	d
IS_SKYLAKE	./cl_device_data.h	301;"	d
JOIN	./cl_utils.h	32;"	d
KB	./cl_utils.h	338;"	d
KERNEL_NAMES	./Android.mk	/^KERNEL_NAMES := cl_internal_copy_buf_align4 \\$/;"	m
KERNEL_PATH	./Android.mk	/^KERNEL_PATH := $(BEIGNET_ROOT_PATH)\/src\/kernels$/;"	m
LIBCL_C_VERSION_STRING	./cl_gt_device.h	20;"	d
LIBCL_C_VERSION_STRING	./cl_gt_device.h	23;"	d
LIBCL_C_VERSION_STRING	./cl_gt_device.h	26;"	d
LIBCL_DRIVER_VERSION_STRING	./cl_platform_id.h	71;"	d
LIBCL_DRIVER_VERSION_STRING	./cl_platform_id.h	73;"	d
LIBCL_VERSION_STRING	./cl_gt_device.h	19;"	d
LIBCL_VERSION_STRING	./cl_gt_device.h	22;"	d
LIBCL_VERSION_STRING	./cl_gt_device.h	25;"	d
LIKELY	./cl_utils.h	28;"	d
LOCAL	./cl_utils.h	329;"	d
LOCAL	./x11/dricommon.c	56;"	d	file:
LOCAL	./x11/va_dri2.c	65;"	d	file:
LOCAL_ADDITIONAL_DEPENDENCIES	./Android.mk	/^LOCAL_ADDITIONAL_DEPENDENCIES := $(BEIGNET_ROOT_PATH)\/backend\/src\/Android.mk$/;"	m
LOCAL_ADDITIONAL_DEPENDENCIES	./Android.mk	/^LOCAL_ADDITIONAL_DEPENDENCIES := $(GBE_BIN_GENERATER)$/;"	m
LOCAL_CFLAGS	./Android.mk	/^LOCAL_CFLAGS := $(TOP_CFLAGS) -DHAS_USERPTR$/;"	m
LOCAL_CPPFLAGS	./Android.mk	/^LOCAL_CPPFLAGS := $(TOP_CPPFLAGS) -std=c++11 -DHAS_USERPTR$/;"	m
LOCAL_C_INCLUDES	./Android.mk	/^LOCAL_C_INCLUDES := $(TOP_C_INCLUDE) $(BEIGNET_ROOT_PATH)\/backend\/src\/backend\/ $(BEIGNET_ROOT_PATH)$/;"	m
LOCAL_LDFLAGS	./Android.mk	/^LOCAL_LDFLAGS := -Wl,-Bsymbolic$/;"	m
LOCAL_LDLIBS	./Android.mk	/^LOCAL_LDLIBS := -lm -ldl$/;"	m
LOCAL_MODULE	./Android.mk	/^LOCAL_MODULE := libcl$/;"	m
LOCAL_PATH	./Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_REQUIRED_MODULES	./Android.mk	/^LOCAL_REQUIRED_MODULES := $(HOST_OUT_EXECUTABLES)\/gbe_bin_generater$/;"	m
LOCAL_SHARED_LIBRARIES	./Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SRC_FILES	./Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SZ_0	./cl_mem.c	1309;"	d	file:
LOCAL_SZ_1	./cl_mem.c	1310;"	d	file:
LOCAL_SZ_2	./cl_mem.c	1311;"	d	file:
LUT_MV_0	./intel/intel_structs.h	/^        uint32_t LUT_MV_0 : BITFIELD_RANGE(0, 7);$/;"	m	struct:gen7_vme_rd_lut_set::__anon95
LUT_MV_1	./intel/intel_structs.h	/^        uint32_t LUT_MV_1 : BITFIELD_RANGE(8, 15);$/;"	m	struct:gen7_vme_rd_lut_set::__anon95
LUT_MV_2	./intel/intel_structs.h	/^        uint32_t LUT_MV_2 : BITFIELD_RANGE(16, 23);$/;"	m	struct:gen7_vme_rd_lut_set::__anon95
LUT_MV_3	./intel/intel_structs.h	/^        uint32_t LUT_MV_3 : BITFIELD_RANGE(24, 31);$/;"	m	struct:gen7_vme_rd_lut_set::__anon95
LUT_MV_4	./intel/intel_structs.h	/^        uint32_t LUT_MV_4 : BITFIELD_RANGE(0, 7);$/;"	m	struct:gen7_vme_rd_lut_set::__anon96
LUT_MV_5	./intel/intel_structs.h	/^        uint32_t LUT_MV_5 : BITFIELD_RANGE(8, 15);$/;"	m	struct:gen7_vme_rd_lut_set::__anon96
LUT_MV_6	./intel/intel_structs.h	/^        uint32_t LUT_MV_6 : BITFIELD_RANGE(16, 23);$/;"	m	struct:gen7_vme_rd_lut_set::__anon96
LUT_MV_7	./intel/intel_structs.h	/^        uint32_t LUT_MV_7 : BITFIELD_RANGE(24, 31);$/;"	m	struct:gen7_vme_rd_lut_set::__anon96
LUT_MbMode_0	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_0 : BITFIELD_RANGE(0, 7);$/;"	m	struct:gen7_vme_rd_lut_set::__anon93
LUT_MbMode_1	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_1 : BITFIELD_RANGE(8, 15);$/;"	m	struct:gen7_vme_rd_lut_set::__anon93
LUT_MbMode_2	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_2 : BITFIELD_RANGE(16, 23);$/;"	m	struct:gen7_vme_rd_lut_set::__anon93
LUT_MbMode_3	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_3 : BITFIELD_RANGE(24, 31);$/;"	m	struct:gen7_vme_rd_lut_set::__anon93
LUT_MbMode_4	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_4 : BITFIELD_RANGE(0, 7);$/;"	m	struct:gen7_vme_rd_lut_set::__anon94
LUT_MbMode_5	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_5 : BITFIELD_RANGE(8, 15);$/;"	m	struct:gen7_vme_rd_lut_set::__anon94
LUT_MbMode_6	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_6 : BITFIELD_RANGE(16, 23);$/;"	m	struct:gen7_vme_rd_lut_set::__anon94
LUT_MbMode_7	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_7 : BITFIELD_RANGE(24, 31);$/;"	m	struct:gen7_vme_rd_lut_set::__anon94
LUT_MbMode_8_0	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_8_0 : BITFIELD_RANGE(0, 7);$/;"	m	struct:gen7_vme_state::__anon97
LUT_MbMode_8_1	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_8_1 : BITFIELD_RANGE(16, 23);$/;"	m	struct:gen7_vme_state::__anon97
LUT_MbMode_8_2	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_8_2 : BITFIELD_RANGE(0, 7);$/;"	m	struct:gen7_vme_state::__anon98
LUT_MbMode_8_3	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_8_3 : BITFIELD_RANGE(16, 23);$/;"	m	struct:gen7_vme_state::__anon98
LUT_MbMode_9_0	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_9_0 : BITFIELD_RANGE(8, 15);$/;"	m	struct:gen7_vme_state::__anon97
LUT_MbMode_9_1	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_9_1 : BITFIELD_RANGE(24, 31);$/;"	m	struct:gen7_vme_state::__anon97
LUT_MbMode_9_2	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_9_2 : BITFIELD_RANGE(8, 15);$/;"	m	struct:gen7_vme_state::__anon98
LUT_MbMode_9_3	./intel/intel_structs.h	/^        uint32_t LUT_MbMode_9_3 : BITFIELD_RANGE(24, 31);$/;"	m	struct:gen7_vme_state::__anon98
LoadCmrtLibrary	./cl_cmrt.cpp	/^static bool LoadCmrtLibrary()$/;"	f	file:
LoadCompiler	./cl_gbe_loader.cpp	/^  void LoadCompiler()$/;"	f	struct:GbeLoaderInitializer
LoadInterp	./cl_gbe_loader.cpp	/^  bool LoadInterp(const char*& path)$/;"	f	struct:GbeLoaderInitializer
MAX	./cl_utils.h	96;"	d
MAX_GROUP_SIZE_IN_HALFSLICE	./cl_command_queue_gen7.c	36;"	d	file:
MAX_IF_DESC	./intel/intel_gpgpu.c	70;"	d	file:
MAX_KERNEL_BUILD_OPT	./performance.c	11;"	d	file:
MAX_KERNEL_EXECUTION_COUNT	./performance.c	10;"	d	file:
MAX_KERNEL_NAME_LENGTH	./performance.c	9;"	d	file:
MAX_OCLVERSION	./cl_device_data.h	429;"	d
MAX_TILING_SIZE	./cl_mem.c	51;"	d	file:
MB	./cl_utils.h	339;"	d
MEMZERO	./cl_utils.h	277;"	d
MIN	./cl_utils.h	97;"	d
MI_BATCH_BUFFER_END	./intel/intel_driver.h	63;"	d
MI_NOOP	./intel/intel_driver.h	62;"	d
MO_RETAIN_BIT	./intel/intel_gpgpu.c	53;"	d	file:
MO_TS_BIT	./intel/intel_gpgpu.c	52;"	d	file:
NEED_REPLIES	./x11/va_dri2.c	52;"	d	file:
NONE	./x11/dricommon.h	/^  NONE = 0,$/;"	e	enum:DRI_VER
NONGEN9_LIBCL_C_VERSION_STRING	./cl_platform_id.h	78;"	d
NONGEN9_LIBCL_VERSION_STRING	./cl_platform_id.h	77;"	d
NOT_IMPLEMENTED	./cl_utils.h	120;"	d
OCLDriverCallBackInitializer	./cl_driver.cpp	/^    OCLDriverCallBackInitializer(void) {$/;"	f	struct:__anon3::OCLDriverCallBackInitializer
OCLDriverCallBackInitializer	./cl_driver.cpp	/^  struct OCLDriverCallBackInitializer$/;"	s	namespace:__anon3	file:
OPT1_EXT_END_ID	./cl_extensions.h	66;"	d
OPT1_EXT_START_ID	./cl_extensions.h	65;"	d
OPTIONAL_EGL_LIBRARY	./Android.mk	/^OPTIONAL_EGL_LIBRARY :=$/;"	m
OUT_BATCH	./intel/intel_batchbuffer.h	64;"	d
OUT_RELOC	./intel/intel_batchbuffer.h	68;"	d
PCI_CHIP_BAYTRAIL_T	./cl_device_data.h	75;"	d
PCI_CHIP_BROADWLL_D_GT1	./cl_device_data.h	195;"	d
PCI_CHIP_BROADWLL_D_GT2	./cl_device_data.h	200;"	d
PCI_CHIP_BROADWLL_D_GT3	./cl_device_data.h	205;"	d
PCI_CHIP_BROADWLL_M_GT1	./cl_device_data.h	194;"	d
PCI_CHIP_BROADWLL_M_GT2	./cl_device_data.h	199;"	d
PCI_CHIP_BROADWLL_M_GT3	./cl_device_data.h	204;"	d
PCI_CHIP_BROADWLL_S_GT1	./cl_device_data.h	196;"	d
PCI_CHIP_BROADWLL_S_GT2	./cl_device_data.h	201;"	d
PCI_CHIP_BROADWLL_S_GT3	./cl_device_data.h	207;"	d
PCI_CHIP_BROADWLL_UI_GT3	./cl_device_data.h	206;"	d
PCI_CHIP_BROADWLL_U_GT1	./cl_device_data.h	198;"	d
PCI_CHIP_BROADWLL_U_GT2	./cl_device_data.h	203;"	d
PCI_CHIP_BROADWLL_U_GT3	./cl_device_data.h	209;"	d
PCI_CHIP_BROADWLL_W_GT1	./cl_device_data.h	197;"	d
PCI_CHIP_BROADWLL_W_GT2	./cl_device_data.h	202;"	d
PCI_CHIP_BROADWLL_W_GT3	./cl_device_data.h	208;"	d
PCI_CHIP_BROXTON_0	./cl_device_data.h	304;"	d
PCI_CHIP_BROXTON_1	./cl_device_data.h	305;"	d
PCI_CHIP_BROXTON_2	./cl_device_data.h	306;"	d
PCI_CHIP_BROXTON_3	./cl_device_data.h	307;"	d
PCI_CHIP_CHV_0	./cl_device_data.h	235;"	d
PCI_CHIP_CHV_1	./cl_device_data.h	236;"	d
PCI_CHIP_CHV_2	./cl_device_data.h	237;"	d
PCI_CHIP_CHV_3	./cl_device_data.h	238;"	d
PCI_CHIP_COFFEELAKE_H_GT2_1	./cl_device_data.h	387;"	d
PCI_CHIP_COFFEELAKE_H_GT2_2	./cl_device_data.h	388;"	d
PCI_CHIP_COFFEELAKE_S_GT1_1	./cl_device_data.h	375;"	d
PCI_CHIP_COFFEELAKE_S_GT1_2	./cl_device_data.h	376;"	d
PCI_CHIP_COFFEELAKE_S_GT1_3	./cl_device_data.h	377;"	d
PCI_CHIP_COFFEELAKE_S_GT2_1	./cl_device_data.h	382;"	d
PCI_CHIP_COFFEELAKE_S_GT2_2	./cl_device_data.h	383;"	d
PCI_CHIP_COFFEELAKE_S_GT2_3	./cl_device_data.h	384;"	d
PCI_CHIP_COFFEELAKE_S_GT2_4	./cl_device_data.h	385;"	d
PCI_CHIP_COFFEELAKE_U_GT1_1	./cl_device_data.h	379;"	d
PCI_CHIP_COFFEELAKE_U_GT1_2	./cl_device_data.h	380;"	d
PCI_CHIP_COFFEELAKE_U_GT2_1	./cl_device_data.h	390;"	d
PCI_CHIP_COFFEELAKE_U_GT2_2	./cl_device_data.h	391;"	d
PCI_CHIP_COFFEELAKE_U_GT2_3	./cl_device_data.h	392;"	d
PCI_CHIP_COFFEELAKE_U_GT3_1	./cl_device_data.h	394;"	d
PCI_CHIP_COFFEELAKE_U_GT3_2	./cl_device_data.h	395;"	d
PCI_CHIP_COFFEELAKE_U_GT3_3	./cl_device_data.h	396;"	d
PCI_CHIP_COFFEELAKE_U_GT3_4	./cl_device_data.h	397;"	d
PCI_CHIP_COFFEELAKE_U_GT3_5	./cl_device_data.h	398;"	d
PCI_CHIP_G41_G	./cl_device_data.h	30;"	d
PCI_CHIP_G45_G	./cl_device_data.h	29;"	d
PCI_CHIP_GLK_2x6	./cl_device_data.h	369;"	d
PCI_CHIP_GLK_3x6	./cl_device_data.h	368;"	d
PCI_CHIP_GM45_GM	./cl_device_data.h	26;"	d
PCI_CHIP_HASWELL_B1	./cl_device_data.h	103;"	d
PCI_CHIP_HASWELL_B2	./cl_device_data.h	104;"	d
PCI_CHIP_HASWELL_B3	./cl_device_data.h	105;"	d
PCI_CHIP_HASWELL_CRW_B1	./cl_device_data.h	152;"	d
PCI_CHIP_HASWELL_CRW_B2	./cl_device_data.h	153;"	d
PCI_CHIP_HASWELL_CRW_B3	./cl_device_data.h	154;"	d
PCI_CHIP_HASWELL_CRW_D1	./cl_device_data.h	143;"	d
PCI_CHIP_HASWELL_CRW_D2	./cl_device_data.h	144;"	d
PCI_CHIP_HASWELL_CRW_D3	./cl_device_data.h	145;"	d
PCI_CHIP_HASWELL_CRW_E1	./cl_device_data.h	155;"	d
PCI_CHIP_HASWELL_CRW_E2	./cl_device_data.h	156;"	d
PCI_CHIP_HASWELL_CRW_E3	./cl_device_data.h	157;"	d
PCI_CHIP_HASWELL_CRW_M1	./cl_device_data.h	149;"	d
PCI_CHIP_HASWELL_CRW_M2	./cl_device_data.h	150;"	d
PCI_CHIP_HASWELL_CRW_M3	./cl_device_data.h	151;"	d
PCI_CHIP_HASWELL_CRW_S1	./cl_device_data.h	146;"	d
PCI_CHIP_HASWELL_CRW_S2	./cl_device_data.h	147;"	d
PCI_CHIP_HASWELL_CRW_S3	./cl_device_data.h	148;"	d
PCI_CHIP_HASWELL_D1	./cl_device_data.h	94;"	d
PCI_CHIP_HASWELL_D2	./cl_device_data.h	95;"	d
PCI_CHIP_HASWELL_D3	./cl_device_data.h	96;"	d
PCI_CHIP_HASWELL_E1	./cl_device_data.h	106;"	d
PCI_CHIP_HASWELL_E2	./cl_device_data.h	107;"	d
PCI_CHIP_HASWELL_E3	./cl_device_data.h	108;"	d
PCI_CHIP_HASWELL_M1	./cl_device_data.h	100;"	d
PCI_CHIP_HASWELL_M2	./cl_device_data.h	101;"	d
PCI_CHIP_HASWELL_M3	./cl_device_data.h	102;"	d
PCI_CHIP_HASWELL_S1	./cl_device_data.h	97;"	d
PCI_CHIP_HASWELL_S2	./cl_device_data.h	98;"	d
PCI_CHIP_HASWELL_S3	./cl_device_data.h	99;"	d
PCI_CHIP_HASWELL_SDV_B1	./cl_device_data.h	120;"	d
PCI_CHIP_HASWELL_SDV_B2	./cl_device_data.h	121;"	d
PCI_CHIP_HASWELL_SDV_B3	./cl_device_data.h	122;"	d
PCI_CHIP_HASWELL_SDV_D1	./cl_device_data.h	111;"	d
PCI_CHIP_HASWELL_SDV_D2	./cl_device_data.h	112;"	d
PCI_CHIP_HASWELL_SDV_D3	./cl_device_data.h	113;"	d
PCI_CHIP_HASWELL_SDV_E1	./cl_device_data.h	123;"	d
PCI_CHIP_HASWELL_SDV_E2	./cl_device_data.h	124;"	d
PCI_CHIP_HASWELL_SDV_E3	./cl_device_data.h	125;"	d
PCI_CHIP_HASWELL_SDV_M1	./cl_device_data.h	117;"	d
PCI_CHIP_HASWELL_SDV_M2	./cl_device_data.h	118;"	d
PCI_CHIP_HASWELL_SDV_M3	./cl_device_data.h	119;"	d
PCI_CHIP_HASWELL_SDV_S1	./cl_device_data.h	114;"	d
PCI_CHIP_HASWELL_SDV_S2	./cl_device_data.h	115;"	d
PCI_CHIP_HASWELL_SDV_S3	./cl_device_data.h	116;"	d
PCI_CHIP_HASWELL_ULT_B1	./cl_device_data.h	136;"	d
PCI_CHIP_HASWELL_ULT_B2	./cl_device_data.h	137;"	d
PCI_CHIP_HASWELL_ULT_B3	./cl_device_data.h	138;"	d
PCI_CHIP_HASWELL_ULT_D1	./cl_device_data.h	127;"	d
PCI_CHIP_HASWELL_ULT_D2	./cl_device_data.h	128;"	d
PCI_CHIP_HASWELL_ULT_D3	./cl_device_data.h	129;"	d
PCI_CHIP_HASWELL_ULT_E1	./cl_device_data.h	139;"	d
PCI_CHIP_HASWELL_ULT_E2	./cl_device_data.h	140;"	d
PCI_CHIP_HASWELL_ULT_E3	./cl_device_data.h	141;"	d
PCI_CHIP_HASWELL_ULT_M1	./cl_device_data.h	133;"	d
PCI_CHIP_HASWELL_ULT_M2	./cl_device_data.h	134;"	d
PCI_CHIP_HASWELL_ULT_M3	./cl_device_data.h	135;"	d
PCI_CHIP_HASWELL_ULT_S1	./cl_device_data.h	130;"	d
PCI_CHIP_HASWELL_ULT_S2	./cl_device_data.h	131;"	d
PCI_CHIP_HASWELL_ULT_S3	./cl_device_data.h	132;"	d
PCI_CHIP_IGDNG_D_G	./cl_device_data.h	32;"	d
PCI_CHIP_IGDNG_M_G	./cl_device_data.h	33;"	d
PCI_CHIP_IGD_E_G	./cl_device_data.h	27;"	d
PCI_CHIP_IVYBRIDGE_GT1	./cl_device_data.h	68;"	d
PCI_CHIP_IVYBRIDGE_GT2	./cl_device_data.h	69;"	d
PCI_CHIP_IVYBRIDGE_M_GT1	./cl_device_data.h	70;"	d
PCI_CHIP_IVYBRIDGE_M_GT2	./cl_device_data.h	71;"	d
PCI_CHIP_IVYBRIDGE_S_GT1	./cl_device_data.h	72;"	d
PCI_CHIP_IVYBRIDGE_S_GT2	./cl_device_data.h	73;"	d
PCI_CHIP_KABYLAKE_DT_GT1	./cl_device_data.h	322;"	d
PCI_CHIP_KABYLAKE_DT_GT15	./cl_device_data.h	324;"	d
PCI_CHIP_KABYLAKE_DT_GT2	./cl_device_data.h	323;"	d
PCI_CHIP_KABYLAKE_HALO_GT1	./cl_device_data.h	325;"	d
PCI_CHIP_KABYLAKE_HALO_GT15	./cl_device_data.h	328;"	d
PCI_CHIP_KABYLAKE_HALO_GT2	./cl_device_data.h	326;"	d
PCI_CHIP_KABYLAKE_HALO_GT4	./cl_device_data.h	327;"	d
PCI_CHIP_KABYLAKE_SRV_GT1	./cl_device_data.h	332;"	d
PCI_CHIP_KABYLAKE_SRV_GT2	./cl_device_data.h	333;"	d
PCI_CHIP_KABYLAKE_ULT_GT1	./cl_device_data.h	315;"	d
PCI_CHIP_KABYLAKE_ULT_GT15	./cl_device_data.h	318;"	d
PCI_CHIP_KABYLAKE_ULT_GT2	./cl_device_data.h	316;"	d
PCI_CHIP_KABYLAKE_ULT_GT2_1	./cl_device_data.h	319;"	d
PCI_CHIP_KABYLAKE_ULT_GT3	./cl_device_data.h	317;"	d
PCI_CHIP_KABYLAKE_ULT_GT3_1	./cl_device_data.h	320;"	d
PCI_CHIP_KABYLAKE_ULT_GT3_2	./cl_device_data.h	321;"	d
PCI_CHIP_KABYLAKE_ULX_GT1	./cl_device_data.h	329;"	d
PCI_CHIP_KABYLAKE_ULX_GT15	./cl_device_data.h	331;"	d
PCI_CHIP_KABYLAKE_ULX_GT2	./cl_device_data.h	330;"	d
PCI_CHIP_KABYLAKE_WKS_GT2	./cl_device_data.h	334;"	d
PCI_CHIP_Q45_G	./cl_device_data.h	28;"	d
PCI_CHIP_SANDYBRIDGE_BRIDGE	./cl_device_data.h	47;"	d
PCI_CHIP_SANDYBRIDGE_BRIDGE_M	./cl_device_data.h	51;"	d
PCI_CHIP_SANDYBRIDGE_BRIDGE_S	./cl_device_data.h	55;"	d
PCI_CHIP_SANDYBRIDGE_GT1	./cl_device_data.h	48;"	d
PCI_CHIP_SANDYBRIDGE_GT2	./cl_device_data.h	49;"	d
PCI_CHIP_SANDYBRIDGE_GT2_PLUS	./cl_device_data.h	50;"	d
PCI_CHIP_SANDYBRIDGE_M_GT1	./cl_device_data.h	52;"	d
PCI_CHIP_SANDYBRIDGE_M_GT2	./cl_device_data.h	53;"	d
PCI_CHIP_SANDYBRIDGE_M_GT2_PLUS	./cl_device_data.h	54;"	d
PCI_CHIP_SANDYBRIDGE_S_GT	./cl_device_data.h	56;"	d
PCI_CHIP_SKYLAKE_DT_GT1	./cl_device_data.h	256;"	d
PCI_CHIP_SKYLAKE_DT_GT2	./cl_device_data.h	257;"	d
PCI_CHIP_SKYLAKE_DT_GT4	./cl_device_data.h	258;"	d
PCI_CHIP_SKYLAKE_HALO_GT1	./cl_device_data.h	259;"	d
PCI_CHIP_SKYLAKE_HALO_GT2	./cl_device_data.h	260;"	d
PCI_CHIP_SKYLAKE_HALO_GT3	./cl_device_data.h	261;"	d
PCI_CHIP_SKYLAKE_HALO_GT4	./cl_device_data.h	262;"	d
PCI_CHIP_SKYLAKE_MEDIA_SRV_GT3	./cl_device_data.h	268;"	d
PCI_CHIP_SKYLAKE_SRV_GT1	./cl_device_data.h	263;"	d
PCI_CHIP_SKYLAKE_SRV_GT2	./cl_device_data.h	264;"	d
PCI_CHIP_SKYLAKE_SRV_GT3	./cl_device_data.h	265;"	d
PCI_CHIP_SKYLAKE_SRV_GT4	./cl_device_data.h	266;"	d
PCI_CHIP_SKYLAKE_ULT_GT1	./cl_device_data.h	248;"	d
PCI_CHIP_SKYLAKE_ULT_GT2	./cl_device_data.h	249;"	d
PCI_CHIP_SKYLAKE_ULT_GT2F	./cl_device_data.h	253;"	d
PCI_CHIP_SKYLAKE_ULT_GT3	./cl_device_data.h	250;"	d
PCI_CHIP_SKYLAKE_ULT_GT3E1	./cl_device_data.h	251;"	d
PCI_CHIP_SKYLAKE_ULT_GT3E2	./cl_device_data.h	252;"	d
PCI_CHIP_SKYLAKE_ULX_GT1	./cl_device_data.h	254;"	d
PCI_CHIP_SKYLAKE_ULX_GT2	./cl_device_data.h	255;"	d
PCI_CHIP_SKYLAKE_WKS_GT2	./cl_device_data.h	267;"	d
PCI_CHIP_SKYLAKE_WKS_GT4	./cl_device_data.h	269;"	d
PIPELINE_SELECT_3D	./intel/intel_defines.h	88;"	d
PIPELINE_SELECT_GPGPU	./intel/intel_defines.h	90;"	d
PIPELINE_SELECT_MASK	./intel/intel_defines.h	91;"	d
PIPELINE_SELECT_MEDIA	./intel/intel_defines.h	89;"	d
PPTHREAD_MUTEX_LOCK	./intel/intel_driver.h	111;"	d
PPTHREAD_MUTEX_UNLOCK	./intel/intel_driver.h	116;"	d
RESTORE_BLOCKED_SIGSET	./intel/intel_driver.h	107;"	d
RGB2sRGB	./cl_mem.c	1542;"	d	file:
RGB2sRGB	./cl_mem.c	1556;"	d	file:
SAMPLER_ARG_ID	./cl_sampler.c	56;"	d	file:
SAMPLER_STATE_SIZE	./intel/intel_gpgpu.c	54;"	d	file:
SELF_TEST_ATOMIC_FAIL	./cl_driver.h	/^  SELF_TEST_ATOMIC_FAIL = 2,$/;"	e	enum:cl_self_test_res
SELF_TEST_OTHER_FAIL	./cl_driver.h	/^  SELF_TEST_OTHER_FAIL = 3,$/;"	e	enum:cl_self_test_res
SELF_TEST_PASS	./cl_driver.h	/^  SELF_TEST_PASS = 0,$/;"	e	enum:cl_self_test_res
SELF_TEST_SLM_FAIL	./cl_driver.h	/^  SELF_TEST_SLM_FAIL  = 1,$/;"	e	enum:cl_self_test_res
SET_BLOCKED_SIGSET	./intel/intel_driver.h	96;"	d
SET_ICD	./cl_khr_icd.h	22;"	d
SET_ICD	./cl_khr_icd.h	28;"	d
SIZEOF32	./cl_utils.h	335;"	d
SPD_0_X	./intel/intel_structs.h	/^        uint32_t SPD_0_X : BITFIELD_RANGE(0, 3);        \/\/search path distance$/;"	m	struct:gen7_vme_search_path_state::__anon92
SPD_0_Y	./intel/intel_structs.h	/^        uint32_t SPD_0_Y : BITFIELD_RANGE(4, 7);$/;"	m	struct:gen7_vme_search_path_state::__anon92
SPD_1_X	./intel/intel_structs.h	/^        uint32_t SPD_1_X : BITFIELD_RANGE(8, 11);$/;"	m	struct:gen7_vme_search_path_state::__anon92
SPD_1_Y	./intel/intel_structs.h	/^        uint32_t SPD_1_Y : BITFIELD_RANGE(12, 15);$/;"	m	struct:gen7_vme_search_path_state::__anon92
SPD_2_X	./intel/intel_structs.h	/^        uint32_t SPD_2_X : BITFIELD_RANGE(16, 19);$/;"	m	struct:gen7_vme_search_path_state::__anon92
SPD_2_Y	./intel/intel_structs.h	/^        uint32_t SPD_2_Y : BITFIELD_RANGE(20, 23);$/;"	m	struct:gen7_vme_search_path_state::__anon92
SPD_3_X	./intel/intel_structs.h	/^        uint32_t SPD_3_X : BITFIELD_RANGE(24, 27);$/;"	m	struct:gen7_vme_search_path_state::__anon92
SPD_3_Y	./intel/intel_structs.h	/^        uint32_t SPD_3_Y : BITFIELD_RANGE(28, 31);$/;"	m	struct:gen7_vme_search_path_state::__anon92
STATIC_ASSERT	./cl_utils.h	53;"	d
STR	./cl_cmrt.cpp	18;"	d	file:
TIMESTAMP_ADDR	./intel/intel_gpgpu.c	56;"	d	file:
TRY	./cl_utils.h	280;"	d
TRY_ALLOC	./cl_utils.h	292;"	d
TRY_ALLOC_NO_ERR	./cl_utils.h	298;"	d
TRY_ALLOC_NO_RET	./cl_utils.h	304;"	d
TRY_NO_ERR	./cl_utils.h	286;"	d
UF0_CLIP_REALLOC	./intel/intel_defines.h	96;"	d
UF0_CS_REALLOC	./intel/intel_defines.h	93;"	d
UF0_GS_REALLOC	./intel/intel_defines.h	97;"	d
UF0_SF_REALLOC	./intel/intel_defines.h	95;"	d
UF0_VFE_REALLOC	./intel/intel_defines.h	94;"	d
UF0_VS_REALLOC	./intel/intel_defines.h	98;"	d
UF1_CLIP_FENCE_SHIFT	./intel/intel_defines.h	99;"	d
UF1_GS_FENCE_SHIFT	./intel/intel_defines.h	100;"	d
UF1_VS_FENCE_SHIFT	./intel/intel_defines.h	101;"	d
UF2_CS_FENCE_SHIFT	./intel/intel_defines.h	102;"	d
UF2_SF_FENCE_SHIFT	./intel/intel_defines.h	104;"	d
UF2_VFE_FENCE_SHIFT	./intel/intel_defines.h	103;"	d
UNLIKELY	./cl_utils.h	29;"	d
UPLOAD	./cl_command_queue_gen7.c	229;"	d	file:
UPLOAD	./cl_command_queue_gen7.c	249;"	d	file:
URB_SIZE	./intel/intel_defines.h	305;"	d
VA_DRI2Authenticate	./x11/va_dri2.c	/^LOCAL Bool VA_DRI2Authenticate(Display *dpy, XID window, drm_magic_t magic)$/;"	f
VA_DRI2Buffer	./x11/va_dri2.h	/^} VA_DRI2Buffer;$/;"	t	typeref:struct:__anon111
VA_DRI2Connect	./x11/va_dri2.c	/^LOCAL Bool VA_DRI2Connect(Display *dpy, XID window,$/;"	f
VA_DRI2CopyRegion	./x11/va_dri2.c	/^LOCAL void VA_DRI2CopyRegion(Display *dpy, XID drawable, XserverRegion region,$/;"	f
VA_DRI2CreateDrawable	./x11/va_dri2.c	/^LOCAL void VA_DRI2CreateDrawable(Display *dpy, XID drawable)$/;"	f
VA_DRI2DestroyDrawable	./x11/va_dri2.c	/^LOCAL void VA_DRI2DestroyDrawable(Display *dpy, XID drawable)$/;"	f
VA_DRI2GetBuffers	./x11/va_dri2.c	/^LOCAL VA_DRI2Buffer *VA_DRI2GetBuffers(Display *dpy, XID drawable,$/;"	f
VA_DRI2QueryExtension	./x11/va_dri2.c	/^LOCAL Bool VA_DRI2QueryExtension(Display *dpy, int *eventBase, int *errorBase)$/;"	f	file:
VA_DRI2QueryVersion	./x11/va_dri2.c	/^LOCAL Bool VA_DRI2QueryVersion(Display *dpy, int *major, int *minor)$/;"	f
XSTR	./cl_cmrt.cpp	17;"	d	file:
XY_COLOR_BLT_CMD	./intel/intel_driver.h	65;"	d
XY_COLOR_BLT_DST_TILED	./intel/intel_driver.h	68;"	d
XY_COLOR_BLT_WRITE_ALPHA	./intel/intel_driver.h	66;"	d
XY_COLOR_BLT_WRITE_RGB	./intel/intel_driver.h	67;"	d
X_DRI2Authenticate	./x11/va_dri2str.h	64;"	d
X_DRI2Connect	./x11/va_dri2str.h	63;"	d
X_DRI2CopyRegion	./x11/va_dri2str.h	68;"	d
X_DRI2CreateDrawable	./x11/va_dri2str.h	65;"	d
X_DRI2DestroyDrawable	./x11/va_dri2str.h	66;"	d
X_DRI2GetBuffers	./x11/va_dri2str.h	67;"	d
X_DRI2QueryVersion	./x11/va_dri2str.h	62;"	d
_BINARY_HEADER_INDEX	./cl_program.h	/^typedef enum _BINARY_HEADER_INDEX {$/;"	g
_DECL_FIELD	./cl_device_id.c	1537;"	d	file:
_DO_JOIN	./cl_utils.h	33;"	d
_DO_JOIN2	./cl_utils.h	34;"	d
_DRI2_PROTO_H_	./x11/va_dri2str.h	52;"	d
_DRI2_TOKENS_H_	./x11/va_dri2tokens.h	52;"	d
_INTEL_BATCHBUFFER_H_	./intel/intel_batchbuffer.h	47;"	d
_INTEL_DRIVER_H_	./intel/intel_driver.h	45;"	d
_JOINT	./cl_platform_id.h	61;"	d
_JOINT3	./cl_platform_id.h	62;"	d
_STR	./cl_platform_id.h	60;"	d
_VA_DRI2_H_	./x11/va_dri2.h	52;"	d
_VA_DRICOMMON_H_	./x11/dricommon.h	44;"	d
__CL_ACCELERATOR_INTEL_H__	./cl_accelerator_intel.h	2;"	d
__CL_ALLOC_H__	./cl_alloc.h	21;"	d
__CL_BASE_OBJECT_H__	./cl_base_object.h	20;"	d
__CL_CMRT_H__	./cl_cmrt.h	21;"	d
__CL_COMMAND_QUEUE_H__	./cl_command_queue.h	21;"	d
__CL_CONTEXT_H__	./cl_context.h	21;"	d
__CL_DEVICE_DATA_H__	./cl_device_data.h	21;"	d
__CL_DEVICE_ENQUEUE_H__	./cl_device_enqueue.h	21;"	d
__CL_DEVICE_ID_H__	./cl_device_id.h	21;"	d
__CL_DRIVER_H__	./cl_driver.h	21;"	d
__CL_DRIVER_TYPE_H__	./cl_driver_type.h	8;"	d
__CL_ENQUEUE_H__	./cl_enqueue.h	20;"	d
__CL_EVENT_H_	./cl_event.h	20;"	d
__CL_EXTENSIONS_H__	./cl_extensions.h	2;"	d
__CL_GBE_LOADER_H__	./cl_gbe_loader.h	20;"	d
__CL_IMAGE_H__	./cl_image.h	21;"	d
__CL_INTERNALS_H__	./cl_internals.h	21;"	d
__CL_KERNEL_H__	./cl_kernel.h	21;"	d
__CL_KHR_ICD_H__	./cl_khr_icd.h	18;"	d
__CL_MEM_GL_H__	./cl_mem_gl.h	2;"	d
__CL_MEM_H__	./cl_mem.h	21;"	d
__CL_PLATFORM_ID_H__	./cl_platform_id.h	21;"	d
__CL_PROGRAM_H__	./cl_program.h	21;"	d
__CL_SAMPLER_H__	./cl_sampler.h	21;"	d
__CL_UTILS_H__	./cl_utils.h	21;"	d
__DRI_BUFFER_ACCUM	./x11/dricommon.c	144;"	d	file:
__DRI_BUFFER_BACK_LEFT	./x11/dricommon.c	139;"	d	file:
__DRI_BUFFER_BACK_RIGHT	./x11/dricommon.c	141;"	d	file:
__DRI_BUFFER_DEPTH	./x11/dricommon.c	142;"	d	file:
__DRI_BUFFER_FAKE_FRONT_LEFT	./x11/dricommon.c	145;"	d	file:
__DRI_BUFFER_FAKE_FRONT_RIGHT	./x11/dricommon.c	146;"	d	file:
__DRI_BUFFER_FRONT_LEFT	./x11/dricommon.c	138;"	d	file:
__DRI_BUFFER_FRONT_RIGHT	./x11/dricommon.c	140;"	d	file:
__DRI_BUFFER_STENCIL	./x11/dricommon.c	143;"	d	file:
__GENX_DEFINES_H__	./intel/intel_defines.h	51;"	d
__INTEL_CL_GL_SHARE_IMAGE_INFO_	./intel/intel_cl_gl_share_image_info.h	2;"	d
__INTEL_GPGPU_H__	./intel/intel_gpgpu.h	22;"	d
__INTEL_STRUCTS_H__	./intel/intel_structs.h	45;"	d
__PERFORMANCE_H__	./performance.h	2;"	d
_cl_accelerator_intel	./cl_accelerator_intel.h	/^struct _cl_accelerator_intel {$/;"	s
_cl_base_object	./cl_base_object.h	/^typedef struct _cl_base_object {$/;"	s
_cl_base_object	./cl_base_object.h	/^} _cl_base_object;$/;"	t	typeref:struct:_cl_base_object
_cl_command_queue	./cl_command_queue.h	/^typedef struct _cl_command_queue {$/;"	s
_cl_command_queue	./cl_command_queue.h	/^} _cl_command_queue;;$/;"	t	typeref:struct:_cl_command_queue
_cl_command_queue_enqueue_worker	./cl_command_queue.h	/^typedef struct _cl_command_queue_enqueue_worker {$/;"	s
_cl_command_queue_enqueue_worker	./cl_command_queue.h	/^} _cl_command_queue_enqueue_worker;$/;"	t	typeref:struct:_cl_command_queue_enqueue_worker
_cl_context	./cl_context.h	/^struct _cl_context {$/;"	s
_cl_context_prop	./cl_context.h	/^struct _cl_context_prop {$/;"	s
_cl_device_id	./cl_device_id.h	/^struct _cl_device_id {$/;"	s
_cl_event	./cl_event.h	/^typedef struct _cl_event {$/;"	s
_cl_event	./cl_event.h	/^} _cl_event;$/;"	t	typeref:struct:_cl_event
_cl_event_user_callback	./cl_event.h	/^typedef struct _cl_event_user_callback {$/;"	s
_cl_event_user_callback	./cl_event.h	/^} _cl_event_user_callback;$/;"	t	typeref:struct:_cl_event_user_callback
_cl_gl_context_type	./cl_context.h	/^enum _cl_gl_context_type {$/;"	g
_cl_image_desc	./cl_mem.h	/^typedef struct _cl_image_desc {$/;"	s
_cl_internal_ker_type	./cl_context.h	/^enum _cl_internal_ker_type {$/;"	g
_cl_kernel	./cl_kernel.h	/^struct _cl_kernel {$/;"	s
_cl_mapped_ptr	./cl_mem.h	/^typedef struct _cl_mapped_ptr {$/;"	s
_cl_mem	./cl_mem.h	/^typedef  struct _cl_mem {$/;"	s
_cl_mem	./cl_mem.h	/^} _cl_mem;$/;"	t	typeref:struct:_cl_mem
_cl_mem_buffer	./cl_mem.h	/^struct _cl_mem_buffer {$/;"	s
_cl_mem_buffer1d_image	./cl_mem.h	/^struct _cl_mem_buffer1d_image {$/;"	s
_cl_mem_dstr_cb	./cl_mem.h	/^typedef struct _cl_mem_dstr_cb {$/;"	s
_cl_mem_dstr_cb	./cl_mem.h	/^} _cl_mem_dstr_cb;$/;"	t	typeref:struct:_cl_mem_dstr_cb
_cl_mem_gl_image	./cl_mem.h	/^struct _cl_mem_gl_image {$/;"	s
_cl_mem_image	./cl_mem.h	/^struct _cl_mem_image {$/;"	s
_cl_mem_new_image	./cl_mem.c	/^_cl_mem_new_image(cl_context ctx,$/;"	f	file:
_cl_mem_new_image_from_buffer	./cl_mem.c	/^_cl_mem_new_image_from_buffer(cl_context ctx,$/;"	f	file:
_cl_mem_pipe	./cl_mem.h	/^typedef struct _cl_mem_pipe {$/;"	s
_cl_mem_pipe	./cl_mem.h	/^} _cl_mem_pipe;$/;"	t	typeref:struct:_cl_mem_pipe
_cl_mem_svm	./cl_mem.h	/^typedef struct _cl_mem_svm {$/;"	s
_cl_mem_svm	./cl_mem.h	/^} _cl_mem_svm;$/;"	t	typeref:struct:_cl_mem_svm
_cl_platform_id	./cl_platform_id.h	/^struct _cl_platform_id {$/;"	s
_cl_program	./cl_program.h	/^struct _cl_program {$/;"	s
_cl_sampler	./cl_sampler.h	/^typedef struct _cl_sampler {$/;"	s
_cl_sampler	./cl_sampler.h	/^} _cl_sampler;$/;"	t	typeref:struct:_cl_sampler
_enqueue_data	./cl_enqueue.h	/^typedef struct _enqueue_data {$/;"	s
_intel_cl_gl_share_image_info	./intel/intel_cl_gl_share_image_info.h	/^struct _intel_cl_gl_share_image_info {$/;"	s
_va_dri2_info_data	./x11/va_dri2.c	/^static XExtensionInfo _va_dri2_info_data;$/;"	v	file:
a	./intel/intel_structs.h	/^    float r,g,b,a;$/;"	m	struct:gen7_sampler_border_color
accel	./cl_kernel.h	/^  cl_accelerator_intel accel;     \/* accelerator *\/$/;"	m	struct:_cl_kernel
accel	./cl_kernel.h	/^  cl_accelerator_intel accel;$/;"	m	struct:cl_argument
accels	./cl_context.h	/^  cl_accelerator_intel accels;      \/* All accelerator_intel object currently allocated *\/$/;"	m	struct:_cl_context
address	./cl_sampler.h	/^  cl_addressing_mode address; \/* CLAMP \/ REPEAT and so on... *\/$/;"	m	struct:_cl_sampler
address	./intel/intel_structs.h	/^    uint32_t address : BITFIELD_RANGE(3, 31);$/;"	m	struct:gen6_pipe_control::__anon83
address	./intel/intel_structs.h	/^    uint32_t address : BITFIELD_RANGE(3, 31);$/;"	m	struct:gen8_pipe_control::__anon88
address_bits	./cl_device_id.h	/^  cl_uint  address_bits;$/;"	m	struct:_cl_device_id
address_round	./intel/intel_structs.h	/^    uint32_t address_round:6;$/;"	m	struct:gen6_sampler_state::__anon102
address_round	./intel/intel_structs.h	/^    uint32_t address_round:6;$/;"	m	struct:gen7_sampler_state::__anon106
address_round	./intel/intel_structs.h	/^    uint32_t address_round:6;$/;"	m	struct:gen8_sampler_state::__anon110
affinity_domain	./cl_device_id.h	/^  cl_device_affinity_domain    affinity_domain;$/;"	m	struct:_cl_device_id
alpha_clear_color	./intel/intel_structs.h	/^    uint32_t alpha_clear_color:1;$/;"	m	struct:gen8_surface_state::__anon57
aniso_algorithm	./intel/intel_structs.h	/^    uint32_t aniso_algorithm:1;$/;"	m	struct:gen7_sampler_state::__anon103
aniso_algorithm	./intel/intel_structs.h	/^    uint32_t aniso_algorithm:1;$/;"	m	struct:gen8_sampler_state::__anon107
arg_n	./cl_kernel.h	/^  uint32_t arg_n:30;          \/* Number of arguments *\/$/;"	m	struct:_cl_kernel
args	./cl_kernel.h	/^  cl_argument *args;          \/* To track argument setting *\/$/;"	m	struct:_cl_kernel
atexit_registered	./performance.c	/^static int atexit_registered = 0;$/;"	v	file:
atomic	./intel/intel_batchbuffer.h	/^  int atomic;$/;"	m	struct:intel_batchbuffer
atomic_add	./cl_utils.h	/^static INLINE int atomic_add(atomic_t *v, const int c) {$/;"	f
atomic_dec	./cl_utils.h	/^static INLINE int atomic_dec(atomic_t *v) { return atomic_add(v, -1); }$/;"	f
atomic_inc	./cl_utils.h	/^static INLINE int atomic_inc(atomic_t *v) { return atomic_add(v, 1); }$/;"	f
atomic_read	./cl_utils.h	/^static INLINE int atomic_read(atomic_t *v) {$/;"	f
atomic_t	./cl_utils.h	/^typedef volatile int atomic_t;$/;"	t
atomic_test_result	./cl_device_id.h	/^  uint32_t atomic_test_result;$/;"	m	struct:_cl_device_id
atomic_test_result	./intel/intel_driver.h	/^  int atomic_test_result;$/;"	m	struct:intel_driver
attachment	./x11/dricommon.h	/^    unsigned int attachment;$/;"	m	struct:dri_buffer::__anon112
attachment	./x11/va_dri2.h	/^    unsigned int attachment;$/;"	m	struct:__anon111
aux_base_addr_hi	./intel/intel_structs.h	/^		uint32_t aux_base_addr_hi:32;$/;"	m	struct:gen8_surface_state::__anon61
aux_base_addr_lo	./intel/intel_structs.h	/^		uint32_t aux_base_addr_lo:20;$/;"	m	struct:gen8_surface_state::__anon60
aux_buf	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } aux_buf;$/;"	m	struct:intel_gpgpu	typeref:struct:intel_gpgpu::__anon18
aux_offset	./intel/intel_gpgpu.h	/^  } aux_offset;$/;"	m	struct:intel_gpgpu	typeref:struct:intel_gpgpu::__anon19
aux_sruface_qpitch	./intel/intel_structs.h	/^        uint32_t aux_sruface_qpitch:15;$/;"	m	struct:gen8_surface_state::__anon50::__anon51::__anon56
aux_surface_mode	./intel/intel_structs.h	/^          uint32_t aux_surface_mode:3;$/;"	m	struct:gen8_surface_state::__anon50::__anon51::__anon52::__anon53
aux_surface_pitch	./intel/intel_structs.h	/^          uint32_t aux_surface_pitch:9;$/;"	m	struct:gen8_surface_state::__anon50::__anon51::__anon52::__anon53
available	./cl_device_id.h	/^  cl_bool  available;$/;"	m	struct:_cl_device_id
b	./intel/intel_structs.h	/^    float r,g,b,a;$/;"	m	struct:gen7_sampler_border_color
b_output_kernel_perf	./performance.c	/^int b_output_kernel_perf = 0;$/;"	v
back_index	./x11/dricommon.c	/^  int back_index;$/;"	m	struct:dri2_drawable	file:
barrierID	./cl_driver.h	/^  int32_t barrierID;       \/* barrierID for _this_ kernel *\/$/;"	m	struct:cl_gpgpu_kernel
barrier_enable	./intel/intel_structs.h	/^    uint32_t barrier_enable:1;$/;"	m	struct:gen6_interface_descriptor::__anon26
barrier_enable	./intel/intel_structs.h	/^    uint32_t barrier_enable:1;$/;"	m	struct:gen8_interface_descriptor::__anon33
barrier_events	./cl_command_queue.h	/^  cl_event* barrier_events;            \/* Point to array of non-complete user events that block this command queue *\/$/;"	m	struct:_cl_command_queue
barrier_events_num	./cl_command_queue.h	/^  cl_int barrier_events_num;           \/* Number of Non-complete user events *\/$/;"	m	struct:_cl_command_queue
barrier_events_size	./cl_command_queue.h	/^  cl_int barrier_events_size;          \/* The size of array that wait_events point to *\/$/;"	m	struct:_cl_command_queue
barrier_return_byte	./intel/intel_structs.h	/^    uint32_t barrier_return_byte:8;$/;"	m	struct:gen6_interface_descriptor::__anon26
barrier_return_grf_offset	./intel/intel_structs.h	/^    uint32_t barrier_return_grf_offset:8;$/;"	m	struct:gen6_interface_descriptor::__anon26
barrier_return_grf_offset	./intel/intel_structs.h	/^    uint32_t barrier_return_grf_offset:8;$/;"	m	struct:gen8_interface_descriptor::__anon33
base	./cl_accelerator_intel.h	/^  _cl_base_object base;$/;"	m	struct:_cl_accelerator_intel
base	./cl_command_queue.h	/^  _cl_base_object base;$/;"	m	struct:_cl_command_queue
base	./cl_context.h	/^  _cl_base_object base;$/;"	m	struct:_cl_context
base	./cl_device_id.h	/^  _cl_base_object base;$/;"	m	struct:_cl_device_id
base	./cl_event.h	/^  _cl_base_object base;$/;"	m	struct:_cl_event
base	./cl_extensions.h	/^  struct cl_extension_base base;$/;"	m	union:__anon6	typeref:struct:__anon6::cl_extension_base
base	./cl_kernel.h	/^  _cl_base_object base;$/;"	m	struct:_cl_kernel
base	./cl_mem.h	/^  _cl_base_object base;$/;"	m	struct:_cl_mem
base	./cl_mem.h	/^  _cl_mem base;$/;"	m	struct:_cl_mem_buffer
base	./cl_mem.h	/^  _cl_mem base;$/;"	m	struct:_cl_mem_image
base	./cl_mem.h	/^  _cl_mem base;$/;"	m	struct:_cl_mem_pipe
base	./cl_mem.h	/^  _cl_mem base;$/;"	m	struct:_cl_mem_svm
base	./cl_mem.h	/^  struct _cl_mem_image base;$/;"	m	struct:_cl_mem_buffer1d_image	typeref:struct:_cl_mem_buffer1d_image::_cl_mem_image
base	./cl_mem.h	/^  struct _cl_mem_image base;$/;"	m	struct:_cl_mem_gl_image	typeref:struct:_cl_mem_gl_image::_cl_mem_image
base	./cl_platform_id.h	/^  _cl_base_object base;$/;"	m	struct:_cl_platform_id
base	./cl_program.h	/^  _cl_base_object base;$/;"	m	struct:_cl_program
base	./cl_sampler.h	/^  _cl_base_object base;$/;"	m	struct:_cl_sampler
base	./x11/dricommon.c	/^  struct dri_drawable base;$/;"	m	struct:dri2_drawable	typeref:struct:dri2_drawable::dri_drawable	file:
base_addr	./intel/intel_structs.h	/^    uint32_t base_addr;$/;"	m	struct:gen7_media_surface_state::__anon66
base_addr	./intel/intel_structs.h	/^    uint32_t base_addr;$/;"	m	struct:gen7_surface_state::__anon35
base_level	./intel/intel_structs.h	/^    uint32_t base_level:5; $/;"	m	struct:gen6_sampler_state::__anon99
base_level	./intel/intel_structs.h	/^    uint32_t base_level:5;$/;"	m	struct:gen7_sampler_state::__anon103
base_level	./intel/intel_structs.h	/^    uint32_t base_level:5;$/;"	m	struct:gen8_sampler_state::__anon107
base_mip_level	./intel/intel_structs.h	/^    uint32_t base_mip_level:5;$/;"	m	struct:gen8_surface_state::__anon43
batch	./intel/intel_gpgpu.h	/^  struct intel_batchbuffer *batch;$/;"	m	struct:intel_gpgpu	typeref:struct:intel_gpgpu::intel_batchbuffer
bin	./cl_program.h	/^  char *bin;              \/* The program copied verbatim *\/$/;"	m	struct:_cl_program
bin_sz	./cl_program.h	/^  size_t bin_sz;          \/* Its size in memory *\/$/;"	m	struct:_cl_program
binary	./cl_program.h	/^  char *binary;           \/* Program binary. *\/$/;"	m	struct:_cl_program
binary_sz	./cl_program.h	/^  size_t binary_sz;       \/* The binary size. *\/$/;"	m	struct:_cl_program
binary_type	./cl_program.h	/^  uint32_t binary_type;   \/* binary type: COMPILED_OBJECT(LLVM IR), LIBRARY(LLVM IR with option "-create-library"), or EXECUTABLE(GEN binary). *\/$/;"	m	struct:_cl_program
binary_type_header	./cl_program.c	/^static const unsigned char binary_type_header[BHI_MAX][BINARY_HEADER_LENGTH]=  \\$/;"	v	file:
binded_buf	./intel/intel_gpgpu.h	/^  drm_intel_bo *binded_buf[max_buf_n];  \/* all buffers binded for the call *\/$/;"	m	struct:intel_gpgpu
binded_n	./intel/intel_gpgpu.h	/^  uint32_t binded_n;                    \/* number of buffers binded *\/$/;"	m	struct:intel_gpgpu
binded_offset	./intel/intel_gpgpu.h	/^  uint32_t binded_offset[max_buf_n];    \/* their offsets in the curbe buffer *\/$/;"	m	struct:intel_gpgpu
binding_table	./intel/intel_gpgpu.c	/^  uint32_t binding_table[256];$/;"	m	struct:surface_heap	file:
binding_table_entry_count	./intel/intel_structs.h	/^    uint32_t binding_table_entry_count:5;  \/* prefetch entries only *\/$/;"	m	struct:gen6_interface_descriptor::__anon24
binding_table_entry_count	./intel/intel_structs.h	/^    uint32_t binding_table_entry_count:5;  \/* prefetch entries only *\/$/;"	m	struct:gen8_interface_descriptor::__anon31
binding_table_pointer	./intel/intel_structs.h	/^    uint32_t binding_table_pointer:27;     \/* 11 bit only on IVB+ *\/$/;"	m	struct:gen6_interface_descriptor::__anon24
binding_table_pointer	./intel/intel_structs.h	/^    uint32_t binding_table_pointer:27;     \/* 11 bit only on IVB+ *\/$/;"	m	struct:gen8_interface_descriptor::__anon31
blue_clear_color	./intel/intel_structs.h	/^    uint32_t blue_clear_color:1;$/;"	m	struct:gen8_surface_state::__anon57
bo	./cl_driver.h	/^  cl_buffer bo;            \/* kernel code in the proper addr space *\/$/;"	m	struct:cl_gpgpu_kernel
bo	./cl_kernel.h	/^  cl_buffer bo;               \/* The code itself *\/$/;"	m	struct:_cl_kernel
bo	./cl_mem.h	/^  cl_buffer bo;             \/* Data in GPU memory *\/$/;"	m	struct:_cl_mem
bo	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } aux_buf;$/;"	m	struct:intel_gpgpu::__anon18
bo	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } constant_b;$/;"	m	struct:intel_gpgpu::__anon14
bo	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } perf_b;$/;"	m	struct:intel_gpgpu::__anon12
bo	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } printf_b;      \/* the printf buf and index buf*\/$/;"	m	struct:intel_gpgpu::__anon16
bo	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } profiling_b;   \/* the buf for profiling*\/$/;"	m	struct:intel_gpgpu::__anon17
bo	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } scratch_b;$/;"	m	struct:intel_gpgpu::__anon13
bo	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } stack_b;$/;"	m	struct:intel_gpgpu::__anon11
bo	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } time_stamp_b;  \/* time stamp buffer *\/$/;"	m	struct:intel_gpgpu::__anon15
bpp	./cl_mem.h	/^  size_t bpp;                     \/* number of bytes per pixel *\/$/;"	m	struct:_cl_mem_image
bti	./cl_kernel.h	/^  unsigned char bti;$/;"	m	struct:cl_argument
buffer	./cl_mem.h	/^    cl_mem                  buffer;$/;"	m	struct:_cl_image_desc
buffer	./intel/intel_batchbuffer.h	/^  drm_intel_bo *buffer;$/;"	m	struct:intel_batchbuffer
buffer	./intel/intel_gpgpu.c	/^  drm_intel_bo *buffer;$/;"	m	struct:intel_event	file:
buffer_1d	./cl_mem.h	/^  cl_mem buffer_1d;               \/* if the image is created from buffer, it point to the buffer.*\/$/;"	m	struct:_cl_mem_image
buffers	./x11/dricommon.c	/^  union dri_buffer buffers[5];$/;"	m	struct:dri2_drawable	typeref:union:dri2_drawable::dri_buffer	file:
bufmgr	./intel/intel_driver.h	/^  dri_bufmgr *bufmgr;$/;"	m	struct:intel_driver
build_log	./cl_program.h	/^  char *build_log;         \/* The build log for this program. *\/$/;"	m	struct:_cl_program
build_log_max_sz	./cl_program.h	/^  size_t build_log_max_sz; \/*build log maximum size in byte.*\/$/;"	m	struct:_cl_program
build_log_sz	./cl_program.h	/^  size_t build_log_sz;    \/* The actual build log size.*\/$/;"	m	struct:_cl_program
build_option	./performance.c	/^  char build_option[MAX_KERNEL_BUILD_OPT];$/;"	m	struct:kernel_storage_node	file:
build_opts	./cl_program.h	/^  char *build_opts;       \/* The build options for this program *\/$/;"	m	struct:_cl_program
build_status	./cl_program.h	/^  int32_t build_status;   \/* build status. *\/$/;"	m	struct:_cl_program
built_in_kernels	./cl_device_id.h	/^  const char *built_in_kernels;$/;"	m	struct:_cl_device_id
built_in_kernels_sz	./cl_device_id.h	/^  size_t built_in_kernels_sz;$/;"	m	struct:_cl_device_id
bypass_gateway_ctl	./intel/intel_structs.h	/^    uint32_t bypass_gateway_ctl:1;  \/* 0 - legacy, 1 - no open\/close *\/$/;"	m	struct:gen6_vfe_state_inline::__anon75
cache_control	./intel/intel_structs.h	/^    uint32_t cache_control:4;$/;"	m	struct:gen7_surface_state::__anon40
callbacks	./cl_event.h	/^  list_head callbacks;        \/* The events The event callback functions *\/$/;"	m	struct:_cl_event
cbInitializer	./cl_driver.cpp	/^  static OCLDriverCallBackInitializer cbInitializer;$/;"	m	namespace:__anon3	file:
cc_gtt	./cl_driver.h	/^  cc_gtt      = 0x0,$/;"	e	enum:cl_cache_control
cc_l3	./cl_driver.h	/^  cc_l3       = 0x1,$/;"	e	enum:cl_cache_control
cc_llc	./cl_driver.h	/^  cc_llc      = 0x2,$/;"	e	enum:cl_cache_control
cc_llc_l3	./cl_driver.h	/^  cc_llc_l3   = 0x3$/;"	e	enum:cl_cache_control
cgl_sharegroup	./cl_context.h	/^    cl_context_properties cgl_sharegroup;$/;"	m	union:_cl_context_prop::__anon2
check_basic_extension	./cl_extensions.c	/^void check_basic_extension(cl_extensions_t *extensions)$/;"	f
check_cl_version_option	./cl_program.c	/^static int check_cl_version_option(cl_program p, const char* options) {$/;"	f	file:
check_copy_overlap	./cl_api_mem.c	/^check_copy_overlap(const size_t src_offset[3],$/;"	f	file:
check_gl_extension	./cl_extensions.c	/^check_gl_extension(cl_extensions_t *extensions) {$/;"	f
check_image_origin	./cl_api_mem.c	/^check_image_origin(struct _cl_mem_image *image, const size_t *porigin, size_t *origin)$/;"	f	file:
check_image_region	./cl_api_mem.c	/^check_image_region(struct _cl_mem_image *image, const size_t *pregion, size_t *region)$/;"	f	file:
check_intel_extension	./cl_extensions.c	/^check_intel_extension(cl_extensions_t *extensions)$/;"	f
check_opt1_extension	./cl_extensions.c	/^void check_opt1_extension(cl_extensions_t *extensions)$/;"	f
chroma_key_enable	./intel/intel_structs.h	/^    uint32_t chroma_key_enable:1; $/;"	m	struct:gen6_sampler_state::__anon102
chroma_key_enable	./intel/intel_structs.h	/^    uint32_t chroma_key_enable:1;$/;"	m	struct:gen7_sampler_state::__anon106
chroma_key_index	./intel/intel_structs.h	/^    uint32_t chroma_key_index:2; $/;"	m	struct:gen6_sampler_state::__anon102
chroma_key_index	./intel/intel_structs.h	/^    uint32_t chroma_key_index:2;$/;"	m	struct:gen7_sampler_state::__anon106
chroma_key_mode	./intel/intel_structs.h	/^    uint32_t chroma_key_mode:1; $/;"	m	struct:gen6_sampler_state::__anon102
chroma_key_mode	./intel/intel_structs.h	/^    uint32_t chroma_key_mode:1;$/;"	m	struct:gen7_sampler_state::__anon106
chromakey_enable	./intel/intel_structs.h	/^    uint32_t chromakey_enable:1;$/;"	m	struct:gen8_sampler_state::__anon108
chromakey_index	./intel/intel_structs.h	/^    uint32_t chromakey_index:2;$/;"	m	struct:gen8_sampler_state::__anon108
chromakey_mode	./intel/intel_structs.h	/^    uint32_t chromakey_mode:1;$/;"	m	struct:gen8_sampler_state::__anon108
clBuildProgram	./cl_api.c	/^clBuildProgram(cl_program            program,$/;"	f
clCompileProgram	./cl_api.c	/^clCompileProgram(cl_program            program ,$/;"	f
clCreateAcceleratorINTEL	./cl_api.c	/^clCreateAcceleratorINTEL(cl_context context,$/;"	f
clCreateBuffer	./cl_api.c	/^clCreateBuffer(cl_context    context,$/;"	f
clCreateBufferFromFdINTEL	./cl_api.c	/^clCreateBufferFromFdINTEL(cl_context context,$/;"	f
clCreateBufferFromLibvaIntel	./cl_api.c	/^clCreateBufferFromLibvaIntel(cl_context  context,$/;"	f
clCreateCommandQueue	./cl_api_command_queue.c	/^clCreateCommandQueue(cl_context context,$/;"	f
clCreateCommandQueueWithProperties	./cl_api_command_queue.c	/^clCreateCommandQueueWithProperties(cl_context context,$/;"	f
clCreateContext	./cl_api_context.c	/^clCreateContext(const cl_context_properties *properties,$/;"	f
clCreateContextFromType	./cl_api_context.c	/^clCreateContextFromType(const cl_context_properties *properties,$/;"	f
clCreateFromGLBuffer	./cl_gl_api.c	/^clCreateFromGLBuffer(cl_context    context,$/;"	f
clCreateFromGLTexture	./cl_gl_api.c	/^clCreateFromGLTexture(cl_context      context,$/;"	f
clCreateFromGLTexture2D	./cl_gl_api.c	/^clCreateFromGLTexture2D(cl_context    context,$/;"	f
clCreateFromGLTexture3D	./cl_gl_api.c	/^clCreateFromGLTexture3D(cl_context    context,$/;"	f
clCreateImage	./cl_api.c	/^clCreateImage(cl_context context,$/;"	f
clCreateImage2D	./cl_api.c	/^clCreateImage2D(cl_context              context,$/;"	f
clCreateImage3D	./cl_api.c	/^clCreateImage3D(cl_context              context,$/;"	f
clCreateImageFromFdINTEL	./cl_api.c	/^clCreateImageFromFdINTEL(cl_context context,$/;"	f
clCreateImageFromLibvaIntel	./cl_api.c	/^clCreateImageFromLibvaIntel(cl_context context,$/;"	f
clCreateKernel	./cl_api.c	/^clCreateKernel(cl_program   program,$/;"	f
clCreateKernelsInProgram	./cl_api.c	/^clCreateKernelsInProgram(cl_program      program,$/;"	f
clCreatePipe	./cl_api.c	/^cl_mem clCreatePipe (cl_context context,$/;"	f
clCreateProgramWithBinary	./cl_api.c	/^clCreateProgramWithBinary(cl_context             context,$/;"	f
clCreateProgramWithBuiltInKernels	./cl_api.c	/^clCreateProgramWithBuiltInKernels(cl_context           context,$/;"	f
clCreateProgramWithLLVMIntel	./cl_api.c	/^clCreateProgramWithLLVMIntel(cl_context              context,$/;"	f
clCreateProgramWithSource	./cl_api.c	/^clCreateProgramWithSource(cl_context     context,$/;"	f
clCreateSampler	./cl_api_sampler.c	/^clCreateSampler(cl_context context,$/;"	f
clCreateSamplerWithProperties	./cl_api.c	/^clCreateSamplerWithProperties(cl_context                  context,$/;"	f
clCreateSubBuffer	./cl_api.c	/^clCreateSubBuffer(cl_mem                buffer,$/;"	f
clCreateSubDevices	./cl_api_device_id.c	/^clCreateSubDevices(cl_device_id in_device,$/;"	f
clCreateUserEvent	./cl_api_event.c	/^clCreateUserEvent(cl_context context,$/;"	f
clEnqueueAcquireGLObjects	./cl_gl_api.c	/^cl_int clEnqueueAcquireGLObjects (cl_command_queue command_queue,$/;"	f
clEnqueueBarrier	./cl_api_event.c	/^clEnqueueBarrier(cl_command_queue command_queue)$/;"	f
clEnqueueBarrierWithWaitList	./cl_api_event.c	/^clEnqueueBarrierWithWaitList(cl_command_queue command_queue,$/;"	f
clEnqueueCopyBuffer	./cl_api_mem.c	/^clEnqueueCopyBuffer(cl_command_queue command_queue,$/;"	f
clEnqueueCopyBufferRect	./cl_api_mem.c	/^clEnqueueCopyBufferRect(cl_command_queue command_queue,$/;"	f
clEnqueueCopyBufferToImage	./cl_api_mem.c	/^clEnqueueCopyBufferToImage(cl_command_queue command_queue,$/;"	f
clEnqueueCopyImage	./cl_api_mem.c	/^clEnqueueCopyImage(cl_command_queue command_queue,$/;"	f
clEnqueueCopyImageToBuffer	./cl_api_mem.c	/^clEnqueueCopyImageToBuffer(cl_command_queue command_queue,$/;"	f
clEnqueueFillBuffer	./cl_api_mem.c	/^clEnqueueFillBuffer(cl_command_queue command_queue,$/;"	f
clEnqueueFillImage	./cl_api_mem.c	/^clEnqueueFillImage(cl_command_queue command_queue,$/;"	f
clEnqueueMapBuffer	./cl_api_mem.c	/^clEnqueueMapBuffer(cl_command_queue command_queue,$/;"	f
clEnqueueMapImage	./cl_api_mem.c	/^clEnqueueMapImage(cl_command_queue command_queue,$/;"	f
clEnqueueMarker	./cl_api_event.c	/^clEnqueueMarker(cl_command_queue command_queue,$/;"	f
clEnqueueMarkerWithWaitList	./cl_api_event.c	/^clEnqueueMarkerWithWaitList(cl_command_queue command_queue,$/;"	f
clEnqueueMigrateMemObjects	./cl_api_mem.c	/^clEnqueueMigrateMemObjects(cl_command_queue command_queue,$/;"	f
clEnqueueNDRangeKernel	./cl_api_kernel.c	/^clEnqueueNDRangeKernel(cl_command_queue command_queue,$/;"	f
clEnqueueNativeKernel	./cl_api_kernel.c	/^clEnqueueNativeKernel(cl_command_queue command_queue,$/;"	f
clEnqueueReadBuffer	./cl_api_mem.c	/^clEnqueueReadBuffer(cl_command_queue command_queue,$/;"	f
clEnqueueReadBufferRect	./cl_api_mem.c	/^clEnqueueReadBufferRect(cl_command_queue command_queue,$/;"	f
clEnqueueReadImage	./cl_api_mem.c	/^clEnqueueReadImage(cl_command_queue command_queue,$/;"	f
clEnqueueReleaseGLObjects	./cl_gl_api.c	/^cl_int clEnqueueReleaseGLObjects (cl_command_queue command_queue,$/;"	f
clEnqueueSVMFree	./cl_api.c	/^clEnqueueSVMFree (cl_command_queue command_queue,$/;"	f
clEnqueueSVMMap	./cl_api.c	/^clEnqueueSVMMap (cl_command_queue command_queue,$/;"	f
clEnqueueSVMMemFill	./cl_api.c	/^cl_int clEnqueueSVMMemFill (cl_command_queue command_queue,$/;"	f
clEnqueueSVMMemcpy	./cl_api.c	/^cl_int clEnqueueSVMMemcpy (cl_command_queue command_queue,$/;"	f
clEnqueueSVMUnmap	./cl_api.c	/^clEnqueueSVMUnmap (cl_command_queue command_queue,$/;"	f
clEnqueueTask	./cl_api_kernel.c	/^clEnqueueTask(cl_command_queue command_queue,$/;"	f
clEnqueueUnmapMemObject	./cl_api_mem.c	/^clEnqueueUnmapMemObject(cl_command_queue command_queue,$/;"	f
clEnqueueWaitForEvents	./cl_api_event.c	/^clEnqueueWaitForEvents(cl_command_queue command_queue,$/;"	f
clEnqueueWriteBuffer	./cl_api_mem.c	/^clEnqueueWriteBuffer(cl_command_queue command_queue,$/;"	f
clEnqueueWriteBufferRect	./cl_api_mem.c	/^clEnqueueWriteBufferRect(cl_command_queue command_queue,$/;"	f
clEnqueueWriteImage	./cl_api_mem.c	/^clEnqueueWriteImage(cl_command_queue command_queue,$/;"	f
clFinish	./cl_api_command_queue.c	/^clFinish(cl_command_queue command_queue)$/;"	f
clFlush	./cl_api_command_queue.c	/^clFlush(cl_command_queue command_queue)$/;"	f
clGetAcceleratorInfoINTEL	./cl_api.c	/^clGetAcceleratorInfoINTEL(cl_accelerator_intel           accel,$/;"	f
clGetCommandQueueInfo	./cl_api_command_queue.c	/^clGetCommandQueueInfo(cl_command_queue command_queue,$/;"	f
clGetContextInfo	./cl_api_context.c	/^clGetContextInfo(cl_context context,$/;"	f
clGetDeviceIDs	./cl_api_device_id.c	/^clGetDeviceIDs(cl_platform_id platform,$/;"	f
clGetDeviceInfo	./cl_api_device_id.c	/^clGetDeviceInfo(cl_device_id device,$/;"	f
clGetEventInfo	./cl_api_event.c	/^clGetEventInfo(cl_event event,$/;"	f
clGetEventProfilingInfo	./cl_api_event.c	/^clGetEventProfilingInfo(cl_event event,$/;"	f
clGetExtensionFunctionAddress	./cl_api.c	/^clGetExtensionFunctionAddress(const char *func_name)$/;"	f
clGetExtensionFunctionAddressForPlatform	./cl_api.c	/^clGetExtensionFunctionAddressForPlatform(cl_platform_id platform,$/;"	f
clGetGenVersionIntel	./cl_api.c	/^clGetGenVersionIntel(cl_device_id device, cl_int *ver)$/;"	f
clGetImageInfo	./cl_api_mem.c	/^clGetImageInfo(cl_mem memobj,$/;"	f
clGetKernelArgInfo	./cl_api.c	/^cl_int clGetKernelArgInfo(cl_kernel kernel, cl_uint arg_index, cl_kernel_arg_info param_name,$/;"	f
clGetKernelInfo	./cl_api_kernel.c	/^clGetKernelInfo(cl_kernel kernel,$/;"	f
clGetKernelSubGroupInfoKHR	./cl_api.c	/^clGetKernelSubGroupInfoKHR(cl_kernel                   kernel,$/;"	f
clGetKernelWorkGroupInfo	./cl_api.c	/^clGetKernelWorkGroupInfo(cl_kernel                   kernel,$/;"	f
clGetMemObjectFdIntel	./cl_api.c	/^clGetMemObjectFdIntel(cl_context context,$/;"	f
clGetMemObjectInfo	./cl_api_mem.c	/^clGetMemObjectInfo(cl_mem memobj,$/;"	f
clGetPipeInfo	./cl_api.c	/^cl_int clGetPipeInfo (cl_mem pipe,$/;"	f
clGetPlatformIDs	./cl_api.c	/^clGetPlatformIDs(cl_uint          num_entries,$/;"	f
clGetPlatformInfo	./cl_api_platform_id.c	/^clGetPlatformInfo(cl_platform_id platform,$/;"	f
clGetProgramBuildInfo	./cl_api_program.c	/^clGetProgramBuildInfo(cl_program program,$/;"	f
clGetProgramInfo	./cl_api_program.c	/^clGetProgramInfo(cl_program program,$/;"	f
clGetSamplerInfo	./cl_api_sampler.c	/^clGetSamplerInfo(cl_sampler sampler,$/;"	f
clGetSupportedImageFormats	./cl_api.c	/^clGetSupportedImageFormats(cl_context         ctx,$/;"	f
clIcdGetPlatformIDsKHR	./cl_khr_icd.c	/^clIcdGetPlatformIDsKHR(cl_uint          num_entries,$/;"	f
clLinkProgram	./cl_api.c	/^clLinkProgram(cl_context            context,$/;"	f
clMapBufferGTTIntel	./cl_api.c	/^clMapBufferGTTIntel(cl_mem mem, cl_int *errcode_ret)$/;"	f
clMapBufferIntel	./cl_api.c	/^clMapBufferIntel(cl_mem mem, cl_int *errcode_ret)$/;"	f
clPinBufferIntel	./cl_api.c	/^clPinBufferIntel(cl_mem mem)$/;"	f
clReleaseAcceleratorINTEL	./cl_api.c	/^clReleaseAcceleratorINTEL(cl_accelerator_intel accel)$/;"	f
clReleaseCommandQueue	./cl_api_command_queue.c	/^clReleaseCommandQueue(cl_command_queue command_queue)$/;"	f
clReleaseContext	./cl_api_context.c	/^clReleaseContext(cl_context context)$/;"	f
clReleaseDevice	./cl_api_device_id.c	/^clReleaseDevice(cl_device_id device)$/;"	f
clReleaseEvent	./cl_api.c	/^clReleaseEvent(cl_event  event)$/;"	f
clReleaseKernel	./cl_api.c	/^clReleaseKernel(cl_kernel kernel)$/;"	f
clReleaseMemObject	./cl_api_mem.c	/^clReleaseMemObject(cl_mem memobj)$/;"	f
clReleaseProgram	./cl_api.c	/^clReleaseProgram(cl_program program)$/;"	f
clReleaseSampler	./cl_api_sampler.c	/^clReleaseSampler(cl_sampler sampler)$/;"	f
clReportUnfreedIntel	./cl_api.c	/^clReportUnfreedIntel(void)$/;"	f
clRetainAcceleratorINTEL	./cl_api.c	/^clRetainAcceleratorINTEL(cl_accelerator_intel accel)$/;"	f
clRetainCommandQueue	./cl_api_command_queue.c	/^clRetainCommandQueue(cl_command_queue command_queue)$/;"	f
clRetainContext	./cl_api_context.c	/^clRetainContext(cl_context context)$/;"	f
clRetainDevice	./cl_api_device_id.c	/^clRetainDevice(cl_device_id device)$/;"	f
clRetainEvent	./cl_api.c	/^clRetainEvent(cl_event  event)$/;"	f
clRetainKernel	./cl_api.c	/^clRetainKernel(cl_kernel kernel)$/;"	f
clRetainMemObject	./cl_api_mem.c	/^clRetainMemObject(cl_mem memobj)$/;"	f
clRetainProgram	./cl_api.c	/^clRetainProgram(cl_program program)$/;"	f
clRetainSampler	./cl_api_sampler.c	/^clRetainSampler(cl_sampler sampler)$/;"	f
clSVMAlloc	./cl_api.c	/^clSVMAlloc (cl_context context,$/;"	f
clSVMFree	./cl_api.c	/^clSVMFree (cl_context context, void* svm_pointer)$/;"	f
clSetEventCallback	./cl_api_event.c	/^clSetEventCallback(cl_event event,$/;"	f
clSetKernelArg	./cl_api.c	/^clSetKernelArg(cl_kernel     kernel,$/;"	f
clSetKernelArgSVMPointer	./cl_api.c	/^clSetKernelArgSVMPointer(cl_kernel kernel,$/;"	f
clSetKernelExecInfo	./cl_api.c	/^clSetKernelExecInfo(cl_kernel kernel,$/;"	f
clSetMemObjectDestructorCallback	./cl_api_mem.c	/^clSetMemObjectDestructorCallback(cl_mem memobj,$/;"	f
clSetUserEventStatus	./cl_api_event.c	/^clSetUserEventStatus(cl_event event,$/;"	f
clUnloadCompiler	./cl_api.c	/^clUnloadCompiler(void)$/;"	f
clUnloadPlatformCompiler	./cl_api.c	/^clUnloadPlatformCompiler(cl_platform_id platform)$/;"	f
clUnmapBufferGTTIntel	./cl_api.c	/^clUnmapBufferGTTIntel(cl_mem mem)$/;"	f
clUnmapBufferIntel	./cl_api.c	/^clUnmapBufferIntel(cl_mem mem)$/;"	f
clUnpinBufferIntel	./cl_api.c	/^clUnpinBufferIntel(cl_mem mem)$/;"	f
clWaitForEvents	./cl_api_event.c	/^clWaitForEvents(cl_uint num_events,$/;"	f
cl_accelerator_intel_add_ref	./cl_accelerator_intel.c	/^cl_accelerator_intel_add_ref(cl_accelerator_intel accel)$/;"	f
cl_accelerator_intel_delete	./cl_accelerator_intel.c	/^cl_accelerator_intel_delete(cl_accelerator_intel accel)$/;"	f
cl_accelerator_intel_new	./cl_accelerator_intel.c	/^cl_accelerator_intel_new(cl_context ctx,$/;"	f
cl_aligned_malloc	./cl_alloc.c	/^cl_aligned_malloc(size_t sz, size_t align)$/;"	f
cl_alloc_n	./cl_alloc.c	/^static volatile int32_t cl_alloc_n = 0;$/;"	v	file:
cl_alloc_printf	./cl_command_queue_gen7.c	/^cl_alloc_printf(cl_gpgpu gpgpu, cl_kernel ker, void* printf_info, int printf_num, size_t global_sz) {$/;"	f	file:
cl_argument	./cl_kernel.h	/^typedef struct cl_argument {$/;"	s
cl_argument	./cl_kernel.h	/^} cl_argument;$/;"	t	typeref:struct:cl_argument
cl_base_object	./cl_base_object.h	/^typedef struct _cl_base_object *cl_base_object;$/;"	t	typeref:struct:_cl_base_object
cl_bind_profiling	./cl_command_queue_gen7.c	/^cl_bind_profiling(cl_gpgpu gpgpu, uint32_t simd_sz, cl_kernel ker, size_t global_sz, size_t local_sz, uint32_t bti) {$/;"	f	file:
cl_bind_stack	./cl_command_queue_gen7.c	/^cl_bind_stack(cl_gpgpu gpgpu, cl_kernel ker)$/;"	f	file:
cl_buffer	./cl_driver_type.h	/^typedef struct _cl_buffer *cl_buffer;$/;"	t	typeref:struct:_cl_buffer
cl_buffer_alloc	./cl_driver_defs.c	/^LOCAL cl_buffer_alloc_cb *cl_buffer_alloc = NULL;$/;"	v
cl_buffer_alloc_cb	./cl_driver.h	/^typedef cl_buffer (cl_buffer_alloc_cb)(cl_buffer_mgr, const char*, size_t, size_t);$/;"	t
cl_buffer_alloc_from_texture	./cl_driver_defs.c	/^LOCAL cl_buffer_alloc_from_texture_cb *cl_buffer_alloc_from_texture = NULL;$/;"	v
cl_buffer_alloc_from_texture_cb	./cl_driver.h	/^typedef cl_buffer (cl_buffer_alloc_from_texture_cb)(cl_context, unsigned int, int, unsigned int,$/;"	t
cl_buffer_alloc_userptr	./cl_driver_defs.c	/^LOCAL cl_buffer_alloc_userptr_cb *cl_buffer_alloc_userptr = NULL;$/;"	v
cl_buffer_alloc_userptr_cb	./cl_driver.h	/^typedef cl_buffer (cl_buffer_alloc_userptr_cb)(cl_buffer_mgr, const char*, void *, size_t, unsigned long);$/;"	t
cl_buffer_disable_reuse	./cl_driver_defs.c	/^LOCAL cl_buffer_disable_reuse_cb *cl_buffer_disable_reuse = NULL;$/;"	v
cl_buffer_disable_reuse_cb	./cl_driver.h	/^typedef int (cl_buffer_disable_reuse_cb)(cl_buffer);$/;"	t
cl_buffer_get_buffer_from_fd	./cl_driver_defs.c	/^LOCAL cl_buffer_get_buffer_from_fd_cb *cl_buffer_get_buffer_from_fd = NULL;$/;"	v
cl_buffer_get_buffer_from_fd_cb	./cl_driver.h	/^typedef cl_buffer (cl_buffer_get_buffer_from_fd_cb)(cl_context ctx, int fd, int size);$/;"	t
cl_buffer_get_buffer_from_libva	./cl_driver_defs.c	/^LOCAL cl_buffer_get_buffer_from_libva_cb *cl_buffer_get_buffer_from_libva = NULL;$/;"	v
cl_buffer_get_buffer_from_libva_cb	./cl_driver.h	/^typedef cl_buffer (cl_buffer_get_buffer_from_libva_cb)(cl_context ctx, unsigned int bo_name, size_t *sz);$/;"	t
cl_buffer_get_fd	./cl_driver_defs.c	/^LOCAL cl_buffer_get_fd_cb *cl_buffer_get_fd = NULL;$/;"	v
cl_buffer_get_fd_cb	./cl_driver.h	/^typedef int (cl_buffer_get_fd_cb)(cl_buffer, int *fd);$/;"	t
cl_buffer_get_image_from_fd	./cl_driver_defs.c	/^LOCAL cl_buffer_get_image_from_fd_cb *cl_buffer_get_image_from_fd = NULL;$/;"	v
cl_buffer_get_image_from_fd_cb	./cl_driver.h	/^typedef cl_buffer (cl_buffer_get_image_from_fd_cb)(cl_context ctx, int fd, int size, struct _cl_mem_image *image);$/;"	t
cl_buffer_get_image_from_libva	./cl_driver_defs.c	/^LOCAL cl_buffer_get_image_from_libva_cb *cl_buffer_get_image_from_libva = NULL;$/;"	v
cl_buffer_get_image_from_libva_cb	./cl_driver.h	/^typedef cl_buffer (cl_buffer_get_image_from_libva_cb)(cl_context ctx, unsigned int bo_name, struct _cl_mem_image *image);$/;"	t
cl_buffer_get_size	./cl_driver_defs.c	/^LOCAL cl_buffer_get_size_cb *cl_buffer_get_size = NULL;$/;"	v
cl_buffer_get_size_cb	./cl_driver.h	/^typedef size_t (cl_buffer_get_size_cb)(cl_buffer);$/;"	t
cl_buffer_get_subdata	./cl_driver_defs.c	/^LOCAL cl_buffer_get_subdata_cb *cl_buffer_get_subdata = NULL;$/;"	v
cl_buffer_get_subdata_cb	./cl_driver.h	/^typedef int (cl_buffer_get_subdata_cb)(cl_buffer, unsigned long, unsigned long, void*);$/;"	t
cl_buffer_get_tiling_align	./cl_driver_defs.c	/^LOCAL cl_buffer_get_tiling_align_cb *cl_buffer_get_tiling_align = NULL;$/;"	v
cl_buffer_get_tiling_align_cb	./cl_driver.h	/^typedef int (cl_buffer_get_tiling_align_cb)(cl_context ctx, uint32_t tiling_mode, uint32_t dim);$/;"	t
cl_buffer_get_virtual	./cl_driver_defs.c	/^LOCAL cl_buffer_get_virtual_cb *cl_buffer_get_virtual = NULL;$/;"	v
cl_buffer_get_virtual_cb	./cl_driver.h	/^typedef void* (cl_buffer_get_virtual_cb)(cl_buffer);$/;"	t
cl_buffer_map	./cl_driver_defs.c	/^LOCAL cl_buffer_map_cb *cl_buffer_map = NULL;$/;"	v
cl_buffer_map_cb	./cl_driver.h	/^typedef int (cl_buffer_map_cb)(cl_buffer, uint32_t write_enable);$/;"	t
cl_buffer_map_gtt	./cl_driver_defs.c	/^LOCAL cl_buffer_map_gtt_cb *cl_buffer_map_gtt = NULL;$/;"	v
cl_buffer_map_gtt_cb	./cl_driver.h	/^typedef int (cl_buffer_map_gtt_cb)(cl_buffer);$/;"	t
cl_buffer_map_gtt_unsync	./cl_driver_defs.c	/^LOCAL cl_buffer_map_gtt_unsync_cb *cl_buffer_map_gtt_unsync = NULL;$/;"	v
cl_buffer_map_gtt_unsync_cb	./cl_driver.h	/^typedef int (cl_buffer_map_gtt_unsync_cb)(cl_buffer);$/;"	t
cl_buffer_mgr	./cl_driver_type.h	/^typedef struct _cl_buffer_mgr *cl_buffer_mgr;$/;"	t	typeref:struct:_cl_buffer_mgr
cl_buffer_pin	./cl_driver_defs.c	/^LOCAL cl_buffer_pin_cb *cl_buffer_pin = NULL;$/;"	v
cl_buffer_pin_cb	./cl_driver.h	/^typedef int (cl_buffer_pin_cb)(cl_buffer, uint32_t alignment);$/;"	t
cl_buffer_reference	./cl_driver_defs.c	/^LOCAL cl_buffer_reference_cb *cl_buffer_reference = NULL;$/;"	v
cl_buffer_reference_cb	./cl_driver.h	/^typedef void (cl_buffer_reference_cb)(cl_buffer);$/;"	t
cl_buffer_release_from_texture	./cl_driver_defs.c	/^LOCAL cl_buffer_release_from_texture_cb *cl_buffer_release_from_texture = NULL;$/;"	v
cl_buffer_release_from_texture_cb	./cl_driver.h	/^typedef void (cl_buffer_release_from_texture_cb)(cl_context, struct _cl_mem_gl_image *);$/;"	t
cl_buffer_set_bo_use_full_range	./cl_driver_defs.c	/^LOCAL cl_buffer_set_bo_use_full_range_cb *cl_buffer_set_bo_use_full_range = NULL;$/;"	v
cl_buffer_set_bo_use_full_range_cb	./cl_driver.h	/^typedef int (cl_buffer_set_bo_use_full_range_cb)(cl_buffer, uint32_t);$/;"	t
cl_buffer_set_softpin_offset	./cl_driver_defs.c	/^LOCAL cl_buffer_set_softpin_offset_cb *cl_buffer_set_softpin_offset = NULL;$/;"	v
cl_buffer_set_softpin_offset_cb	./cl_driver.h	/^typedef int (cl_buffer_set_softpin_offset_cb)(cl_buffer, uint64_t);$/;"	t
cl_buffer_set_tiling	./cl_driver_defs.c	/^LOCAL cl_buffer_set_tiling_cb *cl_buffer_set_tiling = NULL;$/;"	v
cl_buffer_set_tiling_cb	./cl_driver.h	/^typedef int (cl_buffer_set_tiling_cb)(cl_buffer, int tiling, size_t stride);$/;"	t
cl_buffer_subdata	./cl_driver_defs.c	/^LOCAL cl_buffer_subdata_cb *cl_buffer_subdata = NULL;$/;"	v
cl_buffer_subdata_cb	./cl_driver.h	/^typedef int (cl_buffer_subdata_cb)(cl_buffer, unsigned long, unsigned long, const void*);$/;"	t
cl_buffer_unmap	./cl_driver_defs.c	/^LOCAL cl_buffer_unmap_cb *cl_buffer_unmap = NULL;$/;"	v
cl_buffer_unmap_cb	./cl_driver.h	/^typedef int (cl_buffer_unmap_cb)(cl_buffer);$/;"	t
cl_buffer_unmap_gtt	./cl_driver_defs.c	/^LOCAL cl_buffer_unmap_gtt_cb *cl_buffer_unmap_gtt = NULL;$/;"	v
cl_buffer_unmap_gtt_cb	./cl_driver.h	/^typedef int (cl_buffer_unmap_gtt_cb)(cl_buffer);$/;"	t
cl_buffer_unpin	./cl_driver_defs.c	/^LOCAL cl_buffer_unpin_cb *cl_buffer_unpin = NULL;$/;"	v
cl_buffer_unpin_cb	./cl_driver.h	/^typedef int (cl_buffer_unpin_cb)(cl_buffer);$/;"	t
cl_buffer_unreference	./cl_driver_defs.c	/^LOCAL cl_buffer_unreference_cb *cl_buffer_unreference = NULL;$/;"	v
cl_buffer_unreference_cb	./cl_driver.h	/^typedef int (cl_buffer_unreference_cb)(cl_buffer);$/;"	t
cl_buffer_wait_rendering	./cl_driver_defs.c	/^LOCAL cl_buffer_wait_rendering_cb *cl_buffer_wait_rendering = NULL;$/;"	v
cl_buffer_wait_rendering_cb	./cl_driver.h	/^typedef int (cl_buffer_wait_rendering_cb) (cl_buffer);$/;"	t
cl_cache_control	./cl_driver.h	/^typedef enum cl_cache_control {$/;"	g
cl_cache_control	./cl_driver.h	/^} cl_cache_control;$/;"	t	typeref:enum:cl_cache_control
cl_calloc	./cl_alloc.c	/^cl_calloc(size_t n, size_t elem_size)$/;"	f
cl_check_builtin_kernel_dimension	./cl_device_id.c	/^cl_check_builtin_kernel_dimension(cl_kernel kernel, cl_device_id device)$/;"	f	file:
cl_command_queue_ND_range	./cl_command_queue.c	/^cl_command_queue_ND_range(cl_command_queue queue,$/;"	f
cl_command_queue_ND_range_gen7	./cl_command_queue_gen7.c	/^cl_command_queue_ND_range_gen7(cl_command_queue queue,$/;"	f
cl_command_queue_add_ref	./cl_command_queue.c	/^cl_command_queue_add_ref(cl_command_queue queue)$/;"	f
cl_command_queue_allow_bypass_submit	./cl_command_queue.h	/^static inline cl_bool cl_command_queue_allow_bypass_submit(cl_command_queue queue){$/;"	f
cl_command_queue_bind_exec_info	./cl_command_queue.c	/^cl_command_queue_bind_exec_info(cl_command_queue queue, cl_kernel k, cl_gpgpu gpgpu, uint32_t *max_bti)$/;"	f
cl_command_queue_bind_image	./cl_command_queue.c	/^cl_command_queue_bind_image(cl_command_queue queue, cl_kernel k, cl_gpgpu gpgpu, uint32_t *max_bti)$/;"	f
cl_command_queue_bind_surface	./cl_command_queue.c	/^cl_command_queue_bind_surface(cl_command_queue queue, cl_kernel k, cl_gpgpu gpgpu, uint32_t *max_bti)$/;"	f
cl_command_queue_delete	./cl_command_queue.c	/^cl_command_queue_delete(cl_command_queue queue)$/;"	f
cl_command_queue_destroy_enqueue	./cl_command_queue_enqueue.c	/^cl_command_queue_destroy_enqueue(cl_command_queue queue)$/;"	f
cl_command_queue_enqueue_event	./cl_command_queue_enqueue.c	/^cl_command_queue_enqueue_event(cl_command_queue queue, cl_event event)$/;"	f
cl_command_queue_enqueue_worker	./cl_command_queue.h	/^typedef _cl_command_queue_enqueue_worker *cl_command_queue_enqueue_worker;$/;"	t
cl_command_queue_flush_gpgpu	./cl_command_queue.c	/^cl_command_queue_flush_gpgpu(cl_gpgpu gpgpu)$/;"	f
cl_command_queue_init_enqueue	./cl_command_queue_enqueue.c	/^cl_command_queue_init_enqueue(cl_command_queue queue)$/;"	f
cl_command_queue_insert_barrier_event	./cl_command_queue.c	/^cl_command_queue_insert_barrier_event(cl_command_queue queue, cl_event event)$/;"	f
cl_command_queue_new	./cl_command_queue.c	/^cl_command_queue_new(cl_context ctx)$/;"	f	file:
cl_command_queue_notify	./cl_command_queue_enqueue.c	/^cl_command_queue_notify(cl_command_queue queue)$/;"	f
cl_command_queue_record_in_queue_events	./cl_command_queue_enqueue.c	/^cl_command_queue_record_in_queue_events(cl_command_queue queue, cl_uint *list_num)$/;"	f
cl_command_queue_remove_barrier_event	./cl_command_queue.c	/^cl_command_queue_remove_barrier_event(cl_command_queue queue, cl_event event)$/;"	f
cl_command_queue_wait_finish	./cl_command_queue_enqueue.c	/^cl_command_queue_wait_finish(cl_command_queue queue)$/;"	f
cl_command_queue_wait_flush	./cl_command_queue_enqueue.c	/^cl_command_queue_wait_flush(cl_command_queue queue)$/;"	f
cl_context_add_event	./cl_context.c	/^cl_context_add_event(cl_context ctx, cl_event event) {$/;"	f
cl_context_add_mem	./cl_context.c	/^cl_context_add_mem(cl_context ctx, cl_mem mem) {$/;"	f
cl_context_add_program	./cl_context.c	/^cl_context_add_program(cl_context ctx, cl_program program) {$/;"	f
cl_context_add_queue	./cl_context.c	/^cl_context_add_queue(cl_context ctx, cl_command_queue queue) {$/;"	f
cl_context_add_ref	./cl_context.c	/^cl_context_add_ref(cl_context ctx)$/;"	f
cl_context_add_sampler	./cl_context.c	/^cl_context_add_sampler(cl_context ctx, cl_sampler sampler) {$/;"	f
cl_context_delete	./cl_context.c	/^cl_context_delete(cl_context ctx)$/;"	f
cl_context_get_bufmgr	./cl_context.c	/^cl_context_get_bufmgr(cl_context ctx)$/;"	f
cl_context_get_mem_from_ptr	./cl_context.c	/^cl_context_get_mem_from_ptr(cl_context ctx, const void * p)$/;"	f
cl_context_get_static_kernel_from_bin	./cl_context.c	/^cl_context_get_static_kernel_from_bin(cl_context ctx, cl_int index,$/;"	f
cl_context_get_svm_from_ptr	./cl_context.c	/^cl_context_get_svm_from_ptr(cl_context ctx, const void * p)$/;"	f
cl_context_new	./cl_context.c	/^cl_context_new(struct _cl_context_prop *props, cl_uint dev_num, cl_device_id* all_dev)$/;"	f
cl_context_prop	./cl_driver_type.h	/^typedef struct _cl_context_prop *cl_context_prop;$/;"	t	typeref:struct:_cl_context_prop
cl_context_properties_process	./cl_context.c	/^cl_context_properties_process(const cl_context_properties *prop,$/;"	f	file:
cl_context_remove_event	./cl_context.c	/^cl_context_remove_event(cl_context ctx, cl_event event) {$/;"	f
cl_context_remove_mem	./cl_context.c	/^cl_context_remove_mem(cl_context ctx, cl_mem mem) {$/;"	f
cl_context_remove_program	./cl_context.c	/^cl_context_remove_program(cl_context ctx, cl_program program) {$/;"	f
cl_context_remove_queue	./cl_context.c	/^cl_context_remove_queue(cl_context ctx, cl_command_queue queue) {$/;"	f
cl_context_remove_sampler	./cl_context.c	/^cl_context_remove_sampler(cl_context ctx, cl_sampler sampler) {$/;"	f
cl_create_command_queue	./cl_command_queue.c	/^cl_create_command_queue(cl_context ctx, cl_device_id device, cl_command_queue_properties properties,$/;"	f
cl_create_context	./cl_context.c	/^cl_create_context(const cl_context_properties *  properties,$/;"	f
cl_create_sampler	./cl_sampler.c	/^cl_create_sampler(cl_context ctx, cl_bool normalized_coords, cl_addressing_mode address,$/;"	f
cl_curbe_fill	./cl_command_queue_gen7.c	/^cl_curbe_fill(cl_kernel ker,$/;"	f	file:
cl_device_enqueue_bind_buffer	./cl_device_enqueue.c	/^cl_device_enqueue_bind_buffer(cl_gpgpu gpgpu, cl_kernel ker, uint32_t *max_bti, cl_gpgpu_kernel *kernel)$/;"	f
cl_device_enqueue_fix_offset	./cl_device_enqueue.c	/^cl_device_enqueue_fix_offset(cl_kernel ker) {$/;"	f
cl_device_enqueue_parse_result	./cl_device_enqueue.c	/^cl_device_enqueue_parse_result(cl_command_queue queue, cl_gpgpu gpgpu)$/;"	f
cl_device_get_version	./cl_device_id.c	/^cl_device_get_version(cl_device_id device, cl_int *ver)$/;"	f
cl_device_partition_property	./cl_api.c	/^typedef intptr_t cl_device_partition_property;$/;"	t	file:
cl_devices_list_check	./cl_device_id.c	/^cl_devices_list_check(cl_uint num_devices, const cl_device_id *devices)$/;"	f
cl_devices_list_include_check	./cl_device_id.c	/^cl_devices_list_include_check(cl_uint num_devices, const cl_device_id *devices,$/;"	f
cl_driver	./cl_driver_type.h	/^typedef struct _cl_driver *cl_driver;$/;"	t	typeref:struct:_cl_driver
cl_driver_delete	./cl_driver_defs.c	/^LOCAL cl_driver_delete_cb *cl_driver_delete = NULL;$/;"	v
cl_driver_delete_cb	./cl_driver.h	/^typedef void (cl_driver_delete_cb)(cl_driver);$/;"	t
cl_driver_enlarge_stack_size	./cl_driver_defs.c	/^LOCAL cl_driver_enlarge_stack_size_cb *cl_driver_enlarge_stack_size = NULL;$/;"	v
cl_driver_enlarge_stack_size_cb	./cl_driver.h	/^typedef void (cl_driver_enlarge_stack_size_cb)(cl_driver, int32_t*);$/;"	t
cl_driver_get_bufmgr	./cl_driver_defs.c	/^LOCAL cl_driver_get_bufmgr_cb *cl_driver_get_bufmgr = NULL;$/;"	v
cl_driver_get_bufmgr_cb	./cl_driver.h	/^typedef cl_buffer_mgr (cl_driver_get_bufmgr_cb)(cl_driver);$/;"	t
cl_driver_get_device_id	./cl_driver_defs.c	/^LOCAL cl_driver_get_device_id_cb *cl_driver_get_device_id = NULL;$/;"	v
cl_driver_get_device_id_cb	./cl_driver.h	/^typedef int (cl_driver_get_device_id_cb)(void);$/;"	t
cl_driver_get_ver	./cl_driver_defs.c	/^LOCAL cl_driver_get_ver_cb *cl_driver_get_ver = NULL;$/;"	v
cl_driver_get_ver_cb	./cl_driver.h	/^typedef uint32_t (cl_driver_get_ver_cb)(cl_driver);$/;"	t
cl_driver_new	./cl_driver_defs.c	/^LOCAL cl_driver_new_cb *cl_driver_new = NULL;$/;"	v
cl_driver_new_cb	./cl_driver.h	/^typedef cl_driver (cl_driver_new_cb)(cl_context_prop);$/;"	t
cl_driver_set_atomic_flag	./cl_driver_defs.c	/^LOCAL cl_driver_set_atomic_flag_cb *cl_driver_set_atomic_flag = NULL;$/;"	v
cl_driver_set_atomic_flag_cb	./cl_driver.h	/^typedef void (cl_driver_set_atomic_flag_cb)(cl_driver, int);$/;"	t
cl_driver_update_device_info	./cl_driver_defs.c	/^LOCAL cl_driver_update_device_info_cb *cl_driver_update_device_info = NULL;$/;"	v
cl_driver_update_device_info_cb	./cl_driver.h	/^typedef void (cl_driver_update_device_info_cb)(cl_device_id device);$/;"	t
cl_enqueue_delete	./cl_enqueue.c	/^cl_enqueue_delete(enqueue_data *data)$/;"	f
cl_enqueue_handle	./cl_enqueue.c	/^cl_enqueue_handle(enqueue_data *data, cl_int status)$/;"	f
cl_enqueue_map_buffer	./cl_enqueue.c	/^cl_enqueue_map_buffer(enqueue_data *data, cl_int status)$/;"	f	file:
cl_enqueue_map_image	./cl_enqueue.c	/^cl_enqueue_map_image(enqueue_data *data, cl_int status)$/;"	f	file:
cl_enqueue_marker_or_barrier	./cl_enqueue.c	/^cl_enqueue_marker_or_barrier(enqueue_data *data, cl_int status)$/;"	f	file:
cl_enqueue_native_kernel	./cl_enqueue.c	/^cl_enqueue_native_kernel(enqueue_data *data, cl_int status)$/;"	f	file:
cl_enqueue_ndrange	./cl_enqueue.c	/^cl_enqueue_ndrange(enqueue_data *data, cl_int status)$/;"	f	file:
cl_enqueue_read_buffer	./cl_enqueue.c	/^cl_enqueue_read_buffer(enqueue_data *data, cl_int status)$/;"	f	file:
cl_enqueue_read_buffer_rect	./cl_enqueue.c	/^cl_enqueue_read_buffer_rect(enqueue_data *data, cl_int status)$/;"	f	file:
cl_enqueue_read_image	./cl_enqueue.c	/^cl_enqueue_read_image(enqueue_data *data, cl_int status)$/;"	f	file:
cl_enqueue_svm_free	./cl_enqueue.c	/^cl_int cl_enqueue_svm_free(enqueue_data *data, cl_int status) {$/;"	f
cl_enqueue_svm_mem_copy	./cl_enqueue.c	/^cl_int cl_enqueue_svm_mem_copy(enqueue_data *data, cl_int status) {$/;"	f
cl_enqueue_svm_mem_fill	./cl_enqueue.c	/^cl_int cl_enqueue_svm_mem_fill(enqueue_data *data, cl_int status) {$/;"	f
cl_enqueue_unmap_mem_object	./cl_enqueue.c	/^cl_enqueue_unmap_mem_object(enqueue_data *data, cl_int status)$/;"	f	file:
cl_enqueue_write_buffer	./cl_enqueue.c	/^cl_enqueue_write_buffer(enqueue_data *data, cl_int status)$/;"	f	file:
cl_enqueue_write_buffer_rect	./cl_enqueue.c	/^cl_enqueue_write_buffer_rect(enqueue_data *data, cl_int status)$/;"	f	file:
cl_enqueue_write_image	./cl_enqueue.c	/^cl_enqueue_write_image(enqueue_data *data, cl_int status)$/;"	f	file:
cl_event_add_ref	./cl_event.c	/^cl_event_add_ref(cl_event event)$/;"	f
cl_event_check_waitlist	./cl_event.c	/^cl_event_check_waitlist(cl_uint num_events_in_wait_list, const cl_event *event_wait_list,$/;"	f
cl_event_create	./cl_event.c	/^cl_event_create(cl_context ctx, cl_command_queue queue, cl_uint num_events,$/;"	f
cl_event_create_marker_or_barrier	./cl_event.c	/^cl_event_create_marker_or_barrier(cl_command_queue queue, cl_uint num_events_in_wait_list,$/;"	f
cl_event_delete	./cl_event.c	/^cl_event_delete(cl_event event)$/;"	f
cl_event_delete_depslist	./cl_event.c	/^cl_event_delete_depslist(cl_event event)$/;"	f
cl_event_exec	./cl_event.c	/^cl_event_exec(cl_event event, cl_int exec_to_status, cl_bool ignore_depends)$/;"	f
cl_event_get_status	./cl_event.c	/^cl_event_get_status(cl_event event)$/;"	f
cl_event_is_ready	./cl_event.c	/^cl_event_is_ready(cl_event event)$/;"	f
cl_event_new	./cl_event.c	/^cl_event_new(cl_context ctx, cl_command_queue queue, cl_command_type type,$/;"	f	file:
cl_event_notify_cb	./cl_event.h	/^typedef void(CL_CALLBACK *cl_event_notify_cb)(cl_event event, cl_int event_command_exec_status, void *user_data);$/;"	t
cl_event_set_callback	./cl_event.c	/^cl_event_set_callback(cl_event event, cl_int exec_type, cl_event_notify_cb pfn_notify, void *user_data)$/;"	f
cl_event_set_status	./cl_event.c	/^cl_event_set_status(cl_event event, cl_int status)$/;"	f
cl_event_update_timestamp	./cl_event.c	/^cl_event_update_timestamp(cl_event event, cl_int state)$/;"	f
cl_event_update_timestamp_gen	./cl_event.c	/^cl_event_update_timestamp_gen(cl_event event, cl_int status)$/;"	f	file:
cl_event_user_callback	./cl_event.h	/^typedef _cl_event_user_callback *cl_event_user_callback;$/;"	t
cl_event_wait_for_event_ready	./cl_event.c	/^cl_event_wait_for_event_ready(const cl_event event)$/;"	f
cl_event_wait_for_events_list	./cl_event.c	/^cl_event_wait_for_events_list(cl_uint num_events, const cl_event *event_list)$/;"	f
cl_extension_base	./cl_extensions.h	/^struct cl_extension_base {$/;"	s
cl_extension_enum	./cl_extensions.h	/^}cl_extension_enum;$/;"	t	typeref:enum:__anon5
cl_extensions	./cl_extensions.h	/^typedef struct cl_extensions {$/;"	s
cl_extensions_t	./cl_extensions.h	/^} cl_extensions_t;$/;"	t	typeref:struct:cl_extensions
cl_free	./cl_alloc.c	/^cl_free(void *ptr)$/;"	f
cl_get_clformat_from_texture	./intel/intel_driver.c	/^static int cl_get_clformat_from_texture(GLint tex_format, cl_image_format * cl_format)$/;"	f	file:
cl_get_default_tiling	./cl_mem.c	/^cl_image_tiling_t cl_get_default_tiling(cl_driver drv)$/;"	f
cl_get_device_ids	./cl_device_id.c	/^cl_get_device_ids(cl_platform_id    platform,$/;"	f
cl_get_device_info	./cl_device_id.c	/^cl_get_device_info(cl_device_id     device,$/;"	f
cl_get_gt_device	./cl_device_id.c	/^cl_get_gt_device(cl_device_type device_type)$/;"	f
cl_get_info_helper	./cl_utils.c	/^cl_get_info_helper(const void *src, size_t src_size, void *dst, size_t dst_size, size_t *ret_size)$/;"	f
cl_get_kernel_arg_info	./cl_kernel.c	/^cl_get_kernel_arg_info(cl_kernel k, cl_uint arg_index, cl_kernel_arg_info param_name,$/;"	f
cl_get_kernel_max_wg_sz	./cl_device_id.c	/^cl_get_kernel_max_wg_sz(cl_kernel kernel)$/;"	f
cl_get_kernel_subgroup_info	./cl_device_id.c	/^cl_get_kernel_subgroup_info(cl_kernel kernel,$/;"	f
cl_get_kernel_workgroup_info	./cl_device_id.c	/^cl_get_kernel_workgroup_info(cl_kernel kernel,$/;"	f
cl_get_mem_object_type	./cl_mem.c	/^cl_get_mem_object_type(cl_mem mem)$/;"	f
cl_get_pipe_info	./cl_mem.c	/^cl_get_pipe_info(cl_mem mem,$/;"	f
cl_get_platform_default	./cl_platform_id.c	/^cl_get_platform_default(void)$/;"	f
cl_get_platform_ids	./cl_platform_id.c	/^cl_get_platform_ids(cl_uint          num_entries,$/;"	f
cl_gpgpu	./cl_driver_type.h	/^typedef struct _cl_gpgpu *cl_gpgpu;$/;"	t	typeref:struct:_cl_gpgpu
cl_gpgpu_alloc_constant_buffer	./cl_driver_defs.c	/^LOCAL cl_gpgpu_alloc_constant_buffer_cb * cl_gpgpu_alloc_constant_buffer = NULL;$/;"	v
cl_gpgpu_alloc_constant_buffer_cb	./cl_driver.h	/^typedef cl_buffer (cl_gpgpu_alloc_constant_buffer_cb)(cl_gpgpu, uint32_t size, uint8_t bti);$/;"	t
cl_gpgpu_batch_end	./cl_driver_defs.c	/^LOCAL cl_gpgpu_batch_end_cb *cl_gpgpu_batch_end = NULL;$/;"	v
cl_gpgpu_batch_end_cb	./cl_driver.h	/^typedef void (cl_gpgpu_batch_end_cb)(cl_gpgpu, int32_t flush_mode);$/;"	t
cl_gpgpu_batch_reset	./cl_driver_defs.c	/^LOCAL cl_gpgpu_batch_reset_cb *cl_gpgpu_batch_reset = NULL;$/;"	v
cl_gpgpu_batch_reset_cb	./cl_driver.h	/^typedef int (cl_gpgpu_batch_reset_cb)(cl_gpgpu, size_t sz);$/;"	t
cl_gpgpu_batch_start	./cl_driver_defs.c	/^LOCAL cl_gpgpu_batch_start_cb *cl_gpgpu_batch_start = NULL;$/;"	v
cl_gpgpu_batch_start_cb	./cl_driver.h	/^typedef void (cl_gpgpu_batch_start_cb)(cl_gpgpu);$/;"	t
cl_gpgpu_bind_buf	./cl_driver_defs.c	/^LOCAL cl_gpgpu_bind_buf_cb *cl_gpgpu_bind_buf = NULL;$/;"	v
cl_gpgpu_bind_buf_cb	./cl_driver.h	/^typedef void (cl_gpgpu_bind_buf_cb)(cl_gpgpu, cl_buffer, uint32_t offset, uint32_t internal_offset, size_t size, uint8_t bti);$/;"	t
cl_gpgpu_bind_image	./cl_driver_defs.c	/^LOCAL cl_gpgpu_bind_image_cb *cl_gpgpu_bind_image = NULL;$/;"	v
cl_gpgpu_bind_image_cb	./cl_driver.h	/^typedef void (cl_gpgpu_bind_image_cb)(cl_gpgpu state,$/;"	t
cl_gpgpu_bind_image_for_vme	./cl_driver_defs.c	/^LOCAL cl_gpgpu_bind_image_cb *cl_gpgpu_bind_image_for_vme = NULL;$/;"	v
cl_gpgpu_bind_image_for_vme_cb	./cl_driver.h	/^typedef void (cl_gpgpu_bind_image_for_vme_cb)(cl_gpgpu state,$/;"	t
cl_gpgpu_bind_sampler	./cl_driver_defs.c	/^LOCAL cl_gpgpu_bind_sampler_cb *cl_gpgpu_bind_sampler = NULL;$/;"	v
cl_gpgpu_bind_sampler_cb	./cl_driver.h	/^typedef void (cl_gpgpu_bind_sampler_cb)(cl_gpgpu, uint32_t *samplers, size_t sampler_sz);$/;"	t
cl_gpgpu_bind_vme_state	./cl_driver_defs.c	/^LOCAL cl_gpgpu_bind_vme_state_cb *cl_gpgpu_bind_vme_state = NULL;$/;"	v
cl_gpgpu_bind_vme_state_cb	./cl_driver.h	/^typedef void (cl_gpgpu_bind_vme_state_cb)(cl_gpgpu, cl_accelerator_intel accel);$/;"	t
cl_gpgpu_delete	./cl_driver_defs.c	/^LOCAL cl_gpgpu_delete_cb *cl_gpgpu_delete = NULL;$/;"	v
cl_gpgpu_delete_cb	./cl_driver.h	/^typedef void (cl_gpgpu_delete_cb)(cl_gpgpu);$/;"	t
cl_gpgpu_event	./cl_driver_type.h	/^typedef struct _cl_gpgpu_event *cl_gpgpu_event;$/;"	t	typeref:struct:_cl_gpgpu_event
cl_gpgpu_event_cancel_cb	./cl_driver.h	/^typedef void (cl_gpgpu_event_cancel_cb)(cl_gpgpu_event);$/;"	t
cl_gpgpu_event_delete	./cl_driver_defs.c	/^LOCAL cl_gpgpu_event_delete_cb *cl_gpgpu_event_delete = NULL;$/;"	v
cl_gpgpu_event_delete_cb	./cl_driver.h	/^typedef void (cl_gpgpu_event_delete_cb)(cl_gpgpu_event);$/;"	t
cl_gpgpu_event_flush	./cl_driver_defs.c	/^LOCAL cl_gpgpu_event_flush_cb *cl_gpgpu_event_flush = NULL;$/;"	v
cl_gpgpu_event_flush_cb	./cl_driver.h	/^typedef void (cl_gpgpu_event_flush_cb)(cl_gpgpu_event);$/;"	t
cl_gpgpu_event_get_exec_timestamp	./cl_driver_defs.c	/^LOCAL cl_gpgpu_event_get_exec_timestamp_cb *cl_gpgpu_event_get_exec_timestamp = NULL;$/;"	v
cl_gpgpu_event_get_exec_timestamp_cb	./cl_driver.h	/^typedef void (cl_gpgpu_event_get_exec_timestamp_cb)(cl_gpgpu, int, uint64_t*);$/;"	t
cl_gpgpu_event_get_gpu_cur_timestamp	./cl_driver_defs.c	/^LOCAL cl_gpgpu_event_get_gpu_cur_timestamp_cb *cl_gpgpu_event_get_gpu_cur_timestamp = NULL;$/;"	v
cl_gpgpu_event_get_gpu_cur_timestamp_cb	./cl_driver.h	/^typedef void (cl_gpgpu_event_get_gpu_cur_timestamp_cb)(cl_driver, uint64_t*);$/;"	t
cl_gpgpu_event_new	./cl_driver_defs.c	/^LOCAL cl_gpgpu_event_new_cb *cl_gpgpu_event_new = NULL;$/;"	v
cl_gpgpu_event_new_cb	./cl_driver.h	/^typedef cl_gpgpu_event (cl_gpgpu_event_new_cb)(cl_gpgpu);$/;"	t
cl_gpgpu_event_update_status	./cl_driver_defs.c	/^LOCAL cl_gpgpu_event_update_status_cb *cl_gpgpu_event_update_status = NULL;$/;"	v
cl_gpgpu_event_update_status_cb	./cl_driver.h	/^typedef int (cl_gpgpu_event_update_status_cb)(cl_gpgpu_event, int);$/;"	t
cl_gpgpu_flush	./cl_driver_defs.c	/^LOCAL cl_gpgpu_flush_cb *cl_gpgpu_flush = NULL;$/;"	v
cl_gpgpu_flush_cb	./cl_driver.h	/^typedef int (cl_gpgpu_flush_cb)(cl_gpgpu);$/;"	t
cl_gpgpu_get_cache_ctrl	./cl_driver_defs.c	/^LOCAL cl_gpgpu_get_cache_ctrl_cb *cl_gpgpu_get_cache_ctrl = NULL;$/;"	v
cl_gpgpu_get_cache_ctrl_cb	./cl_driver.h	/^typedef uint32_t (cl_gpgpu_get_cache_ctrl_cb)();$/;"	t
cl_gpgpu_get_kernel	./cl_driver_defs.c	/^LOCAL cl_gpgpu_get_kernel_cb *cl_gpgpu_get_kernel = NULL;$/;"	v
cl_gpgpu_get_kernel_cb	./cl_driver.h	/^typedef void* (cl_gpgpu_get_kernel_cb)(cl_gpgpu);$/;"	t
cl_gpgpu_get_printf_info	./cl_driver_defs.c	/^LOCAL cl_gpgpu_get_printf_info_cb *cl_gpgpu_get_printf_info = NULL;$/;"	v
cl_gpgpu_get_printf_info_cb	./cl_driver.h	/^typedef void* (cl_gpgpu_get_printf_info_cb)(cl_gpgpu);$/;"	t
cl_gpgpu_get_profiling_info	./cl_driver_defs.c	/^LOCAL cl_gpgpu_get_profiling_info_cb *cl_gpgpu_get_profiling_info = NULL;$/;"	v
cl_gpgpu_get_profiling_info_cb	./cl_driver.h	/^typedef void* (cl_gpgpu_get_profiling_info_cb)(cl_gpgpu);$/;"	t
cl_gpgpu_kernel	./cl_driver.h	/^typedef struct cl_gpgpu_kernel {$/;"	s
cl_gpgpu_kernel	./cl_driver.h	/^} cl_gpgpu_kernel;$/;"	t	typeref:struct:cl_gpgpu_kernel
cl_gpgpu_map_printf_buffer	./cl_driver_defs.c	/^LOCAL cl_gpgpu_map_printf_buffer_cb *cl_gpgpu_map_printf_buffer = NULL;$/;"	v
cl_gpgpu_map_printf_buffer_cb	./cl_driver.h	/^typedef void* (cl_gpgpu_map_printf_buffer_cb)(cl_gpgpu);$/;"	t
cl_gpgpu_map_profiling_buffer	./cl_driver_defs.c	/^LOCAL cl_gpgpu_map_profiling_buffer_cb *cl_gpgpu_map_profiling_buffer = NULL;$/;"	v
cl_gpgpu_map_profiling_buffer_cb	./cl_driver.h	/^typedef void* (cl_gpgpu_map_profiling_buffer_cb)(cl_gpgpu);$/;"	t
cl_gpgpu_new	./cl_driver_defs.c	/^LOCAL cl_gpgpu_new_cb *cl_gpgpu_new = NULL;$/;"	v
cl_gpgpu_new_cb	./cl_driver.h	/^typedef cl_gpgpu (cl_gpgpu_new_cb)(cl_driver);$/;"	t
cl_gpgpu_ref_batch_buf	./cl_driver_defs.c	/^LOCAL cl_gpgpu_ref_batch_buf_cb *cl_gpgpu_ref_batch_buf = NULL;$/;"	v
cl_gpgpu_ref_batch_buf_cb	./cl_driver.h	/^typedef void* (cl_gpgpu_ref_batch_buf_cb)(cl_gpgpu);$/;"	t
cl_gpgpu_release_printf_buffer	./cl_driver_defs.c	/^LOCAL cl_gpgpu_release_printf_buffer_cb *cl_gpgpu_release_printf_buffer = NULL;$/;"	v
cl_gpgpu_release_printf_buffer_cb	./cl_driver.h	/^typedef unsigned long (cl_gpgpu_release_printf_buffer_cb)(cl_gpgpu);$/;"	t
cl_gpgpu_reloc_printf_buffer	./cl_driver_defs.c	/^LOCAL cl_gpgpu_reloc_printf_buffer_cb *cl_gpgpu_reloc_printf_buffer = NULL;$/;"	v
cl_gpgpu_reloc_printf_buffer_cb	./cl_driver.h	/^typedef unsigned long (cl_gpgpu_reloc_printf_buffer_cb)(cl_gpgpu, uint32_t, uint32_t);$/;"	t
cl_gpgpu_set_kernel	./cl_driver_defs.c	/^LOCAL cl_gpgpu_set_kernel_cb *cl_gpgpu_set_kernel = NULL;$/;"	v
cl_gpgpu_set_kernel_cb	./cl_driver.h	/^typedef void (cl_gpgpu_set_kernel_cb)(cl_gpgpu, void *);$/;"	t
cl_gpgpu_set_perf_counters	./cl_driver_defs.c	/^LOCAL cl_gpgpu_set_perf_counters_cb *cl_gpgpu_set_perf_counters = NULL;$/;"	v
cl_gpgpu_set_perf_counters_cb	./cl_driver.h	/^typedef void (cl_gpgpu_set_perf_counters_cb)(cl_gpgpu, cl_buffer perf);$/;"	t
cl_gpgpu_set_printf_buffer	./cl_driver_defs.c	/^LOCAL cl_gpgpu_set_printf_buffer_cb *cl_gpgpu_set_printf_buffer = NULL;$/;"	v
cl_gpgpu_set_printf_buffer_cb	./cl_driver.h	/^typedef int (cl_gpgpu_set_printf_buffer_cb)(cl_gpgpu, uint32_t, uint8_t);$/;"	t
cl_gpgpu_set_printf_info	./cl_driver_defs.c	/^LOCAL cl_gpgpu_set_printf_info_cb *cl_gpgpu_set_printf_info = NULL;$/;"	v
cl_gpgpu_set_printf_info_cb	./cl_driver.h	/^typedef int (cl_gpgpu_set_printf_info_cb)(cl_gpgpu, void *);$/;"	t
cl_gpgpu_set_profiling_buffer	./cl_driver_defs.c	/^LOCAL cl_gpgpu_set_profiling_buffer_cb *cl_gpgpu_set_profiling_buffer = NULL;$/;"	v
cl_gpgpu_set_profiling_buffer_cb	./cl_driver.h	/^typedef int (cl_gpgpu_set_profiling_buffer_cb)(cl_gpgpu, uint32_t, uint32_t, uint8_t);$/;"	t
cl_gpgpu_set_profiling_info	./cl_driver_defs.c	/^LOCAL cl_gpgpu_set_profiling_info_cb *cl_gpgpu_set_profiling_info = NULL;$/;"	v
cl_gpgpu_set_profiling_info_cb	./cl_driver.h	/^typedef int (cl_gpgpu_set_profiling_info_cb)(cl_gpgpu, void *);$/;"	t
cl_gpgpu_set_sampler_cb	./cl_driver.h	/^typedef void (cl_gpgpu_set_sampler_cb)(cl_gpgpu, uint32_t index, uint32_t non_normalized);$/;"	t
cl_gpgpu_set_scratch	./cl_driver_defs.c	/^LOCAL cl_gpgpu_set_scratch_cb *cl_gpgpu_set_scratch = NULL;$/;"	v
cl_gpgpu_set_scratch_cb	./cl_driver.h	/^typedef int (cl_gpgpu_set_scratch_cb)(cl_gpgpu, uint32_t per_thread_size);$/;"	t
cl_gpgpu_set_stack	./cl_driver_defs.c	/^LOCAL cl_gpgpu_set_stack_cb *cl_gpgpu_set_stack = NULL;$/;"	v
cl_gpgpu_set_stack_cb	./cl_driver.h	/^typedef void (cl_gpgpu_set_stack_cb)(cl_gpgpu, uint32_t offset, uint32_t size, uint32_t cchint);$/;"	t
cl_gpgpu_state_init	./cl_driver_defs.c	/^LOCAL cl_gpgpu_state_init_cb *cl_gpgpu_state_init = NULL;$/;"	v
cl_gpgpu_state_init_cb	./cl_driver.h	/^typedef int (cl_gpgpu_state_init_cb)(cl_gpgpu, uint32_t max_threads, uint32_t size_cs_entry, int profiling);$/;"	t
cl_gpgpu_states_setup	./cl_driver_defs.c	/^LOCAL cl_gpgpu_states_setup_cb *cl_gpgpu_states_setup = NULL;$/;"	v
cl_gpgpu_states_setup_cb	./cl_driver.h	/^typedef void (cl_gpgpu_states_setup_cb)(cl_gpgpu, cl_gpgpu_kernel *kernel);$/;"	t
cl_gpgpu_sync	./cl_driver_defs.c	/^LOCAL cl_gpgpu_sync_cb *cl_gpgpu_sync = NULL;$/;"	v
cl_gpgpu_sync_cb	./cl_driver.h	/^typedef void (cl_gpgpu_sync_cb)(void*);$/;"	t
cl_gpgpu_tiling	./cl_driver.h	/^typedef enum cl_gpgpu_tiling {$/;"	g
cl_gpgpu_tiling	./cl_driver.h	/^} cl_gpgpu_tiling;$/;"	t	typeref:enum:cl_gpgpu_tiling
cl_gpgpu_unmap_printf_buffer	./cl_driver_defs.c	/^LOCAL cl_gpgpu_unmap_printf_buffer_cb *cl_gpgpu_unmap_printf_buffer = NULL;$/;"	v
cl_gpgpu_unmap_printf_buffer_cb	./cl_driver.h	/^typedef void (cl_gpgpu_unmap_printf_buffer_cb)(cl_gpgpu);$/;"	t
cl_gpgpu_unmap_profiling_buffer	./cl_driver_defs.c	/^LOCAL cl_gpgpu_unmap_profiling_buffer_cb *cl_gpgpu_unmap_profiling_buffer = NULL;$/;"	v
cl_gpgpu_unmap_profiling_buffer_cb	./cl_driver.h	/^typedef void (cl_gpgpu_unmap_profiling_buffer_cb)(cl_gpgpu);$/;"	t
cl_gpgpu_unref_batch_buf	./cl_driver_defs.c	/^LOCAL cl_gpgpu_unref_batch_buf_cb *cl_gpgpu_unref_batch_buf = NULL;$/;"	v
cl_gpgpu_unref_batch_buf_cb	./cl_driver.h	/^typedef void (cl_gpgpu_unref_batch_buf_cb)(void*);$/;"	t
cl_gpgpu_upload_curbes	./cl_driver_defs.c	/^LOCAL cl_gpgpu_upload_curbes_cb *cl_gpgpu_upload_curbes = NULL;$/;"	v
cl_gpgpu_upload_curbes_cb	./cl_driver.h	/^typedef int (cl_gpgpu_upload_curbes_cb)(cl_gpgpu, const void* data, uint32_t size);$/;"	t
cl_gpgpu_upload_samplers	./cl_driver_defs.c	/^LOCAL cl_gpgpu_upload_samplers_cb *cl_gpgpu_upload_samplers = NULL;$/;"	v
cl_gpgpu_upload_samplers_cb	./cl_driver.h	/^typedef void (cl_gpgpu_upload_samplers_cb)(cl_gpgpu *state, const void *data, uint32_t n);$/;"	t
cl_gpgpu_walker	./cl_driver_defs.c	/^LOCAL cl_gpgpu_walker_cb *cl_gpgpu_walker = NULL;$/;"	v
cl_gpgpu_walker_cb	./cl_driver.h	/^typedef void (cl_gpgpu_walker_cb)(cl_gpgpu,$/;"	t
cl_image_byte_per_pixel	./cl_image.c	/^cl_image_byte_per_pixel(const cl_image_format *fmt, uint32_t *bpp)$/;"	f
cl_image_desc	./cl_mem.h	/^} cl_image_desc;$/;"	t	typeref:struct:_cl_image_desc
cl_image_fill	./cl_mem.c	/^cl_image_fill(cl_command_queue queue, cl_event e, const void * pattern, struct _cl_mem_image* src_image,$/;"	f
cl_image_get_intel_format	./cl_image.c	/^cl_image_get_intel_format(const cl_image_format *fmt)$/;"	f
cl_image_get_supported_fmt	./cl_image.c	/^cl_image_get_supported_fmt(cl_context ctx,$/;"	f
cl_image_order	./cl_image.c	/^static const uint32_t cl_image_order[] = {$/;"	v	file:
cl_image_order_n	./cl_image.c	/^static const size_t cl_image_order_n = SIZEOF32(cl_image_order);$/;"	v	file:
cl_image_tiling	./cl_mem.h	/^typedef enum cl_image_tiling {$/;"	g
cl_image_tiling_t	./cl_mem.h	/^} cl_image_tiling_t;$/;"	t	typeref:enum:cl_image_tiling
cl_image_type	./cl_image.c	/^static const uint32_t cl_image_type[] = {$/;"	v	file:
cl_image_type_n	./cl_image.c	/^static const size_t cl_image_type_n = SIZEOF32(cl_image_type);$/;"	v	file:
cl_intel_driver_delete	./intel/intel_driver.c	/^cl_intel_driver_delete(intel_driver_t *driver)$/;"	f	file:
cl_intel_driver_new	./intel/intel_driver.c	/^cl_intel_driver_new(cl_context_prop props)$/;"	f	file:
cl_intel_platform_enable_extension	./cl_extensions.c	/^cl_intel_platform_enable_extension(cl_device_id device, uint32_t ext)$/;"	f
cl_intel_platform_extension_init	./cl_extensions.c	/^cl_intel_platform_extension_init(cl_platform_id intel_platform)$/;"	f
cl_intel_platform_get_default_extension	./cl_extensions.c	/^cl_intel_platform_get_default_extension(cl_device_id device)$/;"	f
cl_internal_block_motion_estimate_intel_str	./kernels/cl_internal_block_motion_estimate_intel_str.c	/^char cl_internal_block_motion_estimate_intel_str[] = {$/;"	v
cl_internal_block_motion_estimate_intel_str_size	./kernels/cl_internal_block_motion_estimate_intel_str.c	/^size_t cl_internal_block_motion_estimate_intel_str_size = 10341;$/;"	v
cl_internal_built_in_kernel_str	./kernels/cl_internal_built_in_kernel_str.c	/^char cl_internal_built_in_kernel_str[] = {$/;"	v
cl_internal_built_in_kernel_str_size	./kernels/cl_internal_built_in_kernel_str.c	/^size_t cl_internal_built_in_kernel_str_size = 72576;$/;"	v
cl_internal_copy_buf_align16_str	./kernels/cl_internal_copy_buf_align16_str.c	/^char cl_internal_copy_buf_align16_str[] = {$/;"	v
cl_internal_copy_buf_align16_str_size	./kernels/cl_internal_copy_buf_align16_str.c	/^size_t cl_internal_copy_buf_align16_str_size = 1348;$/;"	v
cl_internal_copy_buf_align4_str	./kernels/cl_internal_copy_buf_align4_str.c	/^char cl_internal_copy_buf_align4_str[] = {$/;"	v
cl_internal_copy_buf_align4_str_size	./kernels/cl_internal_copy_buf_align4_str.c	/^size_t cl_internal_copy_buf_align4_str_size = 1043;$/;"	v
cl_internal_copy_buf_rect_align4_str	./kernels/cl_internal_copy_buf_rect_align4_str.c	/^char cl_internal_copy_buf_rect_align4_str[] = {$/;"	v
cl_internal_copy_buf_rect_align4_str_size	./kernels/cl_internal_copy_buf_rect_align4_str.c	/^size_t cl_internal_copy_buf_rect_align4_str_size = 1779;$/;"	v
cl_internal_copy_buf_rect_str	./kernels/cl_internal_copy_buf_rect_str.c	/^char cl_internal_copy_buf_rect_str[] = {$/;"	v
cl_internal_copy_buf_rect_str_size	./kernels/cl_internal_copy_buf_rect_str.c	/^size_t cl_internal_copy_buf_rect_str_size = 1822;$/;"	v
cl_internal_copy_buf_unalign_dst_offset_str	./kernels/cl_internal_copy_buf_unalign_dst_offset_str.c	/^char cl_internal_copy_buf_unalign_dst_offset_str[] = {$/;"	v
cl_internal_copy_buf_unalign_dst_offset_str_size	./kernels/cl_internal_copy_buf_unalign_dst_offset_str.c	/^size_t cl_internal_copy_buf_unalign_dst_offset_str_size = 2366;$/;"	v
cl_internal_copy_buf_unalign_same_offset_str	./kernels/cl_internal_copy_buf_unalign_same_offset_str.c	/^char cl_internal_copy_buf_unalign_same_offset_str[] = {$/;"	v
cl_internal_copy_buf_unalign_same_offset_str_size	./kernels/cl_internal_copy_buf_unalign_same_offset_str.c	/^size_t cl_internal_copy_buf_unalign_same_offset_str_size = 1801;$/;"	v
cl_internal_copy_buf_unalign_src_offset_str	./kernels/cl_internal_copy_buf_unalign_src_offset_str.c	/^char cl_internal_copy_buf_unalign_src_offset_str[] = {$/;"	v
cl_internal_copy_buf_unalign_src_offset_str_size	./kernels/cl_internal_copy_buf_unalign_src_offset_str.c	/^size_t cl_internal_copy_buf_unalign_src_offset_str_size = 2282;$/;"	v
cl_internal_copy_buffer_to_image_2d_align16_str	./kernels/cl_internal_copy_buffer_to_image_2d_align16_str.c	/^char cl_internal_copy_buffer_to_image_2d_align16_str[] = {$/;"	v
cl_internal_copy_buffer_to_image_2d_align16_str_size	./kernels/cl_internal_copy_buffer_to_image_2d_align16_str.c	/^size_t cl_internal_copy_buffer_to_image_2d_align16_str_size = 1798;$/;"	v
cl_internal_copy_buffer_to_image_2d_str	./kernels/cl_internal_copy_buffer_to_image_2d_str.c	/^char cl_internal_copy_buffer_to_image_2d_str[] = {$/;"	v
cl_internal_copy_buffer_to_image_2d_str_size	./kernels/cl_internal_copy_buffer_to_image_2d_str.c	/^size_t cl_internal_copy_buffer_to_image_2d_str_size = 2022;$/;"	v
cl_internal_copy_buffer_to_image_3d_str	./kernels/cl_internal_copy_buffer_to_image_3d_str.c	/^char cl_internal_copy_buffer_to_image_3d_str[] = {$/;"	v
cl_internal_copy_buffer_to_image_3d_str_size	./kernels/cl_internal_copy_buffer_to_image_3d_str.c	/^size_t cl_internal_copy_buffer_to_image_3d_str_size = 2018;$/;"	v
cl_internal_copy_image_1d_array_to_1d_array_str	./kernels/cl_internal_copy_image_1d_array_to_1d_array_str.c	/^char cl_internal_copy_image_1d_array_to_1d_array_str[] = {$/;"	v
cl_internal_copy_image_1d_array_to_1d_array_str_size	./kernels/cl_internal_copy_image_1d_array_to_1d_array_str.c	/^size_t cl_internal_copy_image_1d_array_to_1d_array_str_size = 2154;$/;"	v
cl_internal_copy_image_1d_to_1d_str	./kernels/cl_internal_copy_image_1d_to_1d_str.c	/^char cl_internal_copy_image_1d_to_1d_str[] = {$/;"	v
cl_internal_copy_image_1d_to_1d_str_size	./kernels/cl_internal_copy_image_1d_to_1d_str.c	/^size_t cl_internal_copy_image_1d_to_1d_str_size = 2130;$/;"	v
cl_internal_copy_image_2d_array_to_2d_array_str	./kernels/cl_internal_copy_image_2d_array_to_2d_array_str.c	/^char cl_internal_copy_image_2d_array_to_2d_array_str[] = {$/;"	v
cl_internal_copy_image_2d_array_to_2d_array_str_size	./kernels/cl_internal_copy_image_2d_array_to_2d_array_str.c	/^size_t cl_internal_copy_image_2d_array_to_2d_array_str_size = 2354;$/;"	v
cl_internal_copy_image_2d_array_to_2d_str	./kernels/cl_internal_copy_image_2d_array_to_2d_str.c	/^char cl_internal_copy_image_2d_array_to_2d_str[] = {$/;"	v
cl_internal_copy_image_2d_array_to_2d_str_size	./kernels/cl_internal_copy_image_2d_array_to_2d_str.c	/^size_t cl_internal_copy_image_2d_array_to_2d_str_size = 2126;$/;"	v
cl_internal_copy_image_2d_array_to_3d_str	./kernels/cl_internal_copy_image_2d_array_to_3d_str.c	/^char cl_internal_copy_image_2d_array_to_3d_str[] = {$/;"	v
cl_internal_copy_image_2d_array_to_3d_str_size	./kernels/cl_internal_copy_image_2d_array_to_3d_str.c	/^size_t cl_internal_copy_image_2d_array_to_3d_str_size = 2274;$/;"	v
cl_internal_copy_image_2d_to_2d_array_str	./kernels/cl_internal_copy_image_2d_to_2d_array_str.c	/^char cl_internal_copy_image_2d_to_2d_array_str[] = {$/;"	v
cl_internal_copy_image_2d_to_2d_array_str_size	./kernels/cl_internal_copy_image_2d_to_2d_array_str.c	/^size_t cl_internal_copy_image_2d_to_2d_array_str_size = 2070;$/;"	v
cl_internal_copy_image_2d_to_2d_str	./kernels/cl_internal_copy_image_2d_to_2d_str.c	/^char cl_internal_copy_image_2d_to_2d_str[] = {$/;"	v
cl_internal_copy_image_2d_to_2d_str_size	./kernels/cl_internal_copy_image_2d_to_2d_str.c	/^size_t cl_internal_copy_image_2d_to_2d_str_size = 2122;$/;"	v
cl_internal_copy_image_2d_to_3d_str	./kernels/cl_internal_copy_image_2d_to_3d_str.c	/^char cl_internal_copy_image_2d_to_3d_str[] = {$/;"	v
cl_internal_copy_image_2d_to_3d_str_size	./kernels/cl_internal_copy_image_2d_to_3d_str.c	/^size_t cl_internal_copy_image_2d_to_3d_str_size = 2126;$/;"	v
cl_internal_copy_image_2d_to_buffer_align16_str	./kernels/cl_internal_copy_image_2d_to_buffer_align16_str.c	/^char cl_internal_copy_image_2d_to_buffer_align16_str[] = {$/;"	v
cl_internal_copy_image_2d_to_buffer_align16_str_size	./kernels/cl_internal_copy_image_2d_to_buffer_align16_str.c	/^size_t cl_internal_copy_image_2d_to_buffer_align16_str_size = 1565;$/;"	v
cl_internal_copy_image_2d_to_buffer_str	./kernels/cl_internal_copy_image_2d_to_buffer_str.c	/^char cl_internal_copy_image_2d_to_buffer_str[] = {$/;"	v
cl_internal_copy_image_2d_to_buffer_str_size	./kernels/cl_internal_copy_image_2d_to_buffer_str.c	/^size_t cl_internal_copy_image_2d_to_buffer_str_size = 1805;$/;"	v
cl_internal_copy_image_3d_to_2d_array_str	./kernels/cl_internal_copy_image_3d_to_2d_array_str.c	/^char cl_internal_copy_image_3d_to_2d_array_str[] = {$/;"	v
cl_internal_copy_image_3d_to_2d_array_str_size	./kernels/cl_internal_copy_image_3d_to_2d_array_str.c	/^size_t cl_internal_copy_image_3d_to_2d_array_str_size = 2234;$/;"	v
cl_internal_copy_image_3d_to_2d_str	./kernels/cl_internal_copy_image_3d_to_2d_str.c	/^char cl_internal_copy_image_3d_to_2d_str[] = {$/;"	v
cl_internal_copy_image_3d_to_2d_str_size	./kernels/cl_internal_copy_image_3d_to_2d_str.c	/^size_t cl_internal_copy_image_3d_to_2d_str_size = 2150;$/;"	v
cl_internal_copy_image_3d_to_3d_str	./kernels/cl_internal_copy_image_3d_to_3d_str.c	/^char cl_internal_copy_image_3d_to_3d_str[] = {$/;"	v
cl_internal_copy_image_3d_to_3d_str_size	./kernels/cl_internal_copy_image_3d_to_3d_str.c	/^size_t cl_internal_copy_image_3d_to_3d_str_size = 2154;$/;"	v
cl_internal_copy_image_3d_to_buffer_str	./kernels/cl_internal_copy_image_3d_to_buffer_str.c	/^char cl_internal_copy_image_3d_to_buffer_str[] = {$/;"	v
cl_internal_copy_image_3d_to_buffer_str_size	./kernels/cl_internal_copy_image_3d_to_buffer_str.c	/^size_t cl_internal_copy_image_3d_to_buffer_str_size = 1825;$/;"	v
cl_internal_fill_buf_align128_str	./kernels/cl_internal_fill_buf_align128_str.c	/^char cl_internal_fill_buf_align128_str[] = {$/;"	v
cl_internal_fill_buf_align128_str_size	./kernels/cl_internal_fill_buf_align128_str.c	/^size_t cl_internal_fill_buf_align128_str_size = 1530;$/;"	v
cl_internal_fill_buf_align2_str	./kernels/cl_internal_fill_buf_align2_str.c	/^char cl_internal_fill_buf_align2_str[] = {$/;"	v
cl_internal_fill_buf_align2_str_size	./kernels/cl_internal_fill_buf_align2_str.c	/^size_t cl_internal_fill_buf_align2_str_size = 987;$/;"	v
cl_internal_fill_buf_align4_str	./kernels/cl_internal_fill_buf_align4_str.c	/^char cl_internal_fill_buf_align4_str[] = {$/;"	v
cl_internal_fill_buf_align4_str_size	./kernels/cl_internal_fill_buf_align4_str.c	/^size_t cl_internal_fill_buf_align4_str_size = 939;$/;"	v
cl_internal_fill_buf_align8_str	./kernels/cl_internal_fill_buf_align8_str.c	/^char cl_internal_fill_buf_align8_str[] = {$/;"	v
cl_internal_fill_buf_align8_str_size	./kernels/cl_internal_fill_buf_align8_str.c	/^size_t cl_internal_fill_buf_align8_str_size = 3931;$/;"	v
cl_internal_fill_buf_unalign_str	./kernels/cl_internal_fill_buf_unalign_str.c	/^char cl_internal_fill_buf_unalign_str[] = {$/;"	v
cl_internal_fill_buf_unalign_str_size	./kernels/cl_internal_fill_buf_unalign_str.c	/^size_t cl_internal_fill_buf_unalign_str_size = 938;$/;"	v
cl_internal_fill_image_1d_array_str	./kernels/cl_internal_fill_image_1d_array_str.c	/^char cl_internal_fill_image_1d_array_str[] = {$/;"	v
cl_internal_fill_image_1d_array_str_size	./kernels/cl_internal_fill_image_1d_array_str.c	/^size_t cl_internal_fill_image_1d_array_str_size = 1818;$/;"	v
cl_internal_fill_image_1d_str	./kernels/cl_internal_fill_image_1d_str.c	/^char cl_internal_fill_image_1d_str[] = {$/;"	v
cl_internal_fill_image_1d_str_size	./kernels/cl_internal_fill_image_1d_str.c	/^size_t cl_internal_fill_image_1d_str_size = 1774;$/;"	v
cl_internal_fill_image_2d_array_str	./kernels/cl_internal_fill_image_2d_array_str.c	/^char cl_internal_fill_image_2d_array_str[] = {$/;"	v
cl_internal_fill_image_2d_array_str_size	./kernels/cl_internal_fill_image_2d_array_str.c	/^size_t cl_internal_fill_image_2d_array_str_size = 1814;$/;"	v
cl_internal_fill_image_2d_str	./kernels/cl_internal_fill_image_2d_str.c	/^char cl_internal_fill_image_2d_str[] = {$/;"	v
cl_internal_fill_image_2d_str_size	./kernels/cl_internal_fill_image_2d_str.c	/^size_t cl_internal_fill_image_2d_str_size = 1722;$/;"	v
cl_internal_fill_image_3d_str	./kernels/cl_internal_fill_image_3d_str.c	/^char cl_internal_fill_image_3d_str[] = {$/;"	v
cl_internal_fill_image_3d_str_size	./kernels/cl_internal_fill_image_3d_str.c	/^size_t cl_internal_fill_image_3d_str_size = 1726;$/;"	v
cl_kernel_add_ref	./cl_kernel.c	/^cl_kernel_add_ref(cl_kernel k)$/;"	f
cl_kernel_check_args	./cl_command_queue.c	/^cl_kernel_check_args(cl_kernel k)$/;"	f	file:
cl_kernel_compute_batch_sz	./cl_command_queue_gen7.c	/^static INLINE size_t cl_kernel_compute_batch_sz(cl_kernel k) { return 256+256; }$/;"	f	file:
cl_kernel_delete	./cl_kernel.c	/^cl_kernel_delete(cl_kernel k)$/;"	f
cl_kernel_dup	./cl_kernel.c	/^cl_kernel_dup(cl_kernel from)$/;"	f
cl_kernel_get_attributes	./cl_kernel.c	/^cl_kernel_get_attributes(cl_kernel k)$/;"	f
cl_kernel_get_name	./cl_kernel.c	/^cl_kernel_get_name(cl_kernel k)$/;"	f
cl_kernel_get_simd_width	./cl_kernel.c	/^cl_kernel_get_simd_width(cl_kernel k)$/;"	f
cl_kernel_new	./cl_kernel.c	/^cl_kernel_new(cl_program p)$/;"	f
cl_kernel_set_arg	./cl_kernel.c	/^cl_kernel_set_arg(cl_kernel k, cl_uint index, size_t sz, const void *value)$/;"	f
cl_kernel_set_arg_svm_pointer	./cl_kernel.c	/^cl_kernel_set_arg_svm_pointer(cl_kernel k, cl_uint index, const void *value)$/;"	f
cl_kernel_set_exec_info	./cl_kernel.c	/^cl_kernel_set_exec_info(cl_kernel k, size_t n, const void *value)$/;"	f
cl_kernel_setup	./cl_kernel.c	/^cl_kernel_setup(cl_kernel k, gbe_kernel opaque)$/;"	f
cl_kernel_work_group_sz	./cl_kernel.c	/^cl_kernel_work_group_sz(cl_kernel ker,$/;"	f
cl_khr_extension_id_max	./cl_extensions.h	/^cl_khr_extension_id_max$/;"	e	enum:__anon5
cl_khr_icd_dispatch	./cl_khr_icd.c	/^struct _cl_icd_dispatch const cl_khr_icd_dispatch = {$/;"	v
cl_l3_cache_control	./cl_driver.h	/^typedef enum cl_l3_cache_control {$/;"	g
cl_l3_cache_control	./cl_driver.h	/^} cl_l3_cache_control;$/;"	t	typeref:enum:cl_l3_cache_control
cl_llccc_cache_control	./cl_driver.h	/^typedef enum cl_llccc_cache_control {$/;"	g
cl_llccc_cache_control	./cl_driver.h	/^} cl_llccc_cache_control;$/;"	t	typeref:enum:cl_llccc_cache_control
cl_malloc	./cl_alloc.c	/^cl_malloc(size_t sz)$/;"	f
cl_mapped_ptr	./cl_mem.h	/^}cl_mapped_ptr;$/;"	t	typeref:struct:_cl_mapped_ptr
cl_mem_add_ref	./cl_mem.c	/^cl_mem_add_ref(cl_mem mem)$/;"	f
cl_mem_allocate	./cl_mem.c	/^cl_mem_allocate(enum cl_mem_type type,$/;"	f
cl_mem_copy	./cl_mem.c	/^cl_mem_copy(cl_command_queue queue, cl_event event, cl_mem src_buf, cl_mem dst_buf,$/;"	f
cl_mem_copy_buffer_rect	./cl_mem.c	/^cl_mem_copy_buffer_rect(cl_command_queue queue, cl_event event, cl_mem src_buf, cl_mem dst_buf,$/;"	f
cl_mem_copy_buffer_to_image	./cl_mem.c	/^cl_mem_copy_buffer_to_image(cl_command_queue queue, cl_event event, cl_mem buffer, struct _cl_mem_image* image,$/;"	f
cl_mem_copy_image	./cl_mem.c	/^cl_mem_copy_image(struct _cl_mem_image *image,$/;"	f	file:
cl_mem_copy_image_region	./cl_mem.c	/^cl_mem_copy_image_region(const size_t *origin, const size_t *region,$/;"	f
cl_mem_copy_image_to_buffer	./cl_mem.c	/^cl_mem_copy_image_to_buffer(cl_command_queue queue, cl_event event, struct _cl_mem_image* image, cl_mem buffer,$/;"	f
cl_mem_copy_image_to_image	./cl_mem.c	/^cl_mem_copy_image_to_image(const size_t *dst_origin,const size_t *src_origin, const size_t *region,$/;"	f
cl_mem_delete	./cl_mem.c	/^cl_mem_delete(cl_mem mem)$/;"	f
cl_mem_dstr_cb	./cl_mem.h	/^typedef _cl_mem_dstr_cb* cl_mem_dstr_cb;$/;"	t
cl_mem_fill	./cl_mem.c	/^cl_mem_fill(cl_command_queue queue, cl_event e, const void * pattern, size_t pattern_size,$/;"	f
cl_mem_get_fd	./cl_mem.c	/^cl_mem_get_fd(cl_mem mem,$/;"	f
cl_mem_gl_delete	./cl_mem_gl.c	/^LOCAL void cl_mem_gl_delete(struct _cl_mem_gl_image *gl_image)$/;"	f
cl_mem_gl_image	./cl_mem.h	/^cl_mem_gl_image(cl_mem mem)$/;"	f
cl_mem_image	./cl_mem.h	/^cl_mem_image(cl_mem mem)$/;"	f
cl_mem_image_init	./cl_mem.h	/^cl_mem_image_init(struct _cl_mem_image *image, size_t w, size_t h,$/;"	f
cl_mem_is_valid	./cl_mem.c	/^cl_mem_is_valid(cl_mem mem, cl_context ctx)$/;"	f
cl_mem_kernel_copy_image	./cl_mem.c	/^cl_mem_kernel_copy_image(cl_command_queue queue, cl_event event, struct _cl_mem_image* src_image,$/;"	f
cl_mem_map	./cl_mem.c	/^cl_mem_map(cl_mem mem, int write)$/;"	f
cl_mem_map_auto	./cl_mem.c	/^cl_mem_map_auto(cl_mem mem, int write)$/;"	f
cl_mem_map_gtt	./cl_mem.c	/^cl_mem_map_gtt(cl_mem mem)$/;"	f
cl_mem_map_gtt_unsync	./cl_mem.c	/^cl_mem_map_gtt_unsync(cl_mem mem)$/;"	f
cl_mem_new_buffer	./cl_mem.c	/^cl_mem_new_buffer(cl_context ctx,$/;"	f
cl_mem_new_buffer_from_fd	./cl_mem.c	/^LOCAL cl_mem cl_mem_new_buffer_from_fd(cl_context ctx,$/;"	f
cl_mem_new_gl_buffer	./cl_mem_gl.c	/^cl_mem_new_gl_buffer(cl_context ctx,$/;"	f
cl_mem_new_gl_texture	./cl_mem_gl.c	/^cl_mem_new_gl_texture(cl_context ctx,$/;"	f
cl_mem_new_image	./cl_mem.c	/^cl_mem_new_image(cl_context context,$/;"	f
cl_mem_new_image_from_fd	./cl_mem.c	/^LOCAL cl_mem cl_mem_new_image_from_fd(cl_context ctx,$/;"	f
cl_mem_new_libva_buffer	./cl_mem.c	/^LOCAL cl_mem cl_mem_new_libva_buffer(cl_context ctx,$/;"	f
cl_mem_new_libva_image	./cl_mem.c	/^LOCAL cl_mem cl_mem_new_libva_image(cl_context ctx,$/;"	f
cl_mem_new_pipe	./cl_mem.c	/^cl_mem cl_mem_new_pipe(cl_context ctx,$/;"	f
cl_mem_new_sub_buffer	./cl_mem.c	/^cl_mem_new_sub_buffer(cl_mem buffer,$/;"	f
cl_mem_pin	./cl_mem.c	/^cl_mem_pin(cl_mem mem)$/;"	f
cl_mem_pipe	./cl_mem.h	/^cl_mem_pipe(cl_mem mem)$/;"	f
cl_mem_record_map_mem	./cl_mem.c	/^cl_mem_record_map_mem(cl_mem mem, void *ptr, void **mem_ptr, size_t offset,$/;"	f
cl_mem_replace_buffer	./cl_mem.c	/^void cl_mem_replace_buffer(cl_mem buffer, cl_buffer new_bo)$/;"	f
cl_mem_set_destructor_callback	./cl_mem.c	/^cl_mem_set_destructor_callback(cl_mem memobj,$/;"	f
cl_mem_svm_allocate	./cl_mem.c	/^void* cl_mem_svm_allocate(cl_context ctx, cl_svm_mem_flags flags,$/;"	f
cl_mem_svm_delete	./cl_mem.c	/^cl_mem_svm_delete(cl_context ctx, void *svm_pointer)$/;"	f
cl_mem_type	./cl_mem.h	/^enum cl_mem_type {$/;"	g
cl_mem_unmap	./cl_mem.c	/^cl_mem_unmap(cl_mem mem)$/;"	f
cl_mem_unmap_auto	./cl_mem.c	/^cl_mem_unmap_auto(cl_mem mem)$/;"	f
cl_mem_unmap_gtt	./cl_mem.c	/^cl_mem_unmap_gtt(cl_mem mem)$/;"	f
cl_mem_unpin	./cl_mem.c	/^cl_mem_unpin(cl_mem mem)$/;"	f
cl_mtllc_cache_control	./cl_driver.h	/^typedef enum cl_mtllc_cache_control {$/;"	g
cl_mtllc_cache_control	./cl_driver.h	/^} cl_mtllc_cache_control;$/;"	t	typeref:enum:cl_mtllc_cache_control
cl_object_destroy_base	./cl_base_object.c	/^cl_object_destroy_base(cl_base_object obj)$/;"	f
cl_object_init_base	./cl_base_object.c	/^cl_object_init_base(cl_base_object obj, cl_ulong magic)$/;"	f
cl_object_notify_cond	./cl_base_object.c	/^cl_object_notify_cond(cl_base_object obj)$/;"	f
cl_object_release_ownership	./cl_base_object.c	/^cl_object_release_ownership(cl_base_object obj, cl_bool withlock)$/;"	f
cl_object_take_ownership	./cl_base_object.c	/^cl_object_take_ownership(cl_base_object obj, cl_int wait, cl_bool withlock)$/;"	f
cl_object_wait_on_cond	./cl_base_object.c	/^cl_object_wait_on_cond(cl_base_object obj)$/;"	f
cl_program_add_ref	./cl_program.c	/^cl_program_add_ref(cl_program p)$/;"	f
cl_program_build	./cl_program.c	/^cl_program_build(cl_program p, const char *options)$/;"	f
cl_program_compile	./cl_program.c	/^cl_program_compile(cl_program            p,$/;"	f
cl_program_create_from_binary	./cl_program.c	/^cl_program_create_from_binary(cl_context             ctx,$/;"	f
cl_program_create_from_llvm	./cl_program.c	/^cl_program_create_from_llvm(cl_context ctx,$/;"	f
cl_program_create_from_source	./cl_program.c	/^cl_program_create_from_source(cl_context ctx,$/;"	f
cl_program_create_kernel	./cl_program.c	/^cl_program_create_kernel(cl_program p, const char *name, cl_int *errcode_ret)$/;"	f
cl_program_create_kernels_in_program	./cl_program.c	/^cl_program_create_kernels_in_program(cl_program p, cl_kernel* ker)$/;"	f
cl_program_create_with_built_in_kernles	./cl_program.c	/^cl_program_create_with_built_in_kernles(cl_context     ctx,$/;"	f
cl_program_delete	./cl_program.c	/^cl_program_delete(cl_program p)$/;"	f
cl_program_get_global_variable_size	./cl_program.c	/^LOCAL size_t cl_program_get_global_variable_size(cl_program prog) {$/;"	f
cl_program_get_kernel_names	./cl_program.c	/^cl_program_get_kernel_names(cl_program p, size_t size, char *names, size_t *size_ret)$/;"	f
cl_program_link	./cl_program.c	/^cl_program_link(cl_context            context,$/;"	f
cl_program_load_gen_program	./cl_program.c	/^cl_program_load_gen_program(cl_program p)$/;"	f	file:
cl_program_new	./cl_program.c	/^cl_program_new(cl_context ctx)$/;"	f
cl_program_release_binary	./cl_program.c	/^cl_program_release_binary(cl_program p)$/;"	f	file:
cl_program_release_sources	./cl_program.c	/^cl_program_release_sources(cl_program p)$/;"	f	file:
cl_realloc	./cl_alloc.c	/^cl_realloc(void *ptr, size_t sz)$/;"	f
cl_report_set_all_freed	./cl_alloc.c	/^cl_report_set_all_freed(void)$/;"	f
cl_report_unfreed	./cl_alloc.c	/^cl_report_unfreed(void)$/;"	f
cl_sampler_add_ref	./cl_sampler.c	/^cl_sampler_add_ref(cl_sampler sampler)$/;"	f
cl_sampler_delete	./cl_sampler.c	/^cl_sampler_delete(cl_sampler sampler)$/;"	f
cl_self_test	./cl_device_id.c	/^cl_self_test(cl_device_id device, cl_self_test_res atomic_in_l3_flag)$/;"	f
cl_self_test_res	./cl_driver.h	/^typedef enum cl_self_test_res{$/;"	g
cl_self_test_res	./cl_driver.h	/^} cl_self_test_res;$/;"	t	typeref:enum:cl_self_test_res
cl_set_sampler_arg_slot	./cl_sampler.c	/^int cl_set_sampler_arg_slot(cl_kernel k, int index, cl_sampler sampler)$/;"	f
cl_set_varying_payload	./cl_command_queue_gen7.c	/^cl_set_varying_payload(const cl_kernel ker,$/;"	f	file:
cl_target_cache_control	./cl_driver.h	/^typedef enum cl_target_cache_control {$/;"	g
cl_target_cache_control	./cl_driver.h	/^} cl_target_cache_control;$/;"	t	typeref:enum:cl_target_cache_control
cl_to_clk	./cl_sampler.c	/^uint32_t cl_to_clk(cl_bool normalized_coords,$/;"	f
cl_upload_constant_buffer	./cl_command_queue_gen7.c	/^cl_upload_constant_buffer(cl_command_queue queue, cl_kernel ker, cl_gpgpu gpgpu)$/;"	f	file:
clkSamplerValue	./cl_sampler.h	/^  uint32_t clkSamplerValue;$/;"	m	struct:_cl_sampler
cmp	./performance.c	/^static int cmp(const void *a, const void *b)$/;"	f	file:
cmrtCleanup	./cl_cmrt.cpp	/^static CmrtCleanup cmrtCleanup;$/;"	v	file:
cmrt_build_program	./cl_cmrt.cpp	/^cl_int cmrt_build_program(cl_program p, const char *options)$/;"	f
cmrt_create_kernel	./cl_cmrt.cpp	/^void* cmrt_create_kernel(cl_program p, const char *name)$/;"	f
cmrt_destroy_device	./cl_cmrt.cpp	/^cl_int cmrt_destroy_device(cl_device_id device)$/;"	f
cmrt_destroy_event	./cl_cmrt.cpp	/^cl_int cmrt_destroy_event(cl_command_queue cq)$/;"	f
cmrt_destroy_kernel	./cl_cmrt.cpp	/^cl_int cmrt_destroy_kernel(cl_kernel k)$/;"	f
cmrt_destroy_memory	./cl_cmrt.cpp	/^cl_int cmrt_destroy_memory(cl_mem mem)$/;"	f
cmrt_destroy_program	./cl_cmrt.cpp	/^cl_int cmrt_destroy_program(cl_program p)$/;"	f
cmrt_device	./cl_device_id.h	/^  void* cmrt_device;  \/\/realtype: CmDevice*$/;"	m	struct:_cl_device_id
cmrt_enqueue	./cl_cmrt.cpp	/^cl_int cmrt_enqueue(cl_command_queue cq, cl_kernel k, const size_t* global_work_size, const size_t* local_work_size)$/;"	f
cmrt_kernel	./cl_kernel.h	/^  void* cmrt_kernel;          \/* CmKernel* *\/$/;"	m	struct:_cl_kernel
cmrt_mem	./cl_mem.h	/^  void* cmrt_mem;$/;"	m	struct:_cl_mem
cmrt_mem_type	./cl_mem.h	/^  uint8_t cmrt_mem_type;    \/* CmBuffer, CmSurface2D, ... *\/$/;"	m	struct:_cl_mem
cmrt_program	./cl_program.h	/^  void* cmrt_program;      \/* real type: CmProgram* *\/$/;"	m	struct:_cl_program
cmrt_set_kernel_arg	./cl_cmrt.cpp	/^cl_int cmrt_set_kernel_arg(cl_kernel k, cl_uint index, size_t sz, const void *value)$/;"	f
cmrt_wait_for_task_finished	./cl_cmrt.cpp	/^cl_int cmrt_wait_for_task_finished(cl_command_queue cq)$/;"	f
coherence_type	./intel/intel_structs.h	/^    uint32_t coherence_type:1;$/;"	m	struct:gen7_surface_state::__anon40
command_complete	./cl_driver.h	/^  command_complete  = 0$/;"	e	enum:gpu_command_status
command_queued	./cl_driver.h	/^  command_queued    = 3,$/;"	e	enum:gpu_command_status
command_running	./cl_driver.h	/^  command_running   = 1,$/;"	e	enum:gpu_command_status
command_submitted	./cl_driver.h	/^  command_submitted = 2,$/;"	e	enum:gpu_command_status
compile_wg_sz	./cl_kernel.h	/^  size_t compile_wg_sz[3];    \/* Required workgroup size by __attribute__((reqd_work_gro$/;"	m	struct:_cl_kernel
compilerLoaded	./cl_gbe_loader.cpp	/^  bool compilerLoaded;$/;"	m	struct:GbeLoaderInitializer	file:
compiler_available	./cl_device_id.h	/^  cl_bool  compiler_available;$/;"	m	struct:_cl_device_id
compiler_program_build_from_llvm	./cl_gbe_loader.cpp	/^gbe_program_build_from_llvm_cb *compiler_program_build_from_llvm = NULL;$/;"	v
compiler_program_check_opt	./cl_gbe_loader.cpp	/^gbe_program_check_opt_cb *compiler_program_check_opt = NULL;$/;"	v
compiler_program_clean_llvm_resource	./cl_gbe_loader.cpp	/^gbe_program_clean_llvm_resource_cb *compiler_program_clean_llvm_resource = NULL;$/;"	v
compiler_program_compile_from_source	./cl_gbe_loader.cpp	/^gbe_program_compile_from_source_cb *compiler_program_compile_from_source = NULL;$/;"	v
compiler_program_link_program	./cl_gbe_loader.cpp	/^gbe_program_link_program_cb *compiler_program_link_program = NULL;$/;"	v
compiler_program_new_from_llvm	./cl_gbe_loader.cpp	/^gbe_program_new_from_llvm_cb *compiler_program_new_from_llvm = NULL;$/;"	v
compiler_program_new_from_llvm_binary	./cl_gbe_loader.cpp	/^gbe_program_new_from_llvm_binary_cb *compiler_program_new_from_llvm_binary = NULL;$/;"	v
compiler_program_new_from_llvm_file	./cl_gbe_loader.cpp	/^gbe_program_new_from_llvm_file_cb *compiler_program_new_from_llvm_file = NULL;$/;"	v
compiler_program_new_from_source	./cl_gbe_loader.cpp	/^gbe_program_new_from_source_cb *compiler_program_new_from_source = NULL;$/;"	v
compiler_program_new_gen_program	./cl_gbe_loader.cpp	/^gbe_program_new_gen_program_cb *compiler_program_new_gen_program = NULL;$/;"	v
compiler_program_serialize_to_binary	./cl_gbe_loader.cpp	/^gbe_program_serialize_to_binary_cb *compiler_program_serialize_to_binary = NULL;$/;"	v
cond	./cl_base_object.h	/^  pthread_cond_t cond;   \/* Condition to wait for getting the object *\/$/;"	m	struct:_cl_base_object
conherency_type	./intel/intel_structs.h	/^    uint32_t conherency_type:1;$/;"	m	struct:gen8_surface_state::__anon49
const_ptr	./cl_enqueue.h	/^  const void *const_ptr;     \/* Const ptr for memory read *\/$/;"	m	struct:_enqueue_data
constant_b	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } constant_b;$/;"	m	struct:intel_gpgpu	typeref:struct:intel_gpgpu::__anon14
constant_cache_invalidation_enable	./intel/intel_structs.h	/^    uint32_t constant_cache_invalidation_enable : BITFIELD_BIT(3);$/;"	m	struct:gen6_pipe_control::__anon82
constant_cache_invalidation_enable	./intel/intel_structs.h	/^    uint32_t constant_cache_invalidation_enable : BITFIELD_BIT(3);$/;"	m	struct:gen8_pipe_control::__anon87
context_id	./performance.c	/^  uintptr_t context_id;$/;"	m	struct:context_storage_node	file:
context_storage	./performance.c	/^  context_storage_node * context_storage;$/;"	m	struct:storage	file:
context_storage_node	./performance.c	/^typedef struct context_storage_node$/;"	s	file:
context_storage_node	./performance.c	/^} context_storage_node;$/;"	t	typeref:struct:context_storage_node	file:
cookie	./cl_command_queue.h	/^  cl_uint cookie;$/;"	m	struct:_cl_command_queue_enqueue_worker
copy_helper	./cl_device_enqueue.c	/^    void *copy_helper;     \/\/ IFF (1<<25)$/;"	m	struct:Block_literal::Block_descriptor_1	file:
cpp	./x11/dricommon.h	/^    unsigned int cpp;$/;"	m	struct:dri_buffer::__anon112
cpp	./x11/va_dri2.h	/^    unsigned int cpp;$/;"	m	struct:__anon111
cs_stall	./intel/intel_structs.h	/^    uint32_t cs_stall : BITFIELD_BIT(20);$/;"	m	struct:gen6_pipe_control::__anon82
cs_stall	./intel/intel_structs.h	/^    uint32_t cs_stall : BITFIELD_BIT(20);$/;"	m	struct:gen8_pipe_control::__anon87
ctx	./cl_accelerator_intel.h	/^  cl_context ctx;            \/* Context it belongs to *\/$/;"	m	struct:_cl_accelerator_intel
ctx	./cl_command_queue.h	/^  cl_context ctx;                      \/* Its parent context *\/$/;"	m	struct:_cl_command_queue
ctx	./cl_event.h	/^  cl_context ctx;             \/* The context associated with event *\/$/;"	m	struct:_cl_event
ctx	./cl_mem.h	/^  cl_context ctx;           \/* Context it belongs to *\/$/;"	m	struct:_cl_mem
ctx	./cl_program.h	/^  cl_context ctx;         \/* Its parent context *\/$/;"	m	struct:_cl_program
ctx	./cl_sampler.h	/^  cl_context ctx;             \/* Context it belongs to *\/$/;"	m	struct:_cl_sampler
ctx	./intel/intel_driver.h	/^  drm_intel_context *ctx;$/;"	m	struct:intel_driver
ctxmutex	./intel/intel_driver.h	/^  pthread_mutex_t ctxmutex;$/;"	m	struct:intel_driver
cube_control_mode	./intel/intel_structs.h	/^    uint32_t cube_control_mode:1;$/;"	m	struct:gen6_sampler_state::__anon100
cube_control_mode	./intel/intel_structs.h	/^    uint32_t cube_control_mode:1;$/;"	m	struct:gen7_sampler_state::__anon104
cube_control_mode	./intel/intel_structs.h	/^    uint32_t cube_control_mode:1;$/;"	m	struct:gen8_sampler_state::__anon108
cube_ewa	./intel/intel_structs.h	/^    uint32_t cube_ewa:1;$/;"	m	struct:gen8_surface_state::__anon49
cube_neg_x	./intel/intel_structs.h	/^    uint32_t cube_neg_x:1;$/;"	m	struct:gen7_surface_state::__anon34
cube_neg_x	./intel/intel_structs.h	/^    uint32_t cube_neg_x:1;$/;"	m	struct:gen8_surface_state::__anon42
cube_neg_y	./intel/intel_structs.h	/^    uint32_t cube_neg_y:1;$/;"	m	struct:gen7_surface_state::__anon34
cube_neg_y	./intel/intel_structs.h	/^    uint32_t cube_neg_y:1;$/;"	m	struct:gen8_surface_state::__anon42
cube_neg_z	./intel/intel_structs.h	/^    uint32_t cube_neg_z:1;$/;"	m	struct:gen7_surface_state::__anon34
cube_neg_z	./intel/intel_structs.h	/^    uint32_t cube_neg_z:1;$/;"	m	struct:gen8_surface_state::__anon42
cube_pos_x	./intel/intel_structs.h	/^    uint32_t cube_pos_x:1;$/;"	m	struct:gen7_surface_state::__anon34
cube_pos_x	./intel/intel_structs.h	/^    uint32_t cube_pos_x:1;$/;"	m	struct:gen8_surface_state::__anon42
cube_pos_y	./intel/intel_structs.h	/^    uint32_t cube_pos_y:1;$/;"	m	struct:gen7_surface_state::__anon34
cube_pos_y	./intel/intel_structs.h	/^    uint32_t cube_pos_y:1;$/;"	m	struct:gen8_surface_state::__anon42
cube_pos_z	./intel/intel_structs.h	/^    uint32_t cube_pos_z:1;$/;"	m	struct:gen7_surface_state::__anon34
cube_pos_z	./intel/intel_structs.h	/^    uint32_t cube_pos_z:1;$/;"	m	struct:gen8_surface_state::__anon42
curb	./intel/intel_gpgpu.h	/^  } curb;$/;"	m	struct:intel_gpgpu	typeref:struct:intel_gpgpu::__anon20
curbe	./cl_kernel.h	/^  char *curbe;                \/* One curbe per kernel *\/$/;"	m	struct:_cl_kernel
curbe_offset	./intel/intel_gpgpu.h	/^    uint32_t curbe_offset;$/;"	m	struct:intel_gpgpu::__anon19
curbe_read_len	./intel/intel_structs.h	/^    uint32_t curbe_read_len:16;            \/* in GRFs *\/$/;"	m	struct:gen6_interface_descriptor::__anon25
curbe_read_len	./intel/intel_structs.h	/^    uint32_t curbe_read_len:16;            \/* in GRFs *\/$/;"	m	struct:gen8_interface_descriptor::__anon32
curbe_read_offset	./intel/intel_structs.h	/^    uint32_t curbe_read_offset:16;         \/* in GRFs *\/$/;"	m	struct:gen6_interface_descriptor::__anon25
curbe_read_offset	./intel/intel_structs.h	/^    uint32_t curbe_read_offset:16;         \/* in GRFs *\/$/;"	m	struct:gen8_interface_descriptor::__anon32
curbe_size	./intel/intel_structs.h	/^    uint32_t curbe_size:16; \/* in GRFs *\/$/;"	m	struct:gen6_vfe_state_inline::__anon77
curbe_sz	./cl_driver.h	/^  uint32_t curbe_sz;       \/* total size of all curbes *\/$/;"	m	struct:cl_gpgpu_kernel
curbe_sz	./cl_kernel.h	/^  size_t curbe_sz;            \/* Size of it *\/$/;"	m	struct:_cl_kernel
current_count	./performance.c	/^  int current_count;$/;"	m	struct:kernel_storage_node	file:
data	./intel/intel_structs.h	/^    uint32_t data;$/;"	m	struct:gen6_pipe_control::__anon84
data	./intel/intel_structs.h	/^    uint32_t data;$/;"	m	struct:gen6_pipe_control::__anon85
data	./intel/intel_structs.h	/^    uint32_t data;$/;"	m	struct:gen8_pipe_control::__anon89
data	./intel/intel_structs.h	/^    uint32_t data;$/;"	m	struct:gen8_pipe_control::__anon90
data	./intel/intel_structs.h	/^    uint32_t data;$/;"	m	struct:gen8_pipe_control::__anon91
dc_flush_enable	./intel/intel_structs.h	/^    uint32_t dc_flush_enable : BITFIELD_BIT(5);$/;"	m	struct:gen6_pipe_control::__anon82
dc_flush_enable	./intel/intel_structs.h	/^    uint32_t dc_flush_enable : BITFIELD_BIT(5);$/;"	m	struct:gen8_pipe_control::__anon87
debug_counter_control	./intel/intel_structs.h	/^    uint32_t debug_counter_control:2;$/;"	m	struct:gen6_vfe_state_inline::__anon75
debug_object_id	./intel/intel_structs.h	/^    uint32_t debug_object_id:24;$/;"	m	struct:gen6_vfe_state_inline::__anon76
default_color_mode	./intel/intel_structs.h	/^    uint32_t default_color_mode:1; $/;"	m	struct:gen6_sampler_state::__anon99
default_color_mode	./intel/intel_structs.h	/^    uint32_t default_color_mode:1;$/;"	m	struct:gen7_sampler_state::__anon103
default_color_mode	./intel/intel_structs.h	/^    uint32_t default_color_mode:1;$/;"	m	struct:gen8_sampler_state::__anon107
default_color_pointer	./intel/intel_structs.h	/^    uint32_t default_color_pointer:27; $/;"	m	struct:gen6_sampler_state::__anon101
default_color_pointer	./intel/intel_structs.h	/^    uint32_t default_color_pointer:27;$/;"	m	struct:gen7_sampler_state::__anon105
denorm_mode	./intel/intel_structs.h	/^    uint32_t denorm_mode:1;$/;"	m	struct:gen8_interface_descriptor::__anon29
depend_event_num	./cl_event.h	/^  cl_uint depend_event_num;   \/* The depend events number. *\/$/;"	m	struct:_cl_event
depend_events	./cl_event.h	/^  cl_event *depend_events;    \/* The events must complete before this. May disappear after they have completed - see cl_event_delete_depslist*\/$/;"	m	struct:_cl_event
depth	./cl_mem.h	/^  size_t w, h, depth;             \/* only for images (depth is only for 3D images) *\/$/;"	m	struct:_cl_mem_image
depth	./intel/intel_cl_gl_share_image_info.h	/^  size_t depth;$/;"	m	struct:_intel_cl_gl_share_image_info
depth	./intel/intel_structs.h	/^    uint32_t depth:11;$/;"	m	struct:gen7_surface_state::__anon37
depth	./intel/intel_structs.h	/^    uint32_t depth:11;$/;"	m	struct:gen8_surface_state::__anon45
depth_cache_flush_enable	./intel/intel_structs.h	/^    uint32_t depth_cache_flush_enable : BITFIELD_BIT(0);$/;"	m	struct:gen6_pipe_control::__anon82
depth_cache_flush_enable	./intel/intel_structs.h	/^    uint32_t depth_cache_flush_enable : BITFIELD_BIT(0);$/;"	m	struct:gen8_pipe_control::__anon87
depth_stall_enable	./intel/intel_structs.h	/^    uint32_t depth_stall_enable : BITFIELD_BIT(13);$/;"	m	struct:gen6_pipe_control::__anon82
depth_stall_enable	./intel/intel_structs.h	/^    uint32_t depth_stall_enable : BITFIELD_BIT(13);$/;"	m	struct:gen8_pipe_control::__anon87
desc	./cl_accelerator_intel.h	/^  } desc;                     \/* save desc before we decide how to handle it *\/$/;"	m	struct:_cl_accelerator_intel	typeref:union:_cl_accelerator_intel::__anon1
desc0	./intel/intel_structs.h	/^  } desc0;$/;"	m	struct:gen6_interface_descriptor	typeref:struct:gen6_interface_descriptor::__anon21
desc0	./intel/intel_structs.h	/^  } desc0;$/;"	m	struct:gen8_interface_descriptor	typeref:struct:gen8_interface_descriptor::__anon27
desc1	./intel/intel_structs.h	/^  } desc1;$/;"	m	struct:gen6_interface_descriptor	typeref:struct:gen6_interface_descriptor::__anon22
desc1	./intel/intel_structs.h	/^  } desc1;$/;"	m	struct:gen8_interface_descriptor	typeref:struct:gen8_interface_descriptor::__anon28
desc2	./intel/intel_structs.h	/^  } desc2;$/;"	m	struct:gen6_interface_descriptor	typeref:struct:gen6_interface_descriptor::__anon23
desc2	./intel/intel_structs.h	/^  } desc2;$/;"	m	struct:gen8_interface_descriptor	typeref:struct:gen8_interface_descriptor::__anon29
desc3	./intel/intel_structs.h	/^  } desc3;$/;"	m	struct:gen6_interface_descriptor	typeref:struct:gen6_interface_descriptor::__anon24
desc3	./intel/intel_structs.h	/^  } desc3;$/;"	m	struct:gen8_interface_descriptor	typeref:struct:gen8_interface_descriptor::__anon30
desc4	./intel/intel_structs.h	/^  } desc4;$/;"	m	struct:gen6_interface_descriptor	typeref:struct:gen6_interface_descriptor::__anon25
desc4	./intel/intel_structs.h	/^  } desc4;$/;"	m	struct:gen8_interface_descriptor	typeref:struct:gen8_interface_descriptor::__anon31
desc5	./intel/intel_structs.h	/^  } desc5;$/;"	m	struct:gen6_interface_descriptor	typeref:struct:gen6_interface_descriptor::__anon26
desc5	./intel/intel_structs.h	/^  } desc5;$/;"	m	struct:gen8_interface_descriptor	typeref:struct:gen8_interface_descriptor::__anon32
desc6	./intel/intel_structs.h	/^  uint32_t desc6; \/* unused *\/$/;"	m	struct:gen6_interface_descriptor
desc6	./intel/intel_structs.h	/^  } desc6;$/;"	m	struct:gen8_interface_descriptor	typeref:struct:gen8_interface_descriptor::__anon33
desc7	./intel/intel_structs.h	/^  uint32_t desc7; \/* unused *\/$/;"	m	struct:gen6_interface_descriptor
desc7	./intel/intel_structs.h	/^  uint32_t desc7; \/* unused *\/$/;"	m	struct:gen8_interface_descriptor
descbuffer	./cl_mem.h	/^  _cl_mem * descbuffer;$/;"	m	struct:_cl_mem_buffer1d_image
descriptor	./cl_device_enqueue.c	/^  } *descriptor;$/;"	m	struct:Block_literal	typeref:struct:Block_literal::Block_descriptor_1	file:
destination_address_type	./intel/intel_structs.h	/^    uint32_t destination_address_type : BITFIELD_BIT(2);$/;"	m	struct:gen6_pipe_control::__anon83
destination_address_type	./intel/intel_structs.h	/^    uint32_t destination_address_type : BITFIELD_BIT(2);$/;"	m	struct:gen8_pipe_control::__anon88
dev	./performance.c	/^  double dev;$/;"	m	struct:time_element	file:
device	./cl_command_queue.h	/^  cl_device_id device;                 \/* Its device *\/$/;"	m	struct:_cl_command_queue
device_enqueue_info_n	./cl_kernel.h	/^  uint32_t device_enqueue_info_n; \/* count of parent kernel's arguments buffers, as child enqueues' exec info *\/$/;"	m	struct:_cl_kernel
device_enqueue_infos	./cl_kernel.h	/^  void** device_enqueue_infos;   \/* parent kernel's arguments buffers, as child enqueues' exec info   *\/$/;"	m	struct:_cl_kernel
device_enqueue_ptr	./cl_kernel.h	/^  void* device_enqueue_ptr;     \/* device_enqueue buffer*\/$/;"	m	struct:_cl_kernel
device_id	./cl_device_id.h	/^  cl_uint  device_id;$/;"	m	struct:_cl_device_id
device_id	./intel/intel_driver.h	/^  int device_id;$/;"	m	struct:intel_driver
device_num	./cl_context.h	/^  cl_uint device_num;               \/* Devices number of this context *\/$/;"	m	struct:_cl_context
device_type	./cl_device_id.h	/^  cl_device_type device_type;$/;"	m	struct:_cl_device_id
devices	./cl_context.h	/^  cl_device_id* devices;            \/* All devices belong to this context *\/$/;"	m	struct:_cl_context
disable	./intel/intel_structs.h	/^    uint32_t disable:1; $/;"	m	struct:gen6_sampler_state::__anon99
disable	./intel/intel_structs.h	/^    uint32_t disable:1;$/;"	m	struct:gen7_sampler_state::__anon103
disable	./intel/intel_structs.h	/^    uint32_t disable:1;$/;"	m	struct:gen8_sampler_state::__anon107
dispose_helper	./cl_device_enqueue.c	/^    void *dispose_helper;             \/\/ IFF (1<<25)$/;"	m	struct:Block_literal::Block_descriptor_1	file:
dlhCMRT	./cl_cmrt.cpp	/^static void* dlhCMRT = NULL;$/;"	v	file:
dlhCompiler	./cl_gbe_loader.cpp	/^  void *dlhCompiler;$/;"	m	struct:GbeLoaderInitializer	file:
dlhInterp	./cl_gbe_loader.cpp	/^  void *dlhInterp;$/;"	m	struct:GbeLoaderInitializer	file:
double_fp_config	./cl_device_id.h	/^  cl_device_fp_config double_fp_config;$/;"	m	struct:_cl_device_id
drawable_hash	./x11/dricommon.h	/^  dri_drawable_t *drawable_hash[DRAWABLE_HASH_SZ];$/;"	m	struct:dri_state
dri2	./x11/dricommon.h	/^  } dri2;$/;"	m	union:dri_buffer	typeref:struct:dri_buffer::__anon112
dri2Reqtype	./x11/va_dri2str.h	/^    CARD8   dri2Reqtype;$/;"	m	struct:__anon114
dri2Reqtype	./x11/va_dri2str.h	/^    CARD8   dri2Reqtype;$/;"	m	struct:__anon116
dri2Reqtype	./x11/va_dri2str.h	/^    CARD8   dri2Reqtype;$/;"	m	struct:__anon118
dri2Reqtype	./x11/va_dri2str.h	/^    CARD8   dri2Reqtype;$/;"	m	struct:__anon120
dri2Reqtype	./x11/va_dri2str.h	/^    CARD8   dri2Reqtype;$/;"	m	struct:__anon121
dri2Reqtype	./x11/va_dri2str.h	/^    CARD8   dri2Reqtype;$/;"	m	struct:__anon122
dri2Reqtype	./x11/va_dri2str.h	/^    CARD8   dri2Reqtype;$/;"	m	struct:__anon124
dri2_drawable	./x11/dricommon.c	/^typedef struct dri2_drawable$/;"	s	file:
dri2_drawable_t	./x11/dricommon.c	/^} dri2_drawable_t;$/;"	t	typeref:struct:dri2_drawable	file:
driConnectedFlag	./x11/dricommon.h	/^  enum DRI_VER driConnectedFlag; \/* 0: disconnected, 2: DRI2 *\/$/;"	m	struct:dri_state	typeref:enum:dri_state::DRI_VER
dri_buffer	./x11/dricommon.h	/^union dri_buffer $/;"	u
dri_ctx	./intel/intel_driver.h	/^  struct dri_state *dri_ctx;$/;"	m	struct:intel_driver	typeref:struct:intel_driver::dri_state
dri_drawable	./x11/dricommon.h	/^typedef struct dri_drawable $/;"	s
dri_drawable_t	./x11/dricommon.h	/^} dri_drawable_t;$/;"	t	typeref:struct:dri_drawable
dri_state	./x11/dricommon.h	/^typedef struct dri_state$/;"	s
dri_state_close	./x11/dricommon.c	/^dri_state_close(dri_state_t *state) {$/;"	f
dri_state_create_drawable	./x11/dricommon.c	/^dri_state_create_drawable(dri_state_t *state, XID x_drawable)$/;"	f
dri_state_delete	./x11/dricommon.c	/^dri_state_delete(dri_state_t *state)$/;"	f
dri_state_destroy_drawable	./x11/dricommon.c	/^dri_state_destroy_drawable(dri_state_t *state, dri_drawable_t *dri_drwble)$/;"	f
dri_state_do_drawable_hash	./x11/dricommon.c	/^dri_state_do_drawable_hash(dri_state_t *state, XID drawable)$/;"	f
dri_state_free_drawable_hash	./x11/dricommon.c	/^dri_state_free_drawable_hash(dri_state_t *state)$/;"	f
dri_state_get_drawable	./x11/dricommon.c	/^dri_state_get_drawable(dri_state_t *state, XID drawable)$/;"	f
dri_state_get_rendering_buffer	./x11/dricommon.c	/^dri_state_get_rendering_buffer(dri_state_t *state, dri_drawable_t *dri_drwble)$/;"	f
dri_state_init_drawable_hash_table	./x11/dricommon.c	/^dri_state_init_drawable_hash_table(dri_state_t *state)$/;"	f
dri_state_new	./x11/dricommon.c	/^dri_state_new(void)$/;"	f
dri_state_release	./x11/dricommon.c	/^dri_state_release(dri_state_t *state) {$/;"	f
dri_state_swap_buffer	./x11/dricommon.c	/^dri_state_swap_buffer(dri_state_t *state, dri_drawable_t *dri_drwble)$/;"	f
dri_state_t	./x11/dricommon.h	/^} dri_state_t;$/;"	t	typeref:struct:dri_state
driver_version	./cl_device_id.h	/^  const char *driver_version;$/;"	m	struct:_cl_device_id
driver_version_sz	./cl_device_id.h	/^  size_t driver_version_sz;$/;"	m	struct:_cl_device_id
drm_intel_bo_get_size	./intel/intel_driver.c	/^static size_t drm_intel_bo_get_size(drm_intel_bo *bo) { return bo->size; }$/;"	f	file:
drm_intel_bo_get_virtual	./intel/intel_driver.c	/^static void* drm_intel_bo_get_virtual(drm_intel_bo *bo) { return bo->virtual; }$/;"	f	file:
drv	./cl_context.h	/^  cl_driver drv;                    \/* Handles HW or simulator *\/$/;"	m	struct:_cl_context
drv	./intel/intel_gpgpu.h	/^  struct intel_driver *drv;$/;"	m	struct:intel_gpgpu	typeref:struct:intel_gpgpu::intel_driver
dstr_cb_head	./cl_mem.h	/^  list_head dstr_cb_head;   \/* All destroy callbacks. *\/$/;"	m	struct:_cl_mem
dw0	./intel/intel_structs.h	/^    }dw0;$/;"	m	struct:gen7_vme_rd_lut_set	typeref:struct:gen7_vme_rd_lut_set::__anon93
dw0	./intel/intel_structs.h	/^    }dw0;$/;"	m	struct:gen7_vme_search_path_state	typeref:struct:gen7_vme_search_path_state::__anon92
dw0	./intel/intel_structs.h	/^  } dw0;$/;"	m	struct:gen6_pipe_control	typeref:struct:gen6_pipe_control::__anon81
dw0	./intel/intel_structs.h	/^  } dw0;$/;"	m	struct:gen8_pipe_control	typeref:struct:gen8_pipe_control::__anon86
dw1	./intel/intel_structs.h	/^    }dw1;$/;"	m	struct:gen7_vme_rd_lut_set	typeref:struct:gen7_vme_rd_lut_set::__anon94
dw1	./intel/intel_structs.h	/^  } dw1;$/;"	m	struct:gen6_pipe_control	typeref:struct:gen6_pipe_control::__anon82
dw1	./intel/intel_structs.h	/^  } dw1;$/;"	m	struct:gen8_pipe_control	typeref:struct:gen8_pipe_control::__anon87
dw14	./intel/intel_structs.h	/^    }dw14;$/;"	m	struct:gen7_vme_state	typeref:struct:gen7_vme_state::__anon97
dw15	./intel/intel_structs.h	/^    }dw15;$/;"	m	struct:gen7_vme_state	typeref:struct:gen7_vme_state::__anon98
dw2	./intel/intel_structs.h	/^    }dw2;$/;"	m	struct:gen7_vme_rd_lut_set	typeref:struct:gen7_vme_rd_lut_set::__anon95
dw2	./intel/intel_structs.h	/^  } dw2;$/;"	m	struct:gen6_pipe_control	typeref:struct:gen6_pipe_control::__anon83
dw2	./intel/intel_structs.h	/^  } dw2;$/;"	m	struct:gen8_pipe_control	typeref:struct:gen8_pipe_control::__anon88
dw3	./intel/intel_structs.h	/^    }dw3;$/;"	m	struct:gen7_vme_rd_lut_set	typeref:struct:gen7_vme_rd_lut_set::__anon96
dw3	./intel/intel_structs.h	/^  } dw3;$/;"	m	struct:gen6_pipe_control	typeref:struct:gen6_pipe_control::__anon84
dw3	./intel/intel_structs.h	/^  } dw3;$/;"	m	struct:gen8_pipe_control	typeref:struct:gen8_pipe_control::__anon89
dw4	./intel/intel_structs.h	/^  } dw4;$/;"	m	struct:gen6_pipe_control	typeref:struct:gen6_pipe_control::__anon85
dw4	./intel/intel_structs.h	/^  } dw4;$/;"	m	struct:gen8_pipe_control	typeref:struct:gen8_pipe_control::__anon90
dw5	./intel/intel_structs.h	/^  } dw5;$/;"	m	struct:gen8_pipe_control	typeref:struct:gen8_pipe_control::__anon91
eglExportDMABUFImageMESA_func	./intel/intel_driver.c	/^static PFNEGLEXPORTDMABUFIMAGEMESAPROC eglExportDMABUFImageMESA_func = NULL;$/;"	v	file:
egl_display	./cl_context.h	/^    cl_context_properties egl_display;$/;"	m	union:_cl_context_prop::__anon2
egl_image	./cl_mem.h	/^  EGLImage egl_image;$/;"	m	struct:_cl_mem_gl_image
enable_slm	./intel/intel_batchbuffer.h	/^  uint8_t enable_slm;$/;"	m	struct:intel_batchbuffer
end	./performance.c	/^static struct timeval start, end;$/;"	v	typeref:struct:	file:
endian_little	./cl_device_id.h	/^  cl_bool  endian_little;$/;"	m	struct:_cl_device_id
enqueue_data	./cl_enqueue.h	/^} enqueue_data;$/;"	t	typeref:struct:_enqueue_data
enqueue_node	./cl_event.h	/^  list_node enqueue_node;     \/* The node in the enqueue list. *\/$/;"	m	struct:_cl_event
enqueue_type	./cl_enqueue.h	/^} enqueue_type;$/;"	t	typeref:enum:__anon4
enqueued_events	./cl_command_queue.h	/^  list_head enqueued_events;$/;"	m	struct:_cl_command_queue_enqueue_worker
error_correction_support	./cl_device_id.h	/^  cl_bool  error_correction_support;$/;"	m	struct:_cl_device_id
event_num	./cl_context.h	/^  cl_uint event_num;                \/* All event number currently allocated *\/$/;"	m	struct:_cl_context
event_type	./cl_event.h	/^  cl_command_type event_type; \/* Event type. *\/$/;"	m	struct:_cl_event
events	./cl_context.h	/^  list_head events;                 \/* All event object currently allocated *\/$/;"	m	struct:_cl_context
exec_data	./cl_event.h	/^  enqueue_data exec_data; \/* Context for execute this event. *\/$/;"	m	struct:_cl_event
exec_info	./cl_kernel.h	/^  void** exec_info;             \/* The kernel's exec info *\/$/;"	m	struct:_cl_kernel
exec_info_n	./cl_kernel.h	/^  uint32_t exec_info_n;       \/* The kernel's exec info count *\/$/;"	m	struct:_cl_kernel
executed	./cl_event.h	/^  cl_bool executed;              \/* Indicat the callback function been called or not *\/$/;"	m	struct:_cl_event_user_callback
execution_capabilities	./cl_device_id.h	/^  cl_device_exec_capabilities execution_capabilities;$/;"	m	struct:_cl_device_id
ext_enabled	./cl_extensions.h	/^  int  ext_enabled;$/;"	m	struct:cl_extension_base
ext_id	./cl_extensions.h	/^  cl_extension_enum ext_id;$/;"	m	struct:cl_extension_base
ext_name	./cl_extensions.h	/^  char *ext_name;$/;"	m	struct:cl_extension_base
ext_str	./cl_extensions.h	/^  char ext_str[EXTENSTION_LENGTH];$/;"	m	struct:cl_extensions
extend_vfe_state_present	./intel/intel_structs.h	/^    uint32_t extend_vfe_state_present:1;$/;"	m	struct:gen6_vfe_state_inline::__anon74
extension_union	./cl_extensions.h	/^} extension_union;$/;"	t	typeref:union:__anon6
extensions	./cl_device_id.h	/^  const char extensions[EXTENSTION_LENGTH];$/;"	m	struct:_cl_device_id
extensions	./cl_extensions.h	/^  extension_union extensions[cl_khr_extension_id_max];$/;"	m	struct:cl_extensions
extensions	./cl_platform_id.h	/^  char *extensions;$/;"	m	struct:_cl_platform_id
extensions_sz	./cl_device_id.h	/^  size_t extensions_sz;$/;"	m	struct:_cl_device_id
extensions_sz	./cl_platform_id.h	/^  size_t extensions_sz;$/;"	m	struct:_cl_platform_id
fast_preempt	./intel/intel_structs.h	/^    uint32_t fast_preempt:1;$/;"	m	struct:gen6_vfe_state_inline::__anon75
fd	./cl_mem.h	/^  int fd;$/;"	m	struct:_cl_mem_gl_image
fd	./intel/intel_cl_gl_share_image_info.h	/^  int fd;$/;"	m	struct:_intel_cl_gl_share_image_info
fd	./intel/intel_driver.h	/^  int fd;$/;"	m	struct:intel_driver
fd	./x11/dricommon.h	/^  int fd;$/;"	m	struct:dri_state
filter	./cl_sampler.h	/^  cl_filter_mode filter;      \/* LINEAR \/ NEAREST mostly *\/$/;"	m	struct:_cl_sampler
find_context	./performance.c	/^static context_storage_node * find_context(cl_context context)$/;"	f	file:
find_kernel	./performance.c	/^static kernel_storage_node * find_kernel(context_storage_node *p_context, const char *kernel_name, const char *build_opt)$/;"	f	file:
flags	./cl_device_enqueue.c	/^  int flags;$/;"	m	struct:Block_literal	file:
flags	./cl_mem.h	/^  cl_mem_flags flags;       \/* Flags specified at the creation time *\/$/;"	m	struct:_cl_mem
flags	./cl_mem.h	/^  cl_svm_mem_flags flags;                 \/* Flags specified at the creation time *\/$/;"	m	struct:_cl_mem_pipe
flags	./cl_mem.h	/^  cl_svm_mem_flags flags;                 \/* Flags specified at the creation time *\/$/;"	m	struct:_cl_mem_svm
flags	./x11/dricommon.h	/^    unsigned int flags;$/;"	m	struct:dri_buffer::__anon112
flags	./x11/va_dri2.h	/^    unsigned int flags;$/;"	m	struct:__anon111
flexible_filter_coeff_size	./intel/intel_structs.h	/^    uint32_t flexible_filter_coeff_size:1;$/;"	m	struct:gen8_sampler_state::__anon109
flexible_filter_halign	./intel/intel_structs.h	/^    uint32_t flexible_filter_halign:1;$/;"	m	struct:gen8_sampler_state::__anon109
flexible_filter_mode	./intel/intel_structs.h	/^    uint32_t flexible_filter_mode:1;$/;"	m	struct:gen8_sampler_state::__anon109
flexible_filter_valign	./intel/intel_structs.h	/^    uint32_t flexible_filter_valign:1;$/;"	m	struct:gen8_sampler_state::__anon109
floating_point_mode	./intel/intel_structs.h	/^    uint32_t floating_point_mode:1;$/;"	m	struct:gen6_interface_descriptor::__anon22
floating_point_mode	./intel/intel_structs.h	/^    uint32_t floating_point_mode:1;$/;"	m	struct:gen8_interface_descriptor::__anon29
fmt	./cl_mem.h	/^  cl_image_format fmt;            \/* only for images *\/$/;"	m	struct:_cl_mem_image
free_func	./cl_enqueue.h	/^  void (CL_CALLBACK *free_func)( cl_command_queue queue,$/;"	m	struct:_enqueue_data
free_storage	./performance.c	/^static void free_storage()$/;"	f	file:
front_index	./x11/dricommon.c	/^  int front_index;$/;"	m	struct:dri2_drawable	file:
g	./intel/intel_structs.h	/^    float r,g,b,a;$/;"	m	struct:gen7_sampler_border_color
gateway_mmio_access	./intel/intel_structs.h	/^    uint32_t gateway_mmio_access:2;$/;"	m	struct:gen6_vfe_state_inline::__anon75
gbeLoader	./cl_gbe_loader.cpp	/^static struct GbeLoaderInitializer gbeLoader;$/;"	v	typeref:struct:GbeLoaderInitializer	file:
gen6_interface_descriptor	./intel/intel_structs.h	/^typedef struct gen6_interface_descriptor$/;"	s
gen6_interface_descriptor_t	./intel/intel_structs.h	/^} gen6_interface_descriptor_t;$/;"	t	typeref:struct:gen6_interface_descriptor
gen6_pipe_control	./intel/intel_structs.h	/^typedef struct gen6_pipe_control$/;"	s
gen6_pipe_control_t	./intel/intel_structs.h	/^} gen6_pipe_control_t;$/;"	t	typeref:struct:gen6_pipe_control
gen6_sampler_state	./intel/intel_structs.h	/^typedef struct gen6_sampler_state$/;"	s
gen6_sampler_state_t	./intel/intel_structs.h	/^} gen6_sampler_state_t;$/;"	t	typeref:struct:gen6_sampler_state
gen6_vfe_state_inline	./intel/intel_structs.h	/^typedef struct gen6_vfe_state_inline$/;"	s
gen6_vfe_state_inline_t	./intel/intel_structs.h	/^} gen6_vfe_state_inline_t;$/;"	t	typeref:struct:gen6_vfe_state_inline
gen7_media_surface_state	./intel/intel_structs.h	/^typedef struct gen7_media_surface_state$/;"	s
gen7_media_surface_state_t	./intel/intel_structs.h	/^} gen7_media_surface_state_t;$/;"	t	typeref:struct:gen7_media_surface_state
gen7_sampler_border_color	./intel/intel_structs.h	/^typedef struct gen7_sampler_border_color {$/;"	s
gen7_sampler_border_color_t	./intel/intel_structs.h	/^} gen7_sampler_border_color_t;$/;"	t	typeref:struct:gen7_sampler_border_color
gen7_sampler_state	./intel/intel_structs.h	/^typedef struct gen7_sampler_state$/;"	s
gen7_sampler_state_t	./intel/intel_structs.h	/^} gen7_sampler_state_t;$/;"	t	typeref:struct:gen7_sampler_state
gen7_surface_state	./intel/intel_structs.h	/^  gen7_surface_state_t gen7_surface_state;$/;"	m	union:gen_surface_state
gen7_surface_state	./intel/intel_structs.h	/^typedef struct gen7_surface_state$/;"	s
gen7_surface_state_t	./intel/intel_structs.h	/^} gen7_surface_state_t;$/;"	t	typeref:struct:gen7_surface_state
gen7_vme_rd_lut_set	./intel/intel_structs.h	/^typedef struct gen7_vme_rd_lut_set$/;"	s
gen7_vme_rd_lut_set_t	./intel/intel_structs.h	/^}gen7_vme_rd_lut_set_t;$/;"	t	typeref:struct:gen7_vme_rd_lut_set
gen7_vme_search_path_state	./intel/intel_structs.h	/^typedef struct gen7_vme_search_path_state$/;"	s
gen7_vme_search_path_state_t	./intel/intel_structs.h	/^}gen7_vme_search_path_state_t;$/;"	t	typeref:struct:gen7_vme_search_path_state
gen7_vme_state	./intel/intel_structs.h	/^typedef struct gen7_vme_state$/;"	s
gen7_vme_state_t	./intel/intel_structs.h	/^}gen7_vme_state_t;$/;"	t	typeref:struct:gen7_vme_state
gen8_interface_descriptor	./intel/intel_structs.h	/^typedef struct gen8_interface_descriptor$/;"	s
gen8_interface_descriptor_t	./intel/intel_structs.h	/^} gen8_interface_descriptor_t;$/;"	t	typeref:struct:gen8_interface_descriptor
gen8_pipe_control	./intel/intel_structs.h	/^typedef struct gen8_pipe_control$/;"	s
gen8_pipe_control_t	./intel/intel_structs.h	/^} gen8_pipe_control_t;$/;"	t	typeref:struct:gen8_pipe_control
gen8_sampler_state	./intel/intel_structs.h	/^typedef struct gen8_sampler_state$/;"	s
gen8_sampler_state_t	./intel/intel_structs.h	/^} gen8_sampler_state_t;$/;"	t	typeref:struct:gen8_sampler_state
gen8_surface_state	./intel/intel_structs.h	/^  gen8_surface_state_t gen8_surface_state;$/;"	m	union:gen_surface_state
gen8_surface_state	./intel/intel_structs.h	/^typedef struct gen8_surface_state$/;"	s
gen8_surface_state_t	./intel/intel_structs.h	/^} gen8_surface_state_t;$/;"	t	typeref:struct:gen8_surface_state
gen_surface_state	./intel/intel_structs.h	/^typedef union gen_surface_state$/;"	u
gen_surface_state_t	./intel/intel_structs.h	/^} gen_surface_state_t;$/;"	t	typeref:union:gen_surface_state
gen_ver	./intel/intel_driver.h	/^  int gen_ver;$/;"	m	struct:intel_driver
generic_media_state_clear	./intel/intel_structs.h	/^    uint32_t generic_media_state_clear : BITFIELD_BIT(16);$/;"	m	struct:gen6_pipe_control::__anon82
generic_media_state_clear	./intel/intel_structs.h	/^    uint32_t generic_media_state_clear : BITFIELD_BIT(16);$/;"	m	struct:gen8_pipe_control::__anon87
getDRI2State	./x11/dricommon.c	/^getDRI2State(Display* dpy, int screen, char **driver_name)$/;"	f
get_cl_tiling	./intel/intel_driver.c	/^static int get_cl_tiling(uint32_t drm_tiling)$/;"	f	file:
get_intel_tiling	./intel/intel_driver.c	/^static int32_t get_intel_tiling(cl_int tiling, uint32_t *intel_tiling)$/;"	f	file:
get_mem_type_from_target	./intel/intel_driver.c	/^get_mem_type_from_target(GLenum texture_target, cl_mem_object_type *type)$/;"	f	file:
get_program_global_data	./cl_program.c	/^static cl_int get_program_global_data(cl_program prog) {$/;"	f	file:
get_required_egl_extensions	./intel/intel_driver.c	/^get_required_egl_extensions(){$/;"	f	file:
get_surface_type	./intel/intel_gpgpu.c	/^static uint32_t get_surface_type(intel_gpgpu_t *gpgpu, int index, cl_mem_object_type type)$/;"	f	file:
gl_context	./cl_context.h	/^  cl_context_properties gl_context;$/;"	m	struct:_cl_context_prop
gl_format	./intel/intel_cl_gl_share_image_info.h	/^  unsigned int gl_format;$/;"	m	struct:_intel_cl_gl_share_image_info
gl_type	./cl_context.h	/^  enum _cl_gl_context_type gl_type;$/;"	m	struct:_cl_context_prop	typeref:enum:_cl_context_prop::_cl_gl_context_type
global_barrier_enable	./intel/intel_structs.h	/^    uint32_t global_barrier_enable:1;$/;"	m	struct:gen8_interface_descriptor::__anon33
global_data	./cl_program.h	/^  cl_buffer  global_data;$/;"	m	struct:_cl_program
global_data_ptr	./cl_program.h	/^  char * global_data_ptr;$/;"	m	struct:_cl_program
global_mem_cache_line_size	./cl_device_id.h	/^  cl_uint  global_mem_cache_line_size;$/;"	m	struct:_cl_device_id
global_mem_cache_size	./cl_device_id.h	/^  cl_ulong global_mem_cache_size;$/;"	m	struct:_cl_device_id
global_mem_cache_type	./cl_device_id.h	/^  cl_device_mem_cache_type global_mem_cache_type;$/;"	m	struct:_cl_device_id
global_mem_size	./cl_device_id.h	/^  cl_ulong global_mem_size;$/;"	m	struct:_cl_device_id
global_snapshot_count_reset	./intel/intel_structs.h	/^    uint32_t global_snapshot_count_reset : BITFIELD_BIT(19);$/;"	m	struct:gen6_pipe_control::__anon82
global_snapshot_count_reset	./intel/intel_structs.h	/^    uint32_t global_snapshot_count_reset : BITFIELD_BIT(19);$/;"	m	struct:gen8_pipe_control::__anon87
global_variable_preferred_total_size	./cl_device_id.h	/^  size_t  global_variable_preferred_total_size;$/;"	m	struct:_cl_device_id
global_work_offset	./cl_device_enqueue.c	/^  int global_work_offset[3];$/;"	m	struct:ndrange_info_t	file:
global_work_size	./cl_device_enqueue.c	/^  int global_work_size[3];$/;"	m	struct:ndrange_info_t	file:
global_work_sz	./cl_kernel.h	/^  size_t global_work_sz[3];    \/* maximum global size that can be used to execute a kernel$/;"	m	struct:_cl_kernel
glx_display	./cl_context.h	/^    cl_context_properties glx_display;$/;"	m	union:_cl_context_prop::__anon2
gpgpu	./cl_enqueue.h	/^  cl_gpgpu gpgpu;$/;"	m	struct:_enqueue_data
gpgpu	./intel/intel_gpgpu.h	/^  struct intel_gpgpu *gpgpu;$/;"	m	struct:intel_gpgpu_node	typeref:struct:intel_gpgpu_node::intel_gpgpu
gpgpu_l3_config_reg1	./intel/intel_gpgpu.c	/^static const uint32_t gpgpu_l3_config_reg1[] = {$/;"	v	file:
gpgpu_l3_config_reg2	./intel/intel_gpgpu.c	/^static const uint32_t gpgpu_l3_config_reg2[] = {$/;"	v	file:
gpgpu_list	./intel/intel_driver.h	/^  struct intel_gpgpu_node *gpgpu_list;$/;"	m	struct:intel_driver	typeref:struct:intel_driver::intel_gpgpu_node
gpgpu_mode	./intel/intel_structs.h	/^    uint32_t gpgpu_mode:1;          \/* 0 for SNB!!! *\/$/;"	m	struct:gen6_vfe_state_inline::__anon75
gpu_command_status	./cl_driver.h	/^typedef enum gpu_command_status {$/;"	g
gpu_command_status	./cl_driver.h	/^} gpu_command_status;$/;"	t	typeref:enum:gpu_command_status
green_clear_color	./intel/intel_structs.h	/^    uint32_t green_clear_color:1;$/;"	m	struct:gen8_surface_state::__anon57
grf_blocks	./cl_driver.h	/^  uint32_t grf_blocks;     \/* register blocks kernel wants (in 8 reg blocks) *\/$/;"	m	struct:cl_gpgpu_kernel
group_threads_num	./intel/intel_structs.h	/^    uint32_t group_threads_num:10;        \/* 0..64, 0 - no barrier use *\/$/;"	m	struct:gen8_interface_descriptor::__anon33
group_threads_num	./intel/intel_structs.h	/^    uint32_t group_threads_num:8;        \/* 0..64, 0 - no barrier use *\/$/;"	m	struct:gen6_interface_descriptor::__anon26
h	./cl_mem.h	/^  size_t w, h, depth;             \/* only for images (depth is only for 3D images) *\/$/;"	m	struct:_cl_mem_image
h	./intel/intel_cl_gl_share_image_info.h	/^  size_t h;$/;"	m	struct:_intel_cl_gl_share_image_info
half_fp_config	./cl_device_id.h	/^  cl_device_fp_config half_fp_config;$/;"	m	struct:_cl_device_id
half_pitch_for_chroma	./intel/intel_structs.h	/^    uint32_t half_pitch_for_chroma:1;$/;"	m	struct:gen7_media_surface_state::__anon68
has_backbuffer	./x11/dricommon.c	/^  int has_backbuffer;$/;"	m	struct:dri2_drawable	file:
head_node	./cl_utils.h	/^  list_node head_node;$/;"	m	struct:list_head
headerCompare	./cl_program.c	/^LOCAL cl_bool headerCompare(const unsigned char *BufPtr, BINARY_HEADER_INDEX index)$/;"	f
height	./intel/intel_structs.h	/^    uint32_t height:14;$/;"	m	struct:gen7_media_surface_state::__anon67
height	./intel/intel_structs.h	/^    uint32_t height:14;$/;"	m	struct:gen7_surface_state::__anon36
height	./intel/intel_structs.h	/^    uint32_t height:14;$/;"	m	struct:gen8_surface_state::__anon44
height	./x11/dricommon.c	/^  int height;$/;"	m	struct:dri2_drawable	file:
height	./x11/dricommon.h	/^  unsigned int height;$/;"	m	struct:dri_drawable
horizontal_alignment	./intel/intel_structs.h	/^    uint32_t horizontal_alignment:1;$/;"	m	struct:gen7_surface_state::__anon34
horizontal_alignment	./intel/intel_structs.h	/^    uint32_t horizontal_alignment:2;$/;"	m	struct:gen8_surface_state::__anon42
host_origin	./cl_enqueue.h	/^  size_t host_origin[3];     \/* Origin *\/$/;"	m	struct:_enqueue_data
host_ptr	./cl_mem.h	/^  void * host_ptr;          \/* Pointer of the host mem specified by CL_MEM_ALLOC_HOST_PTR, CL_MEM_USE_HOST_PTR *\/$/;"	m	struct:_cl_mem
host_row_pitch	./cl_enqueue.h	/^  size_t host_row_pitch;     \/* Host row pitch, used in read\/write buffer rect *\/$/;"	m	struct:_enqueue_data
host_row_pitch	./cl_mem.h	/^  size_t host_row_pitch, host_slice_pitch;$/;"	m	struct:_cl_mem_image
host_slice_pitch	./cl_enqueue.h	/^  size_t host_slice_pitch;   \/* Host slice pitch, used in read\/write buffer rect *\/$/;"	m	struct:_enqueue_data
host_slice_pitch	./cl_mem.h	/^  size_t host_row_pitch, host_slice_pitch;$/;"	m	struct:_cl_mem_image
host_unified_memory	./cl_device_id.h	/^  cl_bool  host_unified_memory;$/;"	m	struct:_cl_device_id
icd_suffix_khr	./cl_platform_id.h	/^  const char *icd_suffix_khr;$/;"	m	struct:_cl_platform_id
icd_suffix_khr_sz	./cl_platform_id.h	/^  size_t icd_suffix_khr_sz;$/;"	m	struct:_cl_platform_id
idrt_offset	./intel/intel_gpgpu.h	/^    uint32_t idrt_offset;$/;"	m	struct:intel_gpgpu::__anon19
illegal_opcode_exception	./intel/intel_structs.h	/^    uint32_t illegal_opcode_exception:1;$/;"	m	struct:gen6_interface_descriptor::__anon22
illegal_opcode_exception	./intel/intel_structs.h	/^    uint32_t illegal_opcode_exception:1;$/;"	m	struct:gen8_interface_descriptor::__anon29
image2d_max_height	./cl_device_id.h	/^  size_t   image2d_max_height;$/;"	m	struct:_cl_device_id
image2d_max_width	./cl_device_id.h	/^  size_t   image2d_max_width;$/;"	m	struct:_cl_device_id
image3d_max_depth	./cl_device_id.h	/^  size_t   image3d_max_depth;$/;"	m	struct:_cl_device_id
image3d_max_height	./cl_device_id.h	/^  size_t   image3d_max_height;$/;"	m	struct:_cl_device_id
image3d_max_width	./cl_device_id.h	/^  size_t   image3d_max_width;$/;"	m	struct:_cl_device_id
image_array_size	./cl_mem.h	/^    size_t                  image_array_size;$/;"	m	struct:_cl_image_desc
image_base_address_alignment	./cl_device_id.h	/^  cl_uint image_base_address_alignment;$/;"	m	struct:_cl_device_id
image_depth	./cl_mem.h	/^    size_t                  image_depth;$/;"	m	struct:_cl_image_desc
image_height	./cl_mem.h	/^    size_t                  image_height;$/;"	m	struct:_cl_image_desc
image_max_array_size	./cl_device_id.h	/^  size_t   image_max_array_size;$/;"	m	struct:_cl_device_id
image_mem_size	./cl_device_id.h	/^  size_t   image_mem_size;$/;"	m	struct:_cl_device_id
image_pitch_alignment	./cl_device_id.h	/^  cl_uint image_pitch_alignment;$/;"	m	struct:_cl_device_id
image_row_pitch	./cl_mem.h	/^    size_t                  image_row_pitch;$/;"	m	struct:_cl_image_desc
image_slice_pitch	./cl_mem.h	/^    size_t                  image_slice_pitch;$/;"	m	struct:_cl_image_desc
image_support	./cl_device_id.h	/^  cl_bool  image_support;$/;"	m	struct:_cl_device_id
image_sz	./cl_kernel.h	/^  size_t image_sz;            \/* image count in kernel args *\/$/;"	m	struct:_cl_kernel
image_type	./cl_mem.h	/^    cl_mem_object_type      image_type;$/;"	m	struct:_cl_image_desc
image_type	./cl_mem.h	/^  cl_mem_object_type image_type;  \/* only for images 1D\/2D...*\/$/;"	m	struct:_cl_mem_image
image_width	./cl_mem.h	/^    size_t                  image_width;$/;"	m	struct:_cl_image_desc
images	./cl_kernel.h	/^  struct ImageInfo *images;   \/* images defined in kernel args *\/$/;"	m	struct:_cl_kernel	typeref:struct:_cl_kernel::ImageInfo
img_bitmap	./intel/intel_gpgpu.h	/^  unsigned long img_bitmap;              \/* image usage bitmap. *\/$/;"	m	struct:intel_gpgpu
img_index_base	./intel/intel_gpgpu.h	/^  unsigned int img_index_base;          \/* base index for image surface.*\/$/;"	m	struct:intel_gpgpu
in_exec_status	./cl_command_queue.h	/^  cl_uint in_exec_status; \/\/ Same value as CL_COMPLETE, CL_SUBMITTED ...$/;"	m	struct:_cl_command_queue_enqueue_worker
index	./cl_device_enqueue.c	/^  int index;$/;"	m	struct:Block_literal	file:
indirect_state_pointers_disable	./intel/intel_structs.h	/^    uint32_t indirect_state_pointers_disable : BITFIELD_BIT(9);$/;"	m	struct:gen6_pipe_control::__anon82
indirect_state_pointers_disable	./intel/intel_structs.h	/^    uint32_t indirect_state_pointers_disable : BITFIELD_BIT(9);$/;"	m	struct:gen8_pipe_control::__anon87
indirect_state_ptr	./intel/intel_structs.h	/^    uint32_t indirect_state_ptr:18;$/;"	m	struct:gen8_sampler_state::__anon109
initialize_env_var	./performance.c	/^void initialize_env_var()$/;"	f
insert	./performance.c	/^static void insert(cl_context context, const char *kernel_name, const char *build_opt, float time)$/;"	f	file:
instruction_cache_invalidate_enable	./intel/intel_structs.h	/^    uint32_t instruction_cache_invalidate_enable : BITFIELD_BIT(11);$/;"	m	struct:gen6_pipe_control::__anon82
instruction_cache_invalidate_enable	./intel/intel_structs.h	/^    uint32_t instruction_cache_invalidate_enable : BITFIELD_BIT(11);$/;"	m	struct:gen8_pipe_control::__anon87
instruction_opcode	./intel/intel_structs.h	/^    uint32_t instruction_opcode : BITFIELD_RANGE(24, 26);$/;"	m	struct:gen6_pipe_control::__anon81
instruction_opcode	./intel/intel_structs.h	/^    uint32_t instruction_opcode : BITFIELD_RANGE(24, 26);$/;"	m	struct:gen8_pipe_control::__anon86
instruction_pipeline	./intel/intel_structs.h	/^    uint32_t instruction_pipeline : BITFIELD_RANGE(27, 28);$/;"	m	struct:gen6_pipe_control::__anon81
instruction_pipeline	./intel/intel_structs.h	/^    uint32_t instruction_pipeline : BITFIELD_RANGE(27, 28);$/;"	m	struct:gen8_pipe_control::__anon86
instruction_subopcode	./intel/intel_structs.h	/^    uint32_t instruction_subopcode : BITFIELD_RANGE(16, 23);$/;"	m	struct:gen6_pipe_control::__anon81
instruction_subopcode	./intel/intel_structs.h	/^    uint32_t instruction_subopcode : BITFIELD_RANGE(16, 23);$/;"	m	struct:gen8_pipe_control::__anon86
instruction_type	./intel/intel_structs.h	/^    uint32_t instruction_type : BITFIELD_RANGE(29, 31);$/;"	m	struct:gen6_pipe_control::__anon81
instruction_type	./intel/intel_structs.h	/^    uint32_t instruction_type : BITFIELD_RANGE(29, 31);$/;"	m	struct:gen8_pipe_control::__anon86
intel	./intel/intel_batchbuffer.h	/^  struct intel_driver *intel;$/;"	m	struct:intel_batchbuffer	typeref:struct:intel_batchbuffer::intel_driver
intel_alloc_buffer_from_texture	./intel/intel_driver.c	/^intel_alloc_buffer_from_texture(cl_context ctx, unsigned int target,$/;"	f	file:
intel_alloc_buffer_from_texture_egl	./intel/intel_driver.c	/^intel_alloc_buffer_from_texture_egl(cl_context ctx, unsigned int target,$/;"	f	file:
intel_batchbuffer	./intel/intel_batchbuffer.h	/^typedef struct intel_batchbuffer$/;"	s
intel_batchbuffer_alloc_space	./intel/intel_batchbuffer.h	/^intel_batchbuffer_alloc_space(intel_batchbuffer_t *batch, uint32_t size)$/;"	f
intel_batchbuffer_delete	./intel/intel_batchbuffer.c	/^intel_batchbuffer_delete(intel_batchbuffer_t *batch)$/;"	f
intel_batchbuffer_emit_dword	./intel/intel_batchbuffer.h	/^intel_batchbuffer_emit_dword(intel_batchbuffer_t *batch, uint32_t x)$/;"	f
intel_batchbuffer_emit_reloc	./intel/intel_batchbuffer.c	/^intel_batchbuffer_emit_reloc(intel_batchbuffer_t *batch,$/;"	f
intel_batchbuffer_end_atomic	./intel/intel_batchbuffer.h	/^intel_batchbuffer_end_atomic(intel_batchbuffer_t *batch)$/;"	f
intel_batchbuffer_flush	./intel/intel_batchbuffer.c	/^intel_batchbuffer_flush(intel_batchbuffer_t *batch)$/;"	f
intel_batchbuffer_init	./intel/intel_batchbuffer.c	/^intel_batchbuffer_init(intel_batchbuffer_t *batch, intel_driver_t *intel)$/;"	f
intel_batchbuffer_new	./intel/intel_batchbuffer.c	/^intel_batchbuffer_new(intel_driver_t *intel)$/;"	f
intel_batchbuffer_require_space	./intel/intel_batchbuffer.h	/^intel_batchbuffer_require_space(intel_batchbuffer_t *batch, uint32_t size) {$/;"	f
intel_batchbuffer_reset	./intel/intel_batchbuffer.c	/^intel_batchbuffer_reset(intel_batchbuffer_t *batch, size_t sz)$/;"	f
intel_batchbuffer_space	./intel/intel_batchbuffer.h	/^intel_batchbuffer_space(const intel_batchbuffer_t *batch)$/;"	f
intel_batchbuffer_start_atomic	./intel/intel_batchbuffer.h	/^intel_batchbuffer_start_atomic(intel_batchbuffer_t *batch, uint32_t size)$/;"	f
intel_batchbuffer_t	./intel/intel_batchbuffer.h	/^} intel_batchbuffer_t;$/;"	t	typeref:struct:intel_batchbuffer
intel_batchbuffer_terminate	./intel/intel_batchbuffer.c	/^intel_batchbuffer_terminate(intel_batchbuffer_t *batch)$/;"	f
intel_baytrail_t_device	./cl_device_id.c	/^static struct _cl_device_id intel_baytrail_t_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_brw_gt1_device	./cl_device_id.c	/^static struct _cl_device_id intel_brw_gt1_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_brw_gt2_device	./cl_device_id.c	/^static struct _cl_device_id intel_brw_gt2_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_brw_gt3_device	./cl_device_id.c	/^static struct _cl_device_id intel_brw_gt3_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_buffer_alloc_userptr	./intel/intel_driver.c	/^static cl_buffer intel_buffer_alloc_userptr(cl_buffer_mgr bufmgr, const char* name, void *data,size_t size, unsigned long flags)$/;"	f	file:
intel_buffer_get_tiling_align	./intel/intel_driver.c	/^static uint32_t intel_buffer_get_tiling_align(cl_context ctx, uint32_t tiling_mode, uint32_t dim)$/;"	f	file:
intel_buffer_set_tiling	./intel/intel_driver.c	/^static int intel_buffer_set_tiling(cl_buffer bo,$/;"	f	file:
intel_bxt12eu_device	./cl_device_id.c	/^static struct _cl_device_id intel_bxt12eu_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_bxt18eu_device	./cl_device_id.c	/^static struct _cl_device_id intel_bxt18eu_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_cfl_gt1_device	./cl_device_id.c	/^static struct _cl_device_id intel_cfl_gt1_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_cfl_gt2_device	./cl_device_id.c	/^static struct _cl_device_id intel_cfl_gt2_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_cfl_gt3_device	./cl_device_id.c	/^static struct _cl_device_id intel_cfl_gt3_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_chv_device	./cl_device_id.c	/^static struct _cl_device_id intel_chv_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_driver	./intel/intel_driver.h	/^typedef struct intel_driver$/;"	s
intel_driver_aub_dump	./intel/intel_driver.c	/^intel_driver_aub_dump(intel_driver_t *driver)$/;"	f	file:
intel_driver_check_device	./intel/intel_driver.c	/^intel_driver_check_device(int dev_fd)$/;"	f	file:
intel_driver_close	./intel/intel_driver.c	/^intel_driver_close(intel_driver_t *intel)$/;"	f	file:
intel_driver_context_destroy	./intel/intel_driver.c	/^intel_driver_context_destroy(intel_driver_t *driver)$/;"	f	file:
intel_driver_context_init	./intel/intel_driver.c	/^intel_driver_context_init(intel_driver_t *driver)$/;"	f	file:
intel_driver_delete	./intel/intel_driver.c	/^intel_driver_delete(intel_driver_t *driver)$/;"	f	file:
intel_driver_enlarge_stack_size	./intel/intel_driver.c	/^intel_driver_enlarge_stack_size(struct intel_driver *drv, int32_t *stack_size)$/;"	f	file:
intel_driver_get_bufmgr	./intel/intel_driver.c	/^intel_driver_get_bufmgr(intel_driver_t *drv)$/;"	f	file:
intel_driver_get_ver	./intel/intel_driver.c	/^intel_driver_get_ver(struct intel_driver *drv)$/;"	f	file:
intel_driver_init	./intel/intel_driver.c	/^intel_driver_init(intel_driver_t *driver, int dev_fd)$/;"	f	file:
intel_driver_init_master	./intel/intel_driver.c	/^intel_driver_init_master(intel_driver_t *driver, const char* dev_name)$/;"	f
intel_driver_init_render	./intel/intel_driver.c	/^intel_driver_init_render(intel_driver_t *driver, const char* dev_name)$/;"	f
intel_driver_init_shared	./intel/intel_driver.c	/^intel_driver_init_shared(intel_driver_t *driver, dri_state_t *state)$/;"	f
intel_driver_is_active	./intel/intel_driver.c	/^intel_driver_is_active(intel_driver_t *driver) {$/;"	f
intel_driver_lock_hardware	./intel/intel_driver.c	/^intel_driver_lock_hardware(intel_driver_t *driver)$/;"	f
intel_driver_memman_init	./intel/intel_driver.c	/^intel_driver_memman_init(intel_driver_t *driver)$/;"	f	file:
intel_driver_new	./intel/intel_driver.c	/^intel_driver_new(void)$/;"	f	file:
intel_driver_open	./intel/intel_driver.c	/^intel_driver_open(intel_driver_t *intel, cl_context_prop props)$/;"	f	file:
intel_driver_set_atomic_flag	./intel/intel_driver.c	/^intel_driver_set_atomic_flag(intel_driver_t *drv, int atomic_flag)$/;"	f	file:
intel_driver_share_buffer_from_fd	./intel/intel_driver.c	/^intel_driver_share_buffer_from_fd(intel_driver_t *driver, int fd, int size)$/;"	f
intel_driver_share_buffer_from_name	./intel/intel_driver.c	/^intel_driver_share_buffer_from_name(intel_driver_t *driver, const char *sname, uint32_t name)$/;"	f
intel_driver_shared_name	./intel/intel_driver.c	/^intel_driver_shared_name(intel_driver_t *driver, dri_bo *bo)$/;"	f
intel_driver_t	./intel/intel_driver.h	/^} intel_driver_t;$/;"	t	typeref:struct:intel_driver
intel_driver_terminate	./intel/intel_driver.c	/^intel_driver_terminate(intel_driver_t *driver)$/;"	f
intel_driver_unlock_hardware	./intel/intel_driver.c	/^intel_driver_unlock_hardware(intel_driver_t *driver)$/;"	f
intel_event	./intel/intel_gpgpu.c	/^typedef struct intel_event {$/;"	s	file:
intel_event_t	./intel/intel_gpgpu.c	/^} intel_event_t;$/;"	t	typeref:struct:intel_event	file:
intel_fmt	./cl_mem.h	/^  uint32_t intel_fmt;             \/* format to provide in the surface state *\/$/;"	m	struct:_cl_mem_image
intel_get_device_id	./intel/intel_driver.c	/^intel_get_device_id(void)$/;"	f	file:
intel_get_surface_type	./intel/intel_gpgpu.c	/^intel_get_surface_type(cl_mem_object_type type)$/;"	f	file:
intel_glk12eu_device	./cl_device_id.c	/^static struct _cl_device_id intel_glk12eu_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_glk18eu_device	./cl_device_id.c	/^static struct _cl_device_id intel_glk18eu_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_gpgpu	./intel/intel_gpgpu.h	/^struct intel_gpgpu$/;"	s
intel_gpgpu_alloc_constant_buffer	./intel/intel_gpgpu.c	/^intel_gpgpu_alloc_constant_buffer(intel_gpgpu_t *gpgpu, uint32_t size, uint8_t bti)$/;"	f	file:
intel_gpgpu_batch_end	./intel/intel_gpgpu.c	/^intel_gpgpu_batch_end(intel_gpgpu_t *gpgpu, int32_t flush_mode)$/;"	f	file:
intel_gpgpu_batch_reset	./intel/intel_gpgpu.c	/^intel_gpgpu_batch_reset(intel_gpgpu_t *gpgpu, size_t sz)$/;"	f	file:
intel_gpgpu_batch_start	./intel/intel_gpgpu.c	/^intel_gpgpu_batch_start(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_bind_buf	./intel/intel_gpgpu.c	/^intel_gpgpu_bind_buf(intel_gpgpu_t *gpgpu, drm_intel_bo *buf, uint32_t offset,$/;"	f	file:
intel_gpgpu_bind_image_for_vme_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_bind_image_for_vme_gen7(intel_gpgpu_t *gpgpu,$/;"	f	file:
intel_gpgpu_bind_image_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_bind_image_gen7(intel_gpgpu_t *gpgpu,$/;"	f	file:
intel_gpgpu_bind_image_gen75	./intel/intel_gpgpu.c	/^intel_gpgpu_bind_image_gen75(intel_gpgpu_t *gpgpu,$/;"	f	file:
intel_gpgpu_bind_image_gen8	./intel/intel_gpgpu.c	/^intel_gpgpu_bind_image_gen8(intel_gpgpu_t *gpgpu,$/;"	f	file:
intel_gpgpu_bind_image_gen9	./intel/intel_gpgpu.c	/^intel_gpgpu_bind_image_gen9(intel_gpgpu_t *gpgpu,$/;"	f	file:
intel_gpgpu_bind_sampler_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_bind_sampler_gen7(intel_gpgpu_t *gpgpu, uint32_t *samplers, size_t sampler_sz)$/;"	f	file:
intel_gpgpu_bind_sampler_gen8	./intel/intel_gpgpu.c	/^intel_gpgpu_bind_sampler_gen8(intel_gpgpu_t *gpgpu, uint32_t *samplers, size_t sampler_sz)$/;"	f	file:
intel_gpgpu_bind_vme_state_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_bind_vme_state_gen7(intel_gpgpu_t *gpgpu, cl_accelerator_intel accel)$/;"	f	file:
intel_gpgpu_build_idrt	./intel/intel_gpgpu.c	/^intel_gpgpu_build_idrt_t *intel_gpgpu_build_idrt = NULL;$/;"	v
intel_gpgpu_build_idrt_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_build_idrt_gen7(intel_gpgpu_t *gpgpu, cl_gpgpu_kernel *kernel)$/;"	f	file:
intel_gpgpu_build_idrt_gen8	./intel/intel_gpgpu.c	/^intel_gpgpu_build_idrt_gen8(intel_gpgpu_t *gpgpu, cl_gpgpu_kernel *kernel)$/;"	f	file:
intel_gpgpu_build_idrt_gen9	./intel/intel_gpgpu.c	/^intel_gpgpu_build_idrt_gen9(intel_gpgpu_t *gpgpu, cl_gpgpu_kernel *kernel)$/;"	f	file:
intel_gpgpu_build_idrt_t	./intel/intel_gpgpu.c	/^typedef void (intel_gpgpu_build_idrt_t)(intel_gpgpu_t *gpgpu, cl_gpgpu_kernel *kernel);$/;"	t	file:
intel_gpgpu_delete	./intel/intel_gpgpu.c	/^intel_gpgpu_delete(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_delete_all	./intel/intel_gpgpu.c	/^void intel_gpgpu_delete_all(intel_driver_t *drv)$/;"	f
intel_gpgpu_delete_finished	./intel/intel_gpgpu.c	/^intel_gpgpu_delete_finished(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_event_delete	./intel/intel_gpgpu.c	/^intel_gpgpu_event_delete(intel_event_t *event)$/;"	f	file:
intel_gpgpu_event_flush	./intel/intel_gpgpu.c	/^intel_gpgpu_event_flush(intel_event_t *event)$/;"	f	file:
intel_gpgpu_event_get_exec_timestamp	./intel/intel_gpgpu.c	/^intel_gpgpu_event_get_exec_timestamp(intel_gpgpu_t* gpgpu, int index, uint64_t* ret_ts)$/;"	f	file:
intel_gpgpu_event_get_gpu_cur_timestamp	./intel/intel_gpgpu.c	/^intel_gpgpu_event_get_gpu_cur_timestamp(intel_driver_t* gen_driver, uint64_t* ret_ts)$/;"	f	file:
intel_gpgpu_event_new	./intel/intel_gpgpu.c	/^intel_gpgpu_event_new(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_event_update_status	./intel/intel_gpgpu.c	/^intel_gpgpu_event_update_status(intel_event_t *event, int wait)$/;"	f	file:
intel_gpgpu_flush	./intel/intel_gpgpu.c	/^intel_gpgpu_flush(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_get_cache_ctrl_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_get_cache_ctrl_gen7()$/;"	f	file:
intel_gpgpu_get_cache_ctrl_gen75	./intel/intel_gpgpu.c	/^intel_gpgpu_get_cache_ctrl_gen75()$/;"	f	file:
intel_gpgpu_get_cache_ctrl_gen8	./intel/intel_gpgpu.c	/^intel_gpgpu_get_cache_ctrl_gen8()$/;"	f	file:
intel_gpgpu_get_cache_ctrl_gen9	./intel/intel_gpgpu.c	/^intel_gpgpu_get_cache_ctrl_gen9()$/;"	f	file:
intel_gpgpu_get_curbe_size	./intel/intel_gpgpu.c	/^intel_gpgpu_get_curbe_size(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_get_kernel	./intel/intel_gpgpu.c	/^intel_gpgpu_get_kernel(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_get_max_curbe_size	./intel/intel_gpgpu.c	/^intel_gpgpu_get_max_curbe_size(uint32_t device_id)$/;"	f	file:
intel_gpgpu_get_printf_info	./intel/intel_gpgpu.c	/^intel_gpgpu_get_printf_info(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_get_profiling_info	./intel/intel_gpgpu.c	/^intel_gpgpu_get_profiling_info(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_get_scratch_index	./intel/intel_gpgpu.c	/^intel_gpgpu_get_scratch_index_t *intel_gpgpu_get_scratch_index = NULL;$/;"	v
intel_gpgpu_get_scratch_index_gen7	./intel/intel_gpgpu.c	/^uint32_t intel_gpgpu_get_scratch_index_gen7(uint32_t size) {$/;"	f
intel_gpgpu_get_scratch_index_gen75	./intel/intel_gpgpu.c	/^uint32_t intel_gpgpu_get_scratch_index_gen75(uint32_t size) {$/;"	f
intel_gpgpu_get_scratch_index_gen8	./intel/intel_gpgpu.c	/^uint32_t intel_gpgpu_get_scratch_index_gen8(uint32_t size) {$/;"	f
intel_gpgpu_get_scratch_index_t	./intel/intel_gpgpu.c	/^typedef uint32_t (intel_gpgpu_get_scratch_index_t)(uint32_t size);$/;"	t	file:
intel_gpgpu_insert_sampler_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_insert_sampler_gen7(intel_gpgpu_t *gpgpu, uint32_t index, uint32_t clk_sampler)$/;"	f	file:
intel_gpgpu_insert_sampler_gen8	./intel/intel_gpgpu.c	/^intel_gpgpu_insert_sampler_gen8(intel_gpgpu_t *gpgpu, uint32_t index, uint32_t clk_sampler)$/;"	f	file:
intel_gpgpu_insert_vme_state_gen7	./intel/intel_gpgpu.c	/^static void intel_gpgpu_insert_vme_state_gen7(intel_gpgpu_t *gpgpu, cl_accelerator_intel accel, uint32_t index)$/;"	f	file:
intel_gpgpu_load_curbe_buffer	./intel/intel_gpgpu.c	/^intel_gpgpu_load_curbe_buffer_t *intel_gpgpu_load_curbe_buffer = NULL;$/;"	v
intel_gpgpu_load_curbe_buffer_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_load_curbe_buffer_gen7(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_load_curbe_buffer_gen8	./intel/intel_gpgpu.c	/^intel_gpgpu_load_curbe_buffer_gen8(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_load_curbe_buffer_t	./intel/intel_gpgpu.c	/^typedef void (intel_gpgpu_load_curbe_buffer_t)(intel_gpgpu_t *gpgpu);$/;"	t	file:
intel_gpgpu_load_idrt	./intel/intel_gpgpu.c	/^intel_gpgpu_load_idrt_t *intel_gpgpu_load_idrt = NULL;$/;"	v
intel_gpgpu_load_idrt_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_load_idrt_gen7(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_load_idrt_gen8	./intel/intel_gpgpu.c	/^intel_gpgpu_load_idrt_gen8(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_load_idrt_t	./intel/intel_gpgpu.c	/^typedef void (intel_gpgpu_load_idrt_t)(intel_gpgpu_t *gpgpu);$/;"	t	file:
intel_gpgpu_load_vfe_state	./intel/intel_gpgpu.c	/^intel_gpgpu_load_vfe_state_t *intel_gpgpu_load_vfe_state = NULL;$/;"	v
intel_gpgpu_load_vfe_state_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_load_vfe_state_gen7(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_load_vfe_state_gen8	./intel/intel_gpgpu.c	/^intel_gpgpu_load_vfe_state_gen8(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_load_vfe_state_t	./intel/intel_gpgpu.c	/^typedef void (intel_gpgpu_load_vfe_state_t)(intel_gpgpu_t *gpgpu);$/;"	t	file:
intel_gpgpu_map_printf_buf	./intel/intel_gpgpu.c	/^intel_gpgpu_map_printf_buf(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_map_profiling_buf	./intel/intel_gpgpu.c	/^intel_gpgpu_map_profiling_buf(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_new	./intel/intel_gpgpu.c	/^intel_gpgpu_new(intel_driver_t *drv)$/;"	f	file:
intel_gpgpu_node	./intel/intel_gpgpu.h	/^struct intel_gpgpu_node {$/;"	s
intel_gpgpu_pipe_control	./intel/intel_gpgpu.c	/^intel_gpgpu_pipe_control_t *intel_gpgpu_pipe_control = NULL;$/;"	v
intel_gpgpu_pipe_control_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_pipe_control_gen7(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_pipe_control_gen75	./intel/intel_gpgpu.c	/^intel_gpgpu_pipe_control_gen75(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_pipe_control_gen8	./intel/intel_gpgpu.c	/^intel_gpgpu_pipe_control_gen8(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_pipe_control_t	./intel/intel_gpgpu.c	/^typedef void (intel_gpgpu_pipe_control_t)(intel_gpgpu_t *gpgpu);$/;"	t	file:
intel_gpgpu_post_action	./intel/intel_gpgpu.c	/^intel_gpgpu_post_action_t *intel_gpgpu_post_action = NULL;$/;"	v
intel_gpgpu_post_action_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_post_action_gen7(intel_gpgpu_t *gpgpu, int32_t flush_mode)$/;"	f	file:
intel_gpgpu_post_action_gen75	./intel/intel_gpgpu.c	/^intel_gpgpu_post_action_gen75(intel_gpgpu_t *gpgpu, int32_t flush_mode)$/;"	f	file:
intel_gpgpu_post_action_t	./intel/intel_gpgpu.c	/^typedef void (intel_gpgpu_post_action_t)(intel_gpgpu_t *gpgpu, int32_t flush_mode);$/;"	t	file:
intel_gpgpu_read_ts_reg	./intel/intel_gpgpu.c	/^intel_gpgpu_read_ts_reg_t *intel_gpgpu_read_ts_reg = NULL;$/;"	v
intel_gpgpu_read_ts_reg_baytrail	./intel/intel_gpgpu.c	/^intel_gpgpu_read_ts_reg_baytrail(drm_intel_bufmgr *bufmgr)$/;"	f	file:
intel_gpgpu_read_ts_reg_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_read_ts_reg_gen7(drm_intel_bufmgr *bufmgr)$/;"	f	file:
intel_gpgpu_read_ts_reg_t	./intel/intel_gpgpu.c	/^typedef uint64_t (intel_gpgpu_read_ts_reg_t)(drm_intel_bufmgr *bufmgr);$/;"	t	file:
intel_gpgpu_ref_batch_buf	./intel/intel_gpgpu.c	/^static void *intel_gpgpu_ref_batch_buf(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_release_printf_buf	./intel/intel_gpgpu.c	/^intel_gpgpu_release_printf_buf(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_select_pipeline	./intel/intel_gpgpu.c	/^intel_gpgpu_select_pipeline_t *intel_gpgpu_select_pipeline = NULL;$/;"	v
intel_gpgpu_select_pipeline_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_select_pipeline_gen7(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_select_pipeline_gen9	./intel/intel_gpgpu.c	/^intel_gpgpu_select_pipeline_gen9(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_select_pipeline_t	./intel/intel_gpgpu.c	/^typedef void (intel_gpgpu_select_pipeline_t)(intel_gpgpu_t *gpgpu);$/;"	t	file:
intel_gpgpu_set_L3	./intel/intel_gpgpu.c	/^intel_gpgpu_set_L3_t *intel_gpgpu_set_L3 = NULL;$/;"	v
intel_gpgpu_set_L3_baytrail	./intel/intel_gpgpu.c	/^intel_gpgpu_set_L3_baytrail(intel_gpgpu_t *gpgpu, uint32_t use_slm)$/;"	f	file:
intel_gpgpu_set_L3_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_set_L3_gen7(intel_gpgpu_t *gpgpu, uint32_t use_slm)$/;"	f	file:
intel_gpgpu_set_L3_gen75	./intel/intel_gpgpu.c	/^intel_gpgpu_set_L3_gen75(intel_gpgpu_t *gpgpu, uint32_t use_slm)$/;"	f	file:
intel_gpgpu_set_L3_gen8	./intel/intel_gpgpu.c	/^intel_gpgpu_set_L3_gen8(intel_gpgpu_t *gpgpu, uint32_t use_slm)$/;"	f	file:
intel_gpgpu_set_L3_t	./intel/intel_gpgpu.c	/^typedef void (intel_gpgpu_set_L3_t)(intel_gpgpu_t *gpgpu, uint32_t use_slm);$/;"	t	file:
intel_gpgpu_set_base_address	./intel/intel_gpgpu.c	/^intel_gpgpu_set_base_address_t *intel_gpgpu_set_base_address = NULL;$/;"	v
intel_gpgpu_set_base_address_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_set_base_address_gen7(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_set_base_address_gen8	./intel/intel_gpgpu.c	/^intel_gpgpu_set_base_address_gen8(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_set_base_address_gen9	./intel/intel_gpgpu.c	/^intel_gpgpu_set_base_address_gen9(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_set_base_address_t	./intel/intel_gpgpu.c	/^typedef void (intel_gpgpu_set_base_address_t)(intel_gpgpu_t *gpgpu);$/;"	t	file:
intel_gpgpu_set_buf_reloc_for_vme_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_set_buf_reloc_for_vme_gen7(intel_gpgpu_t *gpgpu, int32_t index, dri_bo* obj_bo, uint32_t obj_bo_offset)$/;"	f	file:
intel_gpgpu_set_buf_reloc_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_set_buf_reloc_gen7(intel_gpgpu_t *gpgpu, int32_t index, dri_bo* obj_bo, uint32_t obj_bo_offset)$/;"	f	file:
intel_gpgpu_set_kernel	./intel/intel_gpgpu.c	/^intel_gpgpu_set_kernel(intel_gpgpu_t *gpgpu, void * kernel)$/;"	f	file:
intel_gpgpu_set_perf_counters	./intel/intel_gpgpu.c	/^intel_gpgpu_set_perf_counters(intel_gpgpu_t *gpgpu, cl_buffer *perf)$/;"	f	file:
intel_gpgpu_set_printf_buf	./intel/intel_gpgpu.c	/^intel_gpgpu_set_printf_buf(intel_gpgpu_t *gpgpu, uint32_t size, uint8_t bti)$/;"	f	file:
intel_gpgpu_set_printf_info	./intel/intel_gpgpu.c	/^intel_gpgpu_set_printf_info(intel_gpgpu_t *gpgpu, void* printf_info)$/;"	f	file:
intel_gpgpu_set_profiling_buf	./intel/intel_gpgpu.c	/^intel_gpgpu_set_profiling_buf(intel_gpgpu_t *gpgpu, uint32_t size, uint32_t offset, uint8_t bti)$/;"	f	file:
intel_gpgpu_set_profiling_info	./intel/intel_gpgpu.c	/^intel_gpgpu_set_profiling_info(intel_gpgpu_t *gpgpu, void* profiling_info)$/;"	f	file:
intel_gpgpu_set_scratch	./intel/intel_gpgpu.c	/^intel_gpgpu_set_scratch(intel_gpgpu_t * gpgpu, uint32_t per_thread_size)$/;"	f	file:
intel_gpgpu_set_stack	./intel/intel_gpgpu.c	/^intel_gpgpu_set_stack(intel_gpgpu_t *gpgpu, uint32_t offset, uint32_t size, uint8_t bti)$/;"	f	file:
intel_gpgpu_setup_bti	./intel/intel_gpgpu.c	/^intel_gpgpu_setup_bti_t *intel_gpgpu_setup_bti = NULL;$/;"	v
intel_gpgpu_setup_bti_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_setup_bti_gen7(intel_gpgpu_t *gpgpu, drm_intel_bo *buf, uint32_t internal_offset,$/;"	f	file:
intel_gpgpu_setup_bti_gen75	./intel/intel_gpgpu.c	/^intel_gpgpu_setup_bti_gen75(intel_gpgpu_t *gpgpu, drm_intel_bo *buf, uint32_t internal_offset,$/;"	f	file:
intel_gpgpu_setup_bti_gen8	./intel/intel_gpgpu.c	/^intel_gpgpu_setup_bti_gen8(intel_gpgpu_t *gpgpu, drm_intel_bo *buf, uint32_t internal_offset,$/;"	f	file:
intel_gpgpu_setup_bti_gen9	./intel/intel_gpgpu.c	/^intel_gpgpu_setup_bti_gen9(intel_gpgpu_t *gpgpu, drm_intel_bo *buf, uint32_t internal_offset,$/;"	f	file:
intel_gpgpu_setup_bti_t	./intel/intel_gpgpu.c	/^typedef void (intel_gpgpu_setup_bti_t)(intel_gpgpu_t *gpgpu, drm_intel_bo *buf, uint32_t internal_offset,$/;"	t	file:
intel_gpgpu_state_init	./intel/intel_gpgpu.c	/^intel_gpgpu_state_init(intel_gpgpu_t *gpgpu,$/;"	f	file:
intel_gpgpu_states_setup	./intel/intel_gpgpu.c	/^intel_gpgpu_states_setup(intel_gpgpu_t *gpgpu, cl_gpgpu_kernel *kernel)$/;"	f	file:
intel_gpgpu_sync	./intel/intel_gpgpu.c	/^intel_gpgpu_sync(void *buf)$/;"	f	file:
intel_gpgpu_t	./intel/intel_gpgpu.c	/^typedef struct intel_gpgpu intel_gpgpu_t;$/;"	t	typeref:struct:intel_gpgpu	file:
intel_gpgpu_unmap_printf_buf_addr	./intel/intel_gpgpu.c	/^intel_gpgpu_unmap_printf_buf_addr(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_unmap_profiling_buf_addr	./intel/intel_gpgpu.c	/^intel_gpgpu_unmap_profiling_buf_addr(intel_gpgpu_t *gpgpu)$/;"	f	file:
intel_gpgpu_unref_batch_buf	./intel/intel_gpgpu.c	/^static void intel_gpgpu_unref_batch_buf(void *buf)$/;"	f	file:
intel_gpgpu_upload_curbes_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_upload_curbes_gen7(intel_gpgpu_t *gpgpu, const void* data, uint32_t size)$/;"	f	file:
intel_gpgpu_upload_curbes_gen8	./intel/intel_gpgpu.c	/^intel_gpgpu_upload_curbes_gen8(intel_gpgpu_t *gpgpu, const void* data, uint32_t size)$/;"	f	file:
intel_gpgpu_upload_samplers	./intel/intel_gpgpu.c	/^intel_gpgpu_upload_samplers(intel_gpgpu_t *gpgpu, const void *data, uint32_t n)$/;"	f	file:
intel_gpgpu_walker_gen7	./intel/intel_gpgpu.c	/^intel_gpgpu_walker_gen7(intel_gpgpu_t *gpgpu,$/;"	f	file:
intel_gpgpu_walker_gen8	./intel/intel_gpgpu.c	/^intel_gpgpu_walker_gen8(intel_gpgpu_t *gpgpu,$/;"	f	file:
intel_gpgpu_write_timestamp	./intel/intel_gpgpu.c	/^intel_gpgpu_write_timestamp(intel_gpgpu_t *gpgpu, int idx)$/;"	f	file:
intel_hsw_gt1_device	./cl_device_id.c	/^static struct _cl_device_id intel_hsw_gt1_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_hsw_gt2_device	./cl_device_id.c	/^static struct _cl_device_id intel_hsw_gt2_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_hsw_gt3_device	./cl_device_id.c	/^static struct _cl_device_id intel_hsw_gt3_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_is_surface_array	./intel/intel_gpgpu.c	/^intel_is_surface_array(cl_mem_object_type type)$/;"	f	file:
intel_ivb_gt1_device	./cl_device_id.c	/^static struct _cl_device_id intel_ivb_gt1_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_ivb_gt2_device	./cl_device_id.c	/^static struct _cl_device_id intel_ivb_gt2_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_kbl_gt15_device	./cl_device_id.c	/^static struct _cl_device_id intel_kbl_gt15_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_kbl_gt1_device	./cl_device_id.c	/^static struct _cl_device_id intel_kbl_gt1_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_kbl_gt2_device	./cl_device_id.c	/^static struct _cl_device_id intel_kbl_gt2_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_kbl_gt3_device	./cl_device_id.c	/^static struct _cl_device_id intel_kbl_gt3_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_kbl_gt4_device	./cl_device_id.c	/^static struct _cl_device_id intel_kbl_gt4_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_platform	./cl_platform_id.c	/^static cl_platform_id intel_platform = NULL;$/;"	v	file:
intel_platform_data	./cl_platform_id.c	/^static struct _cl_platform_id intel_platform_data = {$/;"	v	typeref:struct:_cl_platform_id	file:
intel_platform_extensions	./cl_extensions.c	/^static struct cl_extensions intel_platform_extensions =$/;"	v	typeref:struct:cl_extensions	file:
intel_release_buffer_from_texture	./intel/intel_driver.c	/^intel_release_buffer_from_texture(cl_context ctx, struct _cl_mem_gl_image *gl_image)$/;"	f	file:
intel_set_gpgpu_callbacks	./intel/intel_gpgpu.c	/^intel_set_gpgpu_callbacks(int device_id)$/;"	f
intel_setup_callbacks	./intel/intel_driver.c	/^intel_setup_callbacks(void)$/;"	f
intel_share_buffer_from_fd	./intel/intel_driver.c	/^cl_buffer intel_share_buffer_from_fd(cl_context ctx,$/;"	f
intel_share_buffer_from_libva	./intel/intel_driver.c	/^cl_buffer intel_share_buffer_from_libva(cl_context ctx,$/;"	f
intel_share_image_from_fd	./intel/intel_driver.c	/^cl_buffer intel_share_image_from_fd(cl_context ctx,$/;"	f
intel_share_image_from_libva	./intel/intel_driver.c	/^cl_buffer intel_share_image_from_libva(cl_context ctx,$/;"	f
intel_skl_gt1_device	./cl_device_id.c	/^static struct _cl_device_id intel_skl_gt1_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_skl_gt2_device	./cl_device_id.c	/^static struct _cl_device_id intel_skl_gt2_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_skl_gt3_device	./cl_device_id.c	/^static struct _cl_device_id intel_skl_gt3_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_skl_gt4_device	./cl_device_id.c	/^static struct _cl_device_id intel_skl_gt4_device = {$/;"	v	typeref:struct:_cl_device_id	file:
intel_update_device_info	./intel/intel_driver.c	/^intel_update_device_info(cl_device_id device)$/;"	f	file:
interleave_chroma	./intel/intel_structs.h	/^    uint32_t interleave_chroma:1;$/;"	m	struct:gen7_media_surface_state::__anon68
internal_clGetExtensionFunctionAddress	./cl_api.c	/^internal_clGetExtensionFunctionAddress(const char *func_name)$/;"	f	file:
internal_extensions	./cl_platform_id.h	/^  struct cl_extensions *internal_extensions;$/;"	m	struct:_cl_platform_id	typeref:struct:_cl_platform_id::cl_extensions
internal_kernels	./cl_context.h	/^  cl_kernel  internal_kernels[CL_INTERNAL_KERNEL_MAX];$/;"	m	struct:_cl_context
internal_prgs	./cl_context.h	/^  cl_program internal_prgs[CL_INTERNAL_KERNEL_MAX];$/;"	m	struct:_cl_context
interop_user_sync	./cl_device_id.h	/^  cl_bool interop_user_sync;$/;"	m	struct:_cl_device_id
interp_dup_printfset	./cl_gbe_loader.cpp	/^gbe_dup_printfset_cb* interp_dup_printfset = NULL;$/;"	v
interp_dup_profiling	./cl_gbe_loader.cpp	/^gbe_dup_profiling_cb* interp_dup_profiling = NULL;$/;"	v
interp_get_printf_buf_bti	./cl_gbe_loader.cpp	/^gbe_get_printf_buf_bti_cb* interp_get_printf_buf_bti = NULL;$/;"	v
interp_get_printf_num	./cl_gbe_loader.cpp	/^gbe_get_printf_num_cb* interp_get_printf_num = NULL;$/;"	v
interp_get_profiling_bti	./cl_gbe_loader.cpp	/^gbe_get_profiling_bti_cb* interp_get_profiling_bti = NULL;$/;"	v
interp_kernel_get_arg_align	./cl_gbe_loader.cpp	/^gbe_kernel_get_arg_align_cb *interp_kernel_get_arg_align = NULL;$/;"	v
interp_kernel_get_arg_bti	./cl_gbe_loader.cpp	/^gbe_kernel_get_arg_bti_cb *interp_kernel_get_arg_bti = NULL;$/;"	v
interp_kernel_get_arg_info	./cl_gbe_loader.cpp	/^gbe_kernel_get_arg_info_cb *interp_kernel_get_arg_info = NULL;$/;"	v
interp_kernel_get_arg_num	./cl_gbe_loader.cpp	/^gbe_kernel_get_arg_num_cb *interp_kernel_get_arg_num = NULL;$/;"	v
interp_kernel_get_arg_size	./cl_gbe_loader.cpp	/^gbe_kernel_get_arg_size_cb *interp_kernel_get_arg_size = NULL;$/;"	v
interp_kernel_get_arg_type	./cl_gbe_loader.cpp	/^gbe_kernel_get_arg_type_cb *interp_kernel_get_arg_type = NULL;$/;"	v
interp_kernel_get_attributes	./cl_gbe_loader.cpp	/^gbe_kernel_get_attributes_cb *interp_kernel_get_attributes = NULL;$/;"	v
interp_kernel_get_code	./cl_gbe_loader.cpp	/^gbe_kernel_get_code_cb *interp_kernel_get_code = NULL;$/;"	v
interp_kernel_get_code_size	./cl_gbe_loader.cpp	/^gbe_kernel_get_code_size_cb *interp_kernel_get_code_size = NULL;$/;"	v
interp_kernel_get_compile_wg_size	./cl_gbe_loader.cpp	/^gbe_kernel_get_compile_wg_size_cb *interp_kernel_get_compile_wg_size = NULL;$/;"	v
interp_kernel_get_curbe_offset	./cl_gbe_loader.cpp	/^gbe_kernel_get_curbe_offset_cb *interp_kernel_get_curbe_offset = NULL;$/;"	v
interp_kernel_get_curbe_size	./cl_gbe_loader.cpp	/^gbe_kernel_get_curbe_size_cb *interp_kernel_get_curbe_size = NULL;$/;"	v
interp_kernel_get_image_data	./cl_gbe_loader.cpp	/^gbe_kernel_get_image_data_cb *interp_kernel_get_image_data = NULL;$/;"	v
interp_kernel_get_image_size	./cl_gbe_loader.cpp	/^gbe_kernel_get_image_size_cb *interp_kernel_get_image_size = NULL;$/;"	v
interp_kernel_get_name	./cl_gbe_loader.cpp	/^gbe_kernel_get_name_cb *interp_kernel_get_name = NULL;$/;"	v
interp_kernel_get_ocl_version	./cl_gbe_loader.cpp	/^gbe_kernel_get_ocl_version_cb *interp_kernel_get_ocl_version = NULL;$/;"	v
interp_kernel_get_required_work_group_size	./cl_gbe_loader.cpp	/^gbe_kernel_get_required_work_group_size_cb *interp_kernel_get_required_work_group_size = NULL;$/;"	v
interp_kernel_get_sampler_data	./cl_gbe_loader.cpp	/^gbe_kernel_get_sampler_data_cb *interp_kernel_get_sampler_data = NULL;$/;"	v
interp_kernel_get_sampler_size	./cl_gbe_loader.cpp	/^gbe_kernel_get_sampler_size_cb *interp_kernel_get_sampler_size = NULL;$/;"	v
interp_kernel_get_scratch_size	./cl_gbe_loader.cpp	/^gbe_kernel_get_scratch_size_cb *interp_kernel_get_scratch_size = NULL;$/;"	v
interp_kernel_get_simd_width	./cl_gbe_loader.cpp	/^gbe_kernel_get_simd_width_cb *interp_kernel_get_simd_width = NULL;$/;"	v
interp_kernel_get_slm_size	./cl_gbe_loader.cpp	/^gbe_kernel_get_slm_size_cb *interp_kernel_get_slm_size = NULL;$/;"	v
interp_kernel_get_stack_size	./cl_gbe_loader.cpp	/^gbe_kernel_get_stack_size_cb *interp_kernel_get_stack_size = NULL;$/;"	v
interp_kernel_use_device_enqueue	./cl_gbe_loader.cpp	/^gbe_kernel_use_device_enqueue_cb *interp_kernel_use_device_enqueue = NULL;$/;"	v
interp_kernel_use_slm	./cl_gbe_loader.cpp	/^gbe_kernel_use_slm_cb *interp_kernel_use_slm = NULL;$/;"	v
interp_output_printf	./cl_gbe_loader.cpp	/^gbe_output_printf_cb* interp_output_printf = NULL;$/;"	v
interp_output_profiling	./cl_gbe_loader.cpp	/^gbe_output_profiling_cb* interp_output_profiling = NULL;$/;"	v
interp_program_delete	./cl_gbe_loader.cpp	/^gbe_program_delete_cb *interp_program_delete = NULL;$/;"	v
interp_program_get_device_enqueue_kernel_name	./cl_gbe_loader.cpp	/^gbe_program_get_device_enqueue_kernel_name_cb *interp_program_get_device_enqueue_kernel_name = NULL;$/;"	v
interp_program_get_global_constant_data	./cl_gbe_loader.cpp	/^gbe_program_get_global_constant_data_cb *interp_program_get_global_constant_data = NULL;$/;"	v
interp_program_get_global_constant_size	./cl_gbe_loader.cpp	/^gbe_program_get_global_constant_size_cb *interp_program_get_global_constant_size = NULL;$/;"	v
interp_program_get_global_reloc_count	./cl_gbe_loader.cpp	/^gbe_program_get_global_reloc_count_cb *interp_program_get_global_reloc_count = NULL;$/;"	v
interp_program_get_global_reloc_table	./cl_gbe_loader.cpp	/^gbe_program_get_global_reloc_table_cb *interp_program_get_global_reloc_table = NULL;$/;"	v
interp_program_get_kernel	./cl_gbe_loader.cpp	/^gbe_program_get_kernel_cb *interp_program_get_kernel = NULL;$/;"	v
interp_program_get_kernel_by_name	./cl_gbe_loader.cpp	/^gbe_program_get_kernel_by_name_cb *interp_program_get_kernel_by_name = NULL;$/;"	v
interp_program_get_kernel_num	./cl_gbe_loader.cpp	/^gbe_program_get_kernel_num_cb *interp_program_get_kernel_num = NULL;$/;"	v
interp_program_new_from_binary	./cl_gbe_loader.cpp	/^gbe_program_new_from_binary_cb *interp_program_new_from_binary = NULL;$/;"	v
interp_release_printf_info	./cl_gbe_loader.cpp	/^gbe_release_printf_info_cb* interp_release_printf_info = NULL;$/;"	v
invalid_thread_id	./cl_base_object.c	/^static pthread_t invalid_thread_id = -1;$/;"	v	file:
isCMRT	./cl_program.c	209;"	d	file:
isGenBinary	./cl_program.c	208;"	d	file:
isLLVM_C_O	./cl_program.c	206;"	d	file:
isLLVM_LIB	./cl_program.c	207;"	d	file:
isSPIR	./cl_program.c	205;"	d	file:
is_barrier	./cl_event.h	/^  cl_bool is_barrier;         \/* Is this event a barrier *\/$/;"	m	struct:_cl_event
is_built	./cl_program.h	/^  uint32_t is_built:1;    \/* Did we call clBuildProgram on it? *\/$/;"	m	struct:_cl_program
is_gen_device	./cl_device_id.c	/^LOCAL cl_bool is_gen_device(cl_device_id device) {$/;"	f
is_image_from_buffer	./cl_mem.h	/^  uint8_t is_image_from_buffer;       \/* IMAGE from Buffer*\/$/;"	m	struct:_cl_mem_image
is_set	./cl_kernel.h	/^  uint32_t is_set:1;    \/* All args must be set before NDRange *\/$/;"	m	struct:cl_argument
is_svm	./cl_kernel.h	/^  uint32_t is_svm:1;    \/* Indicate this argument is SVMPointer *\/$/;"	m	struct:cl_argument
is_svm	./cl_mem.h	/^  cl_bool is_svm;           \/* This object  is svm *\/$/;"	m	struct:_cl_mem
is_userptr	./cl_mem.h	/^  uint8_t is_userptr;       \/* CL_MEM_USE_HOST_PTR is enabled *\/$/;"	m	struct:_cl_mem
isa	./cl_device_enqueue.c	/^  void *isa; \/\/ initialized to &_NSConcreteStackBlock or &_NSConcreteGlobalBlock$/;"	m	struct:Block_literal	file:
ker	./cl_program.h	/^  cl_kernel *ker;         \/* All kernels included by the OCL file *\/$/;"	m	struct:_cl_program
ker	./intel/intel_gpgpu.h	/^  cl_gpgpu_kernel *ker;$/;"	m	struct:intel_gpgpu
ker_n	./cl_program.h	/^  uint32_t ker_n;         \/* Number of declared kernels *\/$/;"	m	struct:_cl_program
ker_opaque	./intel/intel_gpgpu.h	/^  void* ker_opaque;$/;"	m	struct:intel_gpgpu
kernel	./intel/intel_gpgpu.h	/^  void *kernel;                         \/* cl_kernel with this gpgpu *\/$/;"	m	struct:intel_gpgpu
kernel_count	./performance.c	/^  int kernel_count;$/;"	m	struct:context_storage_node	file:
kernel_execute_count	./performance.c	/^  int kernel_execute_count;$/;"	m	struct:time_element	file:
kernel_max_time	./performance.c	/^  float kernel_max_time;$/;"	m	struct:context_storage_node	file:
kernel_name	./performance.c	/^  char kernel_name[MAX_KERNEL_NAME_LENGTH];$/;"	m	struct:kernel_storage_node	file:
kernel_name	./performance.c	/^  char kernel_name[MAX_KERNEL_NAME_LENGTH];$/;"	m	struct:time_element	file:
kernel_start_pointer	./intel/intel_structs.h	/^    uint32_t kernel_start_pointer:26;$/;"	m	struct:gen6_interface_descriptor::__anon21
kernel_start_pointer	./intel/intel_structs.h	/^    uint32_t kernel_start_pointer:26;$/;"	m	struct:gen8_interface_descriptor::__anon27
kernel_start_pointer_high	./intel/intel_structs.h	/^    uint32_t kernel_start_pointer_high:16;$/;"	m	struct:gen8_interface_descriptor::__anon28
kernel_storage_node	./performance.c	/^typedef struct kernel_storage_node$/;"	s	file:
kernel_storage_node	./performance.c	/^} kernel_storage_node;$/;"	t	typeref:struct:kernel_storage_node	file:
kernel_sum_time	./performance.c	/^  float kernel_sum_time;$/;"	m	struct:kernel_storage_node	file:
kernel_sum_time	./performance.c	/^  float kernel_sum_time;$/;"	m	struct:time_element	file:
kernel_times	./performance.c	/^  float kernel_times[MAX_KERNEL_EXECUTION_COUNT];$/;"	m	struct:kernel_storage_node	file:
kernel_times	./performance.c	/^  float kernel_times[MAX_KERNEL_EXECUTION_COUNT];$/;"	m	struct:time_element	file:
kernels_storage	./performance.c	/^  kernel_storage_node *kernels_storage;$/;"	m	struct:context_storage_node	file:
l3cc_ec	./cl_driver.h	/^  l3cc_ec       = 0x1$/;"	e	enum:cl_l3_cache_control
l3cc_uc	./cl_driver.h	/^  l3cc_uc      = 0x0,$/;"	e	enum:cl_l3_cache_control
last_bo	./intel/intel_batchbuffer.h	/^  drm_intel_bo *last_bo;$/;"	m	struct:intel_batchbuffer
length	./intel/intel_structs.h	/^    uint32_t length : BITFIELD_RANGE(0, 7);$/;"	m	struct:gen6_pipe_control::__anon81
length	./intel/intel_structs.h	/^    uint32_t length : BITFIELD_RANGE(0, 7);$/;"	m	struct:gen8_pipe_control::__anon86
linker_available	./cl_device_id.h	/^  cl_bool  linker_available;$/;"	m	struct:_cl_device_id
list_add	./cl_utils.h	/^static inline void list_add(list_head *head, list_node *the_new)$/;"	f
list_add_tail	./cl_utils.h	/^static inline void list_add_tail(list_head *head, list_node *the_new)$/;"	f
list_empty	./cl_utils.h	/^static inline int list_empty(const struct list_head *head)$/;"	f
list_entry	./cl_utils.h	418;"	d
list_for_each	./cl_utils.h	422;"	d
list_for_each_safe	./cl_utils.h	425;"	d
list_head	./cl_utils.h	/^typedef struct list_head {$/;"	s
list_head	./cl_utils.h	/^} list_head;$/;"	t	typeref:struct:list_head
list_init	./cl_utils.h	/^static inline void list_init(list_head *head)$/;"	f
list_merge	./cl_utils.c	/^list_merge(struct list_head *head, struct list_head *to_merge)$/;"	f
list_move	./cl_utils.c	/^list_move(struct list_head *the_old, struct list_head *the_new)$/;"	f
list_node	./cl_utils.h	/^typedef struct list_node {$/;"	s
list_node	./cl_utils.h	/^} list_node;$/;"	t	typeref:struct:list_node
list_node_del	./cl_utils.h	/^static inline void list_node_del(struct list_node *node)$/;"	f
list_node_init	./cl_utils.h	/^static inline void list_node_init(list_node *node)$/;"	f
list_node_insert_after	./cl_utils.c	/^list_node_insert_after(struct list_node *node, struct list_node *the_new)$/;"	f
list_node_insert_before	./cl_utils.c	/^list_node_insert_before(struct list_node *node, struct list_node *the_new)$/;"	f
list_node_out_of_list	./cl_utils.h	/^static inline int list_node_out_of_list(const struct list_node *node)$/;"	f
llccc_ec	./cl_driver.h	/^  llccc_ec       = 0x2<<1,$/;"	e	enum:cl_llccc_cache_control
llccc_pte	./cl_driver.h	/^  llccc_pte      = 0x0<<1,$/;"	e	enum:cl_llccc_cache_control
llccc_uc	./cl_driver.h	/^  llccc_uc       = 0x1<<1,$/;"	e	enum:cl_llccc_cache_control
llccc_ucllc	./cl_driver.h	/^  llccc_ucllc    = 0x3<<1$/;"	e	enum:cl_llccc_cache_control
local_mem_size	./cl_device_id.h	/^  cl_ulong local_mem_size;$/;"	m	struct:_cl_device_id
local_mem_sz	./cl_kernel.h	/^  cl_ulong local_mem_sz;      \/* local memory size specified in kernel args. *\/$/;"	m	struct:_cl_kernel
local_mem_type	./cl_device_id.h	/^  cl_device_local_mem_type local_mem_type;$/;"	m	struct:_cl_device_id
local_sz	./cl_kernel.h	/^  uint32_t local_sz:30; \/* For __local size specification *\/$/;"	m	struct:cl_argument
local_work_size	./cl_device_enqueue.c	/^  int local_work_size[3];$/;"	m	struct:ndrange_info_t	file:
locked	./intel/intel_driver.h	/^  int locked;$/;"	m	struct:intel_driver
lod_bias	./intel/intel_structs.h	/^    uint32_t lod_bias:11; $/;"	m	struct:gen6_sampler_state::__anon99
lod_bias	./intel/intel_structs.h	/^    uint32_t lod_bias:13;$/;"	m	struct:gen7_sampler_state::__anon103
lod_bias	./intel/intel_structs.h	/^    uint32_t lod_bias:13;$/;"	m	struct:gen8_sampler_state::__anon107
lod_clamp_mag_mode	./intel/intel_structs.h	/^    uint32_t lod_clamp_mag_mode:1;$/;"	m	struct:gen8_sampler_state::__anon109
lod_preclamp	./intel/intel_structs.h	/^    uint32_t lod_preclamp:1; $/;"	m	struct:gen6_sampler_state::__anon99
lod_preclamp	./intel/intel_structs.h	/^    uint32_t lod_preclamp:1;$/;"	m	struct:gen7_sampler_state::__anon103
lod_preclamp	./intel/intel_structs.h	/^    uint32_t lod_preclamp:2;$/;"	m	struct:gen8_sampler_state::__anon107
lut	./intel/intel_structs.h	/^    gen7_vme_rd_lut_set_t lut[GEN7_NUM_VME_RD_LUT_SETS];$/;"	m	struct:gen7_vme_state
mag_filter	./intel/intel_structs.h	/^    uint32_t mag_filter:3; $/;"	m	struct:gen6_sampler_state::__anon99
mag_filter	./intel/intel_structs.h	/^    uint32_t mag_filter:3;$/;"	m	struct:gen7_sampler_state::__anon103
mag_filter	./intel/intel_structs.h	/^    uint32_t mag_filter:3;$/;"	m	struct:gen8_sampler_state::__anon107
magic	./cl_base_object.h	/^  cl_ulong magic;        \/* Magic number for each CL object *\/$/;"	m	struct:_cl_base_object
map	./intel/intel_batchbuffer.h	/^  uint8_t *map;$/;"	m	struct:intel_batchbuffer
map_ref	./cl_mem.h	/^  int map_ref;              \/* The mapped count. *\/$/;"	m	struct:_cl_mem
mapped_gtt	./cl_mem.h	/^  uint8_t mapped_gtt;       \/* This object has mapped gtt, for unmap. *\/$/;"	m	struct:_cl_mem
mapped_ptr	./cl_mem.h	/^  cl_mapped_ptr* mapped_ptr;\/* Store the mapped addresses and size by caller. *\/$/;"	m	struct:_cl_mem
mapped_ptr_sz	./cl_mem.h	/^  int mapped_ptr_sz;        \/* The array size of mapped_ptr. *\/$/;"	m	struct:_cl_mem
maskstack_exception	./intel/intel_structs.h	/^    uint32_t maskstack_exception:1;$/;"	m	struct:gen6_interface_descriptor::__anon22
maskstack_exception	./intel/intel_structs.h	/^    uint32_t maskstack_exception:1;$/;"	m	struct:gen8_interface_descriptor::__anon29
max_1d_global_work_sizes	./cl_device_id.h	/^  size_t   max_1d_global_work_sizes[3];       \/\/ maximum 1d global work size for builtin kernels.$/;"	m	struct:_cl_device_id
max_2d_global_work_sizes	./cl_device_id.h	/^  size_t   max_2d_global_work_sizes[3];       \/\/ maximum 2d global work size for builtin kernels.$/;"	m	struct:_cl_device_id
max_3d_global_work_sizes	./cl_device_id.h	/^  size_t   max_3d_global_work_sizes[3];       \/\/ maximum 3d global work size for builtin kernels.$/;"	m	struct:_cl_device_id
max_aniso	./intel/intel_structs.h	/^    uint32_t max_aniso:3; $/;"	m	struct:gen6_sampler_state::__anon102
max_aniso	./intel/intel_structs.h	/^    uint32_t max_aniso:3;$/;"	m	struct:gen7_sampler_state::__anon106
max_aniso	./intel/intel_structs.h	/^    uint32_t max_aniso:3;$/;"	m	struct:gen8_sampler_state::__anon110
max_buf_n	./intel/intel_gpgpu.h	/^enum { max_buf_n = 128 };$/;"	e	enum:__anon8
max_clock_frequency	./cl_device_id.h	/^  cl_uint  max_clock_frequency;$/;"	m	struct:_cl_device_id
max_compute_unit	./cl_device_id.h	/^  cl_uint  max_compute_unit;               \/\/ maximum EU number$/;"	m	struct:_cl_device_id
max_constant_args	./cl_device_id.h	/^  cl_uint  max_constant_args;$/;"	m	struct:_cl_device_id
max_constant_buffer_size	./cl_device_id.h	/^  cl_ulong max_constant_buffer_size;$/;"	m	struct:_cl_device_id
max_global_variable_size	./cl_device_id.h	/^  size_t  max_global_variable_size;$/;"	m	struct:_cl_device_id
max_img_n	./intel/intel_gpgpu.h	/^enum { max_img_n = 128};$/;"	e	enum:__anon9
max_lod	./intel/intel_structs.h	/^    uint32_t max_lod:10; $/;"	m	struct:gen6_sampler_state::__anon100
max_lod	./intel/intel_structs.h	/^    uint32_t max_lod:12;$/;"	m	struct:gen7_sampler_state::__anon104
max_lod	./intel/intel_structs.h	/^    uint32_t max_lod:12;$/;"	m	struct:gen8_sampler_state::__anon108
max_mem_alloc_size	./cl_device_id.h	/^  cl_ulong max_mem_alloc_size;$/;"	m	struct:_cl_device_id
max_on_device_events	./cl_device_id.h	/^  cl_uint max_on_device_events;$/;"	m	struct:_cl_device_id
max_on_device_queues	./cl_device_id.h	/^  cl_uint max_on_device_queues;$/;"	m	struct:_cl_device_id
max_packets	./cl_mem.h	/^  uint32_t max_packets;$/;"	m	struct:_cl_mem_pipe
max_parameter_size	./cl_device_id.h	/^  size_t   max_parameter_size;$/;"	m	struct:_cl_device_id
max_pipe_args	./cl_device_id.h	/^  cl_uint  max_pipe_args;$/;"	m	struct:_cl_device_id
max_read_image_args	./cl_device_id.h	/^  cl_uint  max_read_image_args;$/;"	m	struct:_cl_device_id
max_read_write_image_args	./cl_device_id.h	/^  cl_uint  max_read_write_image_args;$/;"	m	struct:_cl_device_id
max_sampler_n	./intel/intel_gpgpu.h	/^enum {max_sampler_n = 16 };$/;"	e	enum:__anon10
max_samplers	./cl_device_id.h	/^  cl_uint  max_samplers;$/;"	m	struct:_cl_device_id
max_thread_per_unit	./cl_device_id.h	/^  cl_uint  max_thread_per_unit;            \/\/ maximum EU threads per EU.$/;"	m	struct:_cl_device_id
max_threads	./intel/intel_gpgpu.h	/^  uint32_t max_threads;      \/* max threads requested by the user *\/$/;"	m	struct:intel_gpgpu
max_threads	./intel/intel_structs.h	/^    uint32_t max_threads:16;$/;"	m	struct:gen6_vfe_state_inline::__anon75
max_time_kernel_name	./performance.c	/^  char max_time_kernel_name[MAX_KERNEL_NAME_LENGTH];$/;"	m	struct:context_storage_node	file:
max_work_group_size	./cl_device_id.h	/^  size_t   max_work_group_size;            \/\/ maximum work group size under simd16 mode.$/;"	m	struct:_cl_device_id
max_work_item_dimensions	./cl_device_id.h	/^  cl_uint  max_work_item_dimensions;       \/\/ should be 3.$/;"	m	struct:_cl_device_id
max_work_item_sizes	./cl_device_id.h	/^  size_t   max_work_item_sizes[3];         \/\/ equal to maximum work group size.$/;"	m	struct:_cl_device_id
max_write_image_args	./cl_device_id.h	/^  cl_uint  max_write_image_args;$/;"	m	struct:_cl_device_id
me	./cl_accelerator_intel.h	/^    cl_motion_estimation_desc_intel me;$/;"	m	union:_cl_accelerator_intel::__anon1
media_boundary_pixel_mode	./intel/intel_structs.h	/^    uint32_t media_boundary_pixel_mode:2;$/;"	m	struct:gen7_surface_state::__anon34
media_boundary_pixel_mode	./intel/intel_structs.h	/^    uint32_t media_boundary_pixel_mode:2;$/;"	m	struct:gen8_surface_state::__anon42
mem	./cl_kernel.h	/^  cl_mem mem;           \/* For image and regular buffers *\/$/;"	m	struct:cl_argument
mem_base_addr_align	./cl_device_id.h	/^  cl_uint  mem_base_addr_align;$/;"	m	struct:_cl_device_id
mem_list	./cl_enqueue.h	/^  const cl_mem *mem_list;    \/* mem_list of clEnqueueNativeKernel *\/$/;"	m	struct:_enqueue_data
mem_obj	./cl_enqueue.h	/^  cl_mem mem_obj;            \/* Enqueue's cl_mem *\/$/;"	m	struct:_enqueue_data
mem_obj_ctrl_state	./intel/intel_structs.h	/^    uint32_t mem_obj_ctrl_state:7;$/;"	m	struct:gen8_surface_state::__anon43
mem_object_num	./cl_context.h	/^  cl_uint mem_object_num;           \/* All memory number currently allocated *\/$/;"	m	struct:_cl_context
mem_objects	./cl_context.h	/^  list_head mem_objects;            \/* All memory object currently allocated *\/$/;"	m	struct:_cl_context
mid_event_of_enq	./cl_enqueue.h	/^  cl_bool mid_event_of_enq;  \/* For non-uniform ndrange, one enqueue have a sequence event, the$/;"	m	struct:_enqueue_data
min_array_element	./intel/intel_structs.h	/^      uint32_t min_array_element:11;$/;"	m	struct:gen7_surface_state::__anon38::__anon39
min_array_elt	./intel/intel_structs.h	/^        uint32_t min_array_elt:11;$/;"	m	struct:gen8_surface_state::__anon46::__anon47::__anon48
min_data_type_align_size	./cl_device_id.h	/^  cl_uint  min_data_type_align_size;$/;"	m	struct:_cl_device_id
min_filter	./intel/intel_structs.h	/^    uint32_t min_filter:3; $/;"	m	struct:gen6_sampler_state::__anon99
min_filter	./intel/intel_structs.h	/^    uint32_t min_filter:3;$/;"	m	struct:gen7_sampler_state::__anon103
min_filter	./intel/intel_structs.h	/^    uint32_t min_filter:3;$/;"	m	struct:gen8_sampler_state::__anon107
min_lod	./intel/intel_structs.h	/^    uint32_t min_lod:10; $/;"	m	struct:gen6_sampler_state::__anon100
min_lod	./intel/intel_structs.h	/^    uint32_t min_lod:12;$/;"	m	struct:gen7_sampler_state::__anon104
min_lod	./intel/intel_structs.h	/^    uint32_t min_lod:12;$/;"	m	struct:gen7_surface_state::__anon41
min_lod	./intel/intel_structs.h	/^    uint32_t min_lod:12;$/;"	m	struct:gen8_sampler_state::__anon108
min_mag_neq	./intel/intel_structs.h	/^    uint32_t min_mag_neq:1;$/;"	m	struct:gen6_sampler_state::__anon99
mip_count	./intel/intel_structs.h	/^    uint32_t mip_count:4;$/;"	m	struct:gen7_surface_state::__anon40
mip_count	./intel/intel_structs.h	/^    uint32_t mip_count:4;$/;"	m	struct:gen8_surface_state::__anon49
mip_filter	./intel/intel_structs.h	/^    uint32_t mip_filter:2; $/;"	m	struct:gen6_sampler_state::__anon99
mip_filter	./intel/intel_structs.h	/^    uint32_t mip_filter:2;$/;"	m	struct:gen7_sampler_state::__anon103
mip_filter	./intel/intel_structs.h	/^    uint32_t mip_filter:2;$/;"	m	struct:gen8_sampler_state::__anon107
monochrome_filter_height	./intel/intel_structs.h	/^    uint32_t monochrome_filter_height:3; $/;"	m	struct:gen6_sampler_state::__anon102
monochrome_filter_width	./intel/intel_structs.h	/^    uint32_t monochrome_filter_width:3; $/;"	m	struct:gen6_sampler_state::__anon102
mss_fmt	./intel/intel_structs.h	/^      uint32_t mss_fmt:1;$/;"	m	struct:gen7_surface_state::__anon38::__anon39
mtllc_none	./cl_driver.h	/^  mtllc_none     = 0x1<<5,$/;"	e	enum:cl_mtllc_cache_control
mtllc_pte	./cl_driver.h	/^  mtllc_pte      = 0x0<<5,$/;"	e	enum:cl_mtllc_cache_control
mtllc_wb	./cl_driver.h	/^  mtllc_wb       = 0x3<<5$/;"	e	enum:cl_mtllc_cache_control
mtllc_wt	./cl_driver.h	/^  mtllc_wt       = 0x2<<5,$/;"	e	enum:cl_mtllc_cache_control
mulsample_pal_idx	./intel/intel_structs.h	/^      uint32_t mulsample_pal_idx:3;$/;"	m	struct:gen7_surface_state::__anon38::__anon39
multisample_format	./intel/intel_structs.h	/^        uint32_t multisample_format:1;$/;"	m	struct:gen8_surface_state::__anon46::__anon47::__anon48
multisample_num	./intel/intel_structs.h	/^        uint32_t multisample_num:3;$/;"	m	struct:gen8_surface_state::__anon46::__anon47::__anon48
multisample_pos_palette_idx	./intel/intel_structs.h	/^        uint32_t multisample_pos_palette_idx:3;$/;"	m	struct:gen8_surface_state::__anon46::__anon47::__anon48
mutex	./cl_base_object.h	/^  pthread_mutex_t mutex; \/* THe mutex to protect this object MT safe *\/$/;"	m	struct:_cl_base_object
mutex	./performance.c	/^static pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
n	./cl_utils.h	/^  struct list_node *n;$/;"	m	struct:list_node	typeref:struct:list_node::list_node
name	./cl_device_id.h	/^  const char *name;$/;"	m	struct:_cl_device_id
name	./cl_driver.h	/^  const char *name;        \/* kernel name and bo name *\/$/;"	m	struct:cl_gpgpu_kernel
name	./cl_platform_id.h	/^  const char *name;$/;"	m	struct:_cl_platform_id
name	./x11/dricommon.h	/^    unsigned int name;$/;"	m	struct:dri_buffer::__anon112
name	./x11/va_dri2.h	/^    unsigned int name;$/;"	m	struct:__anon111
name_sz	./cl_device_id.h	/^  size_t name_sz;$/;"	m	struct:_cl_device_id
name_sz	./cl_platform_id.h	/^  size_t name_sz;$/;"	m	struct:_cl_platform_id
native_vector_width_char	./cl_device_id.h	/^  cl_uint  native_vector_width_char;$/;"	m	struct:_cl_device_id
native_vector_width_double	./cl_device_id.h	/^  cl_uint  native_vector_width_double;$/;"	m	struct:_cl_device_id
native_vector_width_float	./cl_device_id.h	/^  cl_uint  native_vector_width_float;$/;"	m	struct:_cl_device_id
native_vector_width_half	./cl_device_id.h	/^  cl_uint  native_vector_width_half;$/;"	m	struct:_cl_device_id
native_vector_width_int	./cl_device_id.h	/^  cl_uint  native_vector_width_int;$/;"	m	struct:_cl_device_id
native_vector_width_long	./cl_device_id.h	/^  cl_uint  native_vector_width_long;$/;"	m	struct:_cl_device_id
native_vector_width_short	./cl_device_id.h	/^  cl_uint  native_vector_width_short;$/;"	m	struct:_cl_device_id
ndrange_info_t	./cl_device_enqueue.c	/^typedef struct ndrange_info_t {$/;"	s	file:
ndrange_info_t	./cl_device_enqueue.c	/^} ndrange_info_t;$/;"	t	typeref:struct:ndrange_info_t	file:
need_close	./intel/intel_driver.h	/^  int need_close;$/;"	m	struct:intel_driver
next	./cl_accelerator_intel.h	/^  cl_accelerator_intel prev, next;     \/* We chain in the allocator, why chain? *\/$/;"	m	struct:_cl_accelerator_intel
next	./cl_program.h	/^  cl_program prev, next;  \/* We chain the programs together *\/$/;"	m	struct:_cl_program
next	./intel/intel_gpgpu.h	/^  struct intel_gpgpu_node *next;$/;"	m	struct:intel_gpgpu_node	typeref:struct:intel_gpgpu_node::intel_gpgpu_node
next	./performance.c	/^  struct context_storage_node *next;$/;"	m	struct:context_storage_node	typeref:struct:context_storage_node::context_storage_node	file:
next	./performance.c	/^  struct kernel_storage_node *next;$/;"	m	struct:kernel_storage_node	typeref:struct:kernel_storage_node::kernel_storage_node	file:
next	./x11/dricommon.h	/^  struct dri_drawable *next;$/;"	m	struct:dri_drawable	typeref:struct:dri_drawable::dri_drawable
node	./cl_base_object.h	/^  list_node node;        \/* CL object node belong to some container *\/$/;"	m	struct:_cl_base_object
node	./cl_event.h	/^  list_node node;                \/* Event callback list node *\/$/;"	m	struct:_cl_event_user_callback
node	./cl_mem.h	/^  list_node node; \/* Mem callback list node *\/$/;"	m	struct:_cl_mem_dstr_cb
non_normalized_coord	./intel/intel_structs.h	/^    uint32_t non_normalized_coord:1;$/;"	m	struct:gen6_sampler_state::__anon102
non_normalized_coord	./intel/intel_structs.h	/^    uint32_t non_normalized_coord:1;$/;"	m	struct:gen7_sampler_state::__anon106
non_normalized_coord	./intel/intel_structs.h	/^    uint32_t non_normalized_coord:1;$/;"	m	struct:gen8_sampler_state::__anon110
non_sep_filter_footprint_mask	./intel/intel_structs.h	/^    uint32_t non_sep_filter_footprint_mask:8;$/;"	m	struct:gen8_sampler_state::__anon110
normalized_coords	./cl_sampler.h	/^  cl_bool normalized_coords;  \/* Are coordinates normalized? *\/$/;"	m	struct:_cl_sampler
not_str_buf	./intel/intel_structs.h	/^    } not_str_buf;$/;"	m	union:gen7_surface_state::__anon38	typeref:struct:gen7_surface_state::__anon38::__anon39
notify_enable	./intel/intel_structs.h	/^    uint32_t notify_enable : BITFIELD_BIT(8);$/;"	m	struct:gen6_pipe_control::__anon82
notify_enable	./intel/intel_structs.h	/^    uint32_t notify_enable : BITFIELD_BIT(8);$/;"	m	struct:gen8_pipe_control::__anon87
null_bo	./intel/intel_driver.h	/^  drm_intel_bo *null_bo;$/;"	m	struct:intel_driver
num_cs_entries	./intel/intel_gpgpu.h	/^    uint32_t num_cs_entries;$/;"	m	struct:intel_gpgpu::__anon20
num_mip_levels	./cl_mem.h	/^    cl_uint                 num_mip_levels;$/;"	m	struct:_cl_image_desc
num_samples	./cl_mem.h	/^    cl_uint                 num_samples;$/;"	m	struct:_cl_image_desc
numer_mulsample	./intel/intel_structs.h	/^      uint32_t numer_mulsample:3;$/;"	m	struct:gen7_surface_state::__anon38::__anon39
ocl_config_file	./Android.mk	/^ocl_config_file = $(LOCAL_PATH)\/OCLConfig.h$/;"	m
offset	./cl_enqueue.h	/^  size_t offset;             \/* Mem object's offset *\/$/;"	m	struct:_enqueue_data
offset	./cl_mem.h	/^  size_t offset;                  \/* offset for dri_bo, used when it's reloc. *\/$/;"	m	struct:_cl_mem_image
offset	./cl_mem.h	/^  size_t offset;            \/* offset of host_ptr to the page beginning, only for CL_MEM_USE_HOST_PTR*\/$/;"	m	struct:_cl_mem
offset	./intel/intel_cl_gl_share_image_info.h	/^  size_t offset;$/;"	m	struct:_intel_cl_gl_share_image_info
offsetof	./cl_utils.h	412;"	d
offsetof	./cl_utils.h	414;"	d
offsetof	./cl_utils.h	416;"	d
opaque	./cl_kernel.h	/^  gbe_kernel opaque;          \/* (Opaque) compiler structure for the OCL kernel *\/$/;"	m	struct:_cl_kernel
opaque	./cl_program.h	/^  gbe_program opaque;     \/* (Opaque) program as ouput by the compiler *\/$/;"	m	struct:_cl_program
opencl_c_version	./cl_device_id.h	/^  const char *opencl_c_version;$/;"	m	struct:_cl_device_id
opencl_c_version_sz	./cl_device_id.h	/^  size_t opencl_c_version_sz;$/;"	m	struct:_cl_device_id
origin	./cl_enqueue.h	/^  size_t origin[3];          \/* Origin *\/$/;"	m	struct:_enqueue_data
origin	./cl_mem.h	/^  size_t origin[3];  \/* mapped origin *\/$/;"	m	struct:_cl_mapped_ptr
owner	./cl_base_object.h	/^  pthread_t owner;       \/* The thread which own this object *\/$/;"	m	struct:_cl_base_object
p	./cl_utils.h	/^  struct list_node *p;$/;"	m	struct:list_node	typeref:struct:list_node::list_node
packet_size	./cl_mem.h	/^  uint32_t packet_size;$/;"	m	struct:_cl_mem_pipe
pad	./intel/intel_structs.h	/^    uint32_t pad:12;$/;"	m	struct:gen6_sampler_state::__anon102
pad	./intel/intel_structs.h	/^    uint32_t pad:1;$/;"	m	struct:gen7_sampler_state::__anon106
pad	./intel/intel_structs.h	/^    uint32_t pad:1;$/;"	m	struct:gen8_sampler_state::__anon110
pad	./intel/intel_structs.h	/^    uint32_t pad:2;$/;"	m	struct:gen6_interface_descriptor::__anon23
pad	./intel/intel_structs.h	/^    uint32_t pad:2;$/;"	m	struct:gen6_sampler_state::__anon100
pad	./intel/intel_structs.h	/^    uint32_t pad:2;$/;"	m	struct:gen8_interface_descriptor::__anon30
pad	./intel/intel_structs.h	/^    uint32_t pad:4;$/;"	m	struct:gen7_sampler_state::__anon104
pad	./intel/intel_structs.h	/^    uint32_t pad:5;$/;"	m	struct:gen6_sampler_state::__anon101
pad	./intel/intel_structs.h	/^    uint32_t pad:5;$/;"	m	struct:gen7_sampler_state::__anon105
pad	./intel/intel_structs.h	/^    uint32_t pad:5;$/;"	m	struct:gen8_interface_descriptor::__anon33
pad	./intel/intel_structs.h	/^    uint32_t pad:7;$/;"	m	struct:gen6_interface_descriptor::__anon22
pad	./intel/intel_structs.h	/^    uint32_t pad:7;$/;"	m	struct:gen8_interface_descriptor::__anon29
pad0	./intel/intel_structs.h	/^		uint32_t pad0:12;$/;"	m	struct:gen8_surface_state::__anon60
pad0	./intel/intel_structs.h	/^        uint32_t pad0:1;$/;"	m	struct:gen8_surface_state::__anon50::__anon51::__anon56
pad0	./intel/intel_structs.h	/^      uint32_t pad0:1;$/;"	m	struct:gen7_surface_state::__anon38::__anon39
pad0	./intel/intel_structs.h	/^      uint32_t pad0;$/;"	m	union:gen8_surface_state::__anon46::__anon47
pad0	./intel/intel_structs.h	/^    uint32_t pad0:1;$/;"	m	struct:gen6_sampler_state::__anon99
pad0	./intel/intel_structs.h	/^    uint32_t pad0:1;$/;"	m	struct:gen7_media_surface_state::__anon68
pad0	./intel/intel_structs.h	/^    uint32_t pad0:1;$/;"	m	struct:gen7_sampler_state::__anon103
pad0	./intel/intel_structs.h	/^    uint32_t pad0:1;$/;"	m	struct:gen7_surface_state::__anon34
pad0	./intel/intel_structs.h	/^    uint32_t pad0:1;$/;"	m	struct:gen7_surface_state::__anon40
pad0	./intel/intel_structs.h	/^    uint32_t pad0:1;$/;"	m	struct:gen8_sampler_state::__anon107
pad0	./intel/intel_structs.h	/^    uint32_t pad0:1;$/;"	m	struct:gen8_surface_state::__anon42
pad0	./intel/intel_structs.h	/^    uint32_t pad0:1;$/;"	m	struct:gen8_surface_state::__anon45
pad0	./intel/intel_structs.h	/^    uint32_t pad0:1;$/;"	m	struct:gen8_surface_state::__anon49
pad0	./intel/intel_structs.h	/^    uint32_t pad0:2;$/;"	m	struct:gen7_media_surface_state::__anon69
pad0	./intel/intel_structs.h	/^    uint32_t pad0:2;$/;"	m	struct:gen7_media_surface_state::__anon70
pad0	./intel/intel_structs.h	/^    uint32_t pad0:2;$/;"	m	struct:gen7_surface_state::__anon36
pad0	./intel/intel_structs.h	/^    uint32_t pad0:2;$/;"	m	struct:gen8_sampler_state::__anon109
pad0	./intel/intel_structs.h	/^    uint32_t pad0:2;$/;"	m	struct:gen8_sampler_state::__anon110
pad0	./intel/intel_structs.h	/^    uint32_t pad0:2;$/;"	m	struct:gen8_surface_state::__anon44
pad0	./intel/intel_structs.h	/^    uint32_t pad0:3;$/;"	m	struct:gen7_surface_state::__anon37
pad0	./intel/intel_structs.h	/^    uint32_t pad0:3;$/;"	m	struct:gen8_surface_state::__anon43
pad0	./intel/intel_structs.h	/^    uint32_t pad0:4;$/;"	m	struct:gen7_surface_state::__anon41
pad0	./intel/intel_structs.h	/^    uint32_t pad0:4;$/;"	m	struct:gen8_surface_state::__anon57
pad0	./intel/intel_structs.h	/^    uint32_t pad0:6;$/;"	m	struct:gen7_sampler_state::__anon106
pad0	./intel/intel_structs.h	/^    uint32_t pad0;$/;"	m	struct:gen7_media_surface_state::__anon71
pad0	./intel/intel_structs.h	/^    uint32_t pad0;$/;"	m	struct:gen7_media_surface_state::__anon72
pad0	./intel/intel_structs.h	/^    uint32_t pad0;$/;"	m	struct:gen7_media_surface_state::__anon73
pad0	./intel/intel_structs.h	/^    uint32_t pad0;$/;"	m	struct:gen8_surface_state::__anon62
pad0	./intel/intel_structs.h	/^    uint32_t pad0;$/;"	m	struct:gen8_surface_state::__anon63
pad0	./intel/intel_structs.h	/^    uint32_t pad0;$/;"	m	struct:gen8_surface_state::__anon64
pad0	./intel/intel_structs.h	/^    uint32_t pad0;$/;"	m	struct:gen8_surface_state::__anon65
pad1	./intel/intel_structs.h	/^        uint32_t pad1:1;$/;"	m	struct:gen8_surface_state::__anon46::__anon47::__anon48
pad1	./intel/intel_structs.h	/^        uint32_t pad1:1;$/;"	m	struct:gen8_surface_state::__anon50::__anon51::__anon55
pad1	./intel/intel_structs.h	/^    uint32_t pad1:1;$/;"	m	struct:gen7_media_surface_state::__anon68
pad1	./intel/intel_structs.h	/^    uint32_t pad1:1;$/;"	m	struct:gen7_media_surface_state::__anon70
pad1	./intel/intel_structs.h	/^    uint32_t pad1:1;$/;"	m	struct:gen7_sampler_state::__anon103
pad1	./intel/intel_structs.h	/^    uint32_t pad1:1;$/;"	m	struct:gen7_surface_state::__anon34
pad1	./intel/intel_structs.h	/^    uint32_t pad1:1;$/;"	m	struct:gen8_sampler_state::__anon109
pad1	./intel/intel_structs.h	/^    uint32_t pad1:1;$/;"	m	struct:gen8_surface_state::__anon43
pad1	./intel/intel_structs.h	/^    uint32_t pad1:2;$/;"	m	struct:gen7_media_surface_state::__anon69
pad1	./intel/intel_structs.h	/^    uint32_t pad1:2;$/;"	m	struct:gen7_surface_state::__anon36
pad1	./intel/intel_structs.h	/^    uint32_t pad1:2;$/;"	m	struct:gen8_surface_state::__anon44
pad1	./intel/intel_structs.h	/^    uint32_t pad1:2;$/;"	m	struct:gen8_surface_state::__anon45
pad1	./intel/intel_structs.h	/^    uint32_t pad1:4;$/;"	m	struct:gen7_surface_state::__anon41
pad1	./x11/va_dri2str.h	/^    BYTE    pad1;$/;"	m	struct:__anon115
pad1	./x11/va_dri2str.h	/^    BYTE    pad1;$/;"	m	struct:__anon117
pad1	./x11/va_dri2str.h	/^    BYTE    pad1;$/;"	m	struct:__anon119
pad1	./x11/va_dri2str.h	/^    BYTE    pad1;$/;"	m	struct:__anon123
pad1	./x11/va_dri2str.h	/^    BYTE    pad1;$/;"	m	struct:__anon125
pad2	./intel/intel_structs.h	/^          uint32_t pad2:2;$/;"	m	struct:gen8_surface_state::__anon50::__anon51::__anon52::__anon54
pad2	./intel/intel_structs.h	/^    uint32_t pad2:1;$/;"	m	struct:gen8_surface_state::__anon43
pad2	./intel/intel_structs.h	/^    uint32_t pad2:2;$/;"	m	struct:gen6_vfe_state_inline::__anon74
pad2	./intel/intel_structs.h	/^    uint32_t pad2:2;$/;"	m	struct:gen8_surface_state::__anon49
pad2	./intel/intel_structs.h	/^    uint32_t pad2:3;$/;"	m	struct:gen6_interface_descriptor::__anon22
pad2	./intel/intel_structs.h	/^    uint32_t pad2:3;$/;"	m	struct:gen8_interface_descriptor::__anon29
pad2	./intel/intel_structs.h	/^    uint32_t pad2:6;$/;"	m	struct:gen7_surface_state::__anon40
pad3	./intel/intel_structs.h	/^          uint32_t pad3:4;$/;"	m	struct:gen8_surface_state::__anon50::__anon51::__anon52::__anon53
pad3	./intel/intel_structs.h	/^    uint32_t pad3:1;$/;"	m	struct:gen6_interface_descriptor::__anon22
pad3	./intel/intel_structs.h	/^    uint32_t pad3:1;$/;"	m	struct:gen8_interface_descriptor::__anon29
pad3	./intel/intel_structs.h	/^    uint32_t pad3:3;$/;"	m	struct:gen6_vfe_state_inline::__anon74
pad3	./intel/intel_structs.h	/^    uint32_t pad3:3;$/;"	m	struct:gen8_surface_state::__anon49
pad4	./intel/intel_structs.h	/^    uint32_t pad4:2;$/;"	m	struct:gen6_interface_descriptor::__anon22
pad4	./intel/intel_structs.h	/^    uint32_t pad4:2;$/;"	m	struct:gen8_interface_descriptor::__anon29
pad4	./intel/intel_structs.h	/^    uint32_t pad4:2;$/;"	m	struct:gen8_surface_state::__anon49
pad5	./intel/intel_structs.h	/^    uint32_t pad5:11;$/;"	m	struct:gen8_interface_descriptor::__anon29
pad5	./intel/intel_structs.h	/^    uint32_t pad5:1;$/;"	m	struct:gen6_interface_descriptor::__anon22
pad5	./intel/intel_structs.h	/^    uint32_t pad5:4;$/;"	m	struct:gen8_surface_state::__anon49
pad6	./intel/intel_structs.h	/^    uint32_t pad6:16;$/;"	m	struct:gen8_interface_descriptor::__anon28
pad6	./intel/intel_structs.h	/^    uint32_t pad6:6;$/;"	m	struct:gen6_interface_descriptor::__anon21
pad6	./intel/intel_structs.h	/^    uint32_t pad6:6;$/;"	m	struct:gen6_interface_descriptor::__anon22
pad6	./intel/intel_structs.h	/^    uint32_t pad6:6;$/;"	m	struct:gen8_interface_descriptor::__anon27
pad7	./intel/intel_structs.h	/^    uint32_t pad7:6;$/;"	m	struct:gen6_interface_descriptor::__anon22
pad8	./intel/intel_structs.h	/^    uint32_t pad8:8;$/;"	m	struct:gen6_vfe_state_inline::__anon76
parent	./cl_mem.h	/^  struct _cl_mem_buffer* parent;       \/* Point to the parent buffer if is sub-buffer *\/$/;"	m	struct:_cl_mem_buffer	typeref:struct:_cl_mem_buffer::_cl_mem_buffer
parent_device	./cl_device_id.h	/^  cl_device_id parent_device;$/;"	m	struct:_cl_device_id
partition_max_sub_device	./cl_device_id.h	/^  cl_uint      partition_max_sub_device;$/;"	m	struct:_cl_device_id
partition_property	./cl_device_id.h	/^  cl_device_partition_property partition_property[3];$/;"	m	struct:_cl_device_id
partition_type	./cl_device_id.h	/^  cl_device_partition_property partition_type[3];$/;"	m	struct:_cl_device_id
pattern_size	./cl_enqueue.h	/^  size_t  pattern_size;      \/* the pattern_size of clEnqueueSVMMemFill *\/$/;"	m	struct:_enqueue_data
per_thread_scratch	./intel/intel_gpgpu.h	/^  uint32_t per_thread_scratch;$/;"	m	struct:intel_gpgpu
per_thread_scratch_space	./intel/intel_structs.h	/^    uint32_t per_thread_scratch_space:4;$/;"	m	struct:gen6_vfe_state_inline::__anon74
perf	./cl_command_queue.h	/^  cl_mem perf;                         \/* Where to put the perf counters *\/$/;"	m	struct:_cl_command_queue
perf_b	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } perf_b;$/;"	m	struct:intel_gpgpu	typeref:struct:intel_gpgpu::__anon12
pfnCreateCmDevice	./cl_cmrt.cpp	/^static CreateCmDeviceFunc pfnCreateCmDevice = NULL;$/;"	v	file:
pfnDestroyCmDevice	./cl_cmrt.cpp	/^static DestroyCmDeviceFunc pfnDestroyCmDevice = NULL;$/;"	v	file:
pfn_notify	./cl_context.h	/^  void (CL_CALLBACK *pfn_notify)(const char *, const void *, size_t, void *);$/;"	m	struct:_cl_context
pfn_notify	./cl_event.h	/^  cl_event_notify_cb pfn_notify; \/* Callback function *\/$/;"	m	struct:_cl_event_user_callback
pfn_notify	./cl_mem.h	/^  void(CL_CALLBACK *pfn_notify)(cl_mem memobj, void *user_data);$/;"	m	struct:_cl_mem_dstr_cb
pic_struct	./intel/intel_structs.h	/^    uint32_t pic_struct:2;$/;"	m	struct:gen7_media_surface_state::__anon67
pipe_control_flush_enable	./intel/intel_structs.h	/^    uint32_t pipe_control_flush_enable : BITFIELD_BIT(7);$/;"	m	struct:gen6_pipe_control::__anon82
pipe_control_flush_enable	./intel/intel_structs.h	/^    uint32_t pipe_control_flush_enable : BITFIELD_BIT(7);$/;"	m	struct:gen8_pipe_control::__anon87
pipe_max_active_reservations	./cl_device_id.h	/^  cl_uint  pipe_max_active_reservations;$/;"	m	struct:_cl_device_id
pipe_max_packet_siz	./cl_device_id.h	/^  cl_uint  pipe_max_packet_siz;$/;"	m	struct:_cl_device_id
pitch	./intel/intel_cl_gl_share_image_info.h	/^  size_t pitch;$/;"	m	struct:_intel_cl_gl_share_image_info
pitch	./intel/intel_structs.h	/^    uint32_t pitch:18;$/;"	m	struct:gen7_surface_state::__anon37
pitch	./x11/dricommon.h	/^    unsigned int pitch;$/;"	m	struct:dri_buffer::__anon112
pitch	./x11/va_dri2.h	/^    unsigned int pitch;$/;"	m	struct:__anon111
platform	./cl_device_id.h	/^  cl_platform_id platform;$/;"	m	struct:_cl_device_id
platform_id	./cl_context.h	/^  cl_context_properties platform_id;$/;"	m	struct:_cl_context_prop
pointers	./cl_enqueue.h	/^  void ** pointers;          \/* The svm_pointers of clEnqueueSVMFree  *\/$/;"	m	struct:_enqueue_data
post_sync_operation	./intel/intel_structs.h	/^    uint32_t post_sync_operation : BITFIELD_RANGE(14, 15);$/;"	m	struct:gen6_pipe_control::__anon82
post_sync_operation	./intel/intel_structs.h	/^    uint32_t post_sync_operation : BITFIELD_RANGE(14, 15);$/;"	m	struct:gen8_pipe_control::__anon87
preferred_global_atomic_alignment	./cl_device_id.h	/^  cl_uint preferred_global_atomic_alignment;$/;"	m	struct:_cl_device_id
preferred_local_atomic_alignment	./cl_device_id.h	/^  cl_uint preferred_local_atomic_alignment;$/;"	m	struct:_cl_device_id
preferred_platform_atomic_alignment	./cl_device_id.h	/^  cl_uint preferred_platform_atomic_alignment;$/;"	m	struct:_cl_device_id
preferred_vector_width_char	./cl_device_id.h	/^  cl_uint  preferred_vector_width_char;$/;"	m	struct:_cl_device_id
preferred_vector_width_double	./cl_device_id.h	/^  cl_uint  preferred_vector_width_double;$/;"	m	struct:_cl_device_id
preferred_vector_width_float	./cl_device_id.h	/^  cl_uint  preferred_vector_width_float;$/;"	m	struct:_cl_device_id
preferred_vector_width_half	./cl_device_id.h	/^  cl_uint  preferred_vector_width_half;$/;"	m	struct:_cl_device_id
preferred_vector_width_int	./cl_device_id.h	/^  cl_uint  preferred_vector_width_int;$/;"	m	struct:_cl_device_id
preferred_vector_width_long	./cl_device_id.h	/^  cl_uint  preferred_vector_width_long;$/;"	m	struct:_cl_device_id
preferred_vector_width_short	./cl_device_id.h	/^  cl_uint  preferred_vector_width_short;$/;"	m	struct:_cl_device_id
prev	./cl_accelerator_intel.h	/^  cl_accelerator_intel prev, next;     \/* We chain in the allocator, why chain? *\/$/;"	m	struct:_cl_accelerator_intel
prev	./cl_program.h	/^  cl_program prev, next;  \/* We chain the programs together *\/$/;"	m	struct:_cl_program
prev_context_pointer	./performance.c	/^static context_storage_node * prev_context_pointer = NULL;$/;"	v	file:
prev_kernel_pointer	./performance.c	/^static kernel_storage_node * prev_kernel_pointer = NULL;$/;"	v	file:
print_time_info	./performance.c	/^static void print_time_info()$/;"	f	file:
printf_b	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } printf_b;      \/* the printf buf and index buf*\/$/;"	m	struct:intel_gpgpu	typeref:struct:intel_gpgpu::__anon16
printf_buffer_size	./cl_device_id.h	/^  size_t printf_buffer_size;$/;"	m	struct:_cl_device_id
printf_info	./intel/intel_gpgpu.h	/^  void* printf_info;$/;"	m	struct:intel_gpgpu
process_extension_str	./cl_extensions.c	/^process_extension_str(cl_extensions_t *extensions)$/;"	f
profile	./cl_device_id.h	/^  const char *profile;$/;"	m	struct:_cl_device_id
profile	./cl_platform_id.h	/^  const char *profile;$/;"	m	struct:_cl_platform_id
profile_sz	./cl_device_id.h	/^  size_t profile_sz;$/;"	m	struct:_cl_device_id
profile_sz	./cl_platform_id.h	/^  size_t profile_sz;$/;"	m	struct:_cl_platform_id
profiling_b	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } profiling_b;   \/* the buf for profiling*\/$/;"	m	struct:intel_gpgpu	typeref:struct:intel_gpgpu::__anon17
profiling_info	./intel/intel_gpgpu.h	/^  void* profiling_info;$/;"	m	struct:intel_gpgpu
profiling_timer_resolution	./cl_device_id.h	/^  size_t   profiling_timer_resolution;$/;"	m	struct:_cl_device_id
program	./cl_kernel.h	/^  cl_program program;         \/* Owns this structure (and pointers) *\/$/;"	m	struct:_cl_kernel
program_num	./cl_context.h	/^  cl_uint program_num;              \/* All program number currently allocated *\/$/;"	m	struct:_cl_context
programs	./cl_context.h	/^  list_head programs;               \/* All programs currently allocated *\/$/;"	m	struct:_cl_context
prop_len	./cl_context.h	/^  cl_uint                 prop_len;  \/* count of the properties *\/$/;"	m	struct:_cl_context
prop_user	./cl_context.h	/^  cl_context_properties * prop_user; \/* a copy of user passed context properties when create context *\/$/;"	m	struct:_cl_context
props	./cl_command_queue.h	/^  cl_command_queue_properties props;   \/* Queue properties *\/$/;"	m	struct:_cl_command_queue
props	./cl_context.h	/^  struct _cl_context_prop props;$/;"	m	struct:_cl_context	typeref:struct:_cl_context::_cl_context_prop
protected_memory_app_id	./intel/intel_structs.h	/^    uint32_t protected_memory_app_id : BITFIELD_BIT(6);$/;"	m	struct:gen6_pipe_control::__anon82
protected_memory_app_id	./intel/intel_structs.h	/^    uint32_t protected_memory_app_id : BITFIELD_BIT(6);$/;"	m	struct:gen8_pipe_control::__anon87
protected_memory_enable	./intel/intel_structs.h	/^    uint32_t protected_memory_enable : BITFIELD_BIT(22);$/;"	m	struct:gen6_pipe_control::__anon82
protected_memory_enable	./intel/intel_structs.h	/^    uint32_t protected_memory_enable : BITFIELD_BIT(22);$/;"	m	struct:gen8_pipe_control::__anon87
ptr	./cl_enqueue.h	/^  void *ptr;                 \/* Ptr for write and return value *\/$/;"	m	struct:_enqueue_data
ptr	./cl_kernel.h	/^  void *ptr;            \/* SVM ptr value. *\/$/;"	m	struct:cl_argument
ptr	./cl_mem.h	/^  void * ptr;$/;"	m	struct:_cl_mapped_ptr
ptr	./intel/intel_batchbuffer.h	/^  uint8_t *ptr;$/;"	m	struct:intel_batchbuffer
queue	./cl_command_queue.h	/^  cl_command_queue queue;$/;"	m	struct:_cl_command_queue_enqueue_worker
queue	./cl_enqueue.h	/^  cl_command_queue queue;    \/* Command queue *\/$/;"	m	struct:_enqueue_data
queue	./cl_event.h	/^  cl_command_queue queue;     \/* The command queue associated with event *\/$/;"	m	struct:_cl_event
queue_modify_disable	./cl_context.h	/^  cl_uint queue_modify_disable;     \/* Temp disable queue list change. *\/$/;"	m	struct:_cl_context
queue_num	./cl_context.h	/^  cl_uint queue_num;                \/* All queue number currently allocated *\/$/;"	m	struct:_cl_context
queue_on_device_max_size	./cl_device_id.h	/^  cl_uint queue_on_device_max_size;$/;"	m	struct:_cl_device_id
queue_on_device_preferred_size	./cl_device_id.h	/^  cl_uint queue_on_device_preferred_size;$/;"	m	struct:_cl_device_id
queue_on_device_properties	./cl_device_id.h	/^  cl_command_queue_properties queue_on_device_properties;$/;"	m	struct:_cl_device_id
queue_on_host_properties	./cl_device_id.h	/^  cl_command_queue_properties queue_on_host_properties;$/;"	m	struct:_cl_device_id
queue_properties	./cl_device_id.h	/^  cl_command_queue_properties queue_properties;$/;"	m	struct:_cl_device_id
queues	./cl_context.h	/^  list_head queues;                 \/* All command queues currently allocated *\/$/;"	m	struct:_cl_context
quit	./cl_command_queue.h	/^  cl_bool quit;$/;"	m	struct:_cl_command_queue_enqueue_worker
r	./intel/intel_structs.h	/^    float r,g,b,a;$/;"	m	struct:gen7_sampler_border_color
r_wrap_mode	./intel/intel_structs.h	/^    uint32_t r_wrap_mode:3; $/;"	m	struct:gen6_sampler_state::__anon100
r_wrap_mode	./intel/intel_structs.h	/^    uint32_t r_wrap_mode:3;$/;"	m	struct:gen7_sampler_state::__anon106
r_wrap_mode	./intel/intel_structs.h	/^    uint32_t r_wrap_mode:3;$/;"	m	struct:gen8_sampler_state::__anon110
record	./performance.c	/^static storage record;$/;"	v	file:
red_clear_color	./intel/intel_structs.h	/^    uint32_t red_clear_color:1;$/;"	m	struct:gen8_surface_state::__anon57
ref	./cl_base_object.h	/^  atomic_t ref;          \/* Reference for each CL object *\/$/;"	m	struct:_cl_base_object
ref_its_program	./cl_kernel.h	/^  uint32_t ref_its_program:1; \/* True only for the user kernel (created by clCreateKernel) *\/$/;"	m	struct:_cl_kernel
region	./cl_enqueue.h	/^  size_t region[3];          \/* Region *\/$/;"	m	struct:_enqueue_data
region	./cl_mem.h	/^  size_t region[3];  \/* mapped region *\/$/;"	m	struct:_cl_mapped_ptr
render_cache_rw_mode	./intel/intel_structs.h	/^    uint32_t render_cache_rw_mode:1;$/;"	m	struct:gen7_surface_state::__anon34
render_cache_rw_mode	./intel/intel_structs.h	/^    uint32_t render_cache_rw_mode:1;$/;"	m	struct:gen8_surface_state::__anon42
render_target_and_sample_rotation	./intel/intel_structs.h	/^        uint32_t render_target_and_sample_rotation:2;$/;"	m	struct:gen8_surface_state::__anon46::__anon47::__anon48
render_target_cache_flush_enable	./intel/intel_structs.h	/^    uint32_t render_target_cache_flush_enable : BITFIELD_BIT(12);$/;"	m	struct:gen6_pipe_control::__anon82
render_target_cache_flush_enable	./intel/intel_structs.h	/^    uint32_t render_target_cache_flush_enable : BITFIELD_BIT(12);$/;"	m	struct:gen8_pipe_control::__anon87
render_target_view_ext	./intel/intel_structs.h	/^        uint32_t render_target_view_ext:11;$/;"	m	struct:gen8_surface_state::__anon46::__anon47::__anon48
reqType	./x11/va_dri2str.h	/^    CARD8   reqType;$/;"	m	struct:__anon114
reqType	./x11/va_dri2str.h	/^    CARD8   reqType;$/;"	m	struct:__anon116
reqType	./x11/va_dri2str.h	/^    CARD8   reqType;$/;"	m	struct:__anon118
reqType	./x11/va_dri2str.h	/^    CARD8   reqType;$/;"	m	struct:__anon120
reqType	./x11/va_dri2str.h	/^    CARD8   reqType;$/;"	m	struct:__anon121
reqType	./x11/va_dri2str.h	/^    CARD8   reqType;$/;"	m	struct:__anon122
reqType	./x11/va_dri2str.h	/^    CARD8   reqType;$/;"	m	struct:__anon124
reserved	./cl_device_enqueue.c	/^  int reserved;$/;"	m	struct:Block_literal	file:
reserved	./intel/intel_structs.h	/^    uint32_t reserved : BITFIELD_RANGE(0, 1);$/;"	m	struct:gen6_pipe_control::__anon83
reserved	./intel/intel_structs.h	/^    uint32_t reserved : BITFIELD_RANGE(0, 1);$/;"	m	struct:gen8_pipe_control::__anon88
reserved	./intel/intel_structs.h	/^    uint32_t reserved : BITFIELD_RANGE(23, 31);$/;"	m	struct:gen6_pipe_control::__anon82
reserved	./intel/intel_structs.h	/^    uint32_t reserved : BITFIELD_RANGE(23, 31);$/;"	m	struct:gen8_pipe_control::__anon87
reserved	./intel/intel_structs.h	/^    uint32_t reserved : BITFIELD_RANGE(8, 15);$/;"	m	struct:gen6_pipe_control::__anon81
reserved	./intel/intel_structs.h	/^    uint32_t reserved : BITFIELD_RANGE(8, 15);$/;"	m	struct:gen8_pipe_control::__anon86
reset_gateway_timer	./intel/intel_structs.h	/^    uint32_t reset_gateway_timer:1;$/;"	m	struct:gen6_vfe_state_inline::__anon75
resource_min_lod	./intel/intel_structs.h	/^    uint32_t resource_min_lod:12;$/;"	m	struct:gen8_surface_state::__anon57
rounding_mode	./intel/intel_structs.h	/^    uint32_t rounding_mode:2;$/;"	m	struct:gen6_interface_descriptor::__anon26
rounding_mode	./intel/intel_structs.h	/^    uint32_t rounding_mode:2;$/;"	m	struct:gen8_interface_descriptor::__anon33
row_pitch	./cl_enqueue.h	/^  size_t row_pitch;          \/* Row pitch *\/$/;"	m	struct:_enqueue_data
row_pitch	./cl_mem.h	/^  size_t row_pitch, slice_pitch;$/;"	m	struct:_cl_mem_image
row_pitch	./intel/intel_cl_gl_share_image_info.h	/^  size_t row_pitch, slice_pitch;$/;"	m	struct:_intel_cl_gl_share_image_info
rt_rotate	./intel/intel_structs.h	/^      uint32_t rt_rotate:2;$/;"	m	struct:gen7_surface_state::__anon38::__anon39
rt_view_extent	./intel/intel_structs.h	/^      uint32_t rt_view_extent:11;$/;"	m	struct:gen7_surface_state::__anon38::__anon39
s_wrap_mode	./intel/intel_structs.h	/^    uint32_t s_wrap_mode:3; $/;"	m	struct:gen6_sampler_state::__anon100
s_wrap_mode	./intel/intel_structs.h	/^    uint32_t s_wrap_mode:3;$/;"	m	struct:gen7_sampler_state::__anon106
s_wrap_mode	./intel/intel_structs.h	/^    uint32_t s_wrap_mode:3;$/;"	m	struct:gen8_sampler_state::__anon110
sa_mask	./intel/intel_driver.h	/^  sigset_t sa_mask;$/;"	m	struct:intel_driver
sampler	./cl_kernel.h	/^  cl_sampler sampler;   \/* For sampler. *\/$/;"	m	struct:cl_argument
sampler_L2_bypass_mode	./intel/intel_structs.h	/^    uint32_t sampler_L2_bypass_mode:1;$/;"	m	struct:gen8_surface_state::__anon42
sampler_bitmap	./intel/intel_gpgpu.h	/^  unsigned long sampler_bitmap;          \/* sampler usage bitmap. *\/$/;"	m	struct:intel_gpgpu
sampler_border_color_state_offset	./intel/intel_gpgpu.h	/^    uint32_t sampler_border_color_state_offset;$/;"	m	struct:intel_gpgpu::__anon19
sampler_count	./intel/intel_structs.h	/^    uint32_t sampler_count:3;$/;"	m	struct:gen6_interface_descriptor::__anon23
sampler_count	./intel/intel_structs.h	/^    uint32_t sampler_count:3;$/;"	m	struct:gen8_interface_descriptor::__anon30
sampler_num	./cl_context.h	/^  cl_uint sampler_num;              \/* All sampler number currently allocated *\/$/;"	m	struct:_cl_context
sampler_state_offset	./intel/intel_gpgpu.h	/^    uint32_t sampler_state_offset;$/;"	m	struct:intel_gpgpu::__anon19
sampler_state_pointer	./intel/intel_structs.h	/^    uint32_t sampler_state_pointer:27;$/;"	m	struct:gen6_interface_descriptor::__anon23
sampler_state_pointer	./intel/intel_structs.h	/^    uint32_t sampler_state_pointer:27;$/;"	m	struct:gen8_interface_descriptor::__anon30
sampler_sz	./cl_kernel.h	/^  size_t sampler_sz;          \/* sampler size defined in kernel & kernel args. *\/$/;"	m	struct:_cl_kernel
samplers	./cl_context.h	/^  list_head samplers;               \/* All sampler object currently allocated *\/$/;"	m	struct:_cl_context
samplers	./cl_kernel.h	/^  uint32_t samplers[GEN_MAX_SAMPLERS]; \/* samplers defined in kernel & kernel args *\/$/;"	m	struct:_cl_kernel
scoreboard0_dx	./intel/intel_structs.h	/^    uint32_t scoreboard0_dx:4;$/;"	m	struct:gen6_vfe_state_inline::__anon79
scoreboard0_dy	./intel/intel_structs.h	/^    uint32_t scoreboard0_dy:4;$/;"	m	struct:gen6_vfe_state_inline::__anon79
scoreboard1_dx	./intel/intel_structs.h	/^    uint32_t scoreboard1_dx:4;$/;"	m	struct:gen6_vfe_state_inline::__anon79
scoreboard1_dy	./intel/intel_structs.h	/^    uint32_t scoreboard1_dy:4;$/;"	m	struct:gen6_vfe_state_inline::__anon79
scoreboard2_dx	./intel/intel_structs.h	/^    uint32_t scoreboard2_dx:4;$/;"	m	struct:gen6_vfe_state_inline::__anon79
scoreboard2_dy	./intel/intel_structs.h	/^    uint32_t scoreboard2_dy:4;$/;"	m	struct:gen6_vfe_state_inline::__anon79
scoreboard3_dx	./intel/intel_structs.h	/^    uint32_t scoreboard3_dx:4;$/;"	m	struct:gen6_vfe_state_inline::__anon79
scoreboard3_dy	./intel/intel_structs.h	/^    uint32_t scoreboard3_dy:4;$/;"	m	struct:gen6_vfe_state_inline::__anon79
scoreboard4_dx	./intel/intel_structs.h	/^    uint32_t scoreboard4_dx:4;$/;"	m	struct:gen6_vfe_state_inline::__anon80
scoreboard4_dy	./intel/intel_structs.h	/^    uint32_t scoreboard4_dy:4;$/;"	m	struct:gen6_vfe_state_inline::__anon80
scoreboard5_dx	./intel/intel_structs.h	/^    uint32_t scoreboard5_dx:4;$/;"	m	struct:gen6_vfe_state_inline::__anon80
scoreboard5_dy	./intel/intel_structs.h	/^    uint32_t scoreboard5_dy:4;$/;"	m	struct:gen6_vfe_state_inline::__anon80
scoreboard6_dx	./intel/intel_structs.h	/^    uint32_t scoreboard6_dx:4;$/;"	m	struct:gen6_vfe_state_inline::__anon80
scoreboard6_dy	./intel/intel_structs.h	/^    uint32_t scoreboard6_dy:4;$/;"	m	struct:gen6_vfe_state_inline::__anon80
scoreboard7_dx	./intel/intel_structs.h	/^    uint32_t scoreboard7_dx:4;$/;"	m	struct:gen6_vfe_state_inline::__anon80
scoreboard7_dy	./intel/intel_structs.h	/^    uint32_t scoreboard7_dy:4;$/;"	m	struct:gen6_vfe_state_inline::__anon80
scoreboard_mask	./intel/intel_structs.h	/^    uint32_t scoreboard_mask:32;  \/* 1 - enable the corresponding dependency *\/$/;"	m	struct:gen6_vfe_state_inline::__anon78
scratch_b	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } scratch_b;$/;"	m	struct:intel_gpgpu	typeref:struct:intel_gpgpu::__anon13
scratch_base	./intel/intel_structs.h	/^    uint32_t scratch_base:22;$/;"	m	struct:gen6_vfe_state_inline::__anon74
scratch_mem_size	./cl_device_id.h	/^  cl_ulong scratch_mem_size;$/;"	m	struct:_cl_device_id
sep_filter_coeff_table_size	./intel/intel_structs.h	/^    uint32_t sep_filter_coeff_table_size:2;$/;"	m	struct:gen8_sampler_state::__anon109
sep_filter_height	./intel/intel_structs.h	/^    uint32_t sep_filter_height:2;$/;"	m	struct:gen8_sampler_state::__anon109
sep_filter_width	./intel/intel_structs.h	/^    uint32_t sep_filter_width:2;$/;"	m	struct:gen8_sampler_state::__anon109
seperate_uv_plane_enable	./intel/intel_structs.h	/^        uint32_t seperate_uv_plane_enable:1;$/;"	m	struct:gen8_surface_state::__anon50::__anon51::__anon55
set_image_info	./cl_command_queue.c	/^set_image_info(char *curbe,$/;"	f	file:
shader_a	./intel/intel_structs.h	/^    uint32_t shader_a:3;$/;"	m	struct:gen7_surface_state::__anon41
shader_b	./intel/intel_structs.h	/^    uint32_t shader_b:3;$/;"	m	struct:gen7_surface_state::__anon41
shader_channel_select_alpha	./intel/intel_structs.h	/^    uint32_t shader_channel_select_alpha:3;$/;"	m	struct:gen8_surface_state::__anon57
shader_channel_select_blue	./intel/intel_structs.h	/^    uint32_t shader_channel_select_blue:3;$/;"	m	struct:gen8_surface_state::__anon57
shader_channel_select_green	./intel/intel_structs.h	/^    uint32_t shader_channel_select_green:3;$/;"	m	struct:gen8_surface_state::__anon57
shader_channel_select_red	./intel/intel_structs.h	/^    uint32_t shader_channel_select_red:3;$/;"	m	struct:gen8_surface_state::__anon57
shader_g	./intel/intel_structs.h	/^    uint32_t shader_g:3;$/;"	m	struct:gen7_surface_state::__anon41
shader_r	./intel/intel_structs.h	/^    uint32_t shader_r:3;$/;"	m	struct:gen7_surface_state::__anon41
shadow_function	./intel/intel_structs.h	/^    uint32_t shadow_function:3; $/;"	m	struct:gen6_sampler_state::__anon99
shadow_function	./intel/intel_structs.h	/^    uint32_t shadow_function:3;$/;"	m	struct:gen7_sampler_state::__anon104
shadow_function	./intel/intel_structs.h	/^    uint32_t shadow_function:3;$/;"	m	struct:gen8_sampler_state::__anon108
signature	./cl_device_enqueue.c	/^    const char *signature;                         \/\/ IFF (1<<30)$/;"	m	struct:Block_literal::Block_descriptor_1	file:
single_fp_config	./cl_device_id.h	/^  cl_device_fp_config single_fp_config;$/;"	m	struct:_cl_device_id
single_program_flow	./intel/intel_structs.h	/^    uint32_t single_program_flow:1;$/;"	m	struct:gen6_interface_descriptor::__anon22
single_program_flow	./intel/intel_structs.h	/^    uint32_t single_program_flow:1;$/;"	m	struct:gen8_interface_descriptor::__anon29
size	./cl_command_queue.h	/^  cl_uint size;                        \/* Store the specified size for queueu *\/$/;"	m	struct:_cl_command_queue
size	./cl_device_enqueue.c	/^    unsigned long int size;         \/\/ sizeof(struct Block_literal_1)$/;"	m	struct:Block_literal::Block_descriptor_1	file:
size	./cl_enqueue.h	/^  size_t size;               \/* Size *\/$/;"	m	struct:_enqueue_data
size	./cl_mem.h	/^  size_t size;              \/* original request size, not alignment size, used in constant buffer *\/$/;"	m	struct:_cl_mem
size	./cl_mem.h	/^  size_t size;$/;"	m	struct:_cl_mapped_ptr
size	./cl_mem.h	/^  uint32_t size;$/;"	m	struct:_cl_mem_buffer1d_image
size	./intel/intel_batchbuffer.h	/^  uint32_t size;$/;"	m	struct:intel_batchbuffer
size_cs_entry	./intel/intel_gpgpu.h	/^    uint32_t size_cs_entry;  \/* size of one entry in 512bit elements *\/$/;"	m	struct:intel_gpgpu::__anon20
sizeof	./intel/intel_structs.h	/^STATIC_ASSERT(sizeof(gen6_sampler_state_t) == sizeof(gen7_sampler_state_t));$/;"	v
sizeof	./intel/intel_structs.h	/^STATIC_ASSERT(sizeof(gen6_sampler_state_t) == sizeof(gen8_sampler_state_t));$/;"	v
slice_pitch	./cl_enqueue.h	/^  size_t slice_pitch;        \/* Slice pitch *\/$/;"	m	struct:_enqueue_data
slice_pitch	./cl_mem.h	/^  size_t row_pitch, slice_pitch;$/;"	m	struct:_cl_mem_image
slice_pitch	./intel/intel_cl_gl_share_image_info.h	/^  size_t row_pitch, slice_pitch;$/;"	m	struct:_intel_cl_gl_share_image_info
slm_size	./cl_device_enqueue.c	/^    unsigned long int slm_size;         \/\/ NULL$/;"	m	struct:Block_literal::Block_descriptor_1	file:
slm_sz	./cl_driver.h	/^  uint32_t slm_sz;         \/* For gen7 (automatic SLM allocation) *\/$/;"	m	struct:cl_gpgpu_kernel
slm_sz	./intel/intel_structs.h	/^    uint32_t slm_sz:5;                   \/* 0..16 - 0K..64K *\/$/;"	m	struct:gen6_interface_descriptor::__anon26
slm_sz	./intel/intel_structs.h	/^    uint32_t slm_sz:5;                   \/* 0..16 - 0K..64K *\/$/;"	m	struct:gen8_interface_descriptor::__anon33
software_exception	./intel/intel_structs.h	/^    uint32_t software_exception:1;$/;"	m	struct:gen6_interface_descriptor::__anon22
software_exception	./intel/intel_structs.h	/^    uint32_t software_exception:1;$/;"	m	struct:gen8_interface_descriptor::__anon29
source	./cl_program.h	/^  char *source;           \/* Program sources *\/$/;"	m	struct:_cl_program
source_type	./cl_program.h	/^  uint32_t source_type:3; \/* Built from binary, source, CMRT or LLVM*\/$/;"	m	struct:_cl_program
sp	./intel/intel_structs.h	/^    gen7_vme_search_path_state_t sp[GEN7_NUM_VME_SEARCH_PATH_STATES];$/;"	m	struct:gen7_vme_state
spir_versions	./cl_device_id.h	/^  const char *spir_versions;$/;"	m	struct:_cl_device_id
spir_versions_sz	./cl_device_id.h	/^  size_t spir_versions_sz;$/;"	m	struct:_cl_device_id
ss0	./intel/intel_structs.h	/^  } ss0;$/;"	m	struct:gen6_sampler_state	typeref:struct:gen6_sampler_state::__anon99
ss0	./intel/intel_structs.h	/^  } ss0;$/;"	m	struct:gen7_media_surface_state	typeref:struct:gen7_media_surface_state::__anon66
ss0	./intel/intel_structs.h	/^  } ss0;$/;"	m	struct:gen7_sampler_state	typeref:struct:gen7_sampler_state::__anon103
ss0	./intel/intel_structs.h	/^  } ss0;$/;"	m	struct:gen7_surface_state	typeref:struct:gen7_surface_state::__anon34
ss0	./intel/intel_structs.h	/^  } ss0;$/;"	m	struct:gen8_sampler_state	typeref:struct:gen8_sampler_state::__anon107
ss0	./intel/intel_structs.h	/^  } ss0;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon42
ss1	./intel/intel_structs.h	/^  } ss1;$/;"	m	struct:gen6_sampler_state	typeref:struct:gen6_sampler_state::__anon100
ss1	./intel/intel_structs.h	/^  } ss1;$/;"	m	struct:gen7_media_surface_state	typeref:struct:gen7_media_surface_state::__anon67
ss1	./intel/intel_structs.h	/^  } ss1;$/;"	m	struct:gen7_sampler_state	typeref:struct:gen7_sampler_state::__anon104
ss1	./intel/intel_structs.h	/^  } ss1;$/;"	m	struct:gen7_surface_state	typeref:struct:gen7_surface_state::__anon35
ss1	./intel/intel_structs.h	/^  } ss1;$/;"	m	struct:gen8_sampler_state	typeref:struct:gen8_sampler_state::__anon108
ss1	./intel/intel_structs.h	/^  } ss1;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon43
ss10	./intel/intel_structs.h	/^	} ss10;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon60
ss11	./intel/intel_structs.h	/^	} ss11;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon61
ss12	./intel/intel_structs.h	/^  } ss12;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon62
ss13	./intel/intel_structs.h	/^  } ss13;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon63
ss14	./intel/intel_structs.h	/^  } ss14;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon64
ss15	./intel/intel_structs.h	/^  } ss15;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon65
ss2	./intel/intel_structs.h	/^  } ss2;$/;"	m	struct:gen6_sampler_state	typeref:struct:gen6_sampler_state::__anon101
ss2	./intel/intel_structs.h	/^  } ss2;$/;"	m	struct:gen7_media_surface_state	typeref:struct:gen7_media_surface_state::__anon68
ss2	./intel/intel_structs.h	/^  } ss2;$/;"	m	struct:gen7_sampler_state	typeref:struct:gen7_sampler_state::__anon105
ss2	./intel/intel_structs.h	/^  } ss2;$/;"	m	struct:gen7_surface_state	typeref:struct:gen7_surface_state::__anon36
ss2	./intel/intel_structs.h	/^  } ss2;$/;"	m	struct:gen8_sampler_state	typeref:struct:gen8_sampler_state::__anon109
ss2	./intel/intel_structs.h	/^  } ss2;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon44
ss3	./intel/intel_structs.h	/^  } ss3;$/;"	m	struct:gen6_sampler_state	typeref:struct:gen6_sampler_state::__anon102
ss3	./intel/intel_structs.h	/^  } ss3;$/;"	m	struct:gen7_media_surface_state	typeref:struct:gen7_media_surface_state::__anon69
ss3	./intel/intel_structs.h	/^  } ss3;$/;"	m	struct:gen7_sampler_state	typeref:struct:gen7_sampler_state::__anon106
ss3	./intel/intel_structs.h	/^  } ss3;$/;"	m	struct:gen7_surface_state	typeref:struct:gen7_surface_state::__anon37
ss3	./intel/intel_structs.h	/^  } ss3;$/;"	m	struct:gen8_sampler_state	typeref:struct:gen8_sampler_state::__anon110
ss3	./intel/intel_structs.h	/^  } ss3;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon45
ss4	./intel/intel_structs.h	/^  } ss4;$/;"	m	struct:gen7_media_surface_state	typeref:struct:gen7_media_surface_state::__anon70
ss4	./intel/intel_structs.h	/^  } ss4;$/;"	m	struct:gen7_surface_state	typeref:union:gen7_surface_state::__anon38
ss4	./intel/intel_structs.h	/^  } ss4;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon46
ss5	./intel/intel_structs.h	/^  } ss5;$/;"	m	struct:gen7_media_surface_state	typeref:struct:gen7_media_surface_state::__anon71
ss5	./intel/intel_structs.h	/^  } ss5;$/;"	m	struct:gen7_surface_state	typeref:struct:gen7_surface_state::__anon40
ss5	./intel/intel_structs.h	/^  } ss5;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon49
ss6	./intel/intel_structs.h	/^  uint32_t ss6; \/* unused *\/$/;"	m	struct:gen7_surface_state
ss6	./intel/intel_structs.h	/^  } ss6;$/;"	m	struct:gen7_media_surface_state	typeref:struct:gen7_media_surface_state::__anon72
ss6	./intel/intel_structs.h	/^  } ss6;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon50
ss7	./intel/intel_structs.h	/^  } ss7;$/;"	m	struct:gen7_media_surface_state	typeref:struct:gen7_media_surface_state::__anon73
ss7	./intel/intel_structs.h	/^  } ss7;$/;"	m	struct:gen7_surface_state	typeref:struct:gen7_surface_state::__anon41
ss7	./intel/intel_structs.h	/^  } ss7;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon57
ss8	./intel/intel_structs.h	/^  } ss8;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon58
ss9	./intel/intel_structs.h	/^  } ss9;$/;"	m	struct:gen8_surface_state	typeref:struct:gen8_surface_state::__anon59
stack_b	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } stack_b;$/;"	m	struct:intel_gpgpu	typeref:struct:intel_gpgpu::__anon11
stack_size	./cl_kernel.h	/^  size_t stack_size;          \/* stack size per work item. *\/$/;"	m	struct:_cl_kernel
stall_at_pixel_scoreboard	./intel/intel_structs.h	/^    uint32_t stall_at_pixel_scoreboard : BITFIELD_BIT(1);$/;"	m	struct:gen6_pipe_control::__anon82
stall_at_pixel_scoreboard	./intel/intel_structs.h	/^    uint32_t stall_at_pixel_scoreboard : BITFIELD_BIT(1);$/;"	m	struct:gen8_pipe_control::__anon87
start	./performance.c	/^static struct timeval start, end;$/;"	v	typeref:struct:timeval	file:
state_cache_invalidation_enable	./intel/intel_structs.h	/^    uint32_t state_cache_invalidation_enable : BITFIELD_BIT(2);$/;"	m	struct:gen6_pipe_control::__anon82
state_cache_invalidation_enable	./intel/intel_structs.h	/^    uint32_t state_cache_invalidation_enable : BITFIELD_BIT(2);$/;"	m	struct:gen8_pipe_control::__anon87
stateless_force_write_thru	./intel/intel_structs.h	/^    uint32_t stateless_force_write_thru:1;$/;"	m	struct:gen7_surface_state::__anon40
status	./cl_event.h	/^  cl_int status;                 \/* The execution status *\/$/;"	m	struct:_cl_event_user_callback
status	./cl_event.h	/^  cl_int status;              \/* The execution status *\/$/;"	m	struct:_cl_event
status	./intel/intel_gpgpu.c	/^  int status;$/;"	m	struct:intel_event	file:
storage	./performance.c	/^typedef struct storage$/;"	s	file:
storage	./performance.c	/^} storage;$/;"	t	typeref:struct:storage	file:
store_data_index	./intel/intel_structs.h	/^    uint32_t store_data_index : BITFIELD_BIT(21);$/;"	m	struct:gen6_pipe_control::__anon82
store_data_index	./intel/intel_structs.h	/^    uint32_t store_data_index : BITFIELD_BIT(21);$/;"	m	struct:gen8_pipe_control::__anon87
sub_group_sizes	./cl_device_id.h	/^  size_t sub_group_sizes[2];$/;"	m	struct:_cl_device_id
sub_group_sizes_sz	./cl_device_id.h	/^  size_t sub_group_sizes_sz;$/;"	m	struct:_cl_device_id
sub_lock	./cl_mem.h	/^  pthread_mutex_t sub_lock;            \/* Sub buffers list lock*\/$/;"	m	struct:_cl_mem_buffer
sub_next	./cl_mem.h	/^  struct _cl_mem_buffer* sub_prev, *sub_next;\/* We chain the sub memory buffers together *\/$/;"	m	struct:_cl_mem_buffer	typeref:struct:_cl_mem_buffer::
sub_offset	./cl_mem.h	/^  size_t sub_offset;                   \/* The sub start offset. *\/$/;"	m	struct:_cl_mem_buffer
sub_prev	./cl_mem.h	/^  struct _cl_mem_buffer* sub_prev, *sub_next;\/* We chain the sub memory buffers together *\/$/;"	m	struct:_cl_mem_buffer	typeref:struct:_cl_mem_buffer::_cl_mem_buffer
sub_slice_count	./cl_device_id.h	/^  cl_uint  sub_slice_count;                \/\/ Device's sub slice count$/;"	m	struct:_cl_device_id
subs	./cl_mem.h	/^  struct _cl_mem_buffer* subs;         \/* Sub buf objects. *\/$/;"	m	struct:_cl_mem_buffer	typeref:struct:_cl_mem_buffer::_cl_mem_buffer
surface	./intel/intel_gpgpu.c	/^  char surface[256*sizeof(gen_surface_state_t)];$/;"	m	struct:surface_heap	file:
surface_array	./intel/intel_structs.h	/^    uint32_t surface_array:1;$/;"	m	struct:gen7_surface_state::__anon34
surface_array	./intel/intel_structs.h	/^    uint32_t surface_array:1;$/;"	m	struct:gen8_surface_state::__anon42
surface_array_spacing	./intel/intel_structs.h	/^    uint32_t surface_array_spacing:1;$/;"	m	struct:gen7_surface_state::__anon34
surface_base_addr_hi	./intel/intel_structs.h	/^    uint32_t surface_base_addr_hi;$/;"	m	struct:gen8_surface_state::__anon59
surface_base_addr_lo	./intel/intel_structs.h	/^    uint32_t surface_base_addr_lo;$/;"	m	struct:gen8_surface_state::__anon58
surface_format	./intel/intel_structs.h	/^    uint32_t surface_format:4;$/;"	m	struct:gen7_media_surface_state::__anon68
surface_format	./intel/intel_structs.h	/^    uint32_t surface_format:9;$/;"	m	struct:gen7_surface_state::__anon34
surface_format	./intel/intel_structs.h	/^    uint32_t surface_format:9;$/;"	m	struct:gen8_surface_state::__anon42
surface_heap	./intel/intel_gpgpu.c	/^typedef struct surface_heap {$/;"	s	file:
surface_heap_offset	./intel/intel_gpgpu.h	/^    uint32_t surface_heap_offset;$/;"	m	struct:intel_gpgpu::__anon19
surface_heap_t	./intel/intel_gpgpu.c	/^} surface_heap_t;$/;"	t	typeref:struct:surface_heap	file:
surface_min_load	./intel/intel_structs.h	/^    uint32_t surface_min_load:4;$/;"	m	struct:gen7_surface_state::__anon40
surface_min_lod	./intel/intel_structs.h	/^    uint32_t surface_min_lod:4;$/;"	m	struct:gen8_surface_state::__anon49
surface_object_control_state	./intel/intel_structs.h	/^    uint32_t surface_object_control_state:4;$/;"	m	struct:gen7_media_surface_state::__anon68
surface_pitch	./intel/intel_structs.h	/^    uint32_t surface_pitch:18;$/;"	m	struct:gen7_media_surface_state::__anon68
surface_pitch	./intel/intel_structs.h	/^    uint32_t surface_pitch:18;$/;"	m	struct:gen8_surface_state::__anon45
surface_qpitch	./intel/intel_structs.h	/^    uint32_t surface_qpitch:15;$/;"	m	struct:gen8_surface_state::__anon43
surface_state_sz	./intel/intel_structs.h	/^static const size_t surface_state_sz = sizeof(gen_surface_state_t);$/;"	v
surface_type	./intel/intel_structs.h	/^    uint32_t surface_type:3;$/;"	m	struct:gen7_surface_state::__anon34
surface_type	./intel/intel_structs.h	/^    uint32_t surface_type:3;$/;"	m	struct:gen8_surface_state::__anon42
svm_capabilities	./cl_device_id.h	/^  cl_device_svm_capabilities  svm_capabilities;$/;"	m	struct:_cl_device_id
synchronize_gfdt_surface	./intel/intel_structs.h	/^    uint32_t synchronize_gfdt_surface : BITFIELD_BIT(17);$/;"	m	struct:gen6_pipe_control::__anon82
synchronize_gfdt_surface	./intel/intel_structs.h	/^    uint32_t synchronize_gfdt_surface : BITFIELD_BIT(17);$/;"	m	struct:gen8_pipe_control::__anon87
sz_xDRI2AuthenticateReply	./x11/va_dri2str.h	145;"	d
sz_xDRI2AuthenticateReq	./x11/va_dri2str.h	131;"	d
sz_xDRI2ConnectReply	./x11/va_dri2str.h	122;"	d
sz_xDRI2ConnectReq	./x11/va_dri2str.h	108;"	d
sz_xDRI2CopyRegionReply	./x11/va_dri2str.h	209;"	d
sz_xDRI2CopyRegionReq	./x11/va_dri2str.h	195;"	d
sz_xDRI2CreateDrawableReq	./x11/va_dri2str.h	153;"	d
sz_xDRI2DestroyDrawableReq	./x11/va_dri2str.h	161;"	d
sz_xDRI2GetBuffersReply	./x11/va_dri2str.h	184;"	d
sz_xDRI2GetBuffersReq	./x11/va_dri2str.h	170;"	d
sz_xDRI2QueryVersionReply	./x11/va_dri2str.h	99;"	d
sz_xDRI2QueryVersionReq	./x11/va_dri2str.h	85;"	d
t_wrap_mode	./intel/intel_structs.h	/^    uint32_t t_wrap_mode:3; $/;"	m	struct:gen6_sampler_state::__anon100
t_wrap_mode	./intel/intel_structs.h	/^    uint32_t t_wrap_mode:3;$/;"	m	struct:gen7_sampler_state::__anon106
t_wrap_mode	./intel/intel_structs.h	/^    uint32_t t_wrap_mode:3;$/;"	m	struct:gen8_sampler_state::__anon110
target_buf_offset	./intel/intel_gpgpu.h	/^  uint32_t target_buf_offset[max_buf_n];\/* internal offset for buffers binded for the call *\/$/;"	m	struct:intel_gpgpu
tcc_ec_only	./cl_driver.h	/^  tcc_ec_only    = 0x0<<3,$/;"	e	enum:cl_target_cache_control
tcc_llc_ec	./cl_driver.h	/^  tcc_llc_ec     = 0x2<<3,$/;"	e	enum:cl_target_cache_control
tcc_llc_ec_l3	./cl_driver.h	/^  tcc_llc_ec_l3  = 0x3<<3$/;"	e	enum:cl_target_cache_control
tcc_llc_only	./cl_driver.h	/^  tcc_llc_only   = 0x1<<3,$/;"	e	enum:cl_target_cache_control
texture_cache_invalidation_enable	./intel/intel_structs.h	/^    uint32_t texture_cache_invalidation_enable : BITFIELD_BIT(10);$/;"	m	struct:gen6_pipe_control::__anon82
texture_cache_invalidation_enable	./intel/intel_structs.h	/^    uint32_t texture_cache_invalidation_enable : BITFIELD_BIT(10);$/;"	m	struct:gen8_pipe_control::__anon87
thread_n	./cl_driver.h	/^  uint32_t thread_n:15;    \/* For gen7 (automatic barrier management) *\/$/;"	m	struct:cl_gpgpu_kernel
thread_preemption_disable	./intel/intel_structs.h	/^    uint32_t thread_preemption_disable:1;$/;"	m	struct:gen8_interface_descriptor::__anon29
thread_priority	./intel/intel_structs.h	/^    uint32_t thread_priority:1;$/;"	m	struct:gen6_interface_descriptor::__anon22
thread_priority	./intel/intel_structs.h	/^    uint32_t thread_priority:1;$/;"	m	struct:gen8_interface_descriptor::__anon29
tid	./cl_command_queue.h	/^  pthread_t tid;$/;"	m	struct:_cl_command_queue_enqueue_worker
tile_mode	./intel/intel_structs.h	/^    uint32_t tile_mode:2;$/;"	m	struct:gen7_media_surface_state::__anon68
tile_mode	./intel/intel_structs.h	/^    uint32_t tile_mode:2;$/;"	m	struct:gen8_surface_state::__anon42
tile_walk	./intel/intel_structs.h	/^    uint32_t tile_walk:1;$/;"	m	struct:gen7_surface_state::__anon34
tile_x	./cl_mem.h	/^  size_t tile_x, tile_y;          \/* tile offset, used for mipmap images.  *\/$/;"	m	struct:_cl_mem_image
tile_x	./intel/intel_cl_gl_share_image_info.h	/^  size_t tile_x;$/;"	m	struct:_intel_cl_gl_share_image_info
tile_y	./cl_mem.h	/^  size_t tile_x, tile_y;          \/* tile offset, used for mipmap images.  *\/$/;"	m	struct:_cl_mem_image
tile_y	./intel/intel_cl_gl_share_image_info.h	/^  size_t tile_y;$/;"	m	struct:_intel_cl_gl_share_image_info
tiled_surface	./intel/intel_structs.h	/^    uint32_t tiled_surface:1;$/;"	m	struct:gen7_surface_state::__anon34
tiling	./cl_mem.h	/^  cl_image_tiling_t tiling;       \/* only IVB+ supports TILE_[X,Y] (image only) *\/$/;"	m	struct:_cl_mem_image
tiling	./intel/intel_cl_gl_share_image_info.h	/^  int tiling;$/;"	m	struct:_intel_cl_gl_share_image_info
time_element	./performance.c	/^typedef struct time_element$/;"	s	file:
time_element	./performance.c	/^} time_element;$/;"	t	typeref:struct:time_element	file:
time_end	./performance.c	/^void time_end(cl_context context, const char * kernel_name, const char * build_opt, cl_command_queue cq)$/;"	f
time_index	./performance.c	/^  uint32_t time_index;$/;"	m	struct:time_element	file:
time_stamp_b	./intel/intel_gpgpu.h	/^  struct { drm_intel_bo *bo; } time_stamp_b;  \/* time stamp buffer *\/$/;"	m	struct:intel_gpgpu	typeref:struct:intel_gpgpu::__anon15
time_start	./performance.c	/^void time_start(cl_context context, const char * kernel_name, cl_command_queue cq)$/;"	f
timestamp	./cl_event.h	/^  cl_ulong timestamp[5];      \/* The time stamps for profiling. *\/$/;"	m	struct:_cl_event
tlb_invalidate	./intel/intel_structs.h	/^    uint32_t tlb_invalidate : BITFIELD_BIT(18);$/;"	m	struct:gen6_pipe_control::__anon82
tlb_invalidate	./intel/intel_structs.h	/^    uint32_t tlb_invalidate : BITFIELD_BIT(18);$/;"	m	struct:gen8_pipe_control::__anon87
toMB	./cl_device_id.c	908;"	d	file:
translate_wrap_mode	./intel/intel_gpgpu.c	/^int translate_wrap_mode(uint32_t cl_address_mode, int using_nearest)$/;"	f
trilinear_quality	./intel/intel_structs.h	/^    uint32_t trilinear_quality:2;$/;"	m	struct:gen7_sampler_state::__anon106
trilinear_quality	./intel/intel_structs.h	/^    uint32_t trilinear_quality:2;$/;"	m	struct:gen8_sampler_state::__anon110
ts_buf	./intel/intel_gpgpu.c	/^  drm_intel_bo *ts_buf;$/;"	m	struct:intel_event	file:
type	./cl_accelerator_intel.h	/^  cl_accelerator_type_intel type;$/;"	m	struct:_cl_accelerator_intel
type	./cl_device_enqueue.c	/^  int type;$/;"	m	struct:ndrange_info_t	file:
type	./cl_enqueue.h	/^  enqueue_type type;         \/* Command type *\/$/;"	m	struct:_enqueue_data
type	./cl_mem.h	/^  enum cl_mem_type type;$/;"	m	struct:_cl_mem	typeref:enum:_cl_mem::cl_mem_type
type	./x11/va_dri2str.h	/^    BYTE    type;   \/* X_Reply *\/$/;"	m	struct:__anon115
type	./x11/va_dri2str.h	/^    BYTE    type;   \/* X_Reply *\/$/;"	m	struct:__anon117
type	./x11/va_dri2str.h	/^    BYTE    type;   \/* X_Reply *\/$/;"	m	struct:__anon119
type	./x11/va_dri2str.h	/^    BYTE    type;   \/* X_Reply *\/$/;"	m	struct:__anon123
type	./x11/va_dri2str.h	/^    BYTE    type;   \/* X_Reply *\/$/;"	m	struct:__anon125
unsync_map	./cl_enqueue.h	/^  uint8_t unsync_map;        \/* Indicate the clEnqueueMapBuffer\/Image is unsync map *\/$/;"	m	struct:_enqueue_data
urb_entries	./intel/intel_structs.h	/^    uint32_t urb_entries:8;$/;"	m	struct:gen6_vfe_state_inline::__anon75
urb_size	./intel/intel_structs.h	/^    uint32_t urb_size:16;  \/* in GRFs *\/$/;"	m	struct:gen6_vfe_state_inline::__anon77
useDeviceEnqueue	./cl_kernel.h	/^  cl_bool useDeviceEnqueue;     \/* kernel use device enqueue *\/$/;"	m	struct:_cl_kernel
use_slm	./cl_driver.h	/^  uint32_t use_slm:1;      \/* For gen7 (automatic barrier management) *\/$/;"	m	struct:cl_gpgpu_kernel
user_data	./cl_context.h	/^  void *user_data;                   \/* A pointer to user supplied data *\/$/;"	m	struct:_cl_context
user_data	./cl_event.h	/^  void *user_data;               \/* Callback user data *\/$/;"	m	struct:_cl_event_user_callback
user_data	./cl_mem.h	/^  void *user_data;$/;"	m	struct:_cl_mem_dstr_cb
user_func	./cl_enqueue.h	/^  void (*user_func)(void *); \/* pointer to a host-callable user function *\/$/;"	m	struct:_enqueue_data
uv_offset_v_direction	./intel/intel_structs.h	/^    uint32_t uv_offset_v_direction:2;$/;"	m	struct:gen7_media_surface_state::__anon67
uv_plane_x_offset	./intel/intel_structs.h	/^        uint32_t uv_plane_x_offset:14;$/;"	m	struct:gen8_surface_state::__anon50::__anon51::__anon55
uv_plane_y_offset	./intel/intel_structs.h	/^          uint32_t uv_plane_y_offset:14;$/;"	m	struct:gen8_surface_state::__anon50::__anon51::__anon52::__anon54
v_ptr	./cl_mem.h	/^  void * v_ptr;$/;"	m	struct:_cl_mapped_ptr
va_dri2ExtensionHooks	./x11/va_dri2.c	/^static \/* const *\/ XExtensionHooks va_dri2ExtensionHooks = {$/;"	v	file:
va_dri2ExtensionName	./x11/va_dri2.c	/^static char va_dri2ExtensionName[] = DRI2_NAME;$/;"	v	file:
va_dri2Info	./x11/va_dri2.c	/^static XExtensionInfo *va_dri2Info = &_va_dri2_info_data;$/;"	v	file:
vendor	./cl_device_id.h	/^  const char *vendor;$/;"	m	struct:_cl_device_id
vendor	./cl_platform_id.h	/^  const char *vendor;$/;"	m	struct:_cl_platform_id
vendor_id	./cl_device_id.h	/^  cl_uint  vendor_id;$/;"	m	struct:_cl_device_id
vendor_sz	./cl_device_id.h	/^  size_t vendor_sz;$/;"	m	struct:_cl_device_id
vendor_sz	./cl_platform_id.h	/^  size_t vendor_sz;$/;"	m	struct:_cl_platform_id
ver	./cl_context.h	/^  uint32_t ver;                     \/* Gen version *\/$/;"	m	struct:_cl_context
version	./cl_device_id.h	/^  const char *version;$/;"	m	struct:_cl_device_id
version	./cl_platform_id.h	/^  const char *version;$/;"	m	struct:_cl_platform_id
version_sz	./cl_device_id.h	/^  size_t version_sz;$/;"	m	struct:_cl_device_id
version_sz	./cl_platform_id.h	/^  size_t version_sz;$/;"	m	struct:_cl_platform_id
vertical_alignment	./intel/intel_structs.h	/^    uint32_t vertical_alignment:2;$/;"	m	struct:gen7_surface_state::__anon34
vertical_alignment	./intel/intel_structs.h	/^    uint32_t vertical_alignment:2;$/;"	m	struct:gen8_surface_state::__anon42
vertical_line_stride	./intel/intel_structs.h	/^    uint32_t vertical_line_stride:1;$/;"	m	struct:gen7_surface_state::__anon34
vertical_line_stride	./intel/intel_structs.h	/^    uint32_t vertical_line_stride:1;$/;"	m	struct:gen8_surface_state::__anon42
vertical_line_stride_offset	./intel/intel_structs.h	/^    uint32_t vertical_line_stride_offset:1;$/;"	m	struct:gen7_surface_state::__anon34
vertical_line_stride_offset	./intel/intel_structs.h	/^    uint32_t vertical_line_stride_offset:1;$/;"	m	struct:gen8_surface_state::__anon42
vf_cache_invalidation_enable	./intel/intel_structs.h	/^    uint32_t vf_cache_invalidation_enable : BITFIELD_BIT(4);$/;"	m	struct:gen6_pipe_control::__anon82
vf_cache_invalidation_enable	./intel/intel_structs.h	/^    uint32_t vf_cache_invalidation_enable : BITFIELD_BIT(4);$/;"	m	struct:gen8_pipe_control::__anon87
vfe0	./intel/intel_structs.h	/^  } vfe0;$/;"	m	struct:gen6_vfe_state_inline	typeref:struct:gen6_vfe_state_inline::__anon74
vfe1	./intel/intel_structs.h	/^  } vfe1;$/;"	m	struct:gen6_vfe_state_inline	typeref:struct:gen6_vfe_state_inline::__anon75
vfe2	./intel/intel_structs.h	/^  } vfe2;$/;"	m	struct:gen6_vfe_state_inline	typeref:struct:gen6_vfe_state_inline::__anon76
vfe3	./intel/intel_structs.h	/^  } vfe3;$/;"	m	struct:gen6_vfe_state_inline	typeref:struct:gen6_vfe_state_inline::__anon77
vfe4	./intel/intel_structs.h	/^  } vfe4;$/;"	m	struct:gen6_vfe_state_inline	typeref:struct:gen6_vfe_state_inline::__anon78
vfe5	./intel/intel_structs.h	/^  } vfe5;$/;"	m	struct:gen6_vfe_state_inline	typeref:struct:gen6_vfe_state_inline::__anon79
vfe6	./intel/intel_structs.h	/^  } vfe6;$/;"	m	struct:gen6_vfe_state_inline	typeref:struct:gen6_vfe_state_inline::__anon80
vme	./cl_kernel.h	/^  uint32_t vme:1;             \/* True only if it is a built-in kernel for VME *\/$/;"	m	struct:_cl_kernel
w	./cl_mem.h	/^  size_t w, h, depth;             \/* only for images (depth is only for 3D images) *\/$/;"	m	struct:_cl_mem_image
w	./intel/intel_cl_gl_share_image_info.h	/^  size_t w;$/;"	m	struct:_intel_cl_gl_share_image_info
wgl_hdc	./cl_context.h	/^    cl_context_properties wgl_hdc;$/;"	m	union:_cl_context_prop::__anon2
width	./intel/intel_structs.h	/^    uint32_t width:14;$/;"	m	struct:gen7_media_surface_state::__anon67
width	./intel/intel_structs.h	/^    uint32_t width:14;$/;"	m	struct:gen7_surface_state::__anon36
width	./intel/intel_structs.h	/^    uint32_t width:14;$/;"	m	struct:gen8_surface_state::__anon44
width	./x11/dricommon.c	/^  int width;$/;"	m	struct:dri2_drawable	file:
width	./x11/dricommon.h	/^  unsigned int width;$/;"	m	struct:dri_drawable
worker	./cl_command_queue.h	/^  _cl_command_queue_enqueue_worker worker;$/;"	m	struct:_cl_command_queue
worker_thread_function	./cl_command_queue_enqueue.c	/^worker_thread_function(void *Arg)$/;"	f	file:
write_map	./cl_enqueue.h	/^  uint8_t write_map;         \/* Indicate if the clEnqueueMapBuffer is write enable *\/$/;"	m	struct:_enqueue_data
x	./x11/dricommon.h	/^  int x;$/;"	m	struct:dri_drawable
x11_display	./intel/intel_driver.h	/^  Display *x11_display;$/;"	m	struct:intel_driver
x11_dpy	./x11/dricommon.h	/^  Display *x11_dpy;$/;"	m	struct:dri_state
x11_screen	./x11/dricommon.h	/^  int x11_screen;$/;"	m	struct:dri_state
xDRI2AuthenticateReply	./x11/va_dri2str.h	/^} xDRI2AuthenticateReply;$/;"	t	typeref:struct:__anon119
xDRI2AuthenticateReq	./x11/va_dri2str.h	/^} xDRI2AuthenticateReq;$/;"	t	typeref:struct:__anon118
xDRI2Buffer	./x11/va_dri2str.h	/^} xDRI2Buffer;$/;"	t	typeref:struct:__anon113
xDRI2ConnectReply	./x11/va_dri2str.h	/^} xDRI2ConnectReply;$/;"	t	typeref:struct:__anon117
xDRI2ConnectReq	./x11/va_dri2str.h	/^} xDRI2ConnectReq;$/;"	t	typeref:struct:__anon116
xDRI2CopyRegionReply	./x11/va_dri2str.h	/^} xDRI2CopyRegionReply;$/;"	t	typeref:struct:__anon125
xDRI2CopyRegionReq	./x11/va_dri2str.h	/^} xDRI2CopyRegionReq;$/;"	t	typeref:struct:__anon124
xDRI2CreateDrawableReq	./x11/va_dri2str.h	/^} xDRI2CreateDrawableReq;$/;"	t	typeref:struct:__anon120
xDRI2DestroyDrawableReq	./x11/va_dri2str.h	/^} xDRI2DestroyDrawableReq;$/;"	t	typeref:struct:__anon121
xDRI2GetBuffersReply	./x11/va_dri2str.h	/^} xDRI2GetBuffersReply;$/;"	t	typeref:struct:__anon123
xDRI2GetBuffersReq	./x11/va_dri2str.h	/^} xDRI2GetBuffersReq;$/;"	t	typeref:struct:__anon122
xDRI2QueryVersionReply	./x11/va_dri2str.h	/^} xDRI2QueryVersionReply;$/;"	t	typeref:struct:__anon115
xDRI2QueryVersionReq	./x11/va_dri2str.h	/^} xDRI2QueryVersionReq;$/;"	t	typeref:struct:__anon114
x_drawable	./x11/dricommon.h	/^  XID x_drawable;$/;"	m	struct:dri_drawable
x_offset	./intel/intel_structs.h	/^    uint32_t x_offset:7;$/;"	m	struct:gen7_surface_state::__anon40
x_offset	./intel/intel_structs.h	/^    uint32_t x_offset:7;$/;"	m	struct:gen8_surface_state::__anon49
x_offset_for_u	./intel/intel_structs.h	/^    uint32_t x_offset_for_u:14;$/;"	m	struct:gen7_media_surface_state::__anon69
x_offset_for_v	./intel/intel_structs.h	/^    uint32_t x_offset_for_v:14;$/;"	m	struct:gen7_media_surface_state::__anon70
y	./x11/dricommon.h	/^  int y;$/;"	m	struct:dri_drawable
y_offset	./intel/intel_structs.h	/^    uint32_t y_offset:3;$/;"	m	struct:gen8_surface_state::__anon49
y_offset	./intel/intel_structs.h	/^    uint32_t y_offset:4;$/;"	m	struct:gen7_surface_state::__anon40
y_offset_for_u	./intel/intel_structs.h	/^    uint32_t y_offset_for_u:14;$/;"	m	struct:gen7_media_surface_state::__anon69
y_offset_for_v	./intel/intel_structs.h	/^    uint32_t y_offset_for_v:15;$/;"	m	struct:gen7_media_surface_state::__anon70
~CmrtCleanup	./cl_cmrt.cpp	/^  ~CmrtCleanup()$/;"	f	class:CmrtCleanup
~GbeLoaderInitializer	./cl_gbe_loader.cpp	/^  ~GbeLoaderInitializer()$/;"	f	struct:GbeLoaderInitializer
