From ee47f1b7f325f6e8b1c54c81a16f2480c968513b Mon Sep 17 00:00:00 2001
From: Yang Rong <rong.r.yang@intel.com>
Date: Thu, 16 May 2013 12:36:35 +0800
Subject: [PATCH 1/2] Add vector argument test case.
To: beignet@lists.freedesktop.org

Signed-off-by: Yang Rong <rong.r.yang@intel.com>
---
 kernels/compiler_function_argument2.cl |    6 ++++++
 utests/CMakeLists.txt                  |    1 +
 utests/compiler_function_argument2.cpp |   26 ++++++++++++++++++++++++++
 3 files changed, 33 insertions(+)
 create mode 100644 kernels/compiler_function_argument2.cl
 create mode 100644 utests/compiler_function_argument2.cpp

Index: beignet-0.1+git20130621+30586bf/kernels/compiler_function_argument2.cl
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ beignet-0.1+git20130621+30586bf/kernels/compiler_function_argument2.cl	2013-06-21 12:09:33.002557680 +0200
@@ -0,0 +1,6 @@
+__kernel void
+compiler_function_argument2(__global int *dst, int4 value)
+{
+  int id = (int)get_global_id(0);
+  dst[id] = value.w;
+}
Index: beignet-0.1+git20130621+30586bf/utests/CMakeLists.txt
===================================================================
--- beignet-0.1+git20130621+30586bf.orig/utests/CMakeLists.txt	2013-06-21 10:13:03.000000000 +0200
+++ beignet-0.1+git20130621+30586bf/utests/CMakeLists.txt	2013-06-21 12:09:33.002557680 +0200
@@ -37,6 +37,7 @@
   compiler_fill_image_3d_2.cpp
   compiler_function_argument0.cpp
   compiler_function_argument1.cpp
+  compiler_function_argument2.cpp
   compiler_function_argument.cpp
   compiler_function_constant0.cpp
   compiler_function_constant1.cpp
Index: beignet-0.1+git20130621+30586bf/utests/compiler_function_argument2.cpp
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ beignet-0.1+git20130621+30586bf/utests/compiler_function_argument2.cpp	2013-06-21 12:09:33.002557680 +0200
@@ -0,0 +1,26 @@
+#include "utest_helper.hpp"
+
+struct int4 {int x,y,z,w;};
+void compiler_function_argument2(void)
+{
+  const size_t n = 2048;
+  const int4 value = {31, 32, 33, 34};
+
+  // Setup kernel and buffers
+  OCL_CREATE_KERNEL("compiler_function_argument2");
+  OCL_CREATE_BUFFER(buf[0], 0, n * sizeof(uint32_t), NULL);
+  OCL_SET_ARG(0, sizeof(cl_mem), &buf[0]);
+  OCL_SET_ARG(1, sizeof(int4), &value);
+
+  // Run the kernel
+  globals[0] = n;
+  locals[0] = 16;
+  OCL_NDRANGE(1);
+  OCL_MAP_BUFFER(0);
+
+  // Check results
+  for (uint32_t i = 0; i < n; ++i)
+    OCL_ASSERT(((int*)buf_data[0])[i] == value.w);
+}
+
+MAKE_UTEST_FROM_FUNCTION(compiler_function_argument2);
