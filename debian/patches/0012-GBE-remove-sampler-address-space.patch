From a87eca304c690096511c4db9b6cddf2544ab6d3f Mon Sep 17 00:00:00 2001
From: Zhigang Gong <zhigang.gong@linux.intel.com>
Date: Mon, 13 May 2013 11:32:21 +0800
Subject: [PATCH 12/15] GBE: remove sampler address space.
To: beignet@lists.freedesktop.org

As now sampler_t is a normal integer data type, we don't
need the sampler address space any more.

Signed-off-by: Zhigang Gong <zhigang.gong@linux.intel.com>
---
 backend/src/ir/instruction.cpp        |    1 -
 backend/src/ir/instruction.hpp        |    1 -
 backend/src/llvm/llvm_gen_backend.cpp |    3 ---
 backend/src/ocl_stdlib.h              |    1 -
 4 files changed, 6 deletions(-)

Index: beignet-0.1+git20130514+19e9c58/backend/src/ir/instruction.cpp
===================================================================
--- beignet-0.1+git20130514+19e9c58.orig/backend/src/ir/instruction.cpp	2013-05-14 20:07:24.282026980 +0200
+++ beignet-0.1+git20130514+19e9c58/backend/src/ir/instruction.cpp	2013-05-14 20:09:23.482021666 +0200
@@ -915,7 +915,6 @@
       case MEM_CONSTANT: return out << "constant";
       case MEM_PRIVATE: return out << "private";
       case IMAGE: return out << "image";
-      case SAMPLER: return out << "sampler";
       case MEM_INVALID: return out << "invalid";
     };
     return out;
Index: beignet-0.1+git20130514+19e9c58/backend/src/ir/instruction.hpp
===================================================================
--- beignet-0.1+git20130514+19e9c58.orig/backend/src/ir/instruction.hpp	2013-05-08 11:55:52.000000000 +0200
+++ beignet-0.1+git20130514+19e9c58/backend/src/ir/instruction.hpp	2013-05-14 20:09:23.482021666 +0200
@@ -50,7 +50,6 @@
     MEM_CONSTANT,   //!< Immutable global memory
     MEM_PRIVATE,    //!< Per thread private memory
     IMAGE,          //!< For texture image.
-    SAMPLER,        //!< For sampler.
     MEM_INVALID
   };
 
Index: beignet-0.1+git20130514+19e9c58/backend/src/llvm/llvm_gen_backend.cpp
===================================================================
--- beignet-0.1+git20130514+19e9c58.orig/backend/src/llvm/llvm_gen_backend.cpp	2013-05-14 20:09:16.370021983 +0200
+++ beignet-0.1+git20130514+19e9c58/backend/src/llvm/llvm_gen_backend.cpp	2013-05-14 20:09:23.486021665 +0200
@@ -256,7 +256,6 @@
       case 2: return ir::MEM_CONSTANT;
       case 3: return ir::MEM_LOCAL;
       case 4: return ir::IMAGE;
-      case 5: return ir::SAMPLER;
     }
     GBE_ASSERT(false);
     return ir::MEM_GLOBAL;
@@ -916,8 +915,6 @@
               case ir::IMAGE:
                 ctx.input(argName, ir::FunctionArgument::IMAGE, reg, ptrSize);
               break;
-              case ir::SAMPLER:
-                ctx.input(argName, ir::FunctionArgument::SAMPLER, reg, ptrSize);
               break;
               default: GBE_ASSERT(addrSpace != ir::MEM_PRIVATE);
             }
Index: beignet-0.1+git20130514+19e9c58/backend/src/ocl_stdlib.h
===================================================================
--- beignet-0.1+git20130514+19e9c58.orig/backend/src/ocl_stdlib.h	2013-05-14 20:09:16.370021983 +0200
+++ beignet-0.1+git20130514+19e9c58/backend/src/ocl_stdlib.h	2013-05-14 20:09:23.486021665 +0200
@@ -76,7 +76,6 @@
 typedef __texture struct _image2d_t* image2d_t;
 struct _image3d_t;
 typedef __texture struct _image3d_t* image3d_t;
-//typedef __sampler const uint* sampler_t;
 typedef uint sampler_t;
 typedef size_t event_t;
 
