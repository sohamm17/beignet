!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCESS_MODE	./backend/gen/gen_mesa_disasm.c	565;"	d	file:
ACC_WR_CONTROL	./backend/gen/gen_mesa_disasm.c	569;"	d	file:
ADD	./backend/gen_encoder.cpp	/^  void GenEncoder::ADD(GenRegister dest, GenRegister src0, GenRegister src1) {$/;"	f	class:gbe::GenEncoder
ADDC	./backend/gen_encoder.cpp	/^  void GenEncoder::ADDC(GenRegister dest, GenRegister src0, GenRegister src1) {$/;"	f	class:gbe::GenEncoder
ADD_CL_TO_BC_TARGET	./libocl/Android.mk	/^define ADD_CL_TO_BC_TARGET$/;"	m
ADD_CURB_REG_FOR_PROFILING	./backend/gen_reg_allocation.cpp	1366;"	d	file:
ADD_CURB_REG_FOR_PROFILING	./backend/gen_reg_allocation.cpp	1407;"	d	file:
ADD_LL_TO_BC_TARGET	./libocl/Android.mk	/^define ADD_LL_TO_BC_TARGET$/;"	m
ALIGN	./sys/platform.hpp	231;"	d
ALIGNED	./sys/platform.hpp	149;"	d
ALIGNED	./sys/platform.hpp	159;"	d
ALIGNED_INSTRUCTION	./ir/instruction.cpp	1147;"	d	file:
ALIGNED_INSTRUCTION	./ir/instruction.cpp	36;"	d	file:
ALIGNOF	./sys/platform.hpp	269;"	d
ALIGNOF	./sys/platform.hpp	271;"	d
ALU0	./ir/context.hpp	/^    void ALU0(Opcode opcode, Type type, Register dst) {$/;"	f	class:gbe::ir::Context
ALU0	./ir/instruction.cpp	/^  Instruction ALU0(Opcode opcode, Type type, Register dst) {$/;"	f	namespace:gbe::ir
ALU1	./backend/gen_encoder.cpp	795;"	d	file:
ALU1	./backend/gen_encoder.hpp	135;"	d
ALU1	./backend/gen_encoder.hpp	98;"	d
ALU1	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::ALU1(SelectionOpcode opcode, Reg dst, Reg src) {$/;"	f	class:gbe::Selection::Opaque
ALU1	./backend/gen_insn_selection.cpp	570;"	d	file:
ALU1	./backend/gen_insn_selection.cpp	629;"	d	file:
ALU1	./ir/context.hpp	/^    void ALU1(Opcode opcode, Type type, Register dst, Register src) {$/;"	f	class:gbe::ir::Context
ALU1	./ir/instruction.cpp	/^  Instruction ALU1(Opcode opcode, Type type, Register dst, Register src) {$/;"	f	namespace:gbe::ir
ALU1WithTemp	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::ALU1WithTemp(SelectionOpcode opcode, Reg dst, Reg src, Reg temp) {$/;"	f	class:gbe::Selection::Opaque
ALU1WithTemp	./backend/gen_insn_selection.cpp	572;"	d	file:
ALU1WithTemp	./backend/gen_insn_selection.cpp	630;"	d	file:
ALU2	./backend/gen_encoder.cpp	800;"	d	file:
ALU2	./backend/gen_encoder.hpp	136;"	d
ALU2	./backend/gen_encoder.hpp	99;"	d
ALU2	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::ALU2(SelectionOpcode opcode, Reg dst, Reg src0, Reg src1) {$/;"	f	class:gbe::Selection::Opaque
ALU2	./backend/gen_insn_selection.cpp	574;"	d	file:
ALU2	./backend/gen_insn_selection.cpp	631;"	d	file:
ALU2WithTemp	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::ALU2WithTemp(SelectionOpcode opcode, Reg dst, Reg src0, Reg src1, Reg temp) {$/;"	f	class:gbe::Selection::Opaque
ALU2WithTemp	./backend/gen_insn_selection.cpp	576;"	d	file:
ALU2WithTemp	./backend/gen_insn_selection.cpp	632;"	d	file:
ALU2_BRA	./backend/gen_encoder.cpp	970;"	d	file:
ALU2_MOD	./backend/gen_encoder.cpp	805;"	d	file:
ALU2_MOD	./backend/gen_encoder.hpp	100;"	d
ALU2_MOD	./backend/gen_encoder.hpp	137;"	d
ALU3	./backend/gen_encoder.cpp	811;"	d	file:
ALU3	./backend/gen_encoder.hpp	101;"	d
ALU3	./backend/gen_encoder.hpp	138;"	d
ALU3	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::ALU3(SelectionOpcode opcode, Reg dst, Reg src0, Reg src1, Reg src2) {$/;"	f	class:gbe::Selection::Opaque
ALU3	./backend/gen_insn_selection.cpp	578;"	d	file:
ALU3	./backend/gen_insn_selection.cpp	633;"	d	file:
AM	./ir/instruction.cpp	/^      AddressMode       AM;$/;"	m	class:gbe::ir::internal::MemInstruction	file:
ARFRegister	./ir/register.hpp	/^  enum ARFRegister {$/;"	g	namespace:gbe::ir
ARF_ACCUMULATOR	./ir/register.hpp	/^    ARF_ACCUMULATOR,$/;"	e	enum:gbe::ir::ARFRegister
ARF_ADDRESS	./ir/register.hpp	/^    ARF_ADDRESS,$/;"	e	enum:gbe::ir::ARFRegister
ARF_CONTROL	./ir/register.hpp	/^    ARF_CONTROL,$/;"	e	enum:gbe::ir::ARFRegister
ARF_FLAG	./ir/register.hpp	/^    ARF_FLAG,$/;"	e	enum:gbe::ir::ARFRegister
ARF_IP	./ir/register.hpp	/^    ARF_IP,$/;"	e	enum:gbe::ir::ARFRegister
ARF_MASK	./ir/register.hpp	/^    ARF_MASK,$/;"	e	enum:gbe::ir::ARFRegister
ARF_MASK_STACK	./ir/register.hpp	/^    ARF_MASK_STACK,$/;"	e	enum:gbe::ir::ARFRegister
ARF_MASK_STACK_DEPTH	./ir/register.hpp	/^    ARF_MASK_STACK_DEPTH,$/;"	e	enum:gbe::ir::ARFRegister
ARF_NOTIFICATION_COUNT	./ir/register.hpp	/^    ARF_NOTIFICATION_COUNT,$/;"	e	enum:gbe::ir::ARFRegister
ARF_NULL	./ir/register.hpp	/^    ARF_NULL = 0,$/;"	e	enum:gbe::ir::ARFRegister
ARF_STATE	./ir/register.hpp	/^    ARF_STATE,$/;"	e	enum:gbe::ir::ARFRegister
ARF_TM	./ir/register.hpp	/^    ARF_TM$/;"	e	enum:gbe::ir::ARFRegister
ARG_DIRECT_READ	./ir/lowering.cpp	/^    ARG_DIRECT_READ = 0,$/;"	e	enum:gbe::ir::ArgUse	file:
ARG_INDIRECT_READ	./ir/lowering.cpp	/^    ARG_INDIRECT_READ = 1,$/;"	e	enum:gbe::ir::ArgUse	file:
ARG_WRITTEN	./ir/lowering.cpp	/^    ARG_WRITTEN = 2$/;"	e	enum:gbe::ir::ArgUse	file:
ARRAY_ELEM_NUM	./sys/platform.hpp	228;"	d
AS	./ir/instruction.cpp	/^      AddressSpace      AS;$/;"	m	class:gbe::ir::internal::MemInstruction	file:
ATOMIC	./backend/gen75_encoder.cpp	/^  void Gen75Encoder::ATOMIC(GenRegister dst, uint32_t function, GenRegister src, GenRegister bti, uint32_t srcNum, bool useSends) {$/;"	f	class:gbe::Gen75Encoder
ATOMIC	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::ATOMIC(GenRegister dst, uint32_t function, GenRegister src, GenRegister data, GenRegister bti, uint32_t srcNum, bool useSends) {$/;"	f	class:gbe::Gen8Encoder
ATOMIC	./backend/gen9_encoder.cpp	/^  void Gen9Encoder::ATOMIC(GenRegister dst, uint32_t function, GenRegister addr, GenRegister data, GenRegister bti, uint32_t srcNum, bool useSends)$/;"	f	class:gbe::Gen9Encoder
ATOMIC	./backend/gen_encoder.cpp	/^  void GenEncoder::ATOMIC(GenRegister dst, uint32_t function, GenRegister addr, GenRegister data, GenRegister bti, uint32_t srcNum, bool useSends) {$/;"	f	class:gbe::GenEncoder
ATOMIC	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::ATOMIC(Reg dst, uint32_t function,$/;"	f	class:gbe::Selection::Opaque
ATOMIC	./ir/instruction.cpp	/^  Instruction ATOMIC(AtomicOps atomicOp, Type type, Register dst, AddressSpace space, Register address, Tuple payload, AddressMode AM, Register bti) {$/;"	f	namespace:gbe::ir
ATOMIC	./ir/instruction.cpp	/^  Instruction ATOMIC(AtomicOps atomicOp, Type type, Register dst, AddressSpace space, Register address, Tuple payload, AddressMode AM, unsigned SurfaceIndex) {$/;"	f	namespace:gbe::ir
ATOMICA64	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::ATOMICA64(GenRegister dst, uint32_t function, GenRegister src, GenRegister bti, uint32_t srcNum) {$/;"	f	class:gbe::Gen8Encoder
ATOMICA64	./backend/gen_encoder.cpp	/^  void GenEncoder::ATOMICA64(GenRegister dst, uint32_t function, GenRegister src, GenRegister bti, uint32_t srcNum) {$/;"	f	class:gbe::GenEncoder
ATOMICA64	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::ATOMICA64(Reg dst, uint32_t function,$/;"	f	class:gbe::Selection::Opaque
ATOMIC_FLAG_INIT	./libocl/include/ocl_atom_20.h	128;"	d
ATOMIC_FUNCTIONS	./libocl/include/ocl_atom_20.h	131;"	d
ATOMIC_FUNCTIONS	./libocl/include/ocl_atom_20.h	177;"	d
ATOMIC_GEN_FUNCTIONS	./libocl/include/ocl_atom_20.h	102;"	d
ATOMIC_GEN_FUNCTIONS	./libocl/include/ocl_atom_20.h	123;"	d
ATOMIC_OP_ADD	./ir/instruction.hpp	/^    ATOMIC_OP_ADD       = 7,$/;"	e	enum:gbe::ir::AtomicOps
ATOMIC_OP_AND	./ir/instruction.hpp	/^    ATOMIC_OP_AND       = 1,$/;"	e	enum:gbe::ir::AtomicOps
ATOMIC_OP_CMPXCHG	./ir/instruction.hpp	/^    ATOMIC_OP_CMPXCHG   = 14,$/;"	e	enum:gbe::ir::AtomicOps
ATOMIC_OP_DEC	./ir/instruction.hpp	/^    ATOMIC_OP_DEC       = 6,$/;"	e	enum:gbe::ir::AtomicOps
ATOMIC_OP_IMAX	./ir/instruction.hpp	/^    ATOMIC_OP_IMAX      = 10,$/;"	e	enum:gbe::ir::AtomicOps
ATOMIC_OP_IMIN	./ir/instruction.hpp	/^    ATOMIC_OP_IMIN      = 11,$/;"	e	enum:gbe::ir::AtomicOps
ATOMIC_OP_INC	./ir/instruction.hpp	/^    ATOMIC_OP_INC       = 5,$/;"	e	enum:gbe::ir::AtomicOps
ATOMIC_OP_INVALID	./ir/instruction.hpp	/^    ATOMIC_OP_INVALID$/;"	e	enum:gbe::ir::AtomicOps
ATOMIC_OP_OR	./ir/instruction.hpp	/^    ATOMIC_OP_OR        = 2,$/;"	e	enum:gbe::ir::AtomicOps
ATOMIC_OP_SUB	./ir/instruction.hpp	/^    ATOMIC_OP_SUB       = 8,$/;"	e	enum:gbe::ir::AtomicOps
ATOMIC_OP_UMAX	./ir/instruction.hpp	/^    ATOMIC_OP_UMAX      = 12,$/;"	e	enum:gbe::ir::AtomicOps
ATOMIC_OP_UMIN	./ir/instruction.hpp	/^    ATOMIC_OP_UMIN      = 13,$/;"	e	enum:gbe::ir::AtomicOps
ATOMIC_OP_XCHG	./ir/instruction.hpp	/^    ATOMIC_OP_XCHG      = 4,$/;"	e	enum:gbe::ir::AtomicOps
ATOMIC_OP_XOR	./ir/instruction.hpp	/^    ATOMIC_OP_XOR       = 3,$/;"	e	enum:gbe::ir::AtomicOps
ATOMIC_VAR_INIT	./libocl/include/ocl_atom_20.h	127;"	d
AlignOf	./sys/platform.hpp	/^struct AlignOf {$/;"	s
AlignPair	./llvm/ExpandLargeIntegers.cpp	/^typedef LoHiPair<unsigned> AlignPair;$/;"	t	namespace:__anon177	file:
AllocData	./sys/alloc.cpp	/^    INLINE AllocData(int fileName_, int functionName_, int line_, intptr_t alloc_) :$/;"	f	struct:gbe::AllocData
AllocData	./sys/alloc.cpp	/^    INLINE AllocData(void) {}$/;"	f	struct:gbe::AllocData
AllocData	./sys/alloc.cpp	/^  struct AllocData {$/;"	s	namespace:gbe	file:
Allocator	./sys/alloc.hpp	/^    INLINE Allocator(Allocator const&) {}$/;"	f	class:gbe::Allocator
Allocator	./sys/alloc.hpp	/^    INLINE Allocator(Allocator<U> const&) {}$/;"	f	class:gbe::Allocator
Allocator	./sys/alloc.hpp	/^    INLINE Allocator(void) {}$/;"	f	class:gbe::Allocator
Allocator	./sys/alloc.hpp	/^  class Allocator : public std::allocator<T>$/;"	c	namespace:gbe
ArgInfo	./backend/program.hpp	/^    struct ArgInfo {$/;"	s	struct:gbe::KernelArgument
ArgUse	./ir/lowering.cpp	/^  enum ArgUse {$/;"	g	namespace:gbe::ir	file:
Atomic	./sys/atomic.hpp	/^  typedef AtomicInternal<atomic_t> Atomic;$/;"	t	namespace:gbe
Atomic32	./sys/atomic.hpp	/^  typedef AtomicInternal<atomic32_t> Atomic32;$/;"	t	namespace:gbe
AtomicInstruction	./ir/instruction.cpp	/^      AtomicInstruction(AtomicOps atomicOp,$/;"	f	class:gbe::ir::internal::AtomicInstruction
AtomicInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION AtomicInstruction :$/;"	c	namespace:gbe::ir::internal	file:
AtomicInstruction	./ir/instruction.hpp	/^  class AtomicInstruction : public MemInstruction {$/;"	c	namespace:gbe::ir
AtomicInstructionPattern	./backend/gen_insn_selection.cpp	/^    AtomicInstructionPattern(void) : SelectionPattern(1,1) {$/;"	f	class:gbe::AtomicInstructionPattern
AtomicInstructionPattern	./backend/gen_insn_selection.cpp	/^  class AtomicInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
AtomicInternal	./sys/atomic.hpp	/^    INLINE AtomicInternal(T data) : data(data) {}$/;"	f	struct:gbe::AtomicInternal
AtomicInternal	./sys/atomic.hpp	/^    INLINE AtomicInternal(void) {}$/;"	f	struct:gbe::AtomicInternal
AtomicInternal	./sys/atomic.hpp	/^  struct AtomicInternal {$/;"	s	namespace:gbe
AtomicOps	./ir/instruction.hpp	/^  enum AtomicOps {$/;"	g	namespace:gbe::ir
BACKEND_SRC_FILES	./Android.mk	/^BACKEND_SRC_FILES:= \\$/;"	m
BARRIER	./backend/gen_encoder.cpp	/^  void GenEncoder::BARRIER(GenRegister src) {$/;"	f	class:gbe::GenEncoder
BARRIER	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::BARRIER(GenRegister src, GenRegister fence, uint32_t barrierType) {$/;"	f	class:gbe::Selection::Opaque
BITCAST	./ir/instruction.cpp	/^  Instruction BITCAST(Type dstType, Type srcType, Tuple dst, Tuple src, uint8_t dstNum, uint8_t srcNum) {$/;"	f	namespace:gbe::ir
BLOCK_TYPE	./libocl/include/ocl_enqueue.h	59;"	d
BLOCK_TYPE	./libocl/include/ocl_enqueue.h	61;"	d
BRA	./ir/instruction.cpp	/^  Instruction BRA(LabelIndex labelIndex) {$/;"	f	namespace:gbe::ir
BRA	./ir/instruction.cpp	/^  Instruction BRA(LabelIndex labelIndex, Register pred) {$/;"	f	namespace:gbe::ir
BRANCH_JIP	./backend/gen/gen_mesa_disasm.c	582;"	d	file:
BRANCH_UIP	./backend/gen/gen_mesa_disasm.c	583;"	d	file:
BRC	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::BRC(Reg src, ir::LabelIndex jip, ir::LabelIndex uip) {$/;"	f	class:gbe::Selection::Opaque
BRD	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::BRD(Reg src, ir::LabelIndex jip) {$/;"	f	class:gbe::Selection::Opaque
BTI	./ir/instruction.hpp	/^    BTI() : isConst(0) {$/;"	f	struct:gbe::ir::BTI
BTI	./ir/instruction.hpp	/^  struct BTI {$/;"	s	namespace:gbe::ir
BTI_CONSTANT	./backend/program.h	74;"	d
BTI_LOCAL	./backend/program.h	81;"	d
BTI_MAX_ID	./backend/program.h	80;"	d
BTI_MAX_READ_IMAGE_ARGS	./backend/program.h	77;"	d
BTI_MAX_WRITE_IMAGE_ARGS	./backend/program.h	78;"	d
BTI_PRIVATE	./backend/program.h	75;"	d
BTI_RESERVED_NUM	./backend/program.h	76;"	d
BTI_WORKAROUND_IMAGE_OFFSET	./backend/program.h	79;"	d
BVAR	./sys/cvar.hpp	77;"	d
BYTE_GATHER	./backend/gen_encoder.cpp	/^  void GenEncoder::BYTE_GATHER(GenRegister dst, GenRegister src, GenRegister bti, uint32_t elemSize) {$/;"	f	class:gbe::GenEncoder
BYTE_GATHER	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::BYTE_GATHER(Reg dst, Reg addr,$/;"	f	class:gbe::Selection::Opaque
BYTE_GATHERA64	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::BYTE_GATHERA64(GenRegister dst, GenRegister src, uint32_t elemSize) {$/;"	f	class:gbe::Gen8Encoder
BYTE_GATHERA64	./backend/gen_encoder.cpp	/^  void GenEncoder::BYTE_GATHERA64(GenRegister dst, GenRegister src, uint32_t elemSize) {$/;"	f	class:gbe::GenEncoder
BYTE_GATHERA64	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::BYTE_GATHERA64(Reg dst, Reg addr, uint32_t elemSize) {$/;"	f	class:gbe::Selection::Opaque
BYTE_RW_DATA_SIZE	./backend/gen/gen_mesa_disasm.c	596;"	d	file:
BYTE_RW_SIMD_MODE	./backend/gen/gen_mesa_disasm.c	595;"	d	file:
BYTE_SCATTER	./backend/gen9_encoder.cpp	/^  void Gen9Encoder::BYTE_SCATTER(GenRegister addr, GenRegister data, GenRegister bti, uint32_t elemSize, bool useSends)$/;"	f	class:gbe::Gen9Encoder
BYTE_SCATTER	./backend/gen_encoder.cpp	/^  void GenEncoder::BYTE_SCATTER(GenRegister msg, GenRegister data, GenRegister bti, uint32_t elemSize, bool useSends) {$/;"	f	class:gbe::GenEncoder
BYTE_SCATTER	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::BYTE_SCATTER(Reg addr, Reg src, uint32_t elemSize,$/;"	f	class:gbe::Selection::Opaque
BYTE_SCATTERA64	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::BYTE_SCATTERA64(GenRegister msg, uint32_t elemSize) {$/;"	f	class:gbe::Gen8Encoder
BYTE_SCATTERA64	./backend/gen_encoder.cpp	/^  void GenEncoder::BYTE_SCATTERA64(GenRegister src, uint32_t elemSize){$/;"	f	class:gbe::GenEncoder
BYTE_SCATTERA64	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::BYTE_SCATTERA64(GenRegister *msg, uint32_t msgNum, uint32_t elemSize) {$/;"	f	class:gbe::Selection::Opaque
BarrierNodup	./llvm/llvm_barrier_nodup.cpp	/^      BarrierNodup(bool nodup) :$/;"	f	class:gbe::BarrierNodup
BarrierNodup	./llvm/llvm_barrier_nodup.cpp	/^    class BarrierNodup : public ModulePass$/;"	c	namespace:gbe	file:
BasePolicy	./ir/instruction.cpp	/^    struct BasePolicy {$/;"	s	namespace:gbe::ir::internal	file:
BasicBlock	./ir/function.cpp	/^  BasicBlock::BasicBlock(Function &fn) : needEndif(true), needIf(true), endifLabel(0),$/;"	f	class:gbe::ir::BasicBlock
BasicBlock	./ir/function.hpp	/^  class BasicBlock : public NonCopyable, public intrusive_list<Instruction>$/;"	c	namespace:gbe::ir
BinInterpCallBackInitializer	./gbe_bin_interpreter.cpp	/^  BinInterpCallBackInitializer() {$/;"	f	struct:BinInterpCallBackInitializer
BinInterpCallBackInitializer	./gbe_bin_interpreter.cpp	/^struct BinInterpCallBackInitializer$/;"	s	file:
BinaryInstruction	./ir/instruction.cpp	/^      BinaryInstruction(Opcode opcode,$/;"	f	class:gbe::ir::internal::BinaryInstruction
BinaryInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION BinaryInstruction : public NaryInstruction<2>$/;"	c	namespace:gbe::ir::internal	file:
BinaryInstruction	./ir/instruction.hpp	/^  class BinaryInstruction : public Instruction {$/;"	c	namespace:gbe::ir
BinaryInstructionPattern	./backend/gen_insn_selection.cpp	/^    BinaryInstructionPattern(void) : SelectionPattern(1,1) {$/;"	f	class:gbe::BinaryInstructionPattern
BinaryInstructionPattern	./backend/gen_insn_selection.cpp	/^  class BinaryInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
BitCastInstruction	./ir/instruction.cpp	/^      BitCastInstruction(Type dstType,$/;"	f	class:gbe::ir::internal::BitCastInstruction
BitCastInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION BitCastInstruction :$/;"	c	namespace:gbe::ir::internal	file:
BitCastInstruction	./ir/instruction.hpp	/^  class BitCastInstruction : public Instruction {$/;"	c	namespace:gbe::ir
Block	./backend/context.cpp	/^      Block(int32_t offset, int32_t size) :$/;"	f	struct:gbe::SimpleAllocator::Block
Block	./backend/context.cpp	/^    struct Block {$/;"	s	class:gbe::SimpleAllocator	file:
Block	./ir/structurizer.hpp	/^    Block(BlockType type, const BlockList& children): has_barrier(false), mark(false), canBeHandled(true), inversePredicate(true), insnNum(0)$/;"	f	class:gbe::ir::Block
Block	./ir/structurizer.hpp	/^  class Block$/;"	c	namespace:gbe::ir
BlockDefMap	./ir/value.cpp	/^    typedef map<Register, RegDefSet*> BlockDefMap;$/;"	t	class:gbe::ir::LiveOutSet	file:
BlockInfo	./ir/liveness.hpp	/^      BlockInfo(const BasicBlock &bb) : bb(bb) {}$/;"	f	struct:gbe::ir::Liveness::BlockInfo
BlockInfo	./ir/liveness.hpp	/^    struct BlockInfo : public NonCopyable {$/;"	s	class:gbe::ir::Liveness
BlockList	./ir/structurizer.hpp	/^  typedef std::list<Block *> BlockList;$/;"	t	namespace:gbe::ir
BlockSet	./ir/function.hpp	/^  typedef set<BasicBlock*> BlockSet;$/;"	t	namespace:gbe::ir
BlockSets	./ir/structurizer.hpp	/^  typedef std::set<Block *> BlockSets;$/;"	t	namespace:gbe::ir
BlockType	./ir/structurizer.hpp	/^  enum BlockType$/;"	g	namespace:gbe::ir
BlockVector	./ir/structurizer.hpp	/^  typedef std::vector<Block *> BlockVector;$/;"	t	namespace:gbe::ir
Block_descriptor_1	./libocl/include/ocl_enqueue.h	/^  struct Block_descriptor_1 {$/;"	s	struct:Block_literal
Block_literal	./libocl/include/ocl_enqueue.h	/^struct Block_literal {$/;"	s
BranchInstruction	./ir/instruction.cpp	/^      INLINE BranchInstruction(Opcode op) {$/;"	f	class:gbe::ir::internal::BranchInstruction
BranchInstruction	./ir/instruction.cpp	/^      INLINE BranchInstruction(Opcode op, LabelIndex labelIndex) {$/;"	f	class:gbe::ir::internal::BranchInstruction
BranchInstruction	./ir/instruction.cpp	/^      INLINE BranchInstruction(Opcode op, LabelIndex labelIndex, Register predicate, bool inv_pred=false) {$/;"	f	class:gbe::ir::internal::BranchInstruction
BranchInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION BranchInstruction :$/;"	c	namespace:gbe::ir::internal	file:
BranchInstruction	./ir/instruction.hpp	/^  class BranchInstruction : public Instruction {$/;"	c	namespace:gbe::ir
BranchInstructionPattern	./backend/gen_insn_selection.cpp	/^    BranchInstructionPattern(void) : SelectionPattern(1,1) {$/;"	f	class:gbe::BranchInstructionPattern
BranchInstructionPattern	./backend/gen_insn_selection.cpp	/^  class BranchInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
BtiMap	./llvm/llvm_gen_backend.cpp	/^    map<Value *, unsigned> BtiMap;$/;"	m	class:gbe::GenWriter	file:
BtiReg	./ir/instruction.cpp	/^        Register        BtiReg;$/;"	m	union:gbe::ir::internal::MemInstruction::__anon166	file:
BtiValueMap	./llvm/llvm_gen_backend.cpp	/^    map<Value *, Value *> BtiValueMap;$/;"	m	class:gbe::GenWriter	file:
BxtContext	./backend/gen9_context.hpp	/^    BxtContext(const ir::Unit &unit, const std::string &name, uint32_t deviceID, bool relaxMath = false)$/;"	f	class:gbe::BxtContext
BxtContext	./backend/gen9_context.hpp	/^  class BxtContext : public Gen9Context$/;"	c	namespace:gbe
CACHE_LINE	./sys/platform.hpp	165;"	d
CACHE_LINE_ALIGNED	./sys/platform.hpp	166;"	d
CALC_TIMESTAMP	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::CALC_TIMESTAMP(GenRegister ts[5], int tsN, GenRegister tmp, uint32_t pointNum, uint32_t tsType) {$/;"	f	class:gbe::Selection::Opaque
CALC_TIMESTAMP	./ir/instruction.cpp	/^  Instruction CALC_TIMESTAMP(uint32_t pointNum, uint32_t tsType) {$/;"	f	namespace:gbe::ir
CALL	./ir/instruction.cpp	2214;"	d	file:
CALL	./ir/instruction.cpp	2218;"	d	file:
CALL	./ir/instruction.cpp	2220;"	d	file:
CALL	./ir/instruction.cpp	2224;"	d	file:
CALL	./ir/instruction.cpp	2235;"	d	file:
CALL	./ir/instruction.cpp	2239;"	d	file:
CALL	./ir/instruction.cpp	2241;"	d	file:
CALL	./ir/instruction.cpp	2245;"	d	file:
CALL	./ir/instruction.cpp	2247;"	d	file:
CALL	./ir/instruction.cpp	2251;"	d	file:
CFGStructurizer	./ir/structurizer.hpp	/^      CFGStructurizer(Function* fn) { this->fn = fn; numSerialPatternMatch = 0; numLoopPatternMatch = 0; numIfPatternMatch = 0;}$/;"	f	class:gbe::ir::CFGStructurizer
CFGStructurizer	./ir/structurizer.hpp	/^  class CFGStructurizer{$/;"	c	namespace:gbe::ir
CHANNEL_DATA_TYPE	./ir/instruction.hpp	/^     CHANNEL_DATA_TYPE = 3,$/;"	e	enum:gbe::ir::GetImageInfoInstruction::__anon162
CHANNEL_ORDER	./ir/instruction.hpp	/^     CHANNEL_ORDER = 4,$/;"	e	enum:gbe::ir::GetImageInfoInstruction::__anon162
CHAR_BIT	./libocl/tmpl/ocl_integer.tmpl.h	23;"	d
CHAR_MAX	./libocl/tmpl/ocl_integer.tmpl.h	24;"	d
CHAR_MIN	./libocl/tmpl/ocl_integer.tmpl.h	25;"	d
CHECK_TYPE	./ir/instruction.cpp	1202;"	d	file:
CHECK_TYPE	./ir/instruction.cpp	1689;"	d	file:
CLANG_OCL_FLAGS	./libocl/Android.mk	/^CLANG_OCL_FLAGS := -fno-builtin -ffp-contract=off -cl-kernel-arg-info -DGEN7_SAMPLER_CLAMP_BORDER_WORKAROUND "-cl-std=CL1.2"$/;"	m
CLANG_ROOT_PATH	./Android.mk	/^CLANG_ROOT_PATH := external\/clang$/;"	m
CLK_A	./ocl_common_defines.h	/^  CLK_A = 0x10B1,$/;"	e	enum:__anon179
CLK_ADDRESS_CLAMP	./ocl_common_defines.h	/^    CLK_ADDRESS_CLAMP              = (4 << __CLK_ADDRESS_BASE),$/;"	e	enum:clk_sampler_type
CLK_ADDRESS_CLAMP_TO_EDGE	./ocl_common_defines.h	/^    CLK_ADDRESS_CLAMP_TO_EDGE      = (2 << __CLK_ADDRESS_BASE),$/;"	e	enum:clk_sampler_type
CLK_ADDRESS_MIRROR	./ocl_common_defines.h	/^    CLK_ADDRESS_MIRROR             = (8 << __CLK_ADDRESS_BASE),$/;"	e	enum:clk_sampler_type
CLK_ADDRESS_MIRRORED_REPEAT	./ocl_common_defines.h	/^    CLK_ADDRESS_MIRRORED_REPEAT    = CLK_ADDRESS_MIRROR,$/;"	e	enum:clk_sampler_type
CLK_ADDRESS_NONE	./ocl_common_defines.h	/^    CLK_ADDRESS_NONE               = (0 << __CLK_ADDRESS_BASE),$/;"	e	enum:clk_sampler_type
CLK_ADDRESS_REPEAT	./ocl_common_defines.h	/^    CLK_ADDRESS_REPEAT             = (6 << __CLK_ADDRESS_BASE),$/;"	e	enum:clk_sampler_type
CLK_ARGB	./ocl_common_defines.h	/^  CLK_ARGB = 0x10B7,$/;"	e	enum:__anon179
CLK_BGRA	./ocl_common_defines.h	/^  CLK_BGRA = 0x10B6,$/;"	e	enum:__anon179
CLK_ENQUEUE_FLAGS_NO_WAIT	./libocl/include/ocl_enqueue.h	24;"	d
CLK_ENQUEUE_FLAGS_WAIT_KERNEL	./libocl/include/ocl_enqueue.h	23;"	d
CLK_ENQUEUE_FLAGS_WAIT_WORK_GROUP	./libocl/include/ocl_enqueue.h	25;"	d
CLK_FILTER_ANISOTROPIC	./ocl_common_defines.h	/^    CLK_FILTER_ANISOTROPIC         = (0 << __CLK_FILTER_BASE),$/;"	e	enum:clk_sampler_type
CLK_FILTER_LINEAR	./ocl_common_defines.h	/^    CLK_FILTER_LINEAR              = (2 << __CLK_FILTER_BASE),$/;"	e	enum:clk_sampler_type
CLK_FILTER_NEAREST	./ocl_common_defines.h	/^    CLK_FILTER_NEAREST             = (1 << __CLK_FILTER_BASE),$/;"	e	enum:clk_sampler_type
CLK_FLOAT	./ocl_common_defines.h	/^  CLK_FLOAT = 0x10DE,                 \/\/ four channel RGBA float$/;"	e	enum:clk_channel_type
CLK_GLOBAL_MEM_FENCE	./libocl/include/ocl_types.h	98;"	d
CLK_HALF_FLOAT	./ocl_common_defines.h	/^  CLK_HALF_FLOAT = 0x10DD,            \/\/ four channel RGBA half$/;"	e	enum:clk_channel_type
CLK_HAS_ALPHA	./ocl_common_defines.h	8;"	d
CLK_IMAGE_MEM_FENCE	./libocl/include/ocl_types.h	99;"	d
CLK_INTENSITY	./ocl_common_defines.h	/^  CLK_INTENSITY = 0x10B8,$/;"	e	enum:__anon179
CLK_LOCAL_MEM_FENCE	./libocl/include/ocl_types.h	97;"	d
CLK_LUMINANCE	./ocl_common_defines.h	/^  CLK_LUMINANCE = 0x10B9$/;"	e	enum:__anon179
CLK_MIP_ANISOTROPIC	./ocl_common_defines.h	/^    CLK_MIP_ANISOTROPIC            = (2 << __CLK_MIP_BASE),$/;"	e	enum:clk_sampler_type
CLK_MIP_LINEAR	./ocl_common_defines.h	/^    CLK_MIP_LINEAR                 = (1 << __CLK_MIP_BASE),$/;"	e	enum:clk_sampler_type
CLK_MIP_NEAREST	./ocl_common_defines.h	/^    CLK_MIP_NEAREST                = (0 << __CLK_MIP_BASE),$/;"	e	enum:clk_sampler_type
CLK_NORMALIZED_COORDS_FALSE	./ocl_common_defines.h	/^    CLK_NORMALIZED_COORDS_FALSE    = 0,$/;"	e	enum:clk_sampler_type
CLK_NORMALIZED_COORDS_TRUE	./ocl_common_defines.h	/^    CLK_NORMALIZED_COORDS_TRUE     = (1 << __CLK_NORMALIZED_BASE),$/;"	e	enum:clk_sampler_type
CLK_PROFILING_COMMAND_EXEC_TIME	./libocl/include/ocl_enqueue.h	28;"	d
CLK_R	./ocl_common_defines.h	/^  CLK_R = 0x10B0,$/;"	e	enum:__anon179
CLK_RA	./ocl_common_defines.h	/^  CLK_RA = 0x10B3,$/;"	e	enum:__anon179
CLK_RG	./ocl_common_defines.h	/^  CLK_RG = 0x10B2,$/;"	e	enum:__anon179
CLK_RGB	./ocl_common_defines.h	/^  CLK_RGB = 0x10B4,$/;"	e	enum:__anon179
CLK_RGBA	./ocl_common_defines.h	/^  CLK_RGBA = 0x10B5,$/;"	e	enum:__anon179
CLK_RGBx	./ocl_common_defines.h	/^  CLK_RGBx = 0x10BC$/;"	e	enum:__anon179
CLK_RGx	./ocl_common_defines.h	/^  CLK_RGx = 0x10BB,$/;"	e	enum:__anon179
CLK_Rx	./ocl_common_defines.h	/^  CLK_Rx = 0x10BA,$/;"	e	enum:__anon179
CLK_SIGNED_INT16	./ocl_common_defines.h	/^  CLK_SIGNED_INT16 = 0x10D8,$/;"	e	enum:clk_channel_type
CLK_SIGNED_INT32	./ocl_common_defines.h	/^  CLK_SIGNED_INT32 = 0x10D9,$/;"	e	enum:clk_channel_type
CLK_SIGNED_INT8	./ocl_common_defines.h	/^  CLK_SIGNED_INT8 =  0x10D7,$/;"	e	enum:clk_channel_type
CLK_SNORM_INT16	./ocl_common_defines.h	/^  CLK_SNORM_INT16 = 0x10D1,           \/\/ four channel RGBA unorm16$/;"	e	enum:clk_channel_type
CLK_SNORM_INT8	./ocl_common_defines.h	/^  CLK_SNORM_INT8 = 0x10D0,            \/\/ four channel RGBA unorm8$/;"	e	enum:clk_channel_type
CLK_SUCCESS	./libocl/include/ocl_enqueue.h	26;"	d
CLK_UNORM_INT16	./ocl_common_defines.h	/^  CLK_UNORM_INT16 = 0x10D3,           \/\/ four channel RGBA unorm16$/;"	e	enum:clk_channel_type
CLK_UNORM_INT8	./ocl_common_defines.h	/^  CLK_UNORM_INT8 = 0x10D2,            \/\/ four channel RGBA unorm8$/;"	e	enum:clk_channel_type
CLK_UNORM_INT_101010	./ocl_common_defines.h	/^  CLK_UNORM_INT_101010 = 0x10D6,$/;"	e	enum:clk_channel_type
CLK_UNORM_SHORT_555	./ocl_common_defines.h	/^  CLK_UNORM_SHORT_555 = 0x10D5,$/;"	e	enum:clk_channel_type
CLK_UNORM_SHORT_565	./ocl_common_defines.h	/^  CLK_UNORM_SHORT_565 = 0x10D4,$/;"	e	enum:clk_channel_type
CLK_UNSIGNED_INT16	./ocl_common_defines.h	/^  CLK_UNSIGNED_INT16 = 0x10DB,$/;"	e	enum:clk_channel_type
CLK_UNSIGNED_INT32	./ocl_common_defines.h	/^  CLK_UNSIGNED_INT32 = 0x10DC,$/;"	e	enum:clk_channel_type
CLK_UNSIGNED_INT8	./ocl_common_defines.h	/^  CLK_UNSIGNED_INT8 = 0x10DA,$/;"	e	enum:clk_channel_type
CLK_sBGRA	./ocl_common_defines.h	/^  CLK_sBGRA = 0x10C2$/;"	e	enum:__anon179
CLK_sRGBA	./ocl_common_defines.h	/^  CLK_sRGBA = 0x10C1,$/;"	e	enum:__anon179
CLK_xRGB	./ocl_common_defines.h	/^  CLK_xRGB = 0x10B7,$/;"	e	enum:__anon179
CL_COMPLETE	./libocl/include/ocl_enqueue.h	27;"	d
CL_VERSION_1_0	./libocl/tmpl/ocl_defines.tmpl.h	24;"	d
CL_VERSION_1_1	./libocl/tmpl/ocl_defines.tmpl.h	25;"	d
CL_VERSION_1_2	./libocl/tmpl/ocl_defines.tmpl.h	26;"	d
CL_VERSION_2_0	./libocl/tmpl/ocl_defines.tmpl.h	29;"	d
CMP	./backend/gen_encoder.cpp	/^  void GenEncoder::CMP(uint32_t conditional, GenRegister src0, GenRegister src1, GenRegister dst) {$/;"	f	class:gbe::GenEncoder
CMP	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::CMP(uint32_t conditional, Reg src0, Reg src1, Reg dst) {$/;"	f	class:gbe::Selection::Opaque
COND_DST_OR_MODIFIER	./backend/gen/gen_mesa_disasm.c	580;"	d	file:
CONST	./libocl/include/ocl_types.h	38;"	d
CONSTANT_POINTER	./ir/function.hpp	/^      CONSTANT_POINTER  = 1, \/\/ __constant$/;"	e	enum:gbe::ir::FunctionArgument::Type
CONST_DOUBLE	./llvm/llvm_gen_backend.cpp	/^      CONST_DOUBLE$/;"	e	enum:gbe::GenWriter::__anon172	file:
CONST_FLOAT	./llvm/llvm_gen_backend.cpp	/^      CONST_FLOAT,$/;"	e	enum:gbe::GenWriter::__anon172	file:
CONST_INT	./llvm/llvm_gen_backend.cpp	/^      CONST_INT,$/;"	e	enum:gbe::GenWriter::__anon172	file:
CONVERSION_SPEC_AND_RET	./llvm/llvm_printf_parser.cpp	172;"	d	file:
CONVF_TO_I64	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::CONVF_TO_I64(Reg dst, Reg src, GenRegister tmp[2]) {$/;"	f	class:gbe::Selection::Opaque
CONVI64_TO_F	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::CONVI64_TO_F(Reg dst, Reg src, GenRegister tmp[6]) {$/;"	f	class:gbe::Selection::Opaque
COPY_THE_HEADER	./libocl/Android.mk	/^define COPY_THE_HEADER$/;"	m
COPY_THE_LL	./libocl/Android.mk	/^define COPY_THE_LL$/;"	m
COPY_THE_SOURCE	./libocl/Android.mk	/^define COPY_THE_SOURCE$/;"	m
CVT	./ir/instruction.cpp	/^  Instruction CVT(Type dstType, Type srcType, Register dst, Register src) {$/;"	f	namespace:gbe::ir
CVarInit	./sys/cvar.cpp	/^  CVarInit::CVarInit(const char *name, float *addr, float fmin, float f, float fmax) :$/;"	f	class:gbe::CVarInit
CVarInit	./sys/cvar.cpp	/^  CVarInit::CVarInit(const char *name, int32_t *addr, int32_t imin, int32_t i, int32_t imax) :$/;"	f	class:gbe::CVarInit
CVarInit	./sys/cvar.cpp	/^  CVarInit::CVarInit(const char *name, std::string *str, const std::string &v) :$/;"	f	class:gbe::CVarInit
CVarInit	./sys/cvar.hpp	/^  class CVarInit$/;"	c	namespace:gbe
CalcTimestampInstruction	./ir/instruction.cpp	/^      CalcTimestampInstruction(uint32_t pointNum, uint32_t timestampType) {$/;"	f	class:gbe::ir::internal::CalcTimestampInstruction
CalcTimestampInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION CalcTimestampInstruction :$/;"	c	namespace:gbe::ir::internal	file:
CalcTimestampInstruction	./ir/instruction.hpp	/^  class CalcTimestampInstruction : public Instruction {$/;"	c	namespace:gbe::ir
CalcTimestampInstructionPattern	./backend/gen_insn_selection.cpp	/^    CalcTimestampInstructionPattern(void) : SelectionPattern(1,1) {$/;"	f	class:gbe::CalcTimestampInstructionPattern
CalcTimestampInstructionPattern	./backend/gen_insn_selection.cpp	/^  class CalcTimestampInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
CalculateElements	./backend/gen_insn_selection_optimize.cpp	/^  static uint32_t CalculateElements(const GenRegister& reg, uint32_t execWidth)$/;"	f	namespace:gbe
CallBackInitializer	./backend/program.cpp	/^    CallBackInitializer(void) {$/;"	f	struct:gbe::CallBackInitializer
CallBackInitializer	./backend/program.cpp	/^  struct CallBackInitializer$/;"	s	namespace:gbe	file:
CanBeReplaced	./backend/gen_insn_selection_optimize.cpp	/^  bool SelBasicBlockOptimizer::CanBeReplaced(const ReplaceInfo* info, const SelectionInstruction& insn, const GenRegister& var)$/;"	f	class:gbe::SelBasicBlockOptimizer
ChvContext	./backend/gen8_context.hpp	/^    ChvContext(const ir::Unit &unit, const std::string &name, uint32_t deviceID, bool relaxMath = false)$/;"	f	class:gbe::ChvContext
ChvContext	./backend/gen8_context.hpp	/^  class ChvContext : public Gen8Context$/;"	c	namespace:gbe
CleanLlvmResource	./backend/gen_program.cpp	/^  void GenProgram::CleanLlvmResource(void){$/;"	f	class:gbe::GenProgram
CodeGenStrategy	./backend/gen_program.cpp	/^  struct CodeGenStrategy {$/;"	s	namespace:gbe	file:
CompareInstruction	./ir/instruction.cpp	/^      CompareInstruction(Opcode opcode,$/;"	f	class:gbe::ir::internal::CompareInstruction
CompareInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION CompareInstruction :$/;"	c	namespace:gbe::ir::internal	file:
CompareInstruction	./ir/instruction.hpp	/^  class CompareInstruction : public Instruction {$/;"	c	namespace:gbe::ir
CompareInstructionPattern	./backend/gen_insn_selection.cpp	/^    CompareInstructionPattern(void) : SelectionPattern(1,1) {$/;"	f	class:gbe::CompareInstructionPattern
CompareInstructionPattern	./backend/gen_insn_selection.cpp	/^  class CompareInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
CompileErrorCode	./backend/gen_context.hpp	/^  } CompileErrorCode;$/;"	t	namespace:gbe	typeref:enum:gbe::__anon39
ConstTypeId	./llvm/llvm_gen_backend.cpp	/^    } ConstTypeId;$/;"	t	class:gbe::GenWriter	typeref:enum:gbe::GenWriter::__anon172	file:
Constant	./ir/constant.hpp	/^    INLINE Constant(const Constant &other) :$/;"	f	class:gbe::ir::Constant
Constant	./ir/constant.hpp	/^    INLINE Constant(const std::string &name, uint32_t size, uint32_t alignment, uint32_t offset) :$/;"	f	class:gbe::ir::Constant
Constant	./ir/constant.hpp	/^  class Constant$/;"	c	namespace:gbe::ir
ConstantSet	./ir/constant.hpp	/^    ConstantSet() {}$/;"	f	class:gbe::ir::ConstantSet
ConstantSet	./ir/constant.hpp	/^    ConstantSet(const ConstantSet& other) : Serializable(other),$/;"	f	class:gbe::ir::ConstantSet
ConstantSet	./ir/constant.hpp	/^  class ConstantSet : public Serializable$/;"	c	namespace:gbe::ir
Context	./backend/context.cpp	/^  Context::Context(const ir::Unit &unit, const std::string &name) :$/;"	f	class:gbe::Context
Context	./backend/context.hpp	/^  class Context : public NonCopyable$/;"	c	namespace:gbe
Context	./ir/context.cpp	/^  Context::Context(Unit &unit) :$/;"	f	class:gbe::ir::Context
Context	./ir/context.hpp	/^  class Context$/;"	c	namespace:gbe::ir
ContextReturn	./ir/lowering.cpp	/^    ContextReturn(Unit &unit) : Context(unit) {$/;"	f	class:gbe::ir::ContextReturn
ContextReturn	./ir/lowering.cpp	/^  class ContextReturn : public Context$/;"	c	namespace:gbe::ir	file:
ControlBits	./backend/gen_insn_compact.cpp	/^  union ControlBits{$/;"	u	namespace:gbe	file:
ConversionState	./llvm/ExpandLargeIntegers.cpp	/^class ConversionState {$/;"	c	namespace:__anon178	file:
ConversionState	./llvm/PromoteIntegers.cpp	/^class ConversionState {$/;"	c	namespace:__anon175	file:
ConvertInstruction	./ir/instruction.cpp	/^      ConvertInstruction(Opcode opcode,$/;"	f	class:gbe::ir::internal::ConvertInstruction
ConvertInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION ConvertInstruction :$/;"	c	namespace:gbe::ir::internal	file:
ConvertInstruction	./ir/instruction.hpp	/^  class ConvertInstruction : public Instruction {$/;"	c	namespace:gbe::ir
CopyDebug	./llvm/llvm_gen_backend.hpp	/^  template <typename T> T *CopyDebug(T *New, llvm::Instruction *Original) {$/;"	f	namespace:llvm
CustomLoopUnroll	./llvm/llvm_unroll.cpp	/^      CustomLoopUnroll() :$/;"	f	class:gbe::CustomLoopUnroll
CustomLoopUnroll	./llvm/llvm_unroll.cpp	/^    class CustomLoopUnroll : public LoopPass$/;"	c	namespace:gbe	file:
DBGInfo	./backend/gen_encoder.hpp	/^    DebugInfo DBGInfo;$/;"	m	class:gbe::GenEncoder
DBGInfo	./backend/gen_insn_selection.cpp	/^    DebugInfo DBGInfo;$/;"	m	class:gbe::Selection::Opaque	file:
DBGInfo	./backend/gen_insn_selection.hpp	/^    DebugInfo DBGInfo;$/;"	m	class:gbe::SelectionInstruction
DBGInfo	./ir/context.hpp	/^    DebugInfo DBGInfo;$/;"	m	class:gbe::ir::Context
DBGInfo	./ir/instruction.hpp	/^    DebugInfo DBGInfo;$/;"	m	class:gbe::ir::Instruction
DEBUG	./llvm/ExpandLargeIntegers.cpp	101;"	d	file:
DEBUG	./llvm/ExpandLargeIntegers.cpp	103;"	d	file:
DEBUGBREAK	./sys/platform.hpp	151;"	d
DEBUGBREAK	./sys/platform.hpp	161;"	d
DEBUG_CONTROL	./backend/gen/gen_mesa_disasm.c	574;"	d	file:
DEBUG_TYPE	./llvm/ExpandLargeIntegers.cpp	97;"	d	file:
DEC	./libocl/tmpl/ocl_integer.tmpl.h	154;"	d
DEC	./libocl/tmpl/ocl_integer.tmpl.h	161;"	d
DEC	./libocl/tmpl/ocl_integer.tmpl.h	171;"	d
DEC	./libocl/tmpl/ocl_integer.tmpl.h	175;"	d
DEC	./libocl/tmpl/ocl_integer.tmpl.h	178;"	d
DEC	./libocl/tmpl/ocl_integer.tmpl.h	183;"	d
DEC	./libocl/tmpl/ocl_integer.tmpl.h	187;"	d
DEC	./libocl/tmpl/ocl_integer.tmpl.h	192;"	d
DEC	./libocl/tmpl/ocl_relational.tmpl.h	102;"	d
DEC	./libocl/tmpl/ocl_relational.tmpl.h	71;"	d
DEC	./libocl/tmpl/ocl_relational.tmpl.h	77;"	d
DEC	./libocl/tmpl/ocl_relational.tmpl.h	96;"	d
DEC1	./libocl/tmpl/ocl_relational.tmpl.h	103;"	d
DEC1	./libocl/tmpl/ocl_relational.tmpl.h	61;"	d
DEC1	./libocl/tmpl/ocl_relational.tmpl.h	78;"	d
DEC1	./libocl/tmpl/ocl_relational.tmpl.h	86;"	d
DEC16	./libocl/include/ocl_misc.h	130;"	d
DEC16	./libocl/include/ocl_misc.h	32;"	d
DEC16	./libocl/include/ocl_misc.h	62;"	d
DEC16	./libocl/include/ocl_misc.h	82;"	d
DEC16	./libocl/tmpl/ocl_relational.tmpl.h	108;"	d
DEC16	./libocl/tmpl/ocl_relational.tmpl.h	66;"	d
DEC16	./libocl/tmpl/ocl_relational.tmpl.h	83;"	d
DEC16	./libocl/tmpl/ocl_relational.tmpl.h	91;"	d
DEC16X	./libocl/include/ocl_misc.h	131;"	d
DEC16X	./libocl/include/ocl_misc.h	85;"	d
DEC2	./libocl/include/ocl_misc.h	124;"	d
DEC2	./libocl/include/ocl_misc.h	23;"	d
DEC2	./libocl/include/ocl_misc.h	59;"	d
DEC2	./libocl/include/ocl_misc.h	64;"	d
DEC2	./libocl/tmpl/ocl_relational.tmpl.h	104;"	d
DEC2	./libocl/tmpl/ocl_relational.tmpl.h	62;"	d
DEC2	./libocl/tmpl/ocl_relational.tmpl.h	79;"	d
DEC2	./libocl/tmpl/ocl_relational.tmpl.h	87;"	d
DEC2X	./libocl/include/ocl_misc.h	125;"	d
DEC2X	./libocl/include/ocl_misc.h	67;"	d
DEC3	./libocl/tmpl/ocl_relational.tmpl.h	105;"	d
DEC3	./libocl/tmpl/ocl_relational.tmpl.h	63;"	d
DEC3	./libocl/tmpl/ocl_relational.tmpl.h	80;"	d
DEC3	./libocl/tmpl/ocl_relational.tmpl.h	88;"	d
DEC4	./libocl/include/ocl_misc.h	126;"	d
DEC4	./libocl/include/ocl_misc.h	26;"	d
DEC4	./libocl/include/ocl_misc.h	60;"	d
DEC4	./libocl/include/ocl_misc.h	70;"	d
DEC4	./libocl/tmpl/ocl_relational.tmpl.h	106;"	d
DEC4	./libocl/tmpl/ocl_relational.tmpl.h	64;"	d
DEC4	./libocl/tmpl/ocl_relational.tmpl.h	81;"	d
DEC4	./libocl/tmpl/ocl_relational.tmpl.h	89;"	d
DEC4X	./libocl/include/ocl_misc.h	127;"	d
DEC4X	./libocl/include/ocl_misc.h	73;"	d
DEC8	./libocl/include/ocl_misc.h	128;"	d
DEC8	./libocl/include/ocl_misc.h	29;"	d
DEC8	./libocl/include/ocl_misc.h	61;"	d
DEC8	./libocl/include/ocl_misc.h	76;"	d
DEC8	./libocl/tmpl/ocl_relational.tmpl.h	107;"	d
DEC8	./libocl/tmpl/ocl_relational.tmpl.h	65;"	d
DEC8	./libocl/tmpl/ocl_relational.tmpl.h	82;"	d
DEC8	./libocl/tmpl/ocl_relational.tmpl.h	90;"	d
DEC8X	./libocl/include/ocl_misc.h	129;"	d
DEC8X	./libocl/include/ocl_misc.h	79;"	d
DECLAR_BINARY_ALL_TYPE_OP	./ir/immediate.cpp	28;"	d	file:
DECLAR_BINARY_ALL_TYPE_OP	./ir/immediate.cpp	62;"	d	file:
DECLAR_BINARY_ASHIFT_OP	./ir/immediate.cpp	114;"	d	file:
DECLAR_BINARY_ASHIFT_OP	./ir/immediate.cpp	90;"	d	file:
DECLAR_BINARY_INT_TYPE_OP	./ir/immediate.cpp	65;"	d	file:
DECLAR_BINARY_INT_TYPE_OP	./ir/immediate.cpp	87;"	d	file:
DECL_BYTE_RD_SPACE	./libocl/include/ocl_vload.h	106;"	d
DECL_BYTE_RD_SPACE	./libocl/include/ocl_vload.h	64;"	d
DECL_BYTE_RD_SPACE	./libocl/include/ocl_vload_20.h	100;"	d
DECL_BYTE_RD_SPACE	./libocl/include/ocl_vload_20.h	62;"	d
DECL_BYTE_RW_ALL	./libocl/include/ocl_vload.h	108;"	d
DECL_BYTE_RW_ALL	./libocl/include/ocl_vload.h	78;"	d
DECL_BYTE_RW_ALL	./libocl/include/ocl_vload_20.h	102;"	d
DECL_BYTE_RW_ALL	./libocl/include/ocl_vload_20.h	76;"	d
DECL_BYTE_WR_SPACE	./libocl/include/ocl_vload.h	107;"	d
DECL_BYTE_WR_SPACE	./libocl/include/ocl_vload.h	71;"	d
DECL_BYTE_WR_SPACE	./libocl/include/ocl_vload_20.h	101;"	d
DECL_BYTE_WR_SPACE	./libocl/include/ocl_vload_20.h	69;"	d
DECL_CONSTRUCTOR	./ir/immediate.hpp	127;"	d
DECL_CONSTRUCTOR	./ir/immediate.hpp	148;"	d
DECL_CONSTRUCTOR	./ir/immediate.hpp	150;"	d
DECL_CONSTRUCTOR	./ir/immediate.hpp	174;"	d
DECL_CTOR	./backend/gen_insn_selection.cpp	3089;"	d	file:
DECL_EMIT_FUNCTION	./ir/instruction.cpp	2441;"	d	file:
DECL_EMIT_FUNCTION	./ir/instruction.cpp	2449;"	d	file:
DECL_EMIT_FUNCTION	./ir/instruction.cpp	2457;"	d	file:
DECL_EMIT_FUNCTION	./ir/instruction.cpp	2478;"	d	file:
DECL_EMIT_FUNCTION	./ir/instruction.cpp	2481;"	d	file:
DECL_EMIT_FUNCTION	./ir/instruction.cpp	2512;"	d	file:
DECL_EMIT_FUNCTION	./ir/instruction.cpp	2531;"	d	file:
DECL_EMIT_FUNCTION	./ir/instruction.cpp	2545;"	d	file:
DECL_EMIT_FUNCTION	./ir/instruction.cpp	2623;"	d	file:
DECL_EMIT_FUNCTION	./ir/instruction.cpp	2655;"	d	file:
DECL_GEN7_SCHEDULE	./backend/gen_insn_scheduling.cpp	424;"	d	file:
DECL_GEN7_SCHEDULE	./backend/gen_insn_scheduling.cpp	427;"	d	file:
DECL_GEN7_SCHEDULE	./backend/gen_insn_scheduling.cpp	439;"	d	file:
DECL_GEN7_SCHEDULE	./backend/gen_insn_scheduling.cpp	442;"	d	file:
DECL_HALF_LD_SPACE	./libocl/include/ocl_vload.h	111;"	d
DECL_HALF_LD_SPACE	./libocl/include/ocl_vload.h	156;"	d
DECL_HALF_LD_SPACE	./libocl/include/ocl_vload_20.h	105;"	d
DECL_HALF_LD_SPACE	./libocl/include/ocl_vload_20.h	146;"	d
DECL_HALF_ST_SPACE	./libocl/include/ocl_vload.h	139;"	d
DECL_HALF_ST_SPACE	./libocl/include/ocl_vload.h	157;"	d
DECL_HALF_ST_SPACE	./libocl/include/ocl_vload_20.h	133;"	d
DECL_HALF_ST_SPACE	./libocl/include/ocl_vload_20.h	147;"	d
DECL_HALF_ST_SPACE_ROUND	./libocl/include/ocl_vload.h	125;"	d
DECL_HALF_ST_SPACE_ROUND	./libocl/include/ocl_vload.h	158;"	d
DECL_HALF_ST_SPACE_ROUND	./libocl/include/ocl_vload_20.h	119;"	d
DECL_HALF_ST_SPACE_ROUND	./libocl/include/ocl_vload_20.h	148;"	d
DECL_IMAGE	./libocl/include/ocl_image.h	54;"	d
DECL_IMAGE	./libocl/include/ocl_image.h	61;"	d
DECL_IMAGE	./libocl/include/ocl_image.h	75;"	d
DECL_IMAGE	./libocl/include/ocl_image.h	78;"	d
DECL_IMAGE	./libocl/include/ocl_image.h	95;"	d
DECL_IMAGE_READ_NO_SAMPLE_RETTYPE	./libocl/include/ocl_image.h	32;"	d
DECL_IMAGE_READ_SAMPLE_RETTYPE	./libocl/include/ocl_image.h	28;"	d
DECL_IMAGE_TYPE_READ_NO_SAMPLE	./libocl/include/ocl_image.h	38;"	d
DECL_IMAGE_TYPE_READ_NO_SAMPLE	./libocl/include/ocl_image.h	93;"	d
DECL_IMAGE_TYPE_READ_SAMPLE	./libocl/include/ocl_image.h	43;"	d
DECL_IMAGE_TYPE_WRITE	./libocl/include/ocl_image.h	48;"	d
DECL_IMAGE_TYPE_WRITE	./libocl/include/ocl_image.h	94;"	d
DECL_IMAGE_WRITE_RETTYPE	./libocl/include/ocl_image.h	35;"	d
DECL_INSN	./backend/gen_context.cpp	115;"	d	file:
DECL_INSN	./ir/context.hpp	158;"	d
DECL_INSN	./ir/context.hpp	161;"	d
DECL_INSN	./ir/context.hpp	229;"	d
DECL_INSN	./ir/context.hpp	237;"	d
DECL_INSN	./ir/instruction.cpp	2048;"	d	file:
DECL_INSN	./ir/instruction.cpp	2193;"	d	file:
DECL_INSN	./ir/instruction.cpp	2200;"	d	file:
DECL_INSN	./ir/instruction.cpp	2226;"	d	file:
DECL_INSN	./ir/instruction.cpp	2228;"	d	file:
DECL_INSN	./ir/instruction.cpp	2253;"	d	file:
DECL_INSN	./ir/instruction.cpp	2266;"	d	file:
DECL_INSN	./ir/instruction.cpp	2271;"	d	file:
DECL_INSN	./ir/instruction.cpp	2285;"	d	file:
DECL_INSN	./ir/instruction.cpp	2290;"	d	file:
DECL_INSN	./ir/instruction.cpp	2736;"	d	file:
DECL_INSN	./ir/instruction.cpp	2747;"	d	file:
DECL_INSN	./ir/instruction.cpp	47;"	d	file:
DECL_INSN	./ir/instruction.cpp	49;"	d	file:
DECL_INSN	./ir/instruction.hpp	52;"	d
DECL_INSN	./ir/instruction.hpp	54;"	d
DECL_INSN	./ir/instruction.hpp	695;"	d
DECL_INSN	./ir/instruction.hpp	698;"	d
DECL_LLVM_GEN_FUNCTION	./llvm/llvm_gen_backend.hpp	64;"	d
DECL_LLVM_GEN_FUNCTION	./llvm/llvm_gen_backend.hpp	67;"	d
DECL_LLVM_GEN_FUNCTION	./llvm/llvm_gen_backend.hpp	74;"	d
DECL_LLVM_GEN_FUNCTION	./llvm/llvm_gen_backend.hpp	77;"	d
DECL_MEM_FN	./ir/instruction.cpp	2342;"	d	file:
DECL_MEM_FN	./ir/instruction.cpp	2416;"	d	file:
DECL_MEM_FN	./ir/instruction.cpp	2418;"	d	file:
DECL_MEM_FN	./ir/instruction.cpp	2425;"	d	file:
DECL_MIN_MAX_CLAMP	./libocl/tmpl/ocl_integer.tmpl.h	200;"	d
DECL_MIN_MAX_CLAMP	./libocl/tmpl/ocl_integer.tmpl.h	212;"	d
DECL_NEW_REG	./ir/profile.cpp	112;"	d	file:
DECL_NEW_REG	./ir/profile.cpp	57;"	d	file:
DECL_NEW_REG	./ir/profile.cpp	61;"	d	file:
DECL_NOT_IMPLEMENTED_ONE_TO_MANY	./backend/gen_insn_selection.cpp	4090;"	d	file:
DECL_NOT_IMPLEMENTED_ONE_TO_MANY	./backend/gen_insn_selection.cpp	4099;"	d	file:
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(BitCastInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(ConvertInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(GetImageInfoInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(LabelInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(LoadImmInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(MediaBlockReadInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(MediaBlockWriteInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(SampleInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(SyncInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(TernaryInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(TypedWriteInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(UnaryInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(VmeInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(WaitInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	/^  DECL_PATTERN(WorkGroupInstruction)$/;"	f	namespace:gbe
DECL_PATTERN	./backend/gen_insn_selection.cpp	3086;"	d	file:
DECL_POOL	./sys/alloc.hpp	286;"	d
DECL_REG_ENCODER	./backend/gen_register.hpp	1328;"	d
DECL_REG_ENCODER	./backend/gen_register.hpp	1347;"	d
DECL_SELECTION_IR	./backend/gen_context.cpp	112;"	d	file:
DECL_SELECTION_IR	./backend/gen_insn_scheduling.cpp	430;"	d	file:
DECL_SELECTION_IR	./backend/gen_insn_scheduling.cpp	432;"	d	file:
DECL_SELECTION_IR	./backend/gen_insn_scheduling.cpp	445;"	d	file:
DECL_SELECTION_IR	./backend/gen_insn_scheduling.cpp	447;"	d	file:
DECL_SELECTION_IR	./backend/gen_insn_selection.hpp	52;"	d
DECL_SELECTION_IR	./backend/gen_insn_selection.hpp	54;"	d
DECL_SELECTION_IR	./backend/gen_insn_selection_output.cpp	116;"	d	file:
DECL_SELECTION_IR	./backend/gen_insn_selection_output.cpp	118;"	d	file:
DECL_THREE_SRC_INSN	./ir/context.hpp	170;"	d
DECL_THREE_SRC_INSN	./ir/context.hpp	184;"	d
DECL_UNTYPED_RDV3_SPACE	./libocl/include/ocl_vload.h	105;"	d
DECL_UNTYPED_RDV3_SPACE	./libocl/include/ocl_vload.h	41;"	d
DECL_UNTYPED_RDV3_SPACE	./libocl/include/ocl_vload_20.h	41;"	d
DECL_UNTYPED_RDV3_SPACE	./libocl/include/ocl_vload_20.h	99;"	d
DECL_UNTYPED_RD_ALL_SPACE	./libocl/include/ocl_vload.h	101;"	d
DECL_UNTYPED_RD_ALL_SPACE	./libocl/include/ocl_vload.h	51;"	d
DECL_UNTYPED_RD_ALL_SPACE	./libocl/include/ocl_vload_20.h	51;"	d
DECL_UNTYPED_RD_ALL_SPACE	./libocl/include/ocl_vload_20.h	95;"	d
DECL_UNTYPED_RD_SPACE_N	./libocl/include/ocl_vload.h	103;"	d
DECL_UNTYPED_RD_SPACE_N	./libocl/include/ocl_vload.h	34;"	d
DECL_UNTYPED_RD_SPACE_N	./libocl/include/ocl_vload_20.h	34;"	d
DECL_UNTYPED_RD_SPACE_N	./libocl/include/ocl_vload_20.h	97;"	d
DECL_UNTYPED_RW_ALL	./libocl/include/ocl_vload.h	58;"	d
DECL_UNTYPED_RW_ALL	./libocl/include/ocl_vload.h	99;"	d
DECL_UNTYPED_RW_ALL	./libocl/include/ocl_vload_20.h	58;"	d
DECL_UNTYPED_RW_ALL	./libocl/include/ocl_vload_20.h	93;"	d
DECL_UNTYPED_RW_ALL_SPACE	./libocl/include/ocl_vload.h	100;"	d
DECL_UNTYPED_RW_ALL_SPACE	./libocl/include/ocl_vload.h	44;"	d
DECL_UNTYPED_RW_ALL_SPACE	./libocl/include/ocl_vload_20.h	44;"	d
DECL_UNTYPED_RW_ALL_SPACE	./libocl/include/ocl_vload_20.h	94;"	d
DECL_UNTYPED_RW_SPACE_N	./libocl/include/ocl_vload.h	102;"	d
DECL_UNTYPED_RW_SPACE_N	./libocl/include/ocl_vload.h	30;"	d
DECL_UNTYPED_RW_SPACE_N	./libocl/include/ocl_vload_20.h	30;"	d
DECL_UNTYPED_RW_SPACE_N	./libocl/include/ocl_vload_20.h	96;"	d
DECL_UNTYPED_V3_SPACE	./libocl/include/ocl_vload.h	104;"	d
DECL_UNTYPED_V3_SPACE	./libocl/include/ocl_vload.h	37;"	d
DECL_UNTYPED_V3_SPACE	./libocl/include/ocl_vload_20.h	37;"	d
DECL_UNTYPED_V3_SPACE	./libocl/include/ocl_vload_20.h	98;"	d
DECL_VISIT_FN	./llvm/llvm_gen_backend.cpp	714;"	d	file:
DECL_VISIT_FN	./llvm/llvm_gen_backend.cpp	741;"	d	file:
DEF	./libocl/include/ocl_async.h	33;"	d
DEF	./libocl/include/ocl_async.h	46;"	d
DEF	./libocl/include/ocl_async.h	52;"	d
DEF	./libocl/include/ocl_async.h	64;"	d
DEF	./libocl/include/ocl_misc.h	106;"	d
DEF	./libocl/include/ocl_misc.h	122;"	d
DEF	./libocl/include/ocl_misc.h	41;"	d
DEF	./libocl/include/ocl_misc.h	57;"	d
DEF	./libocl/include/ocl_types.h	75;"	d
DEF	./libocl/include/ocl_types.h	91;"	d
DEF	./libocl/tmpl/ocl_integer.tmpl.h	110;"	d
DEF	./libocl/tmpl/ocl_integer.tmpl.h	119;"	d
DEF	./libocl/tmpl/ocl_integer.tmpl.h	136;"	d
DEF	./libocl/tmpl/ocl_integer.tmpl.h	145;"	d
DEF	./libocl/tmpl/ocl_integer.tmpl.h	155;"	d
DEF	./libocl/tmpl/ocl_integer.tmpl.h	157;"	d
DEF	./libocl/tmpl/ocl_integer.tmpl.h	158;"	d
DEF	./libocl/tmpl/ocl_integer.tmpl.h	160;"	d
DEF	./libocl/tmpl/ocl_relational.tmpl.h	110;"	d
DEF	./libocl/tmpl/ocl_relational.tmpl.h	113;"	d
DEF	./libocl/tmpl/ocl_relational.tmpl.h	118;"	d
DEF	./libocl/tmpl/ocl_relational.tmpl.h	140;"	d
DEF	./llvm/llvm_gen_backend.cpp	5240;"	d	file:
DEF	./llvm/llvm_gen_backend.cpp	5308;"	d	file:
DEFMASK	./libocl/include/ocl_misc.h	123;"	d
DEFMASK	./libocl/include/ocl_misc.h	35;"	d
DEFMASK	./libocl/include/ocl_misc.h	58;"	d
DEFMASK	./libocl/include/ocl_misc.h	88;"	d
DEFN	./libocl/include/ocl_async.h	23;"	d
DEFN	./libocl/include/ocl_async.h	45;"	d
DEFN	./libocl/include/ocl_async.h	50;"	d
DEFN	./libocl/include/ocl_async.h	63;"	d
DEPENDENCY_CONTROL	./backend/gen/gen_mesa_disasm.c	567;"	d	file:
DEPTH	./ir/instruction.hpp	/^     DEPTH = 2,$/;"	e	enum:gbe::ir::GetImageInfoInstruction::__anon162
DESERIALIZE_IN	./sys/platform.hpp	359;"	d
DF_PRED	./ir/liveness.hpp	/^    DF_PRED = 0,$/;"	e	enum:gbe::ir::DataFlowDirection
DF_SUCC	./ir/liveness.hpp	/^    DF_SUCC = 1$/;"	e	enum:gbe::ir::DataFlowDirection
DISABLE_ATOMIC_INT64	./libocl/include/ocl_types.h	23;"	d
DUGraph	./ir/value.hpp	/^    typedef map<ValueDef, UseSet*> DUGraph;$/;"	t	class:gbe::ir::FunctionDAG
DWORD_GATHER	./backend/gen_encoder.cpp	/^  void GenEncoder::DWORD_GATHER(GenRegister dst, GenRegister src, uint32_t bti) {$/;"	f	class:gbe::GenEncoder
DWORD_GATHER	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::DWORD_GATHER(Reg dst, Reg addr, uint32_t bti) {$/;"	f	class:gbe::Selection::Opaque
DWORD_RW_BTI	./backend/gen/gen_mesa_disasm.c	604;"	d	file:
DWORD_RW_MSG_TYPE	./backend/gen/gen_mesa_disasm.c	605;"	d	file:
Data	./ir/value.hpp	/^    union Data {$/;"	u	class:gbe::ir::ValueDef
DataFlowDirection	./ir/liveness.hpp	/^  enum DataFlowDirection {$/;"	g	namespace:gbe::ir
DataTypeBits	./backend/gen_insn_compact.cpp	/^  union DataTypeBits{$/;"	u	namespace:gbe	file:
DebugInfo	./backend/program.h	/^} DebugInfo;$/;"	t	typeref:struct:_DebugInfo
DefSet	./ir/value.hpp	/^  typedef set<ValueDef*> DefSet;$/;"	t	namespace:gbe::ir
DepMode	./backend/gen_insn_scheduling.cpp	/^  } DepMode;$/;"	t	namespace:gbe	typeref:enum:gbe::__anon101	file:
DependencyTracker	./backend/gen_insn_scheduling.cpp	/^  DependencyTracker::DependencyTracker(const Selection &selection, SelectionScheduler &scheduler) :$/;"	f	class:gbe::DependencyTracker
DependencyTracker	./backend/gen_insn_scheduling.cpp	/^  struct DependencyTracker : public NonCopyable$/;"	s	namespace:gbe	file:
ELSE	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::ELSE(Reg src, ir::LabelIndex jip, ir::LabelIndex elseLabel) {$/;"	f	class:gbe::Selection::Opaque
ELSE	./ir/instruction.cpp	/^  Instruction ELSE(LabelIndex labelIndex) {$/;"	f	namespace:gbe::ir
ENDIF	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::ENDIF(Reg src, ir::LabelIndex jip, ir::LabelIndex endifLabel) {$/;"	f	class:gbe::Selection::Opaque
ENDIF	./ir/instruction.cpp	/^  Instruction ENDIF(LabelIndex labelIndex) {$/;"	f	namespace:gbe::ir
END_FUNCTION	./ir/instruction.cpp	2208;"	d	file:
END_FUNCTION	./ir/instruction.cpp	2254;"	d	file:
END_INTROSPECTION	./ir/instruction.cpp	2062;"	d	file:
END_INTROSPECTION	./ir/instruction.cpp	2191;"	d	file:
END_OF_THREAD	./backend/gen/gen_mesa_disasm.c	571;"	d	file:
EOT	./backend/gen_encoder.cpp	/^  void GenEncoder::EOT(uint32_t msg) {$/;"	f	class:gbe::GenEncoder
EOT	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::EOT(void) { this->appendInsn(SEL_OP_EOT, 0, 0); }$/;"	f	class:gbe::Selection::Opaque
EVENT_TYPE	./libocl/include/ocl_enqueue.h	65;"	d
EVENT_TYPE	./libocl/include/ocl_enqueue.h	67;"	d
EXECUTION_SIZE	./backend/gen/gen_mesa_disasm.c	581;"	d	file:
EqualType	./ir/instruction.hpp	/^  template <typename T, typename U> struct EqualType {enum {value = false};};$/;"	s	namespace:gbe::ir
EqualType	./ir/instruction.hpp	/^  template <typename T> struct EqualType<T,T> { enum {value = true};};$/;"	s	namespace:gbe::ir
Exception	./sys/exception.hpp	/^    Exception(const Exception &other) throw() : msg(other.msg) {}$/;"	f	class:gbe::Exception
Exception	./sys/exception.hpp	/^    Exception(const std::string &msg) throw() : msg(msg) {}$/;"	f	class:gbe::Exception
Exception	./sys/exception.hpp	/^  class Exception : public std::exception$/;"	c	namespace:gbe
ExpandConstantExpr	./llvm/ExpandConstantExpr.cpp	/^    ExpandConstantExpr() : FunctionPass(ID) {$/;"	f	struct:__anon176::ExpandConstantExpr
ExpandConstantExpr	./llvm/ExpandConstantExpr.cpp	/^  struct ExpandConstantExpr : public FunctionPass {$/;"	s	namespace:__anon176	file:
ExpandLargeIntegers	./llvm/ExpandLargeIntegers.cpp	/^  ExpandLargeIntegers() : FunctionPass(ID) {$/;"	f	class:__anon177::ExpandLargeIntegers
ExpandLargeIntegers	./llvm/ExpandLargeIntegers.cpp	/^class ExpandLargeIntegers : public FunctionPass {$/;"	c	namespace:__anon177	file:
ExtractElement	./llvm/ExpandLargeIntegers.cpp	/^  DenseMap<Value *, SmallVector<Value *, 16>> ExtractElement;$/;"	m	class:__anon178::ConversionState	file:
F16TO32	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::F16TO32(GenRegister dest, GenRegister src0) {$/;"	f	class:gbe::Gen8Encoder
F16TO32	./backend/gen_encoder.cpp	/^  void GenEncoder::F16TO32(GenRegister dest, GenRegister src0) {$/;"	f	class:gbe::GenEncoder
F16TO32	./ir/instruction.cpp	/^  Instruction F16TO32(Type dstType, Type srcType, Register dst, Register src) {$/;"	f	namespace:gbe::ir
F32TO16	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::F32TO16(GenRegister dest, GenRegister src0) {$/;"	f	class:gbe::Gen8Encoder
F32TO16	./backend/gen_encoder.cpp	/^  void GenEncoder::F32TO16(GenRegister dest, GenRegister src0) {$/;"	f	class:gbe::GenEncoder
F32TO16	./ir/instruction.cpp	/^  Instruction F32TO16(Type dstType, Type srcType, Register dst, Register src) {$/;"	f	namespace:gbe::ir
F64DIV	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::F64DIV(Reg dst, Reg src0, Reg src1, GenRegister* tmp, int tmpNum) {$/;"	f	class:gbe::Selection::Opaque
FATAL	./sys/platform.cpp	/^  void FATAL(const std::string &msg) {$/;"	f	namespace:gbe
FATAL_IF	./sys/platform.hpp	218;"	d
FENCE	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::FENCE(GenRegister dst, bool flushRWCache) {$/;"	f	class:gbe::Gen8Encoder
FENCE	./backend/gen_encoder.cpp	/^  void GenEncoder::FENCE(GenRegister dst, bool flushRWCache) {$/;"	f	class:gbe::GenEncoder
FENCE	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::FENCE(GenRegister dst) {$/;"	f	class:gbe::Selection::Opaque
FILE_BUILD_FAILED	./gbe_bin_generater.cpp	48;"	d	file:
FILE_MAP_ERR	./gbe_bin_generater.cpp	47;"	d	file:
FILE_NOT_FIND_ERR	./gbe_bin_generater.cpp	46;"	d	file:
FILE_SERIALIZATION_FAILED	./gbe_bin_generater.cpp	49;"	d	file:
FILL_BDW_HEADER	./backend/gen_program.cpp	292;"	d	file:
FILL_BXT_HEADER	./backend/gen_program.cpp	294;"	d	file:
FILL_BYT_HEADER	./backend/gen_program.cpp	288;"	d	file:
FILL_CHV_HEADER	./backend/gen_program.cpp	291;"	d	file:
FILL_GEN_HEADER	./backend/gen_program.cpp	287;"	d	file:
FILL_GLK_HEADER	./backend/gen_program.cpp	296;"	d	file:
FILL_HSW_HEADER	./backend/gen_program.cpp	290;"	d	file:
FILL_IVB_HEADER	./backend/gen_program.cpp	289;"	d	file:
FILL_KBL_HEADER	./backend/gen_program.cpp	295;"	d	file:
FILL_SKL_HEADER	./backend/gen_program.cpp	293;"	d	file:
FLAG_REG_NR	./backend/gen/gen_mesa_disasm.c	563;"	d	file:
FLAG_SUB_REG_NR	./backend/gen/gen_mesa_disasm.c	564;"	d	file:
FLOAT	./sys/cvar.hpp	/^      FLOAT = 2$/;"	e	enum:gbe::CVarInit::__anon180
FLT_DIG	./libocl/include/ocl_float.h	24;"	d
FLT_EPSILON	./libocl/include/ocl_float.h	34;"	d
FLT_MANT_DIG	./libocl/include/ocl_float.h	25;"	d
FLT_MAX	./libocl/include/ocl_float.h	32;"	d
FLT_MAX_10_EXP	./libocl/include/ocl_float.h	26;"	d
FLT_MAX_EXP	./libocl/include/ocl_float.h	27;"	d
FLT_MIN	./libocl/include/ocl_float.h	33;"	d
FLT_MIN_10_EXP	./libocl/include/ocl_float.h	28;"	d
FLT_MIN_EXP	./libocl/include/ocl_float.h	29;"	d
FLT_ONE	./libocl/include/ocl_float.h	31;"	d
FLT_RADIX	./libocl/include/ocl_float.h	30;"	d
FLUSH_SAMPLERCACHE	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::FLUSH_SAMPLERCACHE(GenRegister dst) {$/;"	f	class:gbe::Gen8Encoder
FLUSH_SAMPLERCACHE	./backend/gen_encoder.cpp	/^  void GenEncoder::FLUSH_SAMPLERCACHE(GenRegister dst) {$/;"	f	class:gbe::GenEncoder
FMT_PLUS_PLUS	./llvm/llvm_printf_parser.cpp	69;"	d	file:
FP_ILOGB0	./libocl/include/ocl_float.h	96;"	d
FP_ILOGBNAN	./libocl/include/ocl_float.h	97;"	d
FVAR	./sys/cvar.hpp	67;"	d
FWD_GATEWAY_MSG	./backend/gen_encoder.cpp	/^  void GenEncoder::FWD_GATEWAY_MSG(GenRegister src, uint32_t notifyN) {$/;"	f	class:gbe::GenEncoder
ForceMemDebugger	./sys/alloc.cpp	/^    ForceMemDebugger(void) {$/;"	f	struct:gbe::ForceMemDebugger
ForceMemDebugger	./sys/alloc.cpp	/^  static struct ForceMemDebugger {$/;"	s	namespace:gbe	file:
ForwardPHI	./llvm/ExpandLargeIntegers.cpp	/^  ForwardPHI(Value *Val, PHINode *Lo, PHINode *Hi, unsigned ValueNumber)$/;"	f	struct:__anon177::ForwardPHI
ForwardPHI	./llvm/ExpandLargeIntegers.cpp	/^struct ForwardPHI {$/;"	s	namespace:__anon177	file:
ForwardPHIs	./llvm/ExpandLargeIntegers.cpp	/^  SmallVector<ForwardPHI, 32> ForwardPHIs;$/;"	m	class:__anon178::ConversionState	file:
Func	./llvm/llvm_gen_backend.cpp	/^    Function *Func;$/;"	m	class:gbe::GenWriter	file:
Function	./ir/function.cpp	/^  Function::Function(const std::string &name, const Unit &unit, Profile profile) :$/;"	f	class:gbe::ir::Function
Function	./ir/function.hpp	/^  class Function : public NonCopyable$/;"	c	namespace:gbe::ir
FunctionArgument	./ir/function.hpp	/^    INLINE FunctionArgument(Type type, Register reg, uint32_t size, const std::string &name, uint32_t align, InfoFromLLVM& info, uint8_t bti) :$/;"	f	struct:gbe::ir::FunctionArgument
FunctionArgument	./ir/function.hpp	/^  struct FunctionArgument {$/;"	s	namespace:gbe::ir
FunctionArgumentLowerer	./ir/lowering.cpp	/^  FunctionArgumentLowerer::FunctionArgumentLowerer(Unit &unit) :$/;"	f	class:gbe::ir::FunctionArgumentLowerer
FunctionArgumentLowerer	./ir/lowering.cpp	/^  class FunctionArgumentLowerer : public Context$/;"	c	namespace:gbe::ir	file:
FunctionDAG	./ir/value.cpp	/^  FunctionDAG::FunctionDAG(Liveness &liveness) :$/;"	f	class:gbe::ir::FunctionDAG
FunctionDAG	./ir/value.hpp	/^  class FunctionDAG : public NonCopyable$/;"	c	namespace:gbe::ir
FunctionDefMap	./ir/value.cpp	/^    typedef map<const BasicBlock*, BlockDefMap*> FunctionDefMap;$/;"	t	class:gbe::ir::LiveOutSet	file:
FunctionSet	./ir/unit.hpp	/^    typedef map<std::string, Function*> FunctionSet;$/;"	t	class:gbe::ir::Unit
GBE_ALIGNED_FREE	./sys/alloc.hpp	114;"	d
GBE_ALIGNED_MALLOC	./sys/alloc.hpp	117;"	d
GBE_ARG_CONSTANT_PTR	./backend/program.h	/^  GBE_ARG_CONSTANT_PTR = 2,     \/\/ __constant$/;"	e	enum:gbe_arg_type
GBE_ARG_GLOBAL_PTR	./backend/program.h	/^  GBE_ARG_GLOBAL_PTR = 1,       \/\/ __global$/;"	e	enum:gbe_arg_type
GBE_ARG_IMAGE	./backend/program.h	/^  GBE_ARG_IMAGE = 4,            \/\/ image2d_t, image3d_t$/;"	e	enum:gbe_arg_type
GBE_ARG_INVALID	./backend/program.h	/^  GBE_ARG_INVALID = 0xffffffff$/;"	e	enum:gbe_arg_type
GBE_ARG_LOCAL_PTR	./backend/program.h	/^  GBE_ARG_LOCAL_PTR = 3,        \/\/ __local$/;"	e	enum:gbe_arg_type
GBE_ARG_PIPE	./backend/program.h	/^  GBE_ARG_PIPE = 6,             \/\/ pipe$/;"	e	enum:gbe_arg_type
GBE_ARG_SAMPLER	./backend/program.h	/^  GBE_ARG_SAMPLER = 5,          \/\/ sampler_t$/;"	e	enum:gbe_arg_type
GBE_ARG_VALUE	./backend/program.h	/^  GBE_ARG_VALUE = 0,            \/\/ int, float and so on$/;"	e	enum:gbe_arg_type
GBE_ASSERT	./sys/platform.hpp	201;"	d
GBE_ASSERT	./sys/platform.hpp	210;"	d
GBE_ASSERTM	./sys/platform.hpp	205;"	d
GBE_ASSERTM	./sys/platform.hpp	211;"	d
GBE_CLASS	./sys/alloc.hpp	66;"	d
GBE_COMPILER_AVAILABLE	./gbe_bin_interpreter.cpp	30;"	d	file:
GBE_COMPILER_READ_BARRIER	./sys/intrinsics.hpp	188;"	d
GBE_COMPILER_READ_BARRIER	./sys/intrinsics.hpp	35;"	d
GBE_COMPILER_READ_BARRIER	./sys/intrinsics.hpp	37;"	d
GBE_COMPILER_READ_WRITE_BARRIER	./sys/intrinsics.hpp	186;"	d
GBE_COMPILER_READ_WRITE_BARRIER	./sys/intrinsics.hpp	31;"	d
GBE_COMPILER_WRITE_BARRIER	./sys/intrinsics.hpp	187;"	d
GBE_COMPILER_WRITE_BARRIER	./sys/intrinsics.hpp	30;"	d
GBE_CURBE_BLOCK_IP	./backend/program.h	/^  GBE_CURBE_BLOCK_IP,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_CONSTANT_ADDRSPACE	./backend/program.h	/^  GBE_CURBE_CONSTANT_ADDRSPACE,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_DW_BLOCK_IP	./backend/program.h	/^  GBE_CURBE_DW_BLOCK_IP,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_ENQUEUED_LOCAL_SIZE_X	./backend/program.h	/^  GBE_CURBE_ENQUEUED_LOCAL_SIZE_X,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_ENQUEUED_LOCAL_SIZE_Y	./backend/program.h	/^  GBE_CURBE_ENQUEUED_LOCAL_SIZE_Y,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_ENQUEUED_LOCAL_SIZE_Z	./backend/program.h	/^  GBE_CURBE_ENQUEUED_LOCAL_SIZE_Z,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_ENQUEUE_BUF_POINTER	./backend/program.h	/^  GBE_CURBE_ENQUEUE_BUF_POINTER,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_EXTRA_ARGUMENT	./backend/program.h	/^  GBE_CURBE_EXTRA_ARGUMENT,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_GLOBAL_OFFSET_X	./backend/program.h	/^  GBE_CURBE_GLOBAL_OFFSET_X,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_GLOBAL_OFFSET_Y	./backend/program.h	/^  GBE_CURBE_GLOBAL_OFFSET_Y,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_GLOBAL_OFFSET_Z	./backend/program.h	/^  GBE_CURBE_GLOBAL_OFFSET_Z,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_GLOBAL_SIZE_X	./backend/program.h	/^  GBE_CURBE_GLOBAL_SIZE_X,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_GLOBAL_SIZE_Y	./backend/program.h	/^  GBE_CURBE_GLOBAL_SIZE_Y,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_GLOBAL_SIZE_Z	./backend/program.h	/^  GBE_CURBE_GLOBAL_SIZE_Z,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_GROUP_NUM_X	./backend/program.h	/^  GBE_CURBE_GROUP_NUM_X,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_GROUP_NUM_Y	./backend/program.h	/^  GBE_CURBE_GROUP_NUM_Y,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_GROUP_NUM_Z	./backend/program.h	/^  GBE_CURBE_GROUP_NUM_Z,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_IMAGE_INFO	./backend/program.h	/^  GBE_CURBE_IMAGE_INFO,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_KERNEL_ARGUMENT	./backend/program.h	/^  GBE_CURBE_KERNEL_ARGUMENT,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_LOCAL_ID_X	./backend/program.h	/^  GBE_CURBE_LOCAL_ID_X = 0,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_LOCAL_ID_Y	./backend/program.h	/^  GBE_CURBE_LOCAL_ID_Y,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_LOCAL_ID_Z	./backend/program.h	/^  GBE_CURBE_LOCAL_ID_Z,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_LOCAL_SIZE_X	./backend/program.h	/^  GBE_CURBE_LOCAL_SIZE_X,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_LOCAL_SIZE_Y	./backend/program.h	/^  GBE_CURBE_LOCAL_SIZE_Y,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_LOCAL_SIZE_Z	./backend/program.h	/^  GBE_CURBE_LOCAL_SIZE_Z,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_PROFILING_BUF_POINTER	./backend/program.h	/^  GBE_CURBE_PROFILING_BUF_POINTER,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_PROFILING_TIMESTAMP0	./backend/program.h	/^  GBE_CURBE_PROFILING_TIMESTAMP0,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_PROFILING_TIMESTAMP1	./backend/program.h	/^  GBE_CURBE_PROFILING_TIMESTAMP1,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_PROFILING_TIMESTAMP2	./backend/program.h	/^  GBE_CURBE_PROFILING_TIMESTAMP2,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_PROFILING_TIMESTAMP3	./backend/program.h	/^  GBE_CURBE_PROFILING_TIMESTAMP3,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_PROFILING_TIMESTAMP4	./backend/program.h	/^  GBE_CURBE_PROFILING_TIMESTAMP4,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_STACK_SIZE	./backend/program.h	/^  GBE_CURBE_STACK_SIZE,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_THREAD_ID	./backend/program.h	/^  GBE_CURBE_THREAD_ID,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_THREAD_NUM	./backend/program.h	/^  GBE_CURBE_THREAD_NUM,$/;"	e	enum:gbe_curbe_type
GBE_CURBE_WORK_DIM	./backend/program.h	/^  GBE_CURBE_WORK_DIM,$/;"	e	enum:gbe_curbe_type
GBE_DEBUG_SPECIAL_ALLOCATOR	./sys/alloc.hpp	167;"	d
GBE_DEFAULT_ALIGNMENT	./sys/platform.hpp	250;"	d
GBE_DELETE	./sys/alloc.hpp	102;"	d
GBE_DELETE_ARRAY	./sys/alloc.hpp	105;"	d
GBE_EXPORT_SYMBOL	./sys/platform.hpp	279;"	d
GBE_EXPORT_SYMBOL	./sys/platform.hpp	283;"	d
GBE_EXPORT_SYMBOL	./sys/platform.hpp	286;"	d
GBE_FREE	./sys/alloc.hpp	111;"	d
GBE_GEN_REG	./backend/program.h	/^  GBE_GEN_REG,$/;"	e	enum:gbe_curbe_type
GBE_GET_ARG_INFO_ACCESS	./backend/program.h	/^  GBE_GET_ARG_INFO_ACCESS = 1,$/;"	e	enum:gbe_get_arg_info_value
GBE_GET_ARG_INFO_ADDRSPACE	./backend/program.h	/^  GBE_GET_ARG_INFO_ADDRSPACE = 0,$/;"	e	enum:gbe_get_arg_info_value
GBE_GET_ARG_INFO_INVALID	./backend/program.h	/^  GBE_GET_ARG_INFO_INVALID = 0xffffffff$/;"	e	enum:gbe_get_arg_info_value
GBE_GET_ARG_INFO_NAME	./backend/program.h	/^  GBE_GET_ARG_INFO_NAME = 4,$/;"	e	enum:gbe_get_arg_info_value
GBE_GET_ARG_INFO_TYPE	./backend/program.h	/^  GBE_GET_ARG_INFO_TYPE = 2,$/;"	e	enum:gbe_get_arg_info_value
GBE_GET_ARG_INFO_TYPEQUAL	./backend/program.h	/^  GBE_GET_ARG_INFO_TYPEQUAL = 3,$/;"	e	enum:gbe_get_arg_info_value
GBE_GET_ARG_INFO_TYPESIZE	./backend/program.h	/^  GBE_GET_ARG_INFO_TYPESIZE = 5,$/;"	e	enum:gbe_get_arg_info_value
GBE_IMPORT_SYMBOL	./sys/platform.hpp	280;"	d
GBE_IMPORT_SYMBOL	./sys/platform.hpp	282;"	d
GBE_IMPORT_SYMBOL	./sys/platform.hpp	287;"	d
GBE_MALLOC	./sys/alloc.hpp	108;"	d
GBE_NEW	./sys/alloc.hpp	87;"	d
GBE_NEW_ARRAY	./sys/alloc.hpp	93;"	d
GBE_NEW_ARRAY_NO_ARG	./sys/alloc.hpp	96;"	d
GBE_NEW_NO_ARG	./sys/alloc.hpp	90;"	d
GBE_NEW_P	./sys/alloc.hpp	99;"	d
GBE_SAFE_DELETE	./sys/platform.hpp	225;"	d
GBE_SAFE_DELETE_ARRAY	./sys/platform.hpp	224;"	d
GBE_STACK_BUFFER	./backend/program.h	/^  GBE_STACK_BUFFER = 0,   \/* Give stack location in curbe *\/$/;"	e	enum:gbe_extra_argument
GBE_STRUCT	./sys/alloc.hpp	71;"	d
GBHI_BDW	./backend/gen_program.cpp	/^    GBHI_BDW = 4,$/;"	e	enum:gbe::GEN_BINARY_HEADER_INDEX	file:
GBHI_BXT	./backend/gen_program.cpp	/^    GBHI_BXT = 6,$/;"	e	enum:gbe::GEN_BINARY_HEADER_INDEX	file:
GBHI_BYT	./backend/gen_program.cpp	/^    GBHI_BYT = 0,$/;"	e	enum:gbe::GEN_BINARY_HEADER_INDEX	file:
GBHI_CHV	./backend/gen_program.cpp	/^    GBHI_CHV = 3,$/;"	e	enum:gbe::GEN_BINARY_HEADER_INDEX	file:
GBHI_GLK	./backend/gen_program.cpp	/^    GBHI_GLK = 8,$/;"	e	enum:gbe::GEN_BINARY_HEADER_INDEX	file:
GBHI_HSW	./backend/gen_program.cpp	/^    GBHI_HSW = 2,$/;"	e	enum:gbe::GEN_BINARY_HEADER_INDEX	file:
GBHI_IVB	./backend/gen_program.cpp	/^    GBHI_IVB = 1,$/;"	e	enum:gbe::GEN_BINARY_HEADER_INDEX	file:
GBHI_KBL	./backend/gen_program.cpp	/^    GBHI_KBL = 7,$/;"	e	enum:gbe::GEN_BINARY_HEADER_INDEX	file:
GBHI_MAX	./backend/gen_program.cpp	/^    GBHI_MAX,$/;"	e	enum:gbe::GEN_BINARY_HEADER_INDEX	file:
GBHI_SKL	./backend/gen_program.cpp	/^    GBHI_SKL = 5,$/;"	e	enum:gbe::GEN_BINARY_HEADER_INDEX	file:
GEN5_SAMPLER_MESSAGE_SAMPLE	./backend/gen_defs.hpp	422;"	d
GEN5_SAMPLER_MESSAGE_SAMPLE_BIAS	./backend/gen_defs.hpp	423;"	d
GEN5_SAMPLER_MESSAGE_SAMPLE_BIAS_COMPARE	./backend/gen_defs.hpp	427;"	d
GEN5_SAMPLER_MESSAGE_SAMPLE_COMPARE	./backend/gen_defs.hpp	425;"	d
GEN5_SAMPLER_MESSAGE_SAMPLE_DERIVS	./backend/gen_defs.hpp	426;"	d
GEN5_SAMPLER_MESSAGE_SAMPLE_LD	./backend/gen_defs.hpp	429;"	d
GEN5_SAMPLER_MESSAGE_SAMPLE_LOD	./backend/gen_defs.hpp	424;"	d
GEN5_SAMPLER_MESSAGE_SAMPLE_LOD_COMPARE	./backend/gen_defs.hpp	428;"	d
GEN5_SAMPLER_MESSAGE_SAMPLE_RESINFO	./backend/gen_defs.hpp	430;"	d
GEN75_P0_BYTE_GATHER	./backend/gen_defs.hpp	342;"	d
GEN75_P0_BYTE_SCATTER	./backend/gen_defs.hpp	347;"	d
GEN75_P0_DWORD_GATHER	./backend/gen_defs.hpp	341;"	d
GEN75_P0_DWORD_SCATTER	./backend/gen_defs.hpp	346;"	d
GEN75_P0_MEMORY_FENCE	./backend/gen_defs.hpp	343;"	d
GEN75_P0_OBLOCK_READ	./backend/gen_defs.hpp	338;"	d
GEN75_P0_OBLOCK_WRITE	./backend/gen_defs.hpp	344;"	d
GEN75_P0_ODBLOCK_READ	./backend/gen_defs.hpp	340;"	d
GEN75_P0_ODBLOCK_WRITE	./backend/gen_defs.hpp	345;"	d
GEN75_P0_UNALIGNED_OBLOCK_READ	./backend/gen_defs.hpp	339;"	d
GEN75_P1_ATOMIC_COUNTER	./backend/gen_defs.hpp	359;"	d
GEN75_P1_ATOMIC_COUNTER_4X2	./backend/gen_defs.hpp	360;"	d
GEN75_P1_MEDIA_BREAD	./backend/gen_defs.hpp	353;"	d
GEN75_P1_MEDIA_TYPED_BWRITE	./backend/gen_defs.hpp	358;"	d
GEN75_P1_TYPED_ATOMIC_OP	./backend/gen_defs.hpp	355;"	d
GEN75_P1_TYPED_ATOMIC_OP_4X2	./backend/gen_defs.hpp	356;"	d
GEN75_P1_TYPED_SURFACE_READ	./backend/gen_defs.hpp	354;"	d
GEN75_P1_TYPED_SURFACE_WRITE	./backend/gen_defs.hpp	361;"	d
GEN75_P1_UNTYPED_ATOMIC_OP	./backend/gen_defs.hpp	351;"	d
GEN75_P1_UNTYPED_ATOMIC_OP_4X2	./backend/gen_defs.hpp	352;"	d
GEN75_P1_UNTYPED_READ	./backend/gen_defs.hpp	350;"	d
GEN75_P1_UNTYPED_SURFACE_WRITE	./backend/gen_defs.hpp	357;"	d
GEN75_SCRATCH_SIZE	./backend/gen75_context.hpp	40;"	d
GEN7_BITS_FIELD	./backend/gen/gen_mesa_disasm.c	523;"	d	file:
GEN7_BYTE_GATHER	./backend/gen_defs.hpp	327;"	d
GEN7_BYTE_SCATTER	./backend/gen_defs.hpp	334;"	d
GEN7_DWORD_GATHER	./backend/gen_defs.hpp	326;"	d
GEN7_DWORD_SCATTER	./backend/gen_defs.hpp	333;"	d
GEN7_MEMORY_FENCE	./backend/gen_defs.hpp	330;"	d
GEN7_OBLOCK_READ	./backend/gen_defs.hpp	323;"	d
GEN7_OBLOCK_WRITE	./backend/gen_defs.hpp	331;"	d
GEN7_ODBLOCK_READ	./backend/gen_defs.hpp	325;"	d
GEN7_ODBLOCK_WRITE	./backend/gen_defs.hpp	332;"	d
GEN7_SCRATCH_SIZE	./backend/gen_context.hpp	70;"	d
GEN7_UNALIGNED_OBLOCK_READ	./backend/gen_defs.hpp	324;"	d
GEN7_UNTYPED_ATOMIC_READ	./backend/gen_defs.hpp	329;"	d
GEN7_UNTYPED_READ	./backend/gen_defs.hpp	328;"	d
GEN7_UNTYPED_WRITE	./backend/gen_defs.hpp	335;"	d
GEN8_INSN_ACC2	./backend/gen_defs.hpp	481;"	d
GEN8_INSN_ACC3	./backend/gen_defs.hpp	482;"	d
GEN8_INSN_ACC4	./backend/gen_defs.hpp	483;"	d
GEN8_INSN_ACC5	./backend/gen_defs.hpp	484;"	d
GEN8_INSN_ACC6	./backend/gen_defs.hpp	485;"	d
GEN8_INSN_ACC7	./backend/gen_defs.hpp	486;"	d
GEN8_INSN_ACC8	./backend/gen_defs.hpp	487;"	d
GEN8_INSN_ACC9	./backend/gen_defs.hpp	488;"	d
GEN8_INSN_NOACC	./backend/gen_defs.hpp	489;"	d
GEN8_MATH_FUNCTION_INVM	./backend/gen_defs.hpp	451;"	d
GEN8_MATH_FUNCTION_RSQRTM	./backend/gen_defs.hpp	452;"	d
GEN8_P1_BLOCK_READ_A64	./backend/gen_defs.hpp	363;"	d
GEN8_P1_BLOCK_WRITE_A64	./backend/gen_defs.hpp	364;"	d
GEN8_P1_BYTE_GATHER_A64	./backend/gen_defs.hpp	365;"	d
GEN8_P1_BYTE_SCATTER_A64	./backend/gen_defs.hpp	369;"	d
GEN8_P1_UNTYPED_ATOMIC_A64	./backend/gen_defs.hpp	367;"	d
GEN8_P1_UNTYPED_READ_A64	./backend/gen_defs.hpp	366;"	d
GEN8_P1_UNTYPED_WRITE_A64	./backend/gen_defs.hpp	368;"	d
GEN8_SCRATCH_SIZE	./backend/gen8_context.hpp	40;"	d
GENERATE_HEADER_BASH	./libocl/Android.mk	/^define GENERATE_HEADER_BASH$/;"	m
GENERATE_HEADER_PY	./libocl/Android.mk	/^define GENERATE_HEADER_PY$/;"	m
GENERATE_SOURCE_BASH	./libocl/Android.mk	/^define GENERATE_SOURCE_BASH$/;"	m
GENERATE_SOURCE_PY	./libocl/Android.mk	/^define GENERATE_SOURCE_PY$/;"	m
GENERIC_MSG_LENGTH	./backend/gen/gen_mesa_disasm.c	609;"	d	file:
GENERIC_RESPONSE_LENGTH	./backend/gen/gen_mesa_disasm.c	610;"	d	file:
GEN_ADDRESS_DIRECT	./backend/gen_defs.hpp	69;"	d
GEN_ADDRESS_REGISTER_INDIRECT_REGISTER	./backend/gen_defs.hpp	70;"	d
GEN_ALIGN_1	./backend/gen_defs.hpp	64;"	d
GEN_ALIGN_16	./backend/gen_defs.hpp	65;"	d
GEN_AMASK	./backend/gen_defs.hpp	278;"	d
GEN_ARCHITECTURE_REGISTER_FILE	./backend/gen_defs.hpp	243;"	d
GEN_ARF_ACCUMULATOR	./backend/gen_defs.hpp	265;"	d
GEN_ARF_ADDRESS	./backend/gen_defs.hpp	264;"	d
GEN_ARF_CONTROL	./backend/gen_defs.hpp	271;"	d
GEN_ARF_FLAG	./backend/gen_defs.hpp	266;"	d
GEN_ARF_IP	./backend/gen_defs.hpp	273;"	d
GEN_ARF_MASK	./backend/gen_defs.hpp	267;"	d
GEN_ARF_MASK_STACK	./backend/gen_defs.hpp	268;"	d
GEN_ARF_MASK_STACK_DEPTH	./backend/gen_defs.hpp	269;"	d
GEN_ARF_NOTIFICATION_COUNT	./backend/gen_defs.hpp	272;"	d
GEN_ARF_NULL	./backend/gen_defs.hpp	263;"	d
GEN_ARF_STATE	./backend/gen_defs.hpp	270;"	d
GEN_ARF_TM	./backend/gen_defs.hpp	274;"	d
GEN_ATOMIC_OP_ADD	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_ADD       = 7,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_AND	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_AND       = 1,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_CMPWR	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_CMPWR     = 14,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_CMPWR8B	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_CMPWR8B   = 0,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_DEC	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_DEC       = 6,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_IMAX	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_IMAX      = 10,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_IMIN	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_IMIN      = 11,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_INC	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_INC       = 5,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_MOV	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_MOV       = 4,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_OR	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_OR        = 2,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_PREDEC	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_PREDEC    = 15$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_REVSUB	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_REVSUB    = 9,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_SUB	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_SUB       = 8,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_UMAX	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_UMAX      = 12,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_UMIN	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_UMIN      = 13,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_OP_XOR	./backend/gen_defs.hpp	/^  GEN_ATOMIC_OP_XOR       = 3,$/;"	e	enum:GenAtomicOpCode
GEN_ATOMIC_SIMD16	./backend/gen_defs.hpp	185;"	d
GEN_ATOMIC_SIMD8	./backend/gen_defs.hpp	186;"	d
GEN_BARRIER_MSG	./backend/gen_defs.hpp	476;"	d
GEN_BINARY_HEADER_INDEX	./backend/gen_program.cpp	/^  enum GEN_BINARY_HEADER_INDEX {$/;"	g	namespace:gbe	file:
GEN_BINARY_HEADER_LENGTH	./backend/gen_program.cpp	260;"	d	file:
GEN_BINARY_VERSION	./backend/gen_program.cpp	274;"	d	file:
GEN_BITS_FIELD	./backend/gen/gen_mesa_disasm.c	530;"	d	file:
GEN_BITS_FIELD2	./backend/gen/gen_mesa_disasm.c	551;"	d	file:
GEN_BITS_FIELD_WITH_TYPE	./backend/gen/gen_mesa_disasm.c	540;"	d	file:
GEN_BYTE_SCATTER_BYTE	./backend/gen_defs.hpp	390;"	d
GEN_BYTE_SCATTER_DWORD	./backend/gen_defs.hpp	392;"	d
GEN_BYTE_SCATTER_QWORD	./backend/gen_defs.hpp	393;"	d
GEN_BYTE_SCATTER_SIMD16	./backend/gen_defs.hpp	320;"	d
GEN_BYTE_SCATTER_SIMD8	./backend/gen_defs.hpp	319;"	d
GEN_BYTE_SCATTER_WORD	./backend/gen_defs.hpp	391;"	d
GEN_CHANNEL_W	./backend/gen_defs.hpp	75;"	d
GEN_CHANNEL_X	./backend/gen_defs.hpp	72;"	d
GEN_CHANNEL_Y	./backend/gen_defs.hpp	73;"	d
GEN_CHANNEL_Z	./backend/gen_defs.hpp	74;"	d
GEN_CLOSE_GATEWAY	./backend/gen_defs.hpp	473;"	d
GEN_CMASK	./backend/gen_defs.hpp	281;"	d
GEN_COMPRESSION_H1	./backend/gen_defs.hpp	81;"	d
GEN_COMPRESSION_H2	./backend/gen_defs.hpp	82;"	d
GEN_COMPRESSION_Q1	./backend/gen_defs.hpp	77;"	d
GEN_COMPRESSION_Q2	./backend/gen_defs.hpp	78;"	d
GEN_COMPRESSION_Q3	./backend/gen_defs.hpp	79;"	d
GEN_COMPRESSION_Q4	./backend/gen_defs.hpp	80;"	d
GEN_CONDITIONAL_EQ	./backend/gen_defs.hpp	87;"	d
GEN_CONDITIONAL_G	./backend/gen_defs.hpp	89;"	d
GEN_CONDITIONAL_GE	./backend/gen_defs.hpp	90;"	d
GEN_CONDITIONAL_L	./backend/gen_defs.hpp	91;"	d
GEN_CONDITIONAL_LE	./backend/gen_defs.hpp	92;"	d
GEN_CONDITIONAL_NEQ	./backend/gen_defs.hpp	88;"	d
GEN_CONDITIONAL_NONE	./backend/gen_defs.hpp	84;"	d
GEN_CONDITIONAL_NZ	./backend/gen_defs.hpp	86;"	d
GEN_CONDITIONAL_O	./backend/gen_defs.hpp	94;"	d
GEN_CONDITIONAL_R	./backend/gen_defs.hpp	93;"	d
GEN_CONDITIONAL_U	./backend/gen_defs.hpp	95;"	d
GEN_CONDITIONAL_Z	./backend/gen_defs.hpp	85;"	d
GEN_DEBUG_BREAKPOINT	./backend/gen_defs.hpp	98;"	d
GEN_DEBUG_NONE	./backend/gen_defs.hpp	97;"	d
GEN_DEPENDENCY_DISABLE	./backend/gen_defs.hpp	103;"	d
GEN_DEPENDENCY_NORMAL	./backend/gen_defs.hpp	100;"	d
GEN_DEPENDENCY_NOTCHECKED	./backend/gen_defs.hpp	102;"	d
GEN_DEPENDENCY_NOTCLEARED	./backend/gen_defs.hpp	101;"	d
GEN_DEREFERENCE_URB	./backend/gen_defs.hpp	466;"	d
GEN_DO_NOT_DEREFERENCE_URB	./backend/gen_defs.hpp	467;"	d
GEN_DWORD_SCATTER_16_DWORDS	./backend/gen_defs.hpp	397;"	d
GEN_DWORD_SCATTER_8_DWORDS	./backend/gen_defs.hpp	396;"	d
GEN_FORWARD_MSG	./backend/gen_defs.hpp	474;"	d
GEN_GENERAL_REGISTER_FILE	./backend/gen_defs.hpp	244;"	d
GEN_GET_TIME_STAMP	./backend/gen_defs.hpp	475;"	d
GEN_HORIZONTAL_STRIDE_0	./backend/gen_defs.hpp	105;"	d
GEN_HORIZONTAL_STRIDE_1	./backend/gen_defs.hpp	106;"	d
GEN_HORIZONTAL_STRIDE_2	./backend/gen_defs.hpp	107;"	d
GEN_HORIZONTAL_STRIDE_4	./backend/gen_defs.hpp	108;"	d
GEN_IMASK	./backend/gen_defs.hpp	279;"	d
GEN_IMMEDIATE_VALUE	./backend/gen_defs.hpp	245;"	d
GEN_INSTRUCTION_NORMAL	./backend/gen_defs.hpp	110;"	d
GEN_INSTRUCTION_SATURATE	./backend/gen_defs.hpp	111;"	d
GEN_LMASK	./backend/gen_defs.hpp	280;"	d
GEN_MASK_DISABLE	./backend/gen_defs.hpp	114;"	d
GEN_MASK_ENABLE	./backend/gen_defs.hpp	113;"	d
GEN_MATH_DATA_SCALAR	./backend/gen_defs.hpp	464;"	d
GEN_MATH_DATA_VECTOR	./backend/gen_defs.hpp	463;"	d
GEN_MATH_FUNCTION_COS	./backend/gen_defs.hpp	445;"	d
GEN_MATH_FUNCTION_EXP	./backend/gen_defs.hpp	441;"	d
GEN_MATH_FUNCTION_FDIV	./backend/gen_defs.hpp	446;"	d
GEN_MATH_FUNCTION_INT_DIV_QUOTIENT	./backend/gen_defs.hpp	449;"	d
GEN_MATH_FUNCTION_INT_DIV_QUOTIENT_AND_REMAINDER	./backend/gen_defs.hpp	448;"	d
GEN_MATH_FUNCTION_INT_DIV_REMAINDER	./backend/gen_defs.hpp	450;"	d
GEN_MATH_FUNCTION_INV	./backend/gen_defs.hpp	439;"	d
GEN_MATH_FUNCTION_LOG	./backend/gen_defs.hpp	440;"	d
GEN_MATH_FUNCTION_POW	./backend/gen_defs.hpp	447;"	d
GEN_MATH_FUNCTION_RSQ	./backend/gen_defs.hpp	443;"	d
GEN_MATH_FUNCTION_SIN	./backend/gen_defs.hpp	444;"	d
GEN_MATH_FUNCTION_SQRT	./backend/gen_defs.hpp	442;"	d
GEN_MATH_INTEGER_SIGNED	./backend/gen_defs.hpp	455;"	d
GEN_MATH_INTEGER_UNSIGNED	./backend/gen_defs.hpp	454;"	d
GEN_MATH_PRECISION_FULL	./backend/gen_defs.hpp	457;"	d
GEN_MATH_PRECISION_PARTIAL	./backend/gen_defs.hpp	458;"	d
GEN_MATH_SATURATE_NONE	./backend/gen_defs.hpp	460;"	d
GEN_MATH_SATURATE_SATURATE	./backend/gen_defs.hpp	461;"	d
GEN_MAX_GRF	./backend/gen_defs.hpp	496;"	d
GEN_MAX_NUM_BUFFER_ENTRIES	./backend/gen_defs.hpp	469;"	d
GEN_MBLOCK_READ	./backend/gen_defs.hpp	381;"	d
GEN_MBLOCK_WRITE	./backend/gen_defs.hpp	385;"	d
GEN_MEM_FENCE	./backend/gen_defs.hpp	384;"	d
GEN_MMIO_READ_WRITE	./backend/gen_defs.hpp	478;"	d
GEN_MRF_COMPR4	./backend/gen_defs.hpp	276;"	d
GEN_OCL_GET_FLOAT_WORD	./libocl/include/ocl_float.h	55;"	d
GEN_OCL_NOT_FOUND	./llvm/llvm_gen_backend.hpp	/^  GEN_OCL_NOT_FOUND,   $/;"	e	enum:gbe::OCLInstrinsic
GEN_OCL_SET_FLOAT_WORD	./libocl/include/ocl_float.h	64;"	d
GEN_OPCODE_ADD	./backend/gen_defs.hpp	/^  GEN_OPCODE_ADD = 64,$/;"	e	enum:opcode
GEN_OPCODE_ADDC	./backend/gen_defs.hpp	/^  GEN_OPCODE_ADDC = 78,$/;"	e	enum:opcode
GEN_OPCODE_AND	./backend/gen_defs.hpp	/^  GEN_OPCODE_AND = 5,$/;"	e	enum:opcode
GEN_OPCODE_ASR	./backend/gen_defs.hpp	/^  GEN_OPCODE_ASR = 12,$/;"	e	enum:opcode
GEN_OPCODE_AVG	./backend/gen_defs.hpp	/^  GEN_OPCODE_AVG = 66,$/;"	e	enum:opcode
GEN_OPCODE_BFREV	./backend/gen_defs.hpp	/^  GEN_OPCODE_BFREV = 23,$/;"	e	enum:opcode
GEN_OPCODE_BRC	./backend/gen_defs.hpp	/^  GEN_OPCODE_BRC = 35,$/;"	e	enum:opcode
GEN_OPCODE_BRD	./backend/gen_defs.hpp	/^  GEN_OPCODE_BRD = 33,$/;"	e	enum:opcode
GEN_OPCODE_BREAK	./backend/gen_defs.hpp	/^  GEN_OPCODE_BREAK = 40,$/;"	e	enum:opcode
GEN_OPCODE_CBIT	./backend/gen_defs.hpp	/^  GEN_OPCODE_CBIT = 77,$/;"	e	enum:opcode
GEN_OPCODE_CMP	./backend/gen_defs.hpp	/^  GEN_OPCODE_CMP = 16,$/;"	e	enum:opcode
GEN_OPCODE_CMPN	./backend/gen_defs.hpp	/^  GEN_OPCODE_CMPN = 17,$/;"	e	enum:opcode
GEN_OPCODE_CONTINUE	./backend/gen_defs.hpp	/^  GEN_OPCODE_CONTINUE = 41,$/;"	e	enum:opcode
GEN_OPCODE_DO	./backend/gen_defs.hpp	/^  GEN_OPCODE_DO = 38,$/;"	e	enum:opcode
GEN_OPCODE_DP2	./backend/gen_defs.hpp	/^  GEN_OPCODE_DP2 = 87,$/;"	e	enum:opcode
GEN_OPCODE_DP3	./backend/gen_defs.hpp	/^  GEN_OPCODE_DP3 = 86,$/;"	e	enum:opcode
GEN_OPCODE_DP4	./backend/gen_defs.hpp	/^  GEN_OPCODE_DP4 = 84,$/;"	e	enum:opcode
GEN_OPCODE_DPA2	./backend/gen_defs.hpp	/^  GEN_OPCODE_DPA2 = 88,$/;"	e	enum:opcode
GEN_OPCODE_DPH	./backend/gen_defs.hpp	/^  GEN_OPCODE_DPH = 85,$/;"	e	enum:opcode
GEN_OPCODE_ELSE	./backend/gen_defs.hpp	/^  GEN_OPCODE_ELSE = 36,$/;"	e	enum:opcode
GEN_OPCODE_ENDIF	./backend/gen_defs.hpp	/^  GEN_OPCODE_ENDIF = 37,$/;"	e	enum:opcode
GEN_OPCODE_F16TO32	./backend/gen_defs.hpp	/^  GEN_OPCODE_F16TO32 = 20,$/;"	e	enum:opcode
GEN_OPCODE_F32TO16	./backend/gen_defs.hpp	/^  GEN_OPCODE_F32TO16 = 19,$/;"	e	enum:opcode
GEN_OPCODE_FBH	./backend/gen_defs.hpp	/^  GEN_OPCODE_FBH = 75,$/;"	e	enum:opcode
GEN_OPCODE_FBL	./backend/gen_defs.hpp	/^  GEN_OPCODE_FBL = 76,$/;"	e	enum:opcode
GEN_OPCODE_FRC	./backend/gen_defs.hpp	/^  GEN_OPCODE_FRC = 67,$/;"	e	enum:opcode
GEN_OPCODE_HALT	./backend/gen_defs.hpp	/^  GEN_OPCODE_HALT = 42,$/;"	e	enum:opcode
GEN_OPCODE_IF	./backend/gen_defs.hpp	/^  GEN_OPCODE_IF = 34,$/;"	e	enum:opcode
GEN_OPCODE_JMPI	./backend/gen_defs.hpp	/^  GEN_OPCODE_JMPI = 32,$/;"	e	enum:opcode
GEN_OPCODE_LINE	./backend/gen_defs.hpp	/^  GEN_OPCODE_LINE = 89,$/;"	e	enum:opcode
GEN_OPCODE_LRP	./backend/gen_defs.hpp	/^  GEN_OPCODE_LRP = 92,$/;"	e	enum:opcode
GEN_OPCODE_LZD	./backend/gen_defs.hpp	/^  GEN_OPCODE_LZD = 74,$/;"	e	enum:opcode
GEN_OPCODE_MAC	./backend/gen_defs.hpp	/^  GEN_OPCODE_MAC = 72,$/;"	e	enum:opcode
GEN_OPCODE_MACH	./backend/gen_defs.hpp	/^  GEN_OPCODE_MACH = 73,$/;"	e	enum:opcode
GEN_OPCODE_MAD	./backend/gen_defs.hpp	/^  GEN_OPCODE_MAD = 91,$/;"	e	enum:opcode
GEN_OPCODE_MADM	./backend/gen_defs.hpp	/^  GEN_OPCODE_MADM = 93,$/;"	e	enum:opcode
GEN_OPCODE_MATH	./backend/gen_defs.hpp	/^  GEN_OPCODE_MATH = 56,$/;"	e	enum:opcode
GEN_OPCODE_MOV	./backend/gen_defs.hpp	/^  GEN_OPCODE_MOV = 1,$/;"	e	enum:opcode
GEN_OPCODE_MRESTORE	./backend/gen_defs.hpp	/^  GEN_OPCODE_MRESTORE = 45,$/;"	e	enum:opcode
GEN_OPCODE_MSAVE	./backend/gen_defs.hpp	/^  GEN_OPCODE_MSAVE = 44,$/;"	e	enum:opcode
GEN_OPCODE_MUL	./backend/gen_defs.hpp	/^  GEN_OPCODE_MUL = 65,$/;"	e	enum:opcode
GEN_OPCODE_NOP	./backend/gen_defs.hpp	/^  GEN_OPCODE_NOP = 126,$/;"	e	enum:opcode
GEN_OPCODE_NOT	./backend/gen_defs.hpp	/^  GEN_OPCODE_NOT = 4,$/;"	e	enum:opcode
GEN_OPCODE_OR	./backend/gen_defs.hpp	/^  GEN_OPCODE_OR = 6,$/;"	e	enum:opcode
GEN_OPCODE_PLN	./backend/gen_defs.hpp	/^  GEN_OPCODE_PLN = 90,$/;"	e	enum:opcode
GEN_OPCODE_POP	./backend/gen_defs.hpp	/^  GEN_OPCODE_POP = 47,$/;"	e	enum:opcode
GEN_OPCODE_PUSH	./backend/gen_defs.hpp	/^  GEN_OPCODE_PUSH = 46,$/;"	e	enum:opcode
GEN_OPCODE_RNDD	./backend/gen_defs.hpp	/^  GEN_OPCODE_RNDD = 69,$/;"	e	enum:opcode
GEN_OPCODE_RNDE	./backend/gen_defs.hpp	/^  GEN_OPCODE_RNDE = 70,$/;"	e	enum:opcode
GEN_OPCODE_RNDU	./backend/gen_defs.hpp	/^  GEN_OPCODE_RNDU = 68,$/;"	e	enum:opcode
GEN_OPCODE_RNDZ	./backend/gen_defs.hpp	/^  GEN_OPCODE_RNDZ = 71,$/;"	e	enum:opcode
GEN_OPCODE_RSL	./backend/gen_defs.hpp	/^  GEN_OPCODE_RSL = 11,$/;"	e	enum:opcode
GEN_OPCODE_RSR	./backend/gen_defs.hpp	/^  GEN_OPCODE_RSR = 10,$/;"	e	enum:opcode
GEN_OPCODE_SAD2	./backend/gen_defs.hpp	/^  GEN_OPCODE_SAD2 = 80,$/;"	e	enum:opcode
GEN_OPCODE_SADA2	./backend/gen_defs.hpp	/^  GEN_OPCODE_SADA2 = 81,$/;"	e	enum:opcode
GEN_OPCODE_SEL	./backend/gen_defs.hpp	/^  GEN_OPCODE_SEL = 2,$/;"	e	enum:opcode
GEN_OPCODE_SEND	./backend/gen_defs.hpp	/^  GEN_OPCODE_SEND = 49,$/;"	e	enum:opcode
GEN_OPCODE_SENDC	./backend/gen_defs.hpp	/^  GEN_OPCODE_SENDC = 50,$/;"	e	enum:opcode
GEN_OPCODE_SENDS	./backend/gen_defs.hpp	/^  GEN_OPCODE_SENDS = 51,$/;"	e	enum:opcode
GEN_OPCODE_SHL	./backend/gen_defs.hpp	/^  GEN_OPCODE_SHL = 9,$/;"	e	enum:opcode
GEN_OPCODE_SHR	./backend/gen_defs.hpp	/^  GEN_OPCODE_SHR = 8,$/;"	e	enum:opcode
GEN_OPCODE_SUBB	./backend/gen_defs.hpp	/^  GEN_OPCODE_SUBB = 79,$/;"	e	enum:opcode
GEN_OPCODE_WAIT	./backend/gen_defs.hpp	/^  GEN_OPCODE_WAIT = 48,$/;"	e	enum:opcode
GEN_OPCODE_WHILE	./backend/gen_defs.hpp	/^  GEN_OPCODE_WHILE = 39,$/;"	e	enum:opcode
GEN_OPCODE_XOR	./backend/gen_defs.hpp	/^  GEN_OPCODE_XOR = 7,$/;"	e	enum:opcode
GEN_OPEN_GATEWAY	./backend/gen_defs.hpp	472;"	d
GEN_PREDICATE_ALIGN16_ALL4H	./backend/gen_defs.hpp	241;"	d
GEN_PREDICATE_ALIGN16_ANY4H	./backend/gen_defs.hpp	240;"	d
GEN_PREDICATE_ALIGN16_REPLICATE_W	./backend/gen_defs.hpp	239;"	d
GEN_PREDICATE_ALIGN16_REPLICATE_X	./backend/gen_defs.hpp	236;"	d
GEN_PREDICATE_ALIGN16_REPLICATE_Y	./backend/gen_defs.hpp	237;"	d
GEN_PREDICATE_ALIGN16_REPLICATE_Z	./backend/gen_defs.hpp	238;"	d
GEN_PREDICATE_ALIGN1_ALL16H	./backend/gen_defs.hpp	235;"	d
GEN_PREDICATE_ALIGN1_ALL2H	./backend/gen_defs.hpp	229;"	d
GEN_PREDICATE_ALIGN1_ALL4H	./backend/gen_defs.hpp	231;"	d
GEN_PREDICATE_ALIGN1_ALL8H	./backend/gen_defs.hpp	233;"	d
GEN_PREDICATE_ALIGN1_ALLV	./backend/gen_defs.hpp	227;"	d
GEN_PREDICATE_ALIGN1_ANY16H	./backend/gen_defs.hpp	234;"	d
GEN_PREDICATE_ALIGN1_ANY2H	./backend/gen_defs.hpp	228;"	d
GEN_PREDICATE_ALIGN1_ANY4H	./backend/gen_defs.hpp	230;"	d
GEN_PREDICATE_ALIGN1_ANY8H	./backend/gen_defs.hpp	232;"	d
GEN_PREDICATE_ALIGN1_ANYV	./backend/gen_defs.hpp	226;"	d
GEN_PREDICATE_NONE	./backend/gen_defs.hpp	224;"	d
GEN_PREDICATE_NORMAL	./backend/gen_defs.hpp	225;"	d
GEN_REG_SIZE	./backend/gen_defs.hpp	67;"	d
GEN_RENDER_WRITE	./backend/gen_defs.hpp	386;"	d
GEN_SAMPLER_MESSAGE_CACHE_FLUSH	./backend/gen_defs.hpp	431;"	d
GEN_SAMPLER_MESSAGE_SIMD16_LD	./backend/gen_defs.hpp	420;"	d
GEN_SAMPLER_MESSAGE_SIMD16_RESINFO	./backend/gen_defs.hpp	417;"	d
GEN_SAMPLER_MESSAGE_SIMD16_SAMPLE	./backend/gen_defs.hpp	404;"	d
GEN_SAMPLER_MESSAGE_SIMD16_SAMPLE_BIAS	./backend/gen_defs.hpp	405;"	d
GEN_SAMPLER_MESSAGE_SIMD16_SAMPLE_COMPARE	./backend/gen_defs.hpp	412;"	d
GEN_SAMPLER_MESSAGE_SIMD16_SAMPLE_LOD	./backend/gen_defs.hpp	408;"	d
GEN_SAMPLER_MESSAGE_SIMD4X2_LD	./backend/gen_defs.hpp	418;"	d
GEN_SAMPLER_MESSAGE_SIMD4X2_RESINFO	./backend/gen_defs.hpp	416;"	d
GEN_SAMPLER_MESSAGE_SIMD4X2_SAMPLE_COMPARE	./backend/gen_defs.hpp	411;"	d
GEN_SAMPLER_MESSAGE_SIMD4X2_SAMPLE_GRADIENTS	./backend/gen_defs.hpp	409;"	d
GEN_SAMPLER_MESSAGE_SIMD4X2_SAMPLE_LOD	./backend/gen_defs.hpp	407;"	d
GEN_SAMPLER_MESSAGE_SIMD4X2_SAMPLE_LOD_COMPARE	./backend/gen_defs.hpp	414;"	d
GEN_SAMPLER_MESSAGE_SIMD8_KILLPIX	./backend/gen_defs.hpp	406;"	d
GEN_SAMPLER_MESSAGE_SIMD8_LD	./backend/gen_defs.hpp	419;"	d
GEN_SAMPLER_MESSAGE_SIMD8_SAMPLE	./backend/gen_defs.hpp	403;"	d
GEN_SAMPLER_MESSAGE_SIMD8_SAMPLE_BIAS_COMPARE	./backend/gen_defs.hpp	413;"	d
GEN_SAMPLER_MESSAGE_SIMD8_SAMPLE_GRADIENTS	./backend/gen_defs.hpp	410;"	d
GEN_SAMPLER_MESSAGE_SIMD8_SAMPLE_LOD_COMPARE	./backend/gen_defs.hpp	415;"	d
GEN_SAMPLER_RETURN_FORMAT_FLOAT32	./backend/gen_defs.hpp	399;"	d
GEN_SAMPLER_RETURN_FORMAT_SINT32	./backend/gen_defs.hpp	401;"	d
GEN_SAMPLER_RETURN_FORMAT_UINT32	./backend/gen_defs.hpp	400;"	d
GEN_SAMPLER_SIMD_MODE_SIMD16	./backend/gen_defs.hpp	436;"	d
GEN_SAMPLER_SIMD_MODE_SIMD32_64	./backend/gen_defs.hpp	437;"	d
GEN_SAMPLER_SIMD_MODE_SIMD4X2	./backend/gen_defs.hpp	434;"	d
GEN_SAMPLER_SIMD_MODE_SIMD8	./backend/gen_defs.hpp	435;"	d
GEN_SCRATCH_BLOCK_SIZE_1	./backend/gen_defs.hpp	376;"	d
GEN_SCRATCH_BLOCK_SIZE_2	./backend/gen_defs.hpp	377;"	d
GEN_SCRATCH_BLOCK_SIZE_4	./backend/gen_defs.hpp	378;"	d
GEN_SCRATCH_CHANNEL_MODE_DWORD	./backend/gen_defs.hpp	375;"	d
GEN_SCRATCH_CHANNEL_MODE_OWORD	./backend/gen_defs.hpp	374;"	d
GEN_SCRATCH_READ	./backend/gen_defs.hpp	372;"	d
GEN_SCRATCH_WRITE	./backend/gen_defs.hpp	373;"	d
GEN_SFID_DATAPORT1_DATA	./backend/gen_defs.hpp	/^  GEN_SFID_DATAPORT1_DATA           = 12, \/* New for HSW and BDW. *\/$/;"	e	enum:GenMessageTarget
GEN_SFID_DATAPORT_CONSTANT	./backend/gen_defs.hpp	/^  GEN_SFID_DATAPORT_CONSTANT        = 9,$/;"	e	enum:GenMessageTarget
GEN_SFID_DATAPORT_DATA	./backend/gen_defs.hpp	/^  GEN_SFID_DATAPORT_DATA            = 10,$/;"	e	enum:GenMessageTarget
GEN_SFID_DATAPORT_RENDER	./backend/gen_defs.hpp	/^  GEN_SFID_DATAPORT_RENDER          = 5,$/;"	e	enum:GenMessageTarget
GEN_SFID_DATAPORT_SAMPLER	./backend/gen_defs.hpp	/^  GEN_SFID_DATAPORT_SAMPLER         = 4,$/;"	e	enum:GenMessageTarget
GEN_SFID_MESSAGE_GATEWAY	./backend/gen_defs.hpp	/^  GEN_SFID_MESSAGE_GATEWAY          = 3,$/;"	e	enum:GenMessageTarget
GEN_SFID_NULL	./backend/gen_defs.hpp	/^  GEN_SFID_NULL                     = 0,$/;"	e	enum:GenMessageTarget
GEN_SFID_PIXEL_INTERPOLATOR	./backend/gen_defs.hpp	/^  GEN_SFID_PIXEL_INTERPOLATOR       = 11,$/;"	e	enum:GenMessageTarget
GEN_SFID_RESERVED	./backend/gen_defs.hpp	/^  GEN_SFID_RESERVED                 = 1,$/;"	e	enum:GenMessageTarget
GEN_SFID_SAMPLER	./backend/gen_defs.hpp	/^  GEN_SFID_SAMPLER                  = 2,$/;"	e	enum:GenMessageTarget
GEN_SFID_THREAD_SPAWNER	./backend/gen_defs.hpp	/^  GEN_SFID_THREAD_SPAWNER           = 7,$/;"	e	enum:GenMessageTarget
GEN_SFID_URB	./backend/gen_defs.hpp	/^  GEN_SFID_URB                      = 6,$/;"	e	enum:GenMessageTarget
GEN_SFID_VIDEO_MOTION_EST	./backend/gen_defs.hpp	/^  GEN_SFID_VIDEO_MOTION_EST         = 8,$/;"	e	enum:GenMessageTarget
GEN_THREAD_ATOMIC	./backend/gen_defs.hpp	284;"	d
GEN_THREAD_NORMAL	./backend/gen_defs.hpp	283;"	d
GEN_THREAD_SWITCH	./backend/gen_defs.hpp	285;"	d
GEN_TYPED_ATOMIC	./backend/gen_defs.hpp	383;"	d
GEN_TYPED_READ	./backend/gen_defs.hpp	382;"	d
GEN_TYPED_WRITE	./backend/gen_defs.hpp	387;"	d
GEN_TYPE_B	./backend/gen_defs.hpp	252;"	d
GEN_TYPE_D	./backend/gen_defs.hpp	248;"	d
GEN_TYPE_DF	./backend/gen_defs.hpp	255;"	d
GEN_TYPE_DF_IMM	./backend/gen_defs.hpp	260;"	d
GEN_TYPE_F	./backend/gen_defs.hpp	256;"	d
GEN_TYPE_HF	./backend/gen_defs.hpp	259;"	d
GEN_TYPE_HF_IMM	./backend/gen_defs.hpp	261;"	d
GEN_TYPE_L	./backend/gen_defs.hpp	258;"	d
GEN_TYPE_UB	./backend/gen_defs.hpp	251;"	d
GEN_TYPE_UD	./backend/gen_defs.hpp	247;"	d
GEN_TYPE_UL	./backend/gen_defs.hpp	257;"	d
GEN_TYPE_UW	./backend/gen_defs.hpp	249;"	d
GEN_TYPE_V	./backend/gen_defs.hpp	254;"	d
GEN_TYPE_VF	./backend/gen_defs.hpp	253;"	d
GEN_TYPE_W	./backend/gen_defs.hpp	250;"	d
GEN_UNTYPED_ALPHA	./backend/gen_defs.hpp	311;"	d
GEN_UNTYPED_BLUE	./backend/gen_defs.hpp	310;"	d
GEN_UNTYPED_GREEN	./backend/gen_defs.hpp	309;"	d
GEN_UNTYPED_RED	./backend/gen_defs.hpp	308;"	d
GEN_UNTYPED_SIMD16	./backend/gen_defs.hpp	315;"	d
GEN_UNTYPED_SIMD4x2	./backend/gen_defs.hpp	314;"	d
GEN_UNTYPED_SIMD8	./backend/gen_defs.hpp	316;"	d
GEN_UPDATE_GATEWAT_STATE	./backend/gen_defs.hpp	477;"	d
GEN_VERTICAL_STRIDE_0	./backend/gen_defs.hpp	287;"	d
GEN_VERTICAL_STRIDE_1	./backend/gen_defs.hpp	288;"	d
GEN_VERTICAL_STRIDE_128	./backend/gen_defs.hpp	295;"	d
GEN_VERTICAL_STRIDE_16	./backend/gen_defs.hpp	292;"	d
GEN_VERTICAL_STRIDE_2	./backend/gen_defs.hpp	289;"	d
GEN_VERTICAL_STRIDE_256	./backend/gen_defs.hpp	296;"	d
GEN_VERTICAL_STRIDE_32	./backend/gen_defs.hpp	293;"	d
GEN_VERTICAL_STRIDE_4	./backend/gen_defs.hpp	290;"	d
GEN_VERTICAL_STRIDE_64	./backend/gen_defs.hpp	294;"	d
GEN_VERTICAL_STRIDE_8	./backend/gen_defs.hpp	291;"	d
GEN_VERTICAL_STRIDE_ONE_DIMENSIONAL	./backend/gen_defs.hpp	297;"	d
GEN_WIDTH_1	./backend/gen_defs.hpp	300;"	d
GEN_WIDTH_16	./backend/gen_defs.hpp	304;"	d
GEN_WIDTH_2	./backend/gen_defs.hpp	301;"	d
GEN_WIDTH_32	./backend/gen_defs.hpp	305;"	d
GEN_WIDTH_4	./backend/gen_defs.hpp	302;"	d
GEN_WIDTH_8	./backend/gen_defs.hpp	303;"	d
GET_EFFECT_DATA	./llvm/llvm_gen_backend.cpp	1728;"	d	file:
GET_FLAG_REG	./backend/gen_reg_allocation.cpp	428;"	d	file:
GET_IMAGE_INFO	./ir/instruction.cpp	/^  Instruction GET_IMAGE_INFO(int infoType, Register dst, uint8_t imageIndex, Register infoReg) {$/;"	f	namespace:gbe::ir
GLOBAL_POINTER	./ir/function.hpp	/^      GLOBAL_POINTER    = 0, \/\/ __global$/;"	e	enum:gbe::ir::FunctionArgument::Type
Gen75Context	./backend/gen75_context.hpp	/^    Gen75Context(const ir::Unit &unit, const std::string &name, uint32_t deviceID, bool relaxMath = false)$/;"	f	class:gbe::Gen75Context
Gen75Context	./backend/gen75_context.hpp	/^  class Gen75Context : public GenContext$/;"	c	namespace:gbe
Gen75Encoder	./backend/gen75_encoder.hpp	/^    Gen75Encoder(uint32_t simdWidth, uint32_t gen, uint32_t deviceID)$/;"	f	class:gbe::Gen75Encoder
Gen75Encoder	./backend/gen75_encoder.hpp	/^  class Gen75Encoder : public Gen7Encoder$/;"	c	namespace:gbe
Gen7Encoder	./backend/gen7_encoder.hpp	/^    Gen7Encoder(uint32_t simdWidth, uint32_t gen, uint32_t deviceID)$/;"	f	class:gbe::Gen7Encoder
Gen7Encoder	./backend/gen7_encoder.hpp	/^  class Gen7Encoder : public GenEncoder$/;"	c	namespace:gbe
Gen7Info	./ir/profiling.hpp	/^          struct Gen7Info {$/;"	s	union:gbe::ir::ProfilingInfo::__anon151::GenInfo
Gen7NativeInstruction	./backend/gen7_instruction.hpp	/^union Gen7NativeInstruction$/;"	u
Gen8Context	./backend/gen8_context.hpp	/^    Gen8Context(const ir::Unit &unit, const std::string &name, uint32_t deviceID, bool relaxMath = false)$/;"	f	class:gbe::Gen8Context
Gen8Context	./backend/gen8_context.hpp	/^  class Gen8Context : public GenContext$/;"	c	namespace:gbe
Gen8DataTypeBits	./backend/gen_insn_compact.cpp	/^  union Gen8DataTypeBits{$/;"	u	namespace:gbe	file:
Gen8Encoder	./backend/gen8_encoder.hpp	/^    Gen8Encoder(uint32_t simdWidth, uint32_t gen, uint32_t deviceID)$/;"	f	class:gbe::Gen8Encoder
Gen8Encoder	./backend/gen8_encoder.hpp	/^  class Gen8Encoder : public GenEncoder$/;"	c	namespace:gbe
Gen8Info	./ir/profiling.hpp	/^          struct Gen8Info {$/;"	s	union:gbe::ir::ProfilingInfo::__anon151::GenInfo
Gen8NativeInstruction	./backend/gen8_instruction.hpp	/^union Gen8NativeInstruction$/;"	u
Gen9Context	./backend/gen9_context.hpp	/^    Gen9Context(const ir::Unit &unit, const std::string &name, uint32_t deviceID, bool relaxMath = false)$/;"	f	class:gbe::Gen9Context
Gen9Context	./backend/gen9_context.hpp	/^  class Gen9Context : public Gen8Context$/;"	c	namespace:gbe
Gen9Encoder	./backend/gen9_encoder.hpp	/^    Gen9Encoder(uint32_t simdWidth, uint32_t gen, uint32_t deviceID)$/;"	f	class:gbe::Gen9Encoder
Gen9Encoder	./backend/gen9_encoder.hpp	/^  class Gen9Encoder : public Gen8Encoder$/;"	c	namespace:gbe
Gen9NativeInstruction	./backend/gen9_instruction.hpp	/^union Gen9NativeInstruction$/;"	u
GenAtomicOpCode	./backend/gen_defs.hpp	/^enum GenAtomicOpCode {$/;"	g
GenCompactInstruction	./backend/gen_defs.hpp	/^union GenCompactInstruction {$/;"	u
GenContext	./backend/gen_context.cpp	/^  GenContext::GenContext(const ir::Unit &unit, const std::string &name, uint32_t deviceID,$/;"	f	class:gbe::GenContext
GenContext	./backend/gen_context.hpp	/^  class GenContext : public Context$/;"	c	namespace:gbe
GenEncoder	./backend/gen_encoder.cpp	/^  GenEncoder::GenEncoder(uint32_t simdWidth, uint32_t gen, uint32_t deviceID) :$/;"	f	class:gbe::GenEncoder
GenEncoder	./backend/gen_encoder.hpp	/^  class GenEncoder$/;"	c	namespace:gbe
GenInfo	./ir/profiling.hpp	/^        union GenInfo {$/;"	u	struct:gbe::ir::ProfilingInfo::__anon151
GenInstruction	./backend/gen_defs.hpp	/^struct GenInstruction {$/;"	s
GenInstructionState	./backend/gen_register.hpp	/^    INLINE GenInstructionState(uint32_t simdWidth = 8) {$/;"	f	class:gbe::GenInstructionState
GenInstructionState	./backend/gen_register.hpp	/^  class GenInstructionState$/;"	c	namespace:gbe
GenKernel	./backend/gen_program.cpp	/^  GenKernel::GenKernel(const std::string &name, uint32_t deviceID) :$/;"	f	class:gbe::GenKernel
GenKernel	./backend/gen_program.hpp	/^  class GenKernel : public Kernel$/;"	c	namespace:gbe
GenLoadStoreOptimization	./llvm/llvm_loadstore_optimization.cpp	/^    GenLoadStoreOptimization() : BasicBlockPass(ID) {}$/;"	f	class:gbe::GenLoadStoreOptimization
GenLoadStoreOptimization	./llvm/llvm_loadstore_optimization.cpp	/^  class GenLoadStoreOptimization : public BasicBlockPass {$/;"	c	namespace:gbe	file:
GenMessageTarget	./backend/gen_defs.hpp	/^enum GenMessageTarget {$/;"	g
GenNativeInstruction	./backend/gen_defs.hpp	/^union GenNativeInstruction$/;"	u
GenProgram	./backend/gen_program.hpp	/^    GenProgram(uint32_t deviceID, const void* mod = NULL, const void* ctx = NULL, const char* asm_fname = NULL, uint32_t fast_relaxed_math = 0) :$/;"	f	class:gbe::GenProgram
GenProgram	./backend/gen_program.hpp	/^  class GenProgram : public Program$/;"	c	namespace:gbe
GenRegAllocator	./backend/gen_reg_allocation.cpp	/^  GenRegAllocator::GenRegAllocator(GenContext &ctx) {$/;"	f	class:gbe::GenRegAllocator
GenRegAllocator	./backend/gen_reg_allocation.hpp	/^  class GenRegAllocator$/;"	c	namespace:gbe
GenRegInterval	./backend/gen_reg_allocation.cpp	/^    INLINE GenRegInterval(ir::Register reg) :$/;"	f	struct:gbe::GenRegInterval
GenRegInterval	./backend/gen_reg_allocation.cpp	/^  struct GenRegInterval {$/;"	s	namespace:gbe	file:
GenRegister	./backend/gen_register.hpp	/^    INLINE GenRegister(uint32_t file,$/;"	f	class:gbe::GenRegister
GenRegister	./backend/gen_register.hpp	/^    INLINE GenRegister(void) {}$/;"	f	class:gbe::GenRegister
GenRegister	./backend/gen_register.hpp	/^  class GenRegister$/;"	c	namespace:gbe
GenRemoveGEPPasss	./llvm/llvm_passes.cpp	/^    GenRemoveGEPPasss(const ir::Unit &unit) :$/;"	f	class:gbe::GenRemoveGEPPasss
GenRemoveGEPPasss	./llvm/llvm_passes.cpp	/^  class GenRemoveGEPPasss : public BasicBlockPass$/;"	c	namespace:gbe	file:
GenWriter	./llvm/llvm_gen_backend.cpp	/^    explicit GenWriter(ir::Unit &unit)$/;"	f	class:gbe::GenWriter
GenWriter	./llvm/llvm_gen_backend.cpp	/^  class GenWriter : public FunctionPass, public InstVisitor<GenWriter>$/;"	c	namespace:gbe	file:
GetBasicType	./llvm/llvm_scalarize.cpp	/^    Type* GetBasicType(Type* type) {$/;"	f	class:gbe::Scalarize
GetBasicType	./llvm/llvm_scalarize.cpp	/^    Type* GetBasicType(Value* value) {$/;"	f	class:gbe::Scalarize
GetComponentCount	./llvm/llvm_scalarize.cpp	/^    int GetComponentCount(const Type* type)  {$/;"	f	class:gbe::Scalarize
GetComponentCount	./llvm/llvm_scalarize.cpp	/^    int GetComponentCount(const Value* value) {$/;"	f	class:gbe::Scalarize
GetConstantInt	./llvm/llvm_scalarize.cpp	/^  int Scalarize::GetConstantInt(const Value* value)$/;"	f	class:gbe::Scalarize
GetImageInfoInstruction	./ir/instruction.cpp	/^      GetImageInfoInstruction( int type,$/;"	f	class:gbe::ir::internal::GetImageInfoInstruction
GetImageInfoInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION GetImageInfoInstruction :$/;"	c	namespace:gbe::ir::internal	file:
GetImageInfoInstruction	./ir/instruction.hpp	/^  class GetImageInfoInstruction : public Instruction {$/;"	c	namespace:gbe::ir
GetUnrollCount	./llvm/llvm_unroll.cpp	/^      static unsigned GetUnrollCount(const Loop *L,$/;"	f	class:gbe::CustomLoopUnroll
GetUnrollMetadataValue	./llvm/llvm_unroll.cpp	/^      static const MDNode *GetUnrollMetadataValue(const Loop *L,$/;"	f	class:gbe::CustomLoopUnroll
GlkContext	./backend/gen9_context.hpp	/^      GlkContext(const ir::Unit &unit, const std::string &name, uint32_t deviceID, bool relaxMath = false)$/;"	f	class:gbe::GlkContext
GlkContext	./backend/gen9_context.hpp	/^  class GlkContext : public BxtContext$/;"	c	namespace:gbe
GlobalPtrIter	./llvm/llvm_gen_backend.cpp	/^    typedef map<const Value*, int>::iterator GlobalPtrIter;$/;"	t	class:gbe::GenWriter	file:
GrowingPool	./sys/alloc.hpp	/^    GrowingPool(uint32_t elemNum = 1) :$/;"	f	class:gbe::GrowingPool
GrowingPool	./sys/alloc.hpp	/^  class GrowingPool$/;"	c	namespace:gbe
GrowingPoolElem	./sys/alloc.hpp	/^      GrowingPoolElem(size_t elemNum) {$/;"	f	class:gbe::GrowingPool::GrowingPoolElem
GrowingPoolElem	./sys/alloc.hpp	/^    class GrowingPoolElem$/;"	c	class:gbe::GrowingPool
HALF_REGISTER_FILE_OFFSET	./backend/gen_reg_allocation.cpp	38;"	d	file:
HEIGHT	./ir/instruction.hpp	/^     HEIGHT = 1,$/;"	e	enum:gbe::ir::GetImageInfoInstruction::__anon162
HERE	./sys/platform.hpp	234;"	d
HUGE_VALF	./libocl/include/ocl_float.h	78;"	d
Helper	./sys/platform.hpp	/^  struct Helper { char x; T t; };$/;"	s	struct:AlignOf
HelperIntrospection	./ir/instruction.cpp	/^  template <typename T, typename U> struct HelperIntrospection {$/;"	s	namespace:gbe::ir	file:
HelperIntrospection	./ir/instruction.cpp	/^  template <typename T> struct HelperIntrospection<T,T> {$/;"	s	namespace:gbe::ir	file:
Hi	./llvm/ExpandLargeIntegers.cpp	/^  PHINode *Lo, *Hi;$/;"	m	struct:__anon177::ForwardPHI	file:
Hi	./llvm/ExpandLargeIntegers.cpp	/^  T Lo, Hi;$/;"	m	struct:__anon177::LoHiPair	file:
I32FullMult	./backend/gen_context.cpp	/^  void GenContext::I32FullMult(GenRegister high, GenRegister low, GenRegister src0, GenRegister src1) {$/;"	f	class:gbe::GenContext
I64ABS	./backend/gen_context.cpp	/^  void GenContext::I64ABS(GenRegister sign, GenRegister high, GenRegister low, GenRegister tmp, GenRegister flagReg) {$/;"	f	class:gbe::GenContext
I64CMP	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::I64CMP(uint32_t conditional, Reg src0, Reg src1, GenRegister tmp[3]) {$/;"	f	class:gbe::Selection::Opaque
I64DIV	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::I64DIV(Reg dst, Reg src0, Reg src1, GenRegister* tmp, int tmp_num) {$/;"	f	class:gbe::Selection::Opaque
I64FullAdd	./backend/gen_context.cpp	/^  void GenContext::I64FullAdd(GenRegister high1, GenRegister low1, GenRegister high2, GenRegister low2) {$/;"	f	class:gbe::GenContext
I64FullMult	./backend/gen_context.cpp	/^  void GenContext::I64FullMult(GenRegister dst1, GenRegister dst2, GenRegister dst3, GenRegister dst4, GenRegister x_high, GenRegister x_low, GenRegister y_high, GenRegister y_low) {$/;"	f	class:gbe::GenContext
I64HADD	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::I64HADD(Reg dst, Reg src0, Reg src1, GenRegister *tmp, int tmp_num) {$/;"	f	class:gbe::Selection::Opaque
I64MADSAT	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::I64MADSAT(Reg dst, Reg src0, Reg src1, Reg src2, GenRegister *tmp, int tmp_num) {$/;"	f	class:gbe::Selection::Opaque
I64MADSAT	./ir/instruction.cpp	/^  Instruction I64MADSAT(Type type, Register dst, Tuple src) {$/;"	f	namespace:gbe::ir
I64MUL	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::I64MUL(Reg dst, Reg src0, Reg src1, GenRegister *tmp, bool native_long) {$/;"	f	class:gbe::Selection::Opaque
I64Neg	./backend/gen_context.cpp	/^  void GenContext::I64Neg(GenRegister high, GenRegister low, GenRegister tmp) {$/;"	f	class:gbe::GenContext
I64REM	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::I64REM(Reg dst, Reg src0, Reg src1, GenRegister* tmp, int tmp_num) {$/;"	f	class:gbe::Selection::Opaque
I64RHADD	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::I64RHADD(Reg dst, Reg src0, Reg src1, GenRegister *tmp, int tmp_num) {$/;"	f	class:gbe::Selection::Opaque
I64SATADD	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::I64SATADD(Reg dst, Reg src0, Reg src1, GenRegister tmp[5]) {$/;"	f	class:gbe::Selection::Opaque
I64SATSUB	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::I64SATSUB(Reg dst, Reg src0, Reg src1, GenRegister tmp[5]) {$/;"	f	class:gbe::Selection::Opaque
I64Shift	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::I64Shift(SelectionOpcode opcode, Reg dst, Reg src0, Reg src1, GenRegister tmp[6]) {$/;"	f	class:gbe::Selection::Opaque
I64Shift	./backend/gen_insn_selection.cpp	580;"	d	file:
I64Shift	./backend/gen_insn_selection.cpp	634;"	d	file:
I64_MUL_HI	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::I64_MUL_HI(Reg dst, Reg src0, Reg src1, GenRegister *tmp, int tmp_num) {$/;"	f	class:gbe::Selection::Opaque
ID	./backend/gen_insn_selection.hpp	/^    uint32_t ID;$/;"	m	class:gbe::SelectionInstruction
ID	./llvm/ExpandConstantExpr.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	struct:__anon176::ExpandConstantExpr	file:
ID	./llvm/ExpandConstantExpr.cpp	/^char ExpandConstantExpr::ID = 0;$/;"	m	class:ExpandConstantExpr	file:
ID	./llvm/ExpandLargeIntegers.cpp	/^  static char ID;$/;"	m	class:__anon177::ExpandLargeIntegers	file:
ID	./llvm/ExpandLargeIntegers.cpp	/^char ExpandLargeIntegers::ID = 0;$/;"	m	class:ExpandLargeIntegers	file:
ID	./llvm/PromoteIntegers.cpp	/^  static char ID;$/;"	m	class:__anon174::PromoteIntegers	file:
ID	./llvm/PromoteIntegers.cpp	/^char PromoteIntegers::ID = 0;$/;"	m	class:PromoteIntegers	file:
ID	./llvm/StripAttributes.cpp	/^    static char ID; \/\/ Pass identification, replacement for typeid$/;"	m	class:__anon173::StripAttributes	file:
ID	./llvm/StripAttributes.cpp	/^char StripAttributes::ID = 0;$/;"	m	class:StripAttributes	file:
ID	./llvm/llvm_barrier_nodup.cpp	/^      static char ID;$/;"	m	class:gbe::BarrierNodup	file:
ID	./llvm/llvm_barrier_nodup.cpp	/^    char BarrierNodup::ID = 0;$/;"	m	class:gbe::BarrierNodup	file:
ID	./llvm/llvm_gen_backend.cpp	/^    static char ID;$/;"	m	class:gbe::GenWriter	file:
ID	./llvm/llvm_gen_backend.cpp	/^  char GenWriter::ID = 0;$/;"	m	class:gbe::GenWriter	file:
ID	./llvm/llvm_intrinsic_lowering.cpp	/^      static char ID;$/;"	m	class:gbe::InstrinsicLowering	file:
ID	./llvm/llvm_intrinsic_lowering.cpp	/^    char InstrinsicLowering::ID = 0;$/;"	m	class:gbe::InstrinsicLowering	file:
ID	./llvm/llvm_loadstore_optimization.cpp	/^    static char ID;$/;"	m	class:gbe::GenLoadStoreOptimization	file:
ID	./llvm/llvm_loadstore_optimization.cpp	/^  char GenLoadStoreOptimization::ID = 0;$/;"	m	class:gbe::GenLoadStoreOptimization	file:
ID	./llvm/llvm_passes.cpp	/^    static char ID;$/;"	m	class:gbe::GenRemoveGEPPasss	file:
ID	./llvm/llvm_passes.cpp	/^  char GenRemoveGEPPasss::ID = 0;$/;"	m	class:gbe::GenRemoveGEPPasss	file:
ID	./llvm/llvm_printf_parser.cpp	/^    static char ID;$/;"	m	class:gbe::PrintfParser	file:
ID	./llvm/llvm_printf_parser.cpp	/^  char PrintfParser::ID = 0;$/;"	m	class:gbe::PrintfParser	file:
ID	./llvm/llvm_profiling.cpp	/^    static char ID;$/;"	m	class:gbe::ProfilingInserter	file:
ID	./llvm/llvm_profiling.cpp	/^  char ProfilingInserter::ID = 0;$/;"	m	class:gbe::ProfilingInserter	file:
ID	./llvm/llvm_sampler_fix.cpp	/^    static char ID;$/;"	m	class:gbe::SamplerFix	file:
ID	./llvm/llvm_sampler_fix.cpp	/^  char SamplerFix::ID = 0;$/;"	m	class:gbe::SamplerFix	file:
ID	./llvm/llvm_scalarize.cpp	/^    static char ID;$/;"	m	class:gbe::Scalarize	file:
ID	./llvm/llvm_scalarize.cpp	/^  char Scalarize::ID = 0;$/;"	m	class:gbe::Scalarize	file:
ID	./llvm/llvm_unroll.cpp	/^      static char ID;$/;"	m	class:gbe::CustomLoopUnroll	file:
ID	./llvm/llvm_unroll.cpp	/^    char CustomLoopUnroll::ID = 0;$/;"	m	class:gbe::CustomLoopUnroll	file:
IF	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::IF(Reg src, ir::LabelIndex jip, ir::LabelIndex uip) {$/;"	f	class:gbe::Selection::Opaque
IF	./ir/instruction.cpp	/^  Instruction IF(LabelIndex labelIndex, Register pred, bool inv_pred) {$/;"	f	namespace:gbe::ir
IF_DEBUG	./sys/platform.hpp	180;"	d
IF_DEBUG	./sys/platform.hpp	182;"	d
IMAGE	./ir/function.hpp	/^      IMAGE             = 5, \/\/ image*d_t$/;"	e	enum:gbe::ir::FunctionArgument::Type
IMM_ADD	./ir/immediate.hpp	/^    IMM_ADD,$/;"	e	enum:gbe::ir::__anon152
IMM_AND	./ir/immediate.hpp	/^    IMM_AND,$/;"	e	enum:gbe::ir::__anon152
IMM_ASHR	./ir/immediate.hpp	/^    IMM_ASHR,$/;"	e	enum:gbe::ir::__anon152
IMM_BITCAST	./ir/immediate.hpp	/^    IMM_BITCAST,$/;"	e	enum:gbe::ir::__anon152
IMM_DIV	./ir/immediate.hpp	/^    IMM_DIV,$/;"	e	enum:gbe::ir::__anon152
IMM_EXTRACT	./ir/immediate.hpp	/^    IMM_EXTRACT,$/;"	e	enum:gbe::ir::__anon152
IMM_FPEXT	./ir/immediate.hpp	/^    IMM_FPEXT$/;"	e	enum:gbe::ir::__anon152
IMM_FPTOSI	./ir/immediate.hpp	/^    IMM_FPTOSI,$/;"	e	enum:gbe::ir::__anon152
IMM_FPTOUI	./ir/immediate.hpp	/^    IMM_FPTOUI,$/;"	e	enum:gbe::ir::__anon152
IMM_HFTOSS	./ir/immediate.hpp	/^    IMM_HFTOSS,$/;"	e	enum:gbe::ir::__anon152
IMM_HFTOUS	./ir/immediate.hpp	/^    IMM_HFTOUS,$/;"	e	enum:gbe::ir::__anon152
IMM_LSHR	./ir/immediate.hpp	/^    IMM_LSHR,$/;"	e	enum:gbe::ir::__anon152
IMM_MUL	./ir/immediate.hpp	/^    IMM_MUL,$/;"	e	enum:gbe::ir::__anon152
IMM_OEQ	./ir/immediate.hpp	/^    IMM_OEQ,$/;"	e	enum:gbe::ir::__anon152
IMM_OGE	./ir/immediate.hpp	/^    IMM_OGE,$/;"	e	enum:gbe::ir::__anon152
IMM_OGT	./ir/immediate.hpp	/^    IMM_OGT,$/;"	e	enum:gbe::ir::__anon152
IMM_OLE	./ir/immediate.hpp	/^    IMM_OLE,$/;"	e	enum:gbe::ir::__anon152
IMM_OLT	./ir/immediate.hpp	/^    IMM_OLT,$/;"	e	enum:gbe::ir::__anon152
IMM_ONE	./ir/immediate.hpp	/^    IMM_ONE,$/;"	e	enum:gbe::ir::__anon152
IMM_OR	./ir/immediate.hpp	/^    IMM_OR,$/;"	e	enum:gbe::ir::__anon152
IMM_ORD	./ir/immediate.hpp	/^    IMM_ORD,$/;"	e	enum:gbe::ir::__anon152
IMM_REM	./ir/immediate.hpp	/^    IMM_REM,$/;"	e	enum:gbe::ir::__anon152
IMM_SEXT	./ir/immediate.hpp	/^    IMM_SEXT,$/;"	e	enum:gbe::ir::__anon152
IMM_SHL	./ir/immediate.hpp	/^    IMM_SHL,$/;"	e	enum:gbe::ir::__anon152
IMM_SITOFP	./ir/immediate.hpp	/^    IMM_SITOFP,$/;"	e	enum:gbe::ir::__anon152
IMM_SSTOHF	./ir/immediate.hpp	/^    IMM_SSTOHF,$/;"	e	enum:gbe::ir::__anon152
IMM_SUB	./ir/immediate.hpp	/^    IMM_SUB,$/;"	e	enum:gbe::ir::__anon152
IMM_TRUNC	./ir/immediate.hpp	/^    IMM_TRUNC = 0,$/;"	e	enum:gbe::ir::__anon152
IMM_TYPE_BOOL	./ir/immediate.hpp	/^    IMM_TYPE_BOOL = TYPE_BOOL,$/;"	e	enum:gbe::ir::__anon153
IMM_TYPE_COMP	./ir/immediate.hpp	/^    IMM_TYPE_COMP             \/\/ compond immediate which consist many immediates.$/;"	e	enum:gbe::ir::__anon153
IMM_TYPE_DOUBLE	./ir/immediate.hpp	/^    IMM_TYPE_DOUBLE = TYPE_DOUBLE,$/;"	e	enum:gbe::ir::__anon153
IMM_TYPE_FLOAT	./ir/immediate.hpp	/^    IMM_TYPE_FLOAT = TYPE_FLOAT,$/;"	e	enum:gbe::ir::__anon153
IMM_TYPE_HALF	./ir/immediate.hpp	/^    IMM_TYPE_HALF = TYPE_HALF,$/;"	e	enum:gbe::ir::__anon153
IMM_TYPE_S16	./ir/immediate.hpp	/^    IMM_TYPE_S16 = TYPE_S16,$/;"	e	enum:gbe::ir::__anon153
IMM_TYPE_S32	./ir/immediate.hpp	/^    IMM_TYPE_S32 = TYPE_S32,$/;"	e	enum:gbe::ir::__anon153
IMM_TYPE_S64	./ir/immediate.hpp	/^    IMM_TYPE_S64 = TYPE_S64,$/;"	e	enum:gbe::ir::__anon153
IMM_TYPE_S8	./ir/immediate.hpp	/^    IMM_TYPE_S8 = TYPE_S8,$/;"	e	enum:gbe::ir::__anon153
IMM_TYPE_U16	./ir/immediate.hpp	/^    IMM_TYPE_U16 = TYPE_U16,$/;"	e	enum:gbe::ir::__anon153
IMM_TYPE_U32	./ir/immediate.hpp	/^    IMM_TYPE_U32 = TYPE_U32,$/;"	e	enum:gbe::ir::__anon153
IMM_TYPE_U64	./ir/immediate.hpp	/^    IMM_TYPE_U64 = TYPE_U64,$/;"	e	enum:gbe::ir::__anon153
IMM_TYPE_U8	./ir/immediate.hpp	/^    IMM_TYPE_U8 = TYPE_U8,$/;"	e	enum:gbe::ir::__anon153
IMM_UITOFP	./ir/immediate.hpp	/^    IMM_UITOFP,$/;"	e	enum:gbe::ir::__anon152
IMM_USTOHF	./ir/immediate.hpp	/^    IMM_USTOHF,$/;"	e	enum:gbe::ir::__anon152
IMM_XOR	./ir/immediate.hpp	/^    IMM_XOR,$/;"	e	enum:gbe::ir::__anon152
IMM_ZEXT	./ir/immediate.hpp	/^    IMM_ZEXT,$/;"	e	enum:gbe::ir::__anon152
INDIRECT_MOV	./ir/instruction.cpp	/^  Instruction INDIRECT_MOV(Type type, Register dst, Register src0, Register src1, uint32_t offset) {$/;"	f	namespace:gbe::ir
INDIRECT_MOVE	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::INDIRECT_MOVE(Reg dst, Reg tmp, Reg base, Reg regOffset, uint32_t immOffset) {$/;"	f	class:gbe::Selection::Opaque
INFINITY	./libocl/include/ocl_float.h	79;"	d
INLINE	./libocl/include/ocl_types.h	35;"	d
INLINE	./sys/platform.hpp	146;"	d
INLINE	./sys/platform.hpp	154;"	d
INLINE	./sys/platform.hpp	156;"	d
INLINE_OVERLOADABLE	./libocl/include/ocl_types.h	39;"	d
INTEGER	./sys/cvar.hpp	/^      INTEGER = 1,$/;"	e	enum:gbe::CVarInit::__anon180
INT_MAX	./libocl/tmpl/ocl_integer.tmpl.h	26;"	d
INT_MIN	./libocl/tmpl/ocl_integer.tmpl.h	27;"	d
IN_UPDATE_SZ	./backend/program.cpp	186;"	d	file:
IN_UPDATE_SZ	./backend/program.cpp	542;"	d	file:
IN_UPDATE_SZ	./ir/constant.cpp	42;"	d	file:
IN_UPDATE_SZ	./ir/image.cpp	107;"	d	file:
IN_UPDATE_SZ	./ir/reloc.cpp	31;"	d	file:
IN_UPDATE_SZ	./ir/sampler.cpp	65;"	d	file:
IS_IMPLICITLY_MOD_FLAG	./backend/gen_reg_allocation.cpp	421;"	d	file:
IS_SCALAR_FLAG	./backend/gen_reg_allocation.cpp	427;"	d	file:
IS_TEMP_FLAG	./backend/gen_reg_allocation.cpp	430;"	d	file:
IVAR	./sys/cvar.hpp	62;"	d
IfElseBlock	./ir/structurizer.hpp	/^    IfElseBlock(Block* pred, Block* trueBlock, Block* falseBlock) : Block(IfElseType, InitChildren(pred, trueBlock, falseBlock)) {}$/;"	f	class:gbe::ir::IfElseBlock
IfElseBlock	./ir/structurizer.hpp	/^  class IfElseBlock: public Block$/;"	c	namespace:gbe::ir
IfElseType	./ir/structurizer.hpp	/^    IfElseType,$/;"	e	enum:gbe::ir::BlockType
IfThenBlock	./ir/structurizer.hpp	/^    IfThenBlock(Block* pred, Block* trueBlock) : Block(IfThenType, InitChildren(pred, trueBlock)) {}$/;"	f	class:gbe::ir::IfThenBlock
IfThenBlock	./ir/structurizer.hpp	/^  class IfThenBlock : public Block$/;"	c	namespace:gbe::ir
IfThenType	./ir/structurizer.hpp	/^    IfThenType,$/;"	e	enum:gbe::ir::BlockType
ImageArgsInfo	./llvm/llvm_gen_backend.cpp	/^  struct ImageArgsInfo{$/;"	s	namespace:gbe	file:
ImageInfo	./backend/program.h	/^typedef struct ImageInfo {$/;"	s
ImageInfo	./backend/program.h	/^} ImageInfo;$/;"	t	typeref:struct:ImageInfo
ImageInfoKey	./ir/instruction.hpp	/^  } ImageInfoKey;$/;"	t	namespace:gbe::ir	typeref:union:gbe::ir::_ImageInfoKey
ImageSet	./ir/image.hpp	/^    ImageSet() {}$/;"	f	class:gbe::ir::ImageSet
ImageSet	./ir/image.hpp	/^    ImageSet(const ImageSet& other) : regMap(other.regMap.begin(), other.regMap.end()) { }$/;"	f	class:gbe::ir::ImageSet
ImageSet	./ir/image.hpp	/^  class ImageSet : public Serializable$/;"	c	namespace:gbe::ir
ImmOpCode	./ir/immediate.hpp	/^  } ImmOpCode;$/;"	t	namespace:gbe::ir	typeref:enum:gbe::ir::__anon152
ImmType	./ir/immediate.hpp	/^  } ImmType;$/;"	t	namespace:gbe::ir	typeref:enum:gbe::ir::__anon153
Immediate	./ir/immediate.cpp	/^    Immediate::Immediate(ImmOpCode op, const Immediate &left, const Immediate &right, Type dstType) {$/;"	f	class:Immediate
Immediate	./ir/immediate.cpp	/^    Immediate::Immediate(const vector<const Immediate*> immVec, Type dstType) {$/;"	f	class:Immediate
Immediate	./ir/immediate.hpp	/^    INLINE Immediate(const Immediate & other) {$/;"	f	class:gbe::ir::Immediate
Immediate	./ir/immediate.hpp	/^    INLINE Immediate(void) { }$/;"	f	class:gbe::ir::Immediate
Immediate	./ir/immediate.hpp	/^    Immediate(ImmOpCode op, const Immediate &other, Type dstType) {$/;"	f	class:gbe::ir::Immediate
Immediate	./ir/immediate.hpp	/^  class Immediate$/;"	c	namespace:gbe::ir
IndirectLoad	./ir/lowering.cpp	/^  struct IndirectLoad {$/;"	s	namespace:gbe::ir	file:
IndirectLoadSeq	./ir/lowering.cpp	/^  typedef vector<IndirectLoad> IndirectLoadSeq;$/;"	t	namespace:gbe::ir	file:
IndirectMovInstruction	./ir/instruction.cpp	/^      INLINE IndirectMovInstruction(Type type, Register dst, Register src0, Register src1, uint32_t offset) {$/;"	f	class:gbe::ir::internal::IndirectMovInstruction
IndirectMovInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION IndirectMovInstruction :$/;"	c	namespace:gbe::ir::internal	file:
IndirectMovInstruction	./ir/instruction.hpp	/^  class IndirectMovInstruction : public Instruction {$/;"	c	namespace:gbe::ir
IndirectMovInstructionPattern	./backend/gen_insn_selection.cpp	/^    IndirectMovInstructionPattern(void) : SelectionPattern(1,1) {$/;"	f	class:gbe::IndirectMovInstructionPattern
IndirectMovInstructionPattern	./backend/gen_insn_selection.cpp	/^  class IndirectMovInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
Info	./ir/liveness.hpp	/^    typedef map<const BasicBlock*, BlockInfo*> Info;$/;"	t	class:gbe::ir::Liveness
InfoFromLLVM	./ir/function.hpp	/^    struct InfoFromLLVM { \/\/ All the info about passed by llvm, using -cl-kernel-arg-info$/;"	s	struct:gbe::ir::FunctionArgument
InitChildren	./ir/structurizer.hpp	/^    const BlockList InitChildren(Block * block)$/;"	f	class:gbe::ir::SelfLoopBlock
InitChildren	./ir/structurizer.hpp	/^    const BlockList InitChildren(Block* pred, Block* trueBlock)$/;"	f	class:gbe::ir::IfThenBlock
InitChildren	./ir/structurizer.hpp	/^    const BlockList InitChildren(Block* pred, Block* trueBlock, Block* falseBlock)$/;"	f	class:gbe::ir::IfElseBlock
InsertToVector	./llvm/llvm_scalarize.cpp	/^  Value* Scalarize::InsertToVector(Value * insn, Value* vecValue) {$/;"	f	class:gbe::Scalarize
InstrinsicLowering	./llvm/llvm_intrinsic_lowering.cpp	/^      InstrinsicLowering() :$/;"	f	class:gbe::InstrinsicLowering
InstrinsicLowering	./llvm/llvm_intrinsic_lowering.cpp	/^    class InstrinsicLowering : public BasicBlockPass$/;"	c	namespace:gbe	file:
Instruction	./ir/instruction.hpp	/^    INLINE Instruction(const Instruction &other) :$/;"	f	class:gbe::ir::Instruction
Instruction	./ir/instruction.hpp	/^    INLINE Instruction(const char *stream) : InstructionBase(Opcode(stream[0]), &stream[1]) {$/;"	f	class:gbe::ir::Instruction
Instruction	./ir/instruction.hpp	/^    INLINE Instruction(void) {}$/;"	f	class:gbe::ir::Instruction
Instruction	./ir/instruction.hpp	/^  class Instruction : public InstructionBase, public intrusive_list_node$/;"	c	namespace:gbe::ir
Int32x16MulInstructionPattern	./backend/gen_insn_selection.cpp	/^    Int32x16MulInstructionPattern(void) : SelectionPattern(1, 1) {$/;"	f	class:gbe::Int32x16MulInstructionPattern
Int32x16MulInstructionPattern	./backend/gen_insn_selection.cpp	/^  class Int32x16MulInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
Int32x32MulInstructionPattern	./backend/gen_insn_selection.cpp	/^    Int32x32MulInstructionPattern(void) : SelectionPattern(1, 4) {$/;"	f	class:gbe::Int32x32MulInstructionPattern
Int32x32MulInstructionPattern	./backend/gen_insn_selection.cpp	/^  class Int32x32MulInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
IsPerComponentOp	./llvm/llvm_scalarize.cpp	/^  bool IsPerComponentOp(const llvm::Value* value)$/;"	f	namespace:gbe
IsPerComponentOp	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::IsPerComponentOp(const Instruction* inst)$/;"	f	class:gbe::Scalarize
JIPMap	./backend/context.hpp	/^    typedef map<const ir::Instruction*, ir::LabelIndex> JIPMap;$/;"	t	class:gbe::Context
JIPs	./backend/context.hpp	/^    JIPMap JIPs;                          \/\/!< Where to jump all labels\/branches$/;"	m	class:gbe::Context
JMPI	./backend/gen75_encoder.cpp	/^  void Gen75Encoder::JMPI(GenRegister src, bool longjmp) {$/;"	f	class:gbe::Gen75Encoder
JMPI	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::JMPI(GenRegister src, bool longjmp) {$/;"	f	class:gbe::Gen8Encoder
JMPI	./backend/gen_encoder.cpp	/^  void GenEncoder::JMPI(GenRegister src, bool longjmp) {$/;"	f	class:gbe::GenEncoder
JMPI	./backend/gen_insn_selection.cpp	/^  int Selection::Opaque::JMPI(Reg src, ir::LabelIndex index, ir::LabelIndex origin) {$/;"	f	class:gbe::Selection::Opaque
JOIN	./sys/platform.hpp	195;"	d
KB	./sys/platform.hpp	/^    KB = 1024,$/;"	e	enum:gbe::__anon184
KblContext	./backend/gen9_context.hpp	/^      KblContext(const ir::Unit &unit, const std::string &name, uint32_t deviceID, bool relaxMath = false)$/;"	f	class:gbe::KblContext
KblContext	./backend/gen9_context.hpp	/^  class KblContext : public Gen9Context$/;"	c	namespace:gbe
Kernel	./backend/program.cpp	/^  Kernel::Kernel(const std::string &name) :$/;"	f	class:gbe::Kernel
Kernel	./backend/program.hpp	/^  class Kernel : public NonCopyable, public Serializable$/;"	c	namespace:gbe
KernelArgument	./backend/program.hpp	/^  struct KernelArgument {$/;"	s	namespace:gbe
LABEL	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::LABEL(ir::LabelIndex index) {$/;"	f	class:gbe::Selection::Opaque
LABEL	./ir/instruction.cpp	/^  Instruction LABEL(LabelIndex labelIndex) {$/;"	f	namespace:gbe::ir
LABEL_IS_DEFINED	./ir/context.hpp	/^    static const uint8_t LABEL_IS_DEFINED = 1 << 1; \/\/!< Label is defining it$/;"	m	class:gbe::ir::Context
LABEL_IS_POINTED	./ir/context.hpp	/^    static const uint8_t LABEL_IS_POINTED = 1 << 0; \/\/!< Branch is using it$/;"	m	class:gbe::ir::Context
LD_MSG_ORDER_IVB	./backend/gen_insn_selection.cpp	311;"	d	file:
LD_MSG_ORDER_SKL	./backend/gen_insn_selection.cpp	312;"	d	file:
LI	./llvm/llvm_gen_backend.cpp	/^    LoopInfo *LI;$/;"	m	class:gbe::GenWriter	file:
LIKELY	./sys/platform.hpp	191;"	d
LLVM_ROOT_PATH	./Android.mk	/^LLVM_ROOT_PATH := external\/llvm$/;"	m
LLVM_VERSION_MAJOR	./llvm/llvm_gen_backend.cpp	91;"	d	file:
LLVM_VERSION_MINOR	./llvm/llvm_gen_backend.cpp	95;"	d	file:
LOADI	./ir/instruction.cpp	/^  Instruction LOADI(Type type, Register dst, ImmediateIndex value) {$/;"	f	namespace:gbe::ir
LOAD_INT64_IMM	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::LOAD_INT64_IMM(GenRegister dest, GenRegister value) {$/;"	f	class:gbe::Gen8Encoder
LOAD_INT64_IMM	./backend/gen_encoder.cpp	/^  void GenEncoder::LOAD_INT64_IMM(GenRegister dest, GenRegister value) {$/;"	f	class:gbe::GenEncoder
LOCAL_CFLAGS	./Android.mk	/^LOCAL_CFLAGS := $(SUBDIR_C_CXX_FLAGS)$/;"	m
LOCAL_CFLAGS	./Android.mk	/^LOCAL_CFLAGS = $(LLVM_CFLAGS) -std=gnu++11 -fexceptions$/;"	m
LOCAL_CLANG	./Android.mk	/^LOCAL_CLANG := true$/;"	m
LOCAL_CPPFLAGS	./Android.mk	/^LOCAL_CPPFLAGS := $(SUBDIR_C_CXX_FLAGS)$/;"	m
LOCAL_C_INCLUDES	./Android.mk	/^LOCAL_C_INCLUDES := $(TOP_C_INCLUDE) \\$/;"	m
LOCAL_LDFLAGS	./Android.mk	/^LOCAL_LDFLAGS := -Wl,--no-undefined$/;"	m
LOCAL_LDLIBS	./Android.mk	/^LOCAL_LDLIBS := $(LLVM_LFLAGS)$/;"	m
LOCAL_MODULE	./Android.mk	/^LOCAL_MODULE := gbe_bin_generater$/;"	m
LOCAL_MODULE	./Android.mk	/^LOCAL_MODULE := libgbe$/;"	m
LOCAL_MODULE	./Android.mk	/^LOCAL_MODULE := libgbeinterp$/;"	m
LOCAL_MODULE	./libocl/Android.mk	/^LOCAL_MODULE := libgbe$/;"	m
LOCAL_MODULE_CLASS	./Android.mk	/^LOCAL_MODULE_CLASS := SHARED_LIBRARIES$/;"	m
LOCAL_MODULE_CLASS	./libocl/Android.mk	/^LOCAL_MODULE_CLASS := SHARED_LIBRARIES$/;"	m
LOCAL_MODULE_TAGS	./Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	./libocl/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_PATH	./Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	./libocl/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_POINTER	./ir/function.hpp	/^      LOCAL_POINTER     = 2, \/\/ __local$/;"	e	enum:gbe::ir::FunctionArgument::Type
LOCAL_SHARED_LIBRARIES	./Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	./Android.mk	/^LOCAL_SHARED_LIBRARIES := libclang$/;"	m
LOCAL_SHARED_LIBRARIES	./Android.mk	/^LOCAL_SHARED_LIBRARIES := libgbe$/;"	m
LOCAL_SRC_FILES	./Android.mk	/^LOCAL_SRC_FILES := $(BACKEND_SRC_FILES)$/;"	m
LOCAL_SRC_FILES	./Android.mk	/^LOCAL_SRC_FILES := gbe_bin_generater.cpp$/;"	m
LOCAL_SRC_FILES	./Android.mk	/^LOCAL_SRC_FILES := gbe_bin_interpreter.cpp$/;"	m
LOCAL_SRC_FILES	./Android.mk	/^LOCAL_SRC_FILES = $(BACKEND_SRC_FILES)$/;"	m
LOCK_IS_FREE	./sys/mutex.hpp	/^    enum { LOCK_IS_FREE = 0, LOCK_IS_TAKEN = 1 };$/;"	e	enum:gbe::MutexActive::__anon186
LOCK_IS_TAKEN	./sys/mutex.hpp	/^    enum { LOCK_IS_FREE = 0, LOCK_IS_TAKEN = 1 };$/;"	e	enum:gbe::MutexActive::__anon186
LONG_MAX	./libocl/tmpl/ocl_integer.tmpl.h	28;"	d
LONG_MIN	./libocl/tmpl/ocl_integer.tmpl.h	29;"	d
LRP	./ir/instruction.cpp	/^  Instruction LRP(Type type, Register dst, Tuple src) {$/;"	f	namespace:gbe::ir
LabelInstruction	./ir/instruction.cpp	/^      INLINE LabelInstruction(LabelIndex labelIndex) {$/;"	f	class:gbe::ir::internal::LabelInstruction
LabelInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION LabelInstruction :$/;"	c	namespace:gbe::ir::internal	file:
LabelInstruction	./ir/instruction.hpp	/^  class LabelInstruction : public Instruction {$/;"	c	namespace:gbe::ir
LabelPair	./backend/gen_context.hpp	/^      LabelPair(ir::LabelIndex l0, ir::LabelIndex l1) :$/;"	f	struct:gbe::GenContext::LabelPair
LabelPair	./backend/gen_context.hpp	/^    typedef struct LabelPair {$/;"	s	class:gbe::GenContext
LabelPair	./backend/gen_context.hpp	/^    } LabelPair;$/;"	t	class:gbe::GenContext	typeref:struct:gbe::GenContext::LabelPair
LinearAllocator	./sys/alloc.cpp	/^  LinearAllocator::LinearAllocator(size_t minSize, size_t maxSize) :$/;"	f	class:gbe::LinearAllocator
LinearAllocator	./sys/alloc.hpp	/^  class LinearAllocator$/;"	c	namespace:gbe
LiveOut	./ir/liveness.hpp	/^    typedef set<Register> LiveOut;$/;"	t	class:gbe::ir::Liveness
LiveOutSet	./ir/value.cpp	/^  LiveOutSet::LiveOutSet(Liveness &liveness, const FunctionDAG &dag) :$/;"	f	class:gbe::ir::LiveOutSet
LiveOutSet	./ir/value.cpp	/^  class LiveOutSet$/;"	c	namespace:gbe::ir	file:
Liveness	./ir/liveness.cpp	/^  Liveness::Liveness(Function &fn, bool isInGenBackend) : fn(fn) {$/;"	f	class:gbe::ir::Liveness
Liveness	./ir/liveness.hpp	/^  class Liveness : public NonCopyable$/;"	c	namespace:gbe::ir
Lo	./llvm/ExpandLargeIntegers.cpp	/^  PHINode *Lo, *Hi;$/;"	m	struct:__anon177::ForwardPHI	file:
Lo	./llvm/ExpandLargeIntegers.cpp	/^  T Lo, Hi;$/;"	m	struct:__anon177::LoHiPair	file:
LoHiPair	./llvm/ExpandLargeIntegers.cpp	/^  LoHiPair() : Lo(), Hi() {}$/;"	f	struct:__anon177::LoHiPair
LoHiPair	./llvm/ExpandLargeIntegers.cpp	/^  LoHiPair(T Lo, T Hi) : Lo(Lo), Hi(Hi) {}$/;"	f	struct:__anon177::LoHiPair
LoHiPair	./llvm/ExpandLargeIntegers.cpp	/^template <typename T> struct LoHiPair {$/;"	s	namespace:__anon177	file:
LoadAddImm	./ir/lowering.cpp	/^  struct LoadAddImm {$/;"	s	namespace:gbe::ir	file:
LoadAddImmSeq	./ir/lowering.cpp	/^  typedef vector<LoadAddImm> LoadAddImmSeq;$/;"	t	namespace:gbe::ir	file:
LoadImmInstruction	./ir/instruction.cpp	/^      INLINE LoadImmInstruction(Type type, Register dst, ImmediateIndex index)$/;"	f	class:gbe::ir::internal::LoadImmInstruction
LoadImmInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION LoadImmInstruction :$/;"	c	namespace:gbe::ir::internal	file:
LoadImmInstruction	./ir/instruction.hpp	/^  class LoadImmInstruction : public Instruction {$/;"	c	namespace:gbe::ir
LoadInstruction	./ir/instruction.cpp	/^        LoadInstruction(Type type,$/;"	f	class:gbe::ir::internal::LoadInstruction
LoadInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION LoadInstruction :$/;"	c	namespace:gbe::ir::internal	file:
LoadInstruction	./ir/instruction.hpp	/^  class LoadInstruction : public MemInstruction {$/;"	c	namespace:gbe::ir
LoadInstructionPattern	./backend/gen_insn_selection.cpp	/^    LoadInstructionPattern(void) : SelectionPattern(1, 1) {$/;"	f	class:gbe::LoadInstructionPattern
LoadInstructionPattern	./backend/gen_insn_selection.cpp	/^  class LoadInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
LocationMap	./ir/function.hpp	/^    typedef map<PushLocation, Register> LocationMap;$/;"	t	class:gbe::ir::Function
Lock	./sys/mutex.hpp	/^    Lock (Mutex& mutex) : mutex(mutex) { mutex.lock(); }$/;"	f	class:gbe::Lock
Lock	./sys/mutex.hpp	/^  template<typename Mutex> class Lock {$/;"	c	namespace:gbe
LockOutput	./ir/printf.hpp	/^        LockOutput(void) {$/;"	f	struct:gbe::ir::PrintfSet::LockOutput
LockOutput	./ir/printf.hpp	/^      struct LockOutput {$/;"	s	class:gbe::ir::PrintfSet
LockOutput	./ir/profiling.hpp	/^        LockOutput(void) {$/;"	f	struct:gbe::ir::ProfilingInfo::LockOutput
LockOutput	./ir/profiling.hpp	/^      struct LockOutput {$/;"	s	class:gbe::ir::ProfilingInfo
Loop	./ir/function.hpp	/^    Loop(LabelIndex pre,$/;"	f	struct:gbe::ir::Loop
Loop	./ir/function.hpp	/^  struct Loop : public NonCopyable$/;"	s	namespace:gbe::ir
MAD	./ir/instruction.cpp	/^  Instruction MAD(Type type, Register dst, Tuple src) {$/;"	f	namespace:gbe::ir
MADM	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::MADM(GenRegister dst, GenRegister src0, GenRegister src1, GenRegister src2,$/;"	f	class:gbe::Gen8Encoder
MASK_CONTROL	./backend/gen/gen_mesa_disasm.c	566;"	d	file:
MATCH_BDW_HEADER	./backend/gen_program.cpp	318;"	d	file:
MATCH_BXT_HEADER	./backend/gen_program.cpp	320;"	d	file:
MATCH_BYT_HEADER	./backend/gen_program.cpp	314;"	d	file:
MATCH_CHV_HEADER	./backend/gen_program.cpp	317;"	d	file:
MATCH_DEVICE	./backend/gen_program.cpp	324;"	d	file:
MATCH_GLK_HEADER	./backend/gen_program.cpp	322;"	d	file:
MATCH_HSW_HEADER	./backend/gen_program.cpp	316;"	d	file:
MATCH_IVB_HEADER	./backend/gen_program.cpp	315;"	d	file:
MATCH_KBL_HEADER	./backend/gen_program.cpp	321;"	d	file:
MATCH_SKL_HEADER	./backend/gen_program.cpp	319;"	d	file:
MATH	./backend/gen_encoder.cpp	/^  void GenEncoder::MATH(GenRegister dst, uint32_t function, GenRegister src) {$/;"	f	class:gbe::GenEncoder
MATH	./backend/gen_encoder.cpp	/^  void GenEncoder::MATH(GenRegister dst, uint32_t function, GenRegister src0, GenRegister src1) {$/;"	f	class:gbe::GenEncoder
MATH	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::MATH(Reg dst, uint32_t function, Reg src) {$/;"	f	class:gbe::Selection::Opaque
MATH	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::MATH(Reg dst, uint32_t function, Reg src0, Reg src1) {$/;"	f	class:gbe::Selection::Opaque
MATH_FUNCTION	./backend/gen/gen_mesa_disasm.c	575;"	d	file:
MATH_PRECISION	./backend/gen/gen_mesa_disasm.c	579;"	d	file:
MATH_SATURATE	./backend/gen/gen_mesa_disasm.c	576;"	d	file:
MATH_SCALAR	./backend/gen/gen_mesa_disasm.c	578;"	d	file:
MATH_SIGNED	./backend/gen/gen_mesa_disasm.c	577;"	d	file:
MATH_WITH_ACC	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::MATH_WITH_ACC(GenRegister dst, uint32_t function, GenRegister src0, GenRegister src1,$/;"	f	class:gbe::Gen8Encoder
MAXFLOAT	./libocl/include/ocl_float.h	36;"	d
MAX_ACC_REGISTER	./backend/gen_insn_scheduling.cpp	/^    static const uint32_t MAX_ACC_REGISTER = 1u;$/;"	m	struct:gbe::DependencyTracker	file:
MAX_ARF_REGISTER	./backend/gen_insn_scheduling.cpp	/^    static const uint32_t MAX_ARF_REGISTER = MAX_FLAG_REGISTER + MAX_ACC_REGISTER + MAX_TM_REGISTER + MAX_ST_REGISTER;$/;"	m	struct:gbe::DependencyTracker	file:
MAX_DST_NUM	./backend/gen_insn_selection.hpp	/^    enum { MAX_DST_NUM = 17 };$/;"	e	enum:gbe::SelectionInstruction::__anon82
MAX_DST_NUM	./ir/instruction.hpp	/^    static const uint32_t MAX_DST_NUM = 32;$/;"	m	class:gbe::ir::Instruction
MAX_FLAG_REGISTER	./backend/gen_insn_scheduling.cpp	/^    static const uint32_t MAX_FLAG_REGISTER = 8u;$/;"	m	struct:gbe::DependencyTracker	file:
MAX_INDEX	./ir/register.hpp	/^    enum { MAX_INDEX = 0xffffffff };$/;"	e	enum:gbe::ir::RegisterFile::__anon155
MAX_MIXED_POINTER	./ir/instruction.hpp	34;"	d
MAX_SRC_NUM	./backend/gen_insn_selection.cpp	/^    uint64_t mergeable:ir::Instruction::MAX_SRC_NUM;$/;"	m	class:gbe::SelectionDAG::ir::Instruction	file:
MAX_SRC_NUM	./backend/gen_insn_selection.hpp	/^    enum { MAX_SRC_NUM = 40 };$/;"	e	enum:gbe::SelectionInstruction::__anon81
MAX_SRC_NUM	./ir/instruction.hpp	/^    static const uint32_t MAX_SRC_NUM = 40;$/;"	m	class:gbe::ir::Instruction
MAX_STATE_NUM	./backend/gen_encoder.hpp	/^    enum { MAX_STATE_NUM = 16 };$/;"	e	enum:gbe::GenEncoder::__anon8
MAX_STATE_NUM	./backend/gen_insn_selection.cpp	/^    enum { MAX_STATE_NUM = 16 };$/;"	e	enum:gbe::Selection::Opaque::__anon100	file:
MAX_ST_REGISTER	./backend/gen_insn_scheduling.cpp	/^    static const uint32_t MAX_ST_REGISTER = 2u;$/;"	m	struct:gbe::DependencyTracker	file:
MAX_TM_REGISTER	./backend/gen_insn_scheduling.cpp	/^    static const uint32_t MAX_TM_REGISTER = 1u;$/;"	m	struct:gbe::DependencyTracker	file:
MAYBE_UNUSED	./sys/platform.hpp	169;"	d
MAYBE_UNUSED	./sys/platform.hpp	171;"	d
MB	./sys/platform.hpp	/^    MB = (KB*KB),$/;"	e	enum:gbe::__anon184
MBREAD	./backend/gen7_encoder.cpp	/^  void Gen7Encoder::MBREAD(GenRegister dst, GenRegister header, uint32_t bti, uint32_t size) {$/;"	f	class:gbe::Gen7Encoder
MBREAD	./backend/gen_encoder.cpp	/^  void GenEncoder::MBREAD(GenRegister dst, GenRegister header, uint32_t bti, uint32_t response_size) {$/;"	f	class:gbe::GenEncoder
MBREAD	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::MBREAD(GenRegister* dsts,$/;"	f	class:gbe::Selection::Opaque
MBREAD	./ir/instruction.cpp	/^  Instruction MBREAD(uint8_t imageIndex, Tuple dst, uint8_t vec_size, Tuple coord, uint8_t srcNum, Type type) {$/;"	f	namespace:gbe::ir
MBWRITE	./backend/gen7_encoder.cpp	/^  void Gen7Encoder::MBWRITE(GenRegister header, GenRegister data, uint32_t bti, uint32_t size, bool useSends) {$/;"	f	class:gbe::Gen7Encoder
MBWRITE	./backend/gen9_encoder.cpp	/^  void Gen9Encoder::MBWRITE(GenRegister header, GenRegister data, uint32_t bti, uint32_t data_size, bool useSends)$/;"	f	class:gbe::Gen9Encoder
MBWRITE	./backend/gen_encoder.cpp	/^  void GenEncoder::MBWRITE(GenRegister header, GenRegister data, uint32_t bti, uint32_t data_size, bool useSends) {$/;"	f	class:gbe::GenEncoder
MBWRITE	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::MBWRITE(GenRegister header,$/;"	f	class:gbe::Selection::Opaque
MBWRITE	./ir/instruction.cpp	/^  Instruction MBWRITE(uint8_t imageIndex, Tuple srcTuple, uint8_t srcNum, uint8_t vec_size, Type type) {$/;"	f	namespace:gbe::ir
MSG_GW_ACKREQ	./backend/gen/gen_mesa_disasm.c	608;"	d	file:
MSG_GW_NOTIFY	./backend/gen/gen_mesa_disasm.c	607;"	d	file:
MSG_GW_SUBFUNC	./backend/gen/gen_mesa_disasm.c	606;"	d	file:
MUL	./backend/gen_encoder.cpp	/^  void GenEncoder::MUL(GenRegister dest, GenRegister src0, GenRegister src1) {$/;"	f	class:gbe::GenEncoder
M_180_PI_F	./libocl/include/ocl_float.h	92;"	d
M_1_PI_F	./libocl/include/ocl_float.h	90;"	d
M_2_PI_F	./libocl/include/ocl_float.h	91;"	d
M_2_SQRTPI_F	./libocl/include/ocl_float.h	93;"	d
M_E_F	./libocl/include/ocl_float.h	81;"	d
M_LN10_F	./libocl/include/ocl_float.h	86;"	d
M_LN2_F	./libocl/include/ocl_float.h	85;"	d
M_LOG10E_F	./libocl/include/ocl_float.h	83;"	d
M_LOG210_F	./libocl/include/ocl_float.h	84;"	d
M_LOG2E_F	./libocl/include/ocl_float.h	82;"	d
M_PI_2_F	./libocl/include/ocl_float.h	88;"	d
M_PI_4_F	./libocl/include/ocl_float.h	89;"	d
M_PI_F	./libocl/include/ocl_float.h	87;"	d
M_SQRT1_2_F	./libocl/include/ocl_float.h	95;"	d
M_SQRT2_F	./libocl/include/ocl_float.h	94;"	d
MaxTimestampProfilingPoints	./ir/profiling.hpp	/^      const static uint32_t MaxTimestampProfilingPoints = 20;$/;"	m	class:gbe::ir::ProfilingInfo
MaxTries	./backend/gen_insn_selection_optimize.cpp	/^    static const size_t MaxTries = 1;   \/\/the max times of optimization try$/;"	m	class:gbe::SelBasicBlockOptimizer	file:
MediaBlockReadInstruction	./ir/instruction.cpp	/^      INLINE MediaBlockReadInstruction(uint8_t imageIdx, Tuple dst, uint8_t vec_size, Tuple srcTuple, uint8_t srcNum, Type type) {$/;"	f	class:gbe::ir::internal::MediaBlockReadInstruction
MediaBlockReadInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION MediaBlockReadInstruction :$/;"	c	namespace:gbe::ir::internal	file:
MediaBlockReadInstruction	./ir/instruction.hpp	/^  class MediaBlockReadInstruction : public Instruction {$/;"	c	namespace:gbe::ir
MediaBlockWriteInstruction	./ir/instruction.cpp	/^      INLINE MediaBlockWriteInstruction(uint8_t imageIdx, Tuple srcTuple, uint8_t srcNum, uint8_t vec_size, Type type) {$/;"	f	class:gbe::ir::internal::MediaBlockWriteInstruction
MediaBlockWriteInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION MediaBlockWriteInstruction :$/;"	c	namespace:gbe::ir::internal	file:
MediaBlockWriteInstruction	./ir/instruction.hpp	/^  class MediaBlockWriteInstruction : public Instruction {$/;"	c	namespace:gbe::ir
MemDebugger	./sys/alloc.cpp	/^    MemDebugger(void) : unfreedNum(0), allocNum(0) {}$/;"	f	struct:gbe::MemDebugger
MemDebugger	./sys/alloc.cpp	/^  struct MemDebugger {$/;"	s	namespace:gbe	file:
MemDebuggerDumpAlloc	./sys/alloc.cpp	/^  void MemDebuggerDumpAlloc(void) {$/;"	f	namespace:gbe
MemDebuggerDumpAlloc	./sys/alloc.hpp	/^  INLINE void  MemDebuggerDumpAlloc(void) {}$/;"	f	namespace:gbe
MemDebuggerEnableMemoryInitialization	./sys/alloc.cpp	/^  void MemDebuggerEnableMemoryInitialization(bool enabled) {$/;"	f	namespace:gbe
MemDebuggerEnableMemoryInitialization	./sys/alloc.hpp	/^  INLINE void  MemDebuggerEnableMemoryInitialization(bool enabled) {}$/;"	f	namespace:gbe
MemDebuggerEnd	./sys/alloc.cpp	/^  static void MemDebuggerEnd(void) {$/;"	f	namespace:gbe
MemDebuggerInitializeMem	./sys/alloc.cpp	/^  void MemDebuggerInitializeMem(void *mem, size_t sz) {$/;"	f	namespace:gbe
MemDebuggerInitializeMem	./sys/alloc.hpp	/^  INLINE void  MemDebuggerInitializeMem(void *mem, size_t sz) {}$/;"	f	namespace:gbe
MemDebuggerInsertAlloc	./sys/alloc.cpp	/^  void* MemDebuggerInsertAlloc(void *ptr, const char *file, const char *function, int line) {$/;"	f	namespace:gbe
MemDebuggerInsertAlloc	./sys/alloc.hpp	/^  INLINE void* MemDebuggerInsertAlloc(void *ptr, const char*, const char*, int) {return ptr;}$/;"	f	namespace:gbe
MemDebuggerRemoveAlloc	./sys/alloc.cpp	/^  void MemDebuggerRemoveAlloc(void *ptr) {$/;"	f	namespace:gbe
MemDebuggerRemoveAlloc	./sys/alloc.hpp	/^  INLINE void  MemDebuggerRemoveAlloc(void *ptr) {}$/;"	f	namespace:gbe
MemDebuggerStart	./sys/alloc.cpp	/^  static void MemDebuggerStart(void) {$/;"	f	namespace:gbe
MemInstruction	./ir/instruction.cpp	/^      MemInstruction(AddressMode   _AM,$/;"	f	class:gbe::ir::internal::MemInstruction
MemInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION MemInstruction :$/;"	c	namespace:gbe::ir::internal	file:
MemInstruction	./ir/instruction.hpp	/^  class MemInstruction : public Instruction {$/;"	c	namespace:gbe::ir
MemoryInstHelper	./llvm/llvm_gen_backend.cpp	/^      MemoryInstHelper(ir::Context &c, ir::Unit &u, GenWriter *w, bool l)$/;"	f	class:gbe::MemoryInstHelper
MemoryInstHelper	./llvm/llvm_gen_backend.cpp	/^  class MemoryInstHelper {$/;"	c	namespace:gbe	file:
MulAddInstructionPattern	./backend/gen_insn_selection.cpp	/^    MulAddInstructionPattern(void) : SelectionPattern(2, 1) {$/;"	f	class:gbe::MulAddInstructionPattern
MulAddInstructionPattern	./backend/gen_insn_selection.cpp	/^  class MulAddInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
MutexActive	./sys/mutex.hpp	/^    INLINE MutexActive(void) : _lock(LOCK_IS_FREE) {}$/;"	f	class:gbe::MutexActive
MutexActive	./sys/mutex.hpp	/^  class MutexActive {$/;"	c	namespace:gbe
MutexSys	./sys/mutex.cpp	/^  MutexSys::MutexSys( void ) { mutex = new CRITICAL_SECTION; InitializeCriticalSection((CRITICAL_SECTION*)mutex); }$/;"	f	class:gbe::MutexSys
MutexSys	./sys/mutex.cpp	/^  MutexSys::MutexSys( void ) { mutex = new pthread_mutex_t; pthread_mutex_init((pthread_mutex_t*)mutex, NULL); }$/;"	f	class:gbe::MutexSys
MutexSys	./sys/mutex.hpp	/^  class MutexSys {$/;"	c	namespace:gbe
NAN	./libocl/include/ocl_float.h	80;"	d
NDstPolicy	./ir/instruction.cpp	/^    struct NDstPolicy {$/;"	s	namespace:gbe::ir::internal	file:
NEED_DST_GRF_TYPE_FIX	./backend/gen_reg_allocation.cpp	431;"	d	file:
NOINLINE	./sys/platform.hpp	144;"	d
NOINLINE	./sys/platform.hpp	145;"	d
NOINLINE	./sys/platform.hpp	153;"	d
NOINLINE	./sys/platform.hpp	155;"	d
NOP	./backend/gen_encoder.cpp	/^  void GenEncoder::NOP(void) {$/;"	f	class:gbe::GenEncoder
NOP	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::NOP(void) { this->appendInsn(SEL_OP_NOP, 0, 0); }$/;"	f	class:gbe::Selection::Opaque
NOT_IMPLEMENTED	./sys/platform.hpp	214;"	d
NOT_SUPPORTED	./sys/platform.hpp	215;"	d
NO_ERROR	./backend/gen_context.hpp	/^    NO_ERROR,$/;"	e	enum:gbe::__anon39
NO_SWIZZLE	./backend/gen7_encoder.cpp	174;"	d	file:
NO_SWIZZLE	./backend/gen7_encoder.cpp	306;"	d	file:
NO_SWIZZLE	./backend/gen8_encoder.cpp	667;"	d	file:
NO_SWIZZLE	./backend/gen_insn_compact.cpp	344;"	d	file:
NO_SWIZZLE	./backend/gen_insn_compact.cpp	391;"	d	file:
NSrcPolicy	./ir/instruction.cpp	/^    struct NSrcPolicy {$/;"	s	namespace:gbe::ir::internal	file:
NULL	./libocl/include/ocl_types.h	30;"	d
NaryInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION NaryInstruction :$/;"	c	namespace:gbe::ir::internal	file:
NonCopyable	./sys/platform.hpp	/^  INLINE NonCopyable(const NonCopyable&) {}$/;"	f	class:NonCopyable
NonCopyable	./sys/platform.hpp	/^  INLINE NonCopyable(void) {}$/;"	f	class:NonCopyable
NonCopyable	./sys/platform.hpp	/^class NonCopyable$/;"	c
NullaryInstruction	./ir/instruction.cpp	/^      NullaryInstruction(Opcode opcode, Type type, Register dst) {$/;"	f	class:gbe::ir::internal::NullaryInstruction
NullaryInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION NullaryInstruction : public NaryInstruction<0>$/;"	c	namespace:gbe::ir::internal	file:
NullaryInstruction	./ir/instruction.hpp	/^  class NullaryInstruction : public Instruction {$/;"	c	namespace:gbe::ir
NullaryInstructionPattern	./backend/gen_insn_selection.cpp	/^    NullaryInstructionPattern(void) : SelectionPattern(1,1) {$/;"	f	class:gbe::NullaryInstructionPattern
NullaryInstructionPattern	./backend/gen_insn_selection.cpp	/^  class NullaryInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
OBREAD	./backend/gen_encoder.cpp	/^  void GenEncoder::OBREAD(GenRegister dst, GenRegister header, uint32_t bti, uint32_t ow_size) {$/;"	f	class:gbe::GenEncoder
OBREAD	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::OBREAD(GenRegister* dsts,$/;"	f	class:gbe::Selection::Opaque
OBREADA64	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::OBREADA64(GenRegister dst, GenRegister header, uint32_t bti, uint32_t ow_size) {$/;"	f	class:gbe::Gen8Encoder
OBREADA64	./backend/gen_encoder.cpp	/^  void GenEncoder::OBREADA64(GenRegister dst, GenRegister header, uint32_t bti, uint32_t elemSize) {$/;"	f	class:gbe::GenEncoder
OBWRITE	./backend/gen9_encoder.cpp	/^  void Gen9Encoder::OBWRITE(GenRegister header, GenRegister data, uint32_t bti, uint32_t ow_size, bool useSends)$/;"	f	class:gbe::Gen9Encoder
OBWRITE	./backend/gen_encoder.cpp	/^  void GenEncoder::OBWRITE(GenRegister header, GenRegister data, uint32_t bti, uint32_t ow_size, bool useSends) {$/;"	f	class:gbe::GenEncoder
OBWRITE	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::OBWRITE(GenRegister header,$/;"	f	class:gbe::Selection::Opaque
OBWRITEA64	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::OBWRITEA64(GenRegister header, uint32_t bti, uint32_t ow_size) {$/;"	f	class:gbe::Gen8Encoder
OBWRITEA64	./backend/gen_encoder.cpp	/^  void GenEncoder::OBWRITEA64(GenRegister header, uint32_t bti, uint32_t elemSize) {$/;"	f	class:gbe::GenEncoder
OCLInstrinsic	./llvm/llvm_gen_backend.hpp	/^  enum OCLInstrinsic {$/;"	g	namespace:gbe
OCLIntrinsicMap	./llvm/llvm_gen_backend.hpp	/^    OCLIntrinsicMap(void) {$/;"	f	struct:gbe::OCLIntrinsicMap
OCLIntrinsicMap	./llvm/llvm_gen_backend.hpp	/^  struct OCLIntrinsicMap {$/;"	s	namespace:gbe
OCL_COPY_MODULES	./libocl/Android.mk	/^OCL_COPY_MODULES := ocl ocl_types ocl_float ocl_printf$/;"	m
OCL_COPY_MODULES	./libocl/Android.mk	/^OCL_COPY_MODULES := ocl_workitem ocl_atom ocl_async ocl_sync ocl_memcpy ocl_memset ocl_misc ocl_vload ocl_geometric ocl_image ocl_work_group$/;"	m
OCL_COPY_MODULES_PY	./libocl/Android.mk	/^OCL_COPY_MODULES_PY := ocl_common ocl_relational ocl_integer ocl_math ocl_simd$/;"	m
OCL_COPY_MODULES_SH	./libocl/Android.mk	/^OCL_COPY_MODULES_SH := ocl_as ocl_convert$/;"	m
OCL_LL_MODULES	./libocl/Android.mk	/^OCL_LL_MODULES := ocl_barrier ocl_clz$/;"	m
OCL_SOURCE_FILES	./libocl/Android.mk	/^OCL_SOURCE_FILES := $(OCL_COPY_MODULES)$/;"	m
OPCODE	./backend/gen/gen_mesa_disasm.c	572;"	d	file:
OP_NAME_LENGTH	./backend/gen_insn_selection_output.cpp	98;"	d	file:
OUTF_UPDATE_SZ	./gbe_bin_generater.cpp	154;"	d	file:
OUTPUT_BITCODE	./llvm/llvm_to_gen.cpp	227;"	d	file:
OUTPUT_BITCODE	./llvm/llvm_to_gen.cpp	235;"	d	file:
OUTPUT_BITCODE	./llvm/llvm_to_gen.cpp	243;"	d	file:
OUTS_UPDATE_SZ	./gbe_bin_generater.cpp	153;"	d	file:
OUT_ATOMIC_OP	./ir/instruction.cpp	1725;"	d	file:
OUT_OF_RANGE_IF_ENDIF	./backend/gen_context.hpp	/^    OUT_OF_RANGE_IF_ENDIF,$/;"	e	enum:gbe::__anon39
OUT_UPDATE_SZ	./backend/program.cpp	185;"	d	file:
OUT_UPDATE_SZ	./backend/program.cpp	541;"	d	file:
OUT_UPDATE_SZ	./ir/constant.cpp	41;"	d	file:
OUT_UPDATE_SZ	./ir/image.cpp	106;"	d	file:
OUT_UPDATE_SZ	./ir/reloc.cpp	30;"	d	file:
OUT_UPDATE_SZ	./ir/sampler.cpp	64;"	d	file:
OVERLOADABLE	./libocl/include/ocl_types.h	36;"	d
OWORD_RW_BLOCK_SIZE	./backend/gen/gen_mesa_disasm.c	611;"	d	file:
OneToManyPattern	./backend/gen_insn_selection.cpp	/^    OneToManyPattern(uint32_t insnNum, uint32_t cost) :$/;"	f	class:gbe::OneToManyPattern
OneToManyPattern	./backend/gen_insn_selection.cpp	/^  class OneToManyPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
Opaque	./backend/gen_insn_selection.cpp	/^  Selection::Opaque::Opaque(GenContext &ctx) :$/;"	f	class:gbe::Selection::Opaque
Opaque	./backend/gen_insn_selection.cpp	/^  class Selection::Opaque$/;"	c	class:gbe::Selection	file:
Opaque	./backend/gen_reg_allocation.cpp	/^  GenRegAllocator::Opaque::Opaque(GenContext &ctx) : ctx(ctx) {}$/;"	f	class:gbe::GenRegAllocator::Opaque
Opaque	./backend/gen_reg_allocation.cpp	/^  class GenRegAllocator::Opaque$/;"	c	class:gbe::GenRegAllocator	file:
PACK_BYTE	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::PACK_BYTE(const GenRegister dst, const GenRegister *src, uint32_t elemSize, uint32_t elemNum) {$/;"	f	class:gbe::Selection::Opaque
PACK_LONG	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::PACK_LONG(const GenRegister dst, const GenRegister src) {$/;"	f	class:gbe::Selection::Opaque
PASS_EMIT_INSTRUCTIONS	./llvm/llvm_gen_backend.cpp	/^      PASS_EMIT_INSTRUCTIONS = 1$/;"	e	enum:gbe::GenWriter::Pass	file:
PASS_EMIT_REGISTERS	./llvm/llvm_gen_backend.cpp	/^      PASS_EMIT_REGISTERS = 0,$/;"	e	enum:gbe::GenWriter::Pass	file:
PING	./sys/platform.hpp	187;"	d
PIPE	./ir/function.hpp	/^      PIPE              = 7  \/\/ pipe$/;"	e	enum:gbe::ir::FunctionArgument::Type
POINTER_32_BITS	./ir/register.hpp	/^    POINTER_32_BITS = 32,$/;"	e	enum:gbe::ir::PointerSize
POINTER_64_BITS	./ir/register.hpp	/^    POINTER_64_BITS = 64$/;"	e	enum:gbe::ir::PointerSize
POST_ALLOC	./backend/gen_insn_scheduling.cpp	/^    POST_ALLOC     \/\/ FIFO scheduling (limits latency problems)$/;"	e	enum:gbe::SchedulePolicy	file:
POS_AFTER	./ir/liveness.cpp	/^    POS_AFTER = 2$/;"	e	enum:gbe::ir::UsePosition	file:
POS_BEFORE	./ir/liveness.cpp	/^    POS_BEFORE = 0,$/;"	e	enum:gbe::ir::UsePosition	file:
POS_HERE	./ir/liveness.cpp	/^    POS_HERE = 1,$/;"	e	enum:gbe::ir::UsePosition	file:
PRED_CTRL	./backend/gen/gen_mesa_disasm.c	561;"	d	file:
PRED_INV	./backend/gen/gen_mesa_disasm.c	562;"	d	file:
PRE_ALLOC	./backend/gen_insn_scheduling.cpp	/^    PRE_ALLOC = 0, \/\/ LIFO scheduling (tends to limit register pressure)$/;"	e	enum:gbe::SchedulePolicy	file:
PRINT	./sys/platform.hpp	188;"	d
PRINTF	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::PRINTF(uint8_t bti, GenRegister tmp0, GenRegister tmp1,$/;"	f	class:gbe::Selection::Opaque
PRINTF	./ir/instruction.cpp	/^  Instruction PRINTF(Register dst, Tuple srcTuple, Tuple typeTuple, uint8_t srcNum, uint8_t bti, uint16_t num) {$/;"	f	namespace:gbe::ir
PRINTF_CONVERSION_A	./ir/printf.hpp	/^      PRINTF_CONVERSION_A,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_C	./ir/printf.hpp	/^      PRINTF_CONVERSION_C,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_D	./ir/printf.hpp	/^      PRINTF_CONVERSION_D,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_E	./ir/printf.hpp	/^      PRINTF_CONVERSION_E,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_F	./ir/printf.hpp	/^      PRINTF_CONVERSION_F,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_G	./ir/printf.hpp	/^      PRINTF_CONVERSION_G,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_I	./ir/printf.hpp	/^      PRINTF_CONVERSION_I,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_INVALID	./ir/printf.hpp	/^      PRINTF_CONVERSION_INVALID,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_O	./ir/printf.hpp	/^      PRINTF_CONVERSION_O,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_P	./ir/printf.hpp	/^      PRINTF_CONVERSION_P$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_S	./ir/printf.hpp	/^      PRINTF_CONVERSION_S,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_U	./ir/printf.hpp	/^      PRINTF_CONVERSION_U,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_X	./ir/printf.hpp	/^      PRINTF_CONVERSION_X,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_a	./ir/printf.hpp	/^      PRINTF_CONVERSION_a,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_e	./ir/printf.hpp	/^      PRINTF_CONVERSION_e,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_f	./ir/printf.hpp	/^      PRINTF_CONVERSION_f,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_g	./ir/printf.hpp	/^      PRINTF_CONVERSION_g,$/;"	e	enum:gbe::ir::__anon158
PRINTF_CONVERSION_x	./ir/printf.hpp	/^      PRINTF_CONVERSION_x,$/;"	e	enum:gbe::ir::__anon158
PRINTF_LM_H	./ir/printf.hpp	/^      PRINTF_LM_H,$/;"	e	enum:gbe::ir::__anon157
PRINTF_LM_HH	./ir/printf.hpp	/^      PRINTF_LM_HH,$/;"	e	enum:gbe::ir::__anon157
PRINTF_LM_HL	./ir/printf.hpp	/^      PRINTF_LM_HL,$/;"	e	enum:gbe::ir::__anon157
PRINTF_LM_L	./ir/printf.hpp	/^      PRINTF_LM_L,$/;"	e	enum:gbe::ir::__anon157
PRINTF_LM_NONE	./ir/printf.hpp	/^      PRINTF_LM_NONE,$/;"	e	enum:gbe::ir::__anon157
PRINTF_SLOT_TYPE_NONE	./ir/printf.hpp	/^      PRINTF_SLOT_TYPE_NONE,$/;"	e	enum:gbe::ir::__anon159
PRINTF_SLOT_TYPE_STATE	./ir/printf.hpp	/^      PRINTF_SLOT_TYPE_STATE$/;"	e	enum:gbe::ir::__anon159
PRINTF_SLOT_TYPE_STRING	./ir/printf.hpp	/^      PRINTF_SLOT_TYPE_STRING,$/;"	e	enum:gbe::ir::__anon159
PRINT_SOMETHING	./ir/printf.cpp	87;"	d	file:
PTR_RELEASE	./ir/value.cpp	465;"	d	file:
PTR_RELEASE	./ir/value.cpp	502;"	d	file:
PURE	./libocl/include/ocl_types.h	37;"	d
Pass	./llvm/llvm_gen_backend.cpp	/^    enum Pass {$/;"	g	class:gbe::GenWriter	file:
PatchInfo	./backend/program.hpp	/^    INLINE PatchInfo(gbe_curbe_type type, uint32_t subType = 0u, uint32_t offset = 0u) :$/;"	f	struct:gbe::PatchInfo
PatchInfo	./backend/program.hpp	/^    INLINE PatchInfo(void) {}$/;"	f	struct:gbe::PatchInfo
PatchInfo	./backend/program.hpp	/^  struct PatchInfo {$/;"	s	namespace:gbe
PatternList	./backend/gen_insn_selection.cpp	/^    typedef vector<const SelectionPattern*> PatternList;$/;"	t	class:gbe::SelectionLibrary	file:
PayloadRegisterData	./ir/register.hpp	/^    struct PayloadRegisterData {$/;"	s	class:gbe::ir::RegisterData
PhiSafeInsertPt	./llvm/ExpandUtils.cpp	/^  Instruction *PhiSafeInsertPt(Use *U) {$/;"	f	namespace:llvm
PhiSafeReplaceUses	./llvm/ExpandUtils.cpp	/^  void PhiSafeReplaceUses(Use *U, Value *NewVal) {$/;"	f	namespace:llvm
Placeholders	./llvm/PromoteIntegers.cpp	/^  DenseMap<Value *, Value *> Placeholders;$/;"	m	class:__anon175::ConversionState	file:
PointerSize	./ir/register.hpp	/^  enum PointerSize {$/;"	g	namespace:gbe::ir
PrintfFmt	./ir/printf.hpp	/^      typedef vector<PrintfSlot> PrintfFmt;$/;"	t	class:gbe::ir::PrintfSet
PrintfInst	./llvm/llvm_printf_parser.cpp	/^    typedef std::pair<Instruction*, bool> PrintfInst;$/;"	t	class:gbe::PrintfParser	file:
PrintfInstruction	./ir/instruction.cpp	/^        INLINE PrintfInstruction(Register dst, Tuple srcTuple, Tuple typeTuple,$/;"	f	class:gbe::ir::internal::PrintfInstruction
PrintfInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION PrintfInstruction :$/;"	c	namespace:gbe::ir::internal	file:
PrintfInstruction	./ir/instruction.hpp	/^  class PrintfInstruction : public Instruction {$/;"	c	namespace:gbe::ir
PrintfInstructionPattern	./backend/gen_insn_selection.cpp	/^    PrintfInstructionPattern(void) : SelectionPattern(1,1) {$/;"	f	class:gbe::PrintfInstructionPattern
PrintfInstructionPattern	./backend/gen_insn_selection.cpp	/^  class PrintfInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
PrintfLog	./ir/printf.hpp	/^      PrintfLog(const char* p) {$/;"	f	struct:gbe::ir::PrintfLog
PrintfLog	./ir/printf.hpp	/^    struct PrintfLog {$/;"	s	namespace:gbe::ir
PrintfParser	./llvm/llvm_printf_parser.cpp	/^    PrintfParser(ir::Unit &unit) : FunctionPass(ID),$/;"	f	class:gbe::PrintfParser
PrintfParser	./llvm/llvm_printf_parser.cpp	/^  class PrintfParser : public FunctionPass$/;"	c	namespace:gbe	file:
PrintfSet	./ir/printf.hpp	/^      PrintfSet(const PrintfSet& other) {$/;"	f	class:gbe::ir::PrintfSet
PrintfSet	./ir/printf.hpp	/^    class PrintfSet \/\/: public Serializable$/;"	c	namespace:gbe::ir
PrintfSlot	./ir/printf.hpp	/^      PrintfSlot(PrintfState& st) {$/;"	f	struct:gbe::ir::PrintfSlot
PrintfSlot	./ir/printf.hpp	/^      PrintfSlot(const PrintfSlot & other) {$/;"	f	struct:gbe::ir::PrintfSlot
PrintfSlot	./ir/printf.hpp	/^      PrintfSlot(std::string& s) : str(s) {$/;"	f	struct:gbe::ir::PrintfSlot
PrintfSlot	./ir/printf.hpp	/^      PrintfSlot(void) {$/;"	f	struct:gbe::ir::PrintfSlot
PrintfSlot	./ir/printf.hpp	/^    struct PrintfSlot {$/;"	s	namespace:gbe::ir
PrintfState	./ir/printf.hpp	/^      PrintfState(const PrintfState & other) {$/;"	f	struct:gbe::ir::PrintfState
PrintfState	./ir/printf.hpp	/^      PrintfState(void) {$/;"	f	struct:gbe::ir::PrintfState
PrintfState	./ir/printf.hpp	/^    struct PrintfState {$/;"	s	namespace:gbe::ir
ProfilingInfo	./ir/profiling.hpp	/^      ProfilingInfo(const ProfilingInfo& other) {$/;"	f	class:gbe::ir::ProfilingInfo
ProfilingInfo	./ir/profiling.hpp	/^      ProfilingInfo(void) {$/;"	f	class:gbe::ir::ProfilingInfo
ProfilingInfo	./ir/profiling.hpp	/^    class ProfilingInfo \/\/: public Serializable$/;"	c	namespace:gbe::ir
ProfilingInserter	./llvm/llvm_profiling.cpp	/^    ProfilingInserter(int profiling) : FunctionPass(ID), profilingType(profiling)$/;"	f	class:gbe::ProfilingInserter
ProfilingInserter	./llvm/llvm_profiling.cpp	/^  class ProfilingInserter : public FunctionPass$/;"	c	namespace:gbe	file:
ProfilingReportItem	./ir/profiling.hpp	/^      } ProfilingReportItem;$/;"	t	class:gbe::ir::ProfilingInfo	typeref:struct:gbe::ir::ProfilingInfo::__anon151
ProfilingSimdType1	./ir/profiling.hpp	/^        ProfilingSimdType1,$/;"	e	enum:gbe::ir::ProfilingInfo::__anon150
ProfilingSimdType16	./ir/profiling.hpp	/^        ProfilingSimdType16,$/;"	e	enum:gbe::ir::ProfilingInfo::__anon150
ProfilingSimdType8	./ir/profiling.hpp	/^        ProfilingSimdType8,$/;"	e	enum:gbe::ir::ProfilingInfo::__anon150
Program	./backend/program.cpp	/^  Program::Program(uint32_t fast_relaxed_math) : fast_relaxed_math(fast_relaxed_math), $/;"	f	class:gbe::Program
Program	./backend/program.hpp	/^  class Program : public NonCopyable, public Serializable$/;"	c	namespace:gbe
PromoteIntegers	./llvm/PromoteIntegers.cpp	/^  PromoteIntegers() : FunctionPass(ID) {$/;"	f	class:__anon174::PromoteIntegers
PromoteIntegers	./llvm/PromoteIntegers.cpp	/^class PromoteIntegers : public FunctionPass {$/;"	c	namespace:__anon174	file:
PtrBaseMapIter	./llvm/llvm_gen_backend.cpp	/^    typedef map<Value *, Value *>::iterator PtrBaseMapIter;$/;"	t	class:gbe::GenWriter	file:
PtrOrigMapIter	./llvm/llvm_gen_backend.cpp	/^    typedef map<Value *, SmallVector<Value *, 4>>::iterator PtrOrigMapIter;$/;"	t	class:gbe::GenWriter	file:
PushLocation	./ir/function.hpp	/^    INLINE PushLocation(const Function &fn, uint32_t argID, uint32_t offset) :$/;"	f	struct:gbe::ir::PushLocation
PushLocation	./ir/function.hpp	/^  struct PushLocation {$/;"	s	namespace:gbe::ir
PushMap	./ir/function.hpp	/^    typedef map<Register, PushLocation> PushMap;$/;"	t	class:gbe::ir::Function
QUARTER_CONTROL	./backend/gen/gen_mesa_disasm.c	570;"	d	file:
Qn	./backend/gen_register.hpp	/^    static INLINE GenRegister Qn(GenRegister reg, uint32_t quarter) {$/;"	f	class:gbe::GenRegister
QnPhysical	./backend/gen_register.hpp	/^    static INLINE GenRegister QnPhysical(GenRegister reg, uint32_t quarter) {$/;"	f	class:gbe::GenRegister
QnVirtual	./backend/gen_register.hpp	/^    static INLINE GenRegister QnVirtual(GenRegister reg, uint32_t quarter) {$/;"	f	class:gbe::GenRegister
RA	./backend/gen_reg_allocation.cpp	/^    map<ir::Register, uint32_t> RA;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
READ64	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::READ64(Reg addr,$/;"	f	class:gbe::Selection::Opaque
READ64A64	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::READ64A64(Reg addr,$/;"	f	class:gbe::Selection::Opaque
READ_AFTER_WRITE	./backend/gen_insn_scheduling.cpp	/^    READ_AFTER_WRITE,$/;"	e	enum:gbe::__anon101	file:
READ_AFTER_WRITE_MEMORY	./backend/gen_insn_scheduling.cpp	/^    READ_AFTER_WRITE_MEMORY$/;"	e	enum:gbe::__anon101	file:
READ_ARF	./ir/instruction.cpp	/^  Instruction READ_ARF(Type type, Register dst, ARFRegister arf) {$/;"	f	namespace:gbe::ir
REGION	./ir/instruction.cpp	/^  Instruction REGION(Register dst, Register src, uint32_t offset) {$/;"	f	namespace:gbe::ir
REGISTER_ALLOCATION_FAIL	./backend/gen_context.hpp	/^    REGISTER_ALLOCATION_FAIL,$/;"	e	enum:gbe::__anon39
REGISTER_SPILL_EXCEED_THRESHOLD	./backend/gen_context.hpp	/^    REGISTER_SPILL_EXCEED_THRESHOLD,$/;"	e	enum:gbe::__anon39
REGISTER_SPILL_FAIL	./backend/gen_context.hpp	/^    REGISTER_SPILL_FAIL,$/;"	e	enum:gbe::__anon39
REGISTER_SPILL_NO_SPACE	./backend/gen_context.hpp	/^    REGISTER_SPILL_NO_SPACE,$/;"	e	enum:gbe::__anon39
REMOVE_INSN	./ir/lowering.cpp	239;"	d	file:
REMOVE_INSN	./ir/lowering.cpp	314;"	d	file:
RESTRICT	./sys/platform.hpp	147;"	d
RESTRICT	./sys/platform.hpp	157;"	d
RET	./ir/instruction.cpp	/^  Instruction RET(void) {$/;"	f	namespace:gbe::ir
ReadARFInstruction	./ir/instruction.cpp	/^      INLINE ReadARFInstruction(Type type, Register dst, ARFRegister arf) {$/;"	f	class:gbe::ir::internal::ReadARFInstruction
ReadARFInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION ReadARFInstruction :$/;"	c	namespace:gbe::ir::internal	file:
ReadARFInstruction	./ir/instruction.hpp	/^  class ReadARFInstruction : public Instruction {$/;"	c	namespace:gbe::ir
ReadARFInstructionPattern	./backend/gen_insn_selection.cpp	/^    ReadARFInstructionPattern(void) : SelectionPattern(1,1) {$/;"	f	class:gbe::ReadARFInstructionPattern
ReadARFInstructionPattern	./backend/gen_insn_selection.cpp	/^  class ReadARFInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
RecreateFunction	./llvm/ExpandUtils.cpp	/^  Function *RecreateFunction(Function *Func, FunctionType *NewType) {$/;"	f	namespace:llvm
Reg	./backend/gen_insn_selection.cpp	/^    typedef const GenRegister &Reg;$/;"	t	class:gbe::Selection::Opaque	file:
Reg	./backend/gen_insn_selection.cpp	/^  typedef const GenRegister &Reg;$/;"	t	namespace:gbe	file:
RegDefSet	./ir/value.cpp	/^    typedef set<ValueDef*> RegDefSet;$/;"	t	class:gbe::ir::LiveOutSet	file:
RegInfoForMov	./llvm/llvm_gen_backend.cpp	/^  struct RegInfoForMov {$/;"	s	namespace:gbe	file:
RegIntervalMap	./backend/gen_reg_allocation.cpp	/^    typedef map<ir::Register, GenRegInterval> RegIntervalMap;$/;"	t	class:gbe::GenRegAllocator::Opaque	file:
RegionInstruction	./ir/instruction.cpp	/^      INLINE RegionInstruction(Register dst, Register src, uint32_t offset) {$/;"	f	class:gbe::ir::internal::RegionInstruction
RegionInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION RegionInstruction :$/;"	c	namespace:gbe::ir::internal	file:
RegionInstruction	./ir/instruction.hpp	/^  class RegionInstruction : public Instruction {$/;"	c	namespace:gbe::ir
RegionInstructionPattern	./backend/gen_insn_selection.cpp	/^    RegionInstructionPattern(void) : SelectionPattern(1,1) {$/;"	f	class:gbe::RegionInstructionPattern
RegionInstructionPattern	./backend/gen_insn_selection.cpp	/^  class RegionInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
RegisterAllocator	./backend/context.cpp	/^    RegisterAllocator(int32_t offset, int32_t size): SimpleAllocator(offset, size) {}$/;"	f	class:gbe::RegisterAllocator
RegisterAllocator	./backend/context.cpp	/^  class RegisterAllocator: public SimpleAllocator {$/;"	c	namespace:gbe	file:
RegisterData	./ir/register.hpp	/^    INLINE RegisterData(RegisterFamily family,$/;"	f	class:gbe::ir::RegisterData
RegisterData	./ir/register.hpp	/^    INLINE RegisterData(const RegisterData &other) : family(other.family), uniform(other.uniform), payloadData(other.payloadData) {}$/;"	f	class:gbe::ir::RegisterData
RegisterData	./ir/register.hpp	/^  class RegisterData$/;"	c	namespace:gbe::ir
RegisterFile	./ir/register.hpp	/^  class RegisterFile$/;"	c	namespace:gbe::ir
RegisterTranslator	./llvm/llvm_gen_backend.cpp	/^    RegisterTranslator(ir::Context &ctx) : ctx(ctx) {}$/;"	f	class:gbe::RegisterTranslator
RegisterTranslator	./llvm/llvm_gen_backend.cpp	/^  class RegisterTranslator$/;"	c	namespace:gbe	file:
RelocEntry	./ir/reloc.hpp	/^    RelocEntry(unsigned int rO, unsigned int dO):$/;"	f	struct:gbe::ir::RelocEntry
RelocEntry	./ir/reloc.hpp	/^  struct RelocEntry {$/;"	s	namespace:gbe::ir
RelocTable	./ir/reloc.hpp	/^      RelocTable() : Serializable() {}$/;"	f	class:gbe::ir::RelocTable
RelocTable	./ir/reloc.hpp	/^      RelocTable(const RelocTable& other) : Serializable(other),$/;"	f	class:gbe::ir::RelocTable
RelocTable	./ir/reloc.hpp	/^  class RelocTable : public NonCopyable, public Serializable$/;"	c	namespace:gbe::ir
ReplaceIndirectLoad	./ir/lowering.cpp	/^  void FunctionArgumentLowerer::ReplaceIndirectLoad(void)$/;"	f	class:gbe::ir::FunctionArgumentLowerer
ReplaceInfo	./backend/gen_insn_selection_optimize.cpp	/^      ReplaceInfo(SelectionInstruction& insn,$/;"	f	class:gbe::SelBasicBlockOptimizer::ReplaceInfo
ReplaceInfo	./backend/gen_insn_selection_optimize.cpp	/^    class ReplaceInfo$/;"	c	class:gbe::SelBasicBlockOptimizer	file:
ReplaceInfoMap	./backend/gen_insn_selection_optimize.cpp	/^    typedef map<ir::Register, ReplaceInfo*> ReplaceInfoMap;$/;"	t	class:gbe::SelBasicBlockOptimizer	file:
RewrittenIllegals	./llvm/ExpandLargeIntegers.cpp	/^  DenseMap<Value *, ValuePair> RewrittenIllegals;$/;"	m	class:__anon178::ConversionState	file:
RewrittenLegals	./llvm/ExpandLargeIntegers.cpp	/^  DenseMap<Value *, Value *> RewrittenLegals;$/;"	m	class:__anon178::ConversionState	file:
RewrittenMap	./llvm/PromoteIntegers.cpp	/^  DenseMap<Value *, Value *> RewrittenMap;$/;"	m	class:__anon175::ConversionState	file:
SAMPLE	./backend/gen9_encoder.cpp	/^  void Gen9Encoder::SAMPLE(GenRegister dest,$/;"	f	class:gbe::Gen9Encoder
SAMPLE	./backend/gen_encoder.cpp	/^  void GenEncoder::SAMPLE(GenRegister dest,$/;"	f	class:gbe::GenEncoder
SAMPLE	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::SAMPLE(GenRegister *dst, uint32_t dstNum,$/;"	f	class:gbe::Selection::Opaque
SAMPLE	./ir/instruction.cpp	/^  Instruction SAMPLE(uint8_t imageIndex, Tuple dst, Tuple src, uint8_t srcNum, bool dstIsFloat, bool srcIsFloat, uint8_t sampler, uint8_t samplerOffset) {$/;"	f	namespace:gbe::ir
SAMPLER	./backend/gen/gen_mesa_disasm.c	587;"	d	file:
SAMPLER	./ir/function.hpp	/^      SAMPLER           = 6,$/;"	e	enum:gbe::ir::FunctionArgument::Type
SAMPLER_ID	./ir/sampler.cpp	46;"	d	file:
SAMPLER_MSG_TYPE	./backend/gen/gen_mesa_disasm.c	588;"	d	file:
SAMPLER_SIMD_MODE	./backend/gen/gen_mesa_disasm.c	589;"	d	file:
SAMPLE_BTI	./backend/gen/gen_mesa_disasm.c	586;"	d	file:
SATURATE	./backend/gen/gen_mesa_disasm.c	573;"	d	file:
SAT_CVT	./ir/instruction.cpp	/^  Instruction SAT_CVT(Type dstType, Type srcType, Register dst, Register src) {$/;"	f	namespace:gbe::ir
SCALAR_SAME_TYPE_ASSERT	./ir/immediate.cpp	23;"	d	file:
SCHAR_MAX	./libocl/tmpl/ocl_integer.tmpl.h	30;"	d
SCHAR_MIN	./libocl/tmpl/ocl_integer.tmpl.h	31;"	d
SCRATCH_READ	./backend/gen_encoder.cpp	/^  void GenEncoder::SCRATCH_READ(GenRegister dst, GenRegister src, uint32_t offset, uint32_t size, uint32_t dst_num, uint32_t channel_mode)$/;"	f	class:gbe::GenEncoder
SCRATCH_RW_BLOCK_SIZE	./backend/gen/gen_mesa_disasm.c	599;"	d	file:
SCRATCH_RW_BLOCK_SIZE	./backend/gen/gen_mesa_disasm.c	601;"	d	file:
SCRATCH_RW_CHANNEL_MODE	./backend/gen/gen_mesa_disasm.c	602;"	d	file:
SCRATCH_RW_INVALIDATE_AFTER_READ	./backend/gen/gen_mesa_disasm.c	600;"	d	file:
SCRATCH_RW_MSG_TYPE	./backend/gen/gen_mesa_disasm.c	603;"	d	file:
SCRATCH_RW_OFFSET	./backend/gen/gen_mesa_disasm.c	598;"	d	file:
SCRATCH_WRITE	./backend/gen_encoder.cpp	/^  void GenEncoder::SCRATCH_WRITE(GenRegister msg, uint32_t offset, uint32_t size, uint32_t src_num, uint32_t channel_mode)$/;"	f	class:gbe::GenEncoder
SDEF	./libocl/tmpl/ocl_integer.tmpl.h	100;"	d
SDEF	./libocl/tmpl/ocl_integer.tmpl.h	93;"	d
SE	./llvm/llvm_loadstore_optimization.cpp	/^    ScalarEvolution *SE;$/;"	m	class:gbe::GenLoadStoreOptimization	file:
SEL	./ir/instruction.cpp	/^  Instruction SEL(Type type, Register dst, Tuple src) {$/;"	f	namespace:gbe::ir
SEL_CMP	./backend/gen_encoder.cpp	/^  void GenEncoder::SEL_CMP(uint32_t conditional,$/;"	f	class:gbe::GenEncoder
SEL_CMP	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::SEL_CMP(uint32_t conditional, Reg dst, Reg src0, Reg src1) {$/;"	f	class:gbe::Selection::Opaque
SEL_IR_OPT_FEATURE	./backend/gen_insn_selection.hpp	/^  enum SEL_IR_OPT_FEATURE {$/;"	g	namespace:gbe
SEL_REG	./backend/gen_insn_selection.cpp	1215;"	d	file:
SEL_REG	./backend/gen_insn_selection.cpp	1249;"	d	file:
SERIALIZE_OUT	./sys/platform.hpp	352;"	d
SET_GENINSN_DBGINFO	./backend/gen_context.cpp	124;"	d	file:
SET_GENINSN_DBGINFO	./backend/gen_context.cpp	98;"	d	file:
SET_SEL_DBGINFO	./backend/gen_insn_selection.cpp	2638;"	d	file:
SET_SEL_DBGINFO	./backend/gen_insn_selection.cpp	2714;"	d	file:
SHRT_MAX	./libocl/tmpl/ocl_integer.tmpl.h	32;"	d
SHRT_MIN	./libocl/tmpl/ocl_integer.tmpl.h	33;"	d
SIMD_SHUFFLE	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::SIMD_SHUFFLE(Reg dst, Reg src0, Reg src1)$/;"	f	class:gbe::Selection::Opaque
SIMD_SHUFFLE	./ir/instruction.cpp	/^  Instruction SIMD_SHUFFLE(Type type, Register dst, Register src0, Register src1) {$/;"	f	namespace:gbe::ir
SIOF_LOGICAL_SRCMOD	./backend/gen_insn_selection.hpp	/^    SIOF_LOGICAL_SRCMOD = 1 << 0,$/;"	e	enum:gbe::SEL_IR_OPT_FEATURE
SIOF_OP_MOV_LONG_REG_RESTRICT	./backend/gen_insn_selection.hpp	/^    SIOF_OP_MOV_LONG_REG_RESTRICT = 1 << 1,$/;"	e	enum:gbe::SEL_IR_OPT_FEATURE
START_FUNCTION	./ir/instruction.cpp	2203;"	d	file:
START_FUNCTION	./ir/instruction.cpp	2255;"	d	file:
START_INTROSPECTION	./ir/instruction.cpp	2052;"	d	file:
START_INTROSPECTION	./ir/instruction.cpp	2192;"	d	file:
STORE_PROFILING	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::STORE_PROFILING(uint32_t profilingType, uint32_t bti,$/;"	f	class:gbe::Selection::Opaque
STORE_PROFILING	./ir/instruction.cpp	/^  Instruction STORE_PROFILING(uint32_t bti, uint32_t profilingType) {$/;"	f	namespace:gbe::ir
STRING	./sys/cvar.hpp	/^      STRING = 0,$/;"	e	enum:gbe::CVarInit::__anon180
STRING	./sys/platform.hpp	186;"	d
STRUCTURE	./ir/function.hpp	/^      STRUCTURE         = 4, \/\/ struct foo$/;"	e	enum:gbe::ir::FunctionArgument::Type
SUBB	./backend/gen_encoder.cpp	/^  void GenEncoder::SUBB(GenRegister dest, GenRegister src0, GenRegister src1) {$/;"	f	class:gbe::GenEncoder
SUBDIR_C_CXX_FLAGS	./Android.mk	/^SUBDIR_C_CXX_FLAGS := -fvisibility=hidden$/;"	m
SUBGROUP	./ir/instruction.cpp	/^  Instruction SUBGROUP(WorkGroupOps opcode, Register dst, Tuple srcTuple, uint8_t srcNum, Type type) {$/;"	f	namespace:gbe::ir
SUBGROUP_OP	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::SUBGROUP_OP(uint32_t wg_op,$/;"	f	class:gbe::Selection::Opaque
SVAR	./sys/cvar.hpp	72;"	d
SYNC	./ir/instruction.cpp	/^  Instruction SYNC(uint32_t parameters) {$/;"	f	namespace:gbe::ir
SYNC_GLOBAL_READ_FENCE	./ir/instruction.hpp	/^    SYNC_GLOBAL_READ_FENCE  = 1<<3,$/;"	e	enum:gbe::ir::__anon163
SYNC_GLOBAL_WRITE_FENCE	./ir/instruction.hpp	/^    SYNC_GLOBAL_WRITE_FENCE = 1<<4,$/;"	e	enum:gbe::ir::__anon163
SYNC_IMAGE_FENCE	./ir/instruction.hpp	/^    SYNC_IMAGE_FENCE        = 1<<5,$/;"	e	enum:gbe::ir::__anon163
SYNC_INVALID	./ir/instruction.hpp	/^    SYNC_INVALID            = 1<<6$/;"	e	enum:gbe::ir::__anon163
SYNC_LOCAL_READ_FENCE	./ir/instruction.hpp	/^    SYNC_LOCAL_READ_FENCE   = 1<<1,$/;"	e	enum:gbe::ir::__anon163
SYNC_LOCAL_WRITE_FENCE	./ir/instruction.hpp	/^    SYNC_LOCAL_WRITE_FENCE  = 1<<2,$/;"	e	enum:gbe::ir::__anon163
SYNC_WORKGROUP_EXEC	./ir/instruction.hpp	/^    SYNC_WORKGROUP_EXEC     = 1<<0,$/;"	e	enum:gbe::ir::__anon163
SampleInstruction	./ir/instruction.cpp	/^      SampleInstruction(uint8_t imageIdx, Tuple dstTuple, Tuple srcTuple, uint8_t srcNum, bool dstIsFloat, bool srcIsFloat, uint8_t sampler, uint8_t samplerOffset) {$/;"	f	class:gbe::ir::internal::SampleInstruction
SampleInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION SampleInstruction : \/\/ TODO$/;"	c	namespace:gbe::ir::internal	file:
SampleInstruction	./ir/instruction.hpp	/^  class SampleInstruction : public Instruction {$/;"	c	namespace:gbe::ir
SamplerFix	./llvm/llvm_sampler_fix.cpp	/^    SamplerFix() : FunctionPass(ID) {$/;"	f	class:gbe::SamplerFix
SamplerFix	./llvm/llvm_sampler_fix.cpp	/^  class SamplerFix : public FunctionPass {$/;"	c	namespace:gbe	file:
SamplerSet	./ir/sampler.hpp	/^    SamplerSet() {}$/;"	f	class:gbe::ir::SamplerSet
SamplerSet	./ir/sampler.hpp	/^    SamplerSet(const SamplerSet& other) : samplerMap(other.samplerMap.begin(), other.samplerMap.end()) { }$/;"	f	class:gbe::ir::SamplerSet
SamplerSet	./ir/sampler.hpp	/^  class SamplerSet : public Serializable$/;"	c	namespace:gbe::ir
Scalarize	./llvm/llvm_scalarize.cpp	/^    Scalarize() : FunctionPass(ID)$/;"	f	class:gbe::Scalarize
Scalarize	./llvm/llvm_scalarize.cpp	/^  class Scalarize : public FunctionPass {$/;"	c	namespace:gbe	file:
ScheduleDAGNode	./backend/gen_insn_scheduling.cpp	/^    INLINE ScheduleDAGNode(SelectionInstruction &insn) :$/;"	f	struct:gbe::ScheduleDAGNode
ScheduleDAGNode	./backend/gen_insn_scheduling.cpp	/^  struct ScheduleDAGNode$/;"	s	namespace:gbe	file:
ScheduleListNode	./backend/gen_insn_scheduling.cpp	/^    INLINE ScheduleListNode(ScheduleDAGNode *node, DepMode m = READ_AFTER_WRITE) : node(node), depMode(m) {}$/;"	f	struct:gbe::ScheduleListNode
ScheduleListNode	./backend/gen_insn_scheduling.cpp	/^  struct ScheduleListNode : public intrusive_list_node$/;"	s	namespace:gbe	file:
SchedulePolicy	./backend/gen_insn_scheduling.cpp	/^  enum SchedulePolicy {$/;"	g	namespace:gbe	file:
ScratchAllocator	./backend/context.cpp	/^    ScratchAllocator(int32_t size): SimpleAllocator(0, size) {}$/;"	f	class:gbe::ScratchAllocator
ScratchAllocator	./backend/context.cpp	/^  class ScratchAllocator: public SimpleAllocator {$/;"	c	namespace:gbe	file:
Segment	./sys/alloc.cpp	/^  LinearAllocator::Segment::Segment(size_t size) :$/;"	f	class:gbe::LinearAllocator::Segment
Segment	./sys/alloc.hpp	/^    struct Segment {$/;"	s	class:gbe::LinearAllocator
SelBasicBlockOptimizer	./backend/gen_insn_selection_optimize.cpp	/^    SelBasicBlockOptimizer(const GenContext& ctx,$/;"	f	class:gbe::SelBasicBlockOptimizer
SelBasicBlockOptimizer	./backend/gen_insn_selection_optimize.cpp	/^  class SelBasicBlockOptimizer : public SelOptimizer$/;"	c	namespace:gbe	file:
SelGlobalOptimizer	./backend/gen_insn_selection_optimize.cpp	/^    SelGlobalOptimizer(const GenContext& ctx, uint32_t features) : SelOptimizer(ctx, features) {}$/;"	f	class:gbe::SelGlobalOptimizer
SelGlobalOptimizer	./backend/gen_insn_selection_optimize.cpp	/^  class SelGlobalOptimizer : public SelOptimizer$/;"	c	namespace:gbe	file:
SelOptimizer	./backend/gen_insn_selection_optimize.cpp	/^    SelOptimizer(const GenContext& ctx, uint32_t features) : ctx(ctx), features(features) {}$/;"	f	class:gbe::SelOptimizer
SelOptimizer	./backend/gen_insn_selection_optimize.cpp	/^  class SelOptimizer$/;"	c	namespace:gbe	file:
SelectInstruction	./ir/instruction.cpp	/^      SelectInstruction(Type type, Register dst, Tuple src) {$/;"	f	class:gbe::ir::internal::SelectInstruction
SelectInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION SelectInstruction :$/;"	c	namespace:gbe::ir::internal	file:
SelectInstruction	./ir/instruction.hpp	/^  class SelectInstruction : public Instruction {$/;"	c	namespace:gbe::ir
SelectInstructionPattern	./backend/gen_insn_selection.cpp	/^    SelectInstructionPattern(void) : SelectionPattern(1,1) {$/;"	f	class:gbe::SelectInstructionPattern
SelectInstructionPattern	./backend/gen_insn_selection.cpp	/^  class SelectInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
SelectModifierInstructionPattern	./backend/gen_insn_selection.cpp	/^    SelectModifierInstructionPattern(void) : SelectionPattern(2, 1) {$/;"	f	class:gbe::SelectModifierInstructionPattern
SelectModifierInstructionPattern	./backend/gen_insn_selection.cpp	/^  class SelectModifierInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
Selection	./backend/gen_insn_selection.cpp	/^  Selection::Selection(GenContext &ctx) {$/;"	f	class:gbe::Selection
Selection	./backend/gen_insn_selection.hpp	/^  class Selection$/;"	c	namespace:gbe
Selection75	./backend/gen_insn_selection.cpp	/^  Selection75::Selection75(GenContext &ctx) : Selection(ctx) {$/;"	f	class:gbe::Selection75
Selection75	./backend/gen_insn_selection.hpp	/^  class Selection75: public Selection$/;"	c	namespace:gbe
Selection8	./backend/gen_insn_selection.cpp	/^  Selection8::Selection8(GenContext &ctx) : Selection(ctx) {$/;"	f	class:gbe::Selection8
Selection8	./backend/gen_insn_selection.hpp	/^  class Selection8: public Selection$/;"	c	namespace:gbe
Selection9	./backend/gen_insn_selection.cpp	/^  Selection9::Selection9(GenContext &ctx) : Selection(ctx) {$/;"	f	class:gbe::Selection9
Selection9	./backend/gen_insn_selection.hpp	/^  class Selection9: public Selection$/;"	c	namespace:gbe
SelectionBlock	./backend/gen_insn_selection.cpp	/^  SelectionBlock::SelectionBlock(const ir::BasicBlock *bb) : bb(bb), endifLabel( (ir::LabelIndex) 0), removeSimpleIfEndif(false){}$/;"	f	class:gbe::SelectionBlock
SelectionBlock	./backend/gen_insn_selection.hpp	/^  class SelectionBlock : public NonCopyable, public intrusive_list_node$/;"	c	namespace:gbe
SelectionBxt	./backend/gen_insn_selection.cpp	/^  SelectionBxt::SelectionBxt(GenContext &ctx) : Selection(ctx) {$/;"	f	class:gbe::SelectionBxt
SelectionBxt	./backend/gen_insn_selection.hpp	/^  class SelectionBxt: public Selection$/;"	c	namespace:gbe
SelectionChv	./backend/gen_insn_selection.cpp	/^  SelectionChv::SelectionChv(GenContext &ctx) : Selection(ctx) {$/;"	f	class:gbe::SelectionChv
SelectionChv	./backend/gen_insn_selection.hpp	/^  class SelectionChv: public Selection$/;"	c	namespace:gbe
SelectionDAG	./backend/gen_insn_selection.cpp	/^    INLINE SelectionDAG(const ir::Instruction &insn) :$/;"	f	class:gbe::SelectionDAG
SelectionDAG	./backend/gen_insn_selection.cpp	/^  class SelectionDAG$/;"	c	namespace:gbe	file:
SelectionGlk	./backend/gen_insn_selection.cpp	/^  SelectionGlk::SelectionGlk(GenContext &ctx) : Selection(ctx) {$/;"	f	class:gbe::SelectionGlk
SelectionGlk	./backend/gen_insn_selection.hpp	/^  class SelectionGlk: public Selection$/;"	c	namespace:gbe
SelectionInstruction	./backend/gen_insn_selection.cpp	/^  SelectionInstruction::SelectionInstruction(SelectionOpcode op, uint32_t dst, uint32_t src) :$/;"	f	class:gbe::SelectionInstruction
SelectionInstruction	./backend/gen_insn_selection.hpp	/^  class SelectionInstruction : public NonCopyable, public intrusive_list_node$/;"	c	namespace:gbe
SelectionKbl	./backend/gen_insn_selection.cpp	/^  SelectionKbl::SelectionKbl(GenContext &ctx) : Selection(ctx) {$/;"	f	class:gbe::SelectionKbl
SelectionKbl	./backend/gen_insn_selection.hpp	/^  class SelectionKbl : public Selection$/;"	c	namespace:gbe
SelectionLibrary	./backend/gen_insn_selection.cpp	/^  SelectionLibrary::SelectionLibrary(void) {$/;"	f	class:gbe::SelectionLibrary
SelectionLibrary	./backend/gen_insn_selection.cpp	/^  class SelectionLibrary$/;"	c	namespace:gbe	file:
SelectionLibraryInitializer	./backend/gen_insn_selection.cpp	/^    SelectionLibraryInitializer(void) {$/;"	f	struct:gbe::SelectionLibraryInitializer
SelectionLibraryInitializer	./backend/gen_insn_selection.cpp	/^  static struct SelectionLibraryInitializer {$/;"	s	namespace:gbe	file:
SelectionOpcode	./backend/gen_insn_selection.hpp	/^  enum SelectionOpcode {$/;"	g	namespace:gbe
SelectionPattern	./backend/gen_insn_selection.cpp	/^    SelectionPattern(uint32_t insnNum, uint32_t cost) :$/;"	f	class:gbe::SelectionPattern
SelectionPattern	./backend/gen_insn_selection.cpp	/^  class SelectionPattern$/;"	c	namespace:gbe	file:
SelectionScheduler	./backend/gen_insn_scheduling.cpp	/^  SelectionScheduler::SelectionScheduler(GenContext &ctx,$/;"	f	class:gbe::SelectionScheduler
SelectionScheduler	./backend/gen_insn_scheduling.cpp	/^  struct SelectionScheduler : public NonCopyable$/;"	s	namespace:gbe	file:
SelectionVector	./backend/gen_insn_selection.cpp	/^  SelectionVector::SelectionVector(void) :$/;"	f	class:gbe::SelectionVector
SelectionVector	./backend/gen_insn_selection.hpp	/^  class SelectionVector : public NonCopyable, public intrusive_list_node$/;"	c	namespace:gbe
SelfLoopBlock	./ir/structurizer.hpp	/^    SelfLoopBlock(Block* block) : Block(SelfLoopType, InitChildren(block)) {}$/;"	f	class:gbe::ir::SelfLoopBlock
SelfLoopBlock	./ir/structurizer.hpp	/^  class SelfLoopBlock: public Block$/;"	c	namespace:gbe::ir
SelfLoopType	./ir/structurizer.hpp	/^    SelfLoopType$/;"	e	enum:gbe::ir::BlockType
SerialBlock	./ir/structurizer.hpp	/^    SerialBlock(BlockList& children) : Block(SerialBlockType, children) {}$/;"	f	class:gbe::ir::SerialBlock
SerialBlock	./ir/structurizer.hpp	/^  class SerialBlock : public Block$/;"	c	namespace:gbe::ir
SerialBlockType	./ir/structurizer.hpp	/^    SerialBlockType,$/;"	e	enum:gbe::ir::BlockType
Serializable	./sys/platform.hpp	/^class Serializable$/;"	c
SimdShuffleInstruction	./ir/instruction.cpp	/^      SimdShuffleInstruction(Type type,$/;"	f	class:gbe::ir::internal::SimdShuffleInstruction
SimdShuffleInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION SimdShuffleInstruction : public NaryInstruction<2>$/;"	c	namespace:gbe::ir::internal	file:
SimdShuffleInstruction	./ir/instruction.hpp	/^  class SimdShuffleInstruction : public Instruction {$/;"	c	namespace:gbe::ir
SimdShuffleInstructionPattern	./backend/gen_insn_selection.cpp	/^    SimdShuffleInstructionPattern(void) : SelectionPattern(1,1) {$/;"	f	class:gbe::SimdShuffleInstructionPattern
SimdShuffleInstructionPattern	./backend/gen_insn_selection.cpp	/^  class SimdShuffleInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
SimpleAllocator	./backend/context.cpp	/^  SimpleAllocator::SimpleAllocator(int32_t startOffset,$/;"	f	class:gbe::SimpleAllocator
SimpleAllocator	./backend/context.cpp	/^  class SimpleAllocator$/;"	c	namespace:gbe	file:
SimpleBlock	./ir/structurizer.hpp	/^    SimpleBlock(BasicBlock *p_bb) : Block(SingleBlockType, BlockList()) { this->p_bb = p_bb; }$/;"	f	class:gbe::ir::SimpleBlock
SimpleBlock	./ir/structurizer.hpp	/^  class SimpleBlock: public Block$/;"	c	namespace:gbe::ir
SingleBlockType	./ir/structurizer.hpp	/^    SingleBlockType = 0,$/;"	e	enum:gbe::ir::BlockType
SizeMutexAllocate	./sys/alloc.cpp	/^  static void SizeMutexAllocate(void) {$/;"	f	namespace:gbe
SizeMutexDeallocate	./sys/alloc.cpp	/^  static void SizeMutexDeallocate(void) { if (sizeMutex) delete sizeMutex; }$/;"	f	namespace:gbe
SpillInterval	./backend/gen_reg_allocation.cpp	/^    SpillInterval(const ir::Register r, float c):$/;"	f	struct:gbe::SpillInterval
SpillInterval	./backend/gen_reg_allocation.cpp	/^  struct SpillInterval {$/;"	s	namespace:gbe	file:
SpillIntervalIter	./backend/gen_reg_allocation.cpp	/^  typedef std::vector<SpillInterval>::iterator SpillIntervalIter;$/;"	t	namespace:gbe	file:
SpillRegTag	./backend/gen_reg_allocation.hpp	/^  typedef struct SpillRegTag {$/;"	s	namespace:gbe
SpillRegTag	./backend/gen_reg_allocation.hpp	/^  } SpillRegTag;$/;"	t	namespace:gbe	typeref:struct:gbe::SpillRegTag
SpilledRegs	./backend/gen_reg_allocation.hpp	/^  typedef map<ir::Register, SpillRegTag> SpilledRegs;$/;"	t	namespace:gbe
SqrtDivInstructionPattern	./backend/gen_insn_selection.cpp	/^    SqrtDivInstructionPattern(void) : SelectionPattern(1, 1) { this->opcodes.push_back(ir::OP_DIV); }$/;"	f	class:gbe::SqrtDivInstructionPattern
SqrtDivInstructionPattern	./backend/gen_insn_selection.cpp	/^  class SqrtDivInstructionPattern : public SelectionPattern {$/;"	c	namespace:gbe	file:
Src3ControlBits	./backend/gen_insn_compact.cpp	/^  union Src3ControlBits{$/;"	u	namespace:gbe	file:
SrcRegBits	./backend/gen_insn_compact.cpp	/^  union SrcRegBits {$/;"	u	namespace:gbe	file:
StackElem	./ir/context.hpp	/^      INLINE StackElem(Function *fn, BasicBlock *bb, vector<uint8_t> *usedLabels)$/;"	f	struct:gbe::ir::Context::StackElem
StackElem	./ir/context.hpp	/^    struct StackElem {$/;"	s	class:gbe::ir::Context
StoreInstruction	./ir/instruction.cpp	/^        StoreInstruction(Type type,$/;"	f	class:gbe::ir::internal::StoreInstruction
StoreInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION StoreInstruction :$/;"	c	namespace:gbe::ir::internal	file:
StoreInstruction	./ir/instruction.hpp	/^  class StoreInstruction : public MemInstruction {$/;"	c	namespace:gbe::ir
StoreInstructionPattern	./backend/gen_insn_selection.cpp	/^    StoreInstructionPattern(void) : SelectionPattern(1, 1) {$/;"	f	class:gbe::StoreInstructionPattern
StoreInstructionPattern	./backend/gen_insn_selection.cpp	/^  class StoreInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
StoreProfilingInstruction	./ir/instruction.cpp	/^      StoreProfilingInstruction(uint32_t bti, uint32_t profilingType) {$/;"	f	class:gbe::ir::internal::StoreProfilingInstruction
StoreProfilingInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION StoreProfilingInstruction :$/;"	c	namespace:gbe::ir::internal	file:
StoreProfilingInstruction	./ir/instruction.hpp	/^  class StoreProfilingInstruction : public Instruction {$/;"	c	namespace:gbe::ir
StoreProfilingInstructionPattern	./backend/gen_insn_selection.cpp	/^    StoreProfilingInstructionPattern(void) : SelectionPattern(1,1) {$/;"	f	class:gbe::StoreProfilingInstructionPattern
StoreProfilingInstructionPattern	./backend/gen_insn_selection.cpp	/^  class StoreProfilingInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
StripAttributes	./llvm/StripAttributes.cpp	/^    StripAttributes(bool lastTime) : FunctionPass(ID),$/;"	f	class:__anon173::StripAttributes
StripAttributes	./llvm/StripAttributes.cpp	/^  class StripAttributes : public FunctionPass {$/;"	c	namespace:__anon173	file:
StructurizeBlocks	./ir/structurizer.cpp	/^  void CFGStructurizer::StructurizeBlocks()$/;"	f	class:gbe::ir::CFGStructurizer
SubGroupInstruction	./ir/instruction.cpp	/^        INLINE SubGroupInstruction(WorkGroupOps opcode, Register dst,$/;"	f	class:gbe::ir::internal::SubGroupInstruction
SubGroupInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION SubGroupInstruction :$/;"	c	namespace:gbe::ir::internal	file:
SubGroupInstruction	./ir/instruction.hpp	/^  class SubGroupInstruction : public Instruction {$/;"	c	namespace:gbe::ir
SubGroupInstructionPattern	./backend/gen_insn_selection.cpp	/^    SubGroupInstructionPattern(void) : SelectionPattern(1,1) {$/;"	f	class:gbe::SubGroupInstructionPattern
SubGroupInstructionPattern	./backend/gen_insn_selection.cpp	/^  class SubGroupInstructionPattern : public SelectionPattern$/;"	c	namespace:gbe	file:
SubRegBits	./backend/gen_insn_compact.cpp	/^  union SubRegBits {$/;"	u	namespace:gbe	file:
SurfaceIndex	./ir/instruction.cpp	/^        unsigned        SurfaceIndex;$/;"	m	union:gbe::ir::internal::MemInstruction::__anon166	file:
SurfaceIndex	./llvm/llvm_gen_backend.cpp	/^      unsigned        SurfaceIndex;$/;"	m	class:gbe::MemoryInstHelper	file:
SyncInstruction	./ir/instruction.cpp	/^      INLINE SyncInstruction(uint32_t parameters) {$/;"	f	class:gbe::ir::internal::SyncInstruction
SyncInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION SyncInstruction :$/;"	c	namespace:gbe::ir::internal	file:
SyncInstruction	./ir/instruction.hpp	/^  class SyncInstruction : public Instruction {$/;"	c	namespace:gbe::ir
TARGETLIBRARY	./llvm/llvm_to_gen.cpp	50;"	d	file:
TBLGEN_TABLES	./Android.mk	/^TBLGEN_TABLES :=    \\$/;"	m
TD	./llvm/llvm_loadstore_optimization.cpp	/^    const DataLayout *TD;$/;"	m	class:gbe::GenLoadStoreOptimization	file:
THREAD	./sys/platform.hpp	148;"	d
THREAD	./sys/platform.hpp	158;"	d
THREAD_CONTROL	./backend/gen/gen_mesa_disasm.c	568;"	d	file:
TO_MAGIC	./sys/platform.hpp	324;"	d
TYPED_WRITE	./backend/gen9_encoder.cpp	/^  void Gen9Encoder::TYPED_WRITE(GenRegister header, GenRegister data, bool header_present, unsigned char bti, bool useSends)$/;"	f	class:gbe::Gen9Encoder
TYPED_WRITE	./backend/gen_encoder.cpp	/^  void GenEncoder::TYPED_WRITE(GenRegister msg, GenRegister data, bool header_present, unsigned char bti, bool useSends)$/;"	f	class:gbe::GenEncoder
TYPED_WRITE	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::TYPED_WRITE(GenRegister *msgs, uint32_t msgNum,$/;"	f	class:gbe::Selection::Opaque
TYPED_WRITE	./ir/instruction.cpp	/^  Instruction TYPED_WRITE(uint8_t imageIndex, Tuple src, uint8_t srcNum, Type srcType, Type coordType) {$/;"	f	namespace:gbe::ir
TYPESIZE	./llvm/llvm_gen_backend.cpp	284;"	d	file:
TYPESIZE	./llvm/llvm_gen_backend.cpp	315;"	d	file:
TYPESIZEVEC	./llvm/llvm_gen_backend.cpp	285;"	d	file:
TYPESIZEVEC	./llvm/llvm_gen_backend.cpp	314;"	d	file:
TYPE_SAFE	./sys/platform.hpp	237;"	d
TernaryInstruction	./ir/instruction.cpp	/^      TernaryInstruction(Opcode opcode,$/;"	f	class:gbe::ir::internal::TernaryInstruction
TernaryInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION TernaryInstruction :$/;"	c	namespace:gbe::ir::internal	file:
TernaryInstruction	./ir/instruction.hpp	/^  class TernaryInstruction : public Instruction {$/;"	c	namespace:gbe::ir
TextureInstruction	./ir/instruction.hpp	/^  class TextureInstruction : public Instruction {$/;"	c	namespace:gbe::ir
TheModule	./llvm/llvm_gen_backend.cpp	/^    const Module *TheModule;$/;"	m	class:gbe::GenWriter	file:
ToErase	./llvm/ExpandLargeIntegers.cpp	/^  SmallVector<Instruction *, 32> ToErase;$/;"	m	class:__anon178::ConversionState	file:
ToErase	./llvm/PromoteIntegers.cpp	/^  SmallVector<Instruction *, 8> ToErase;$/;"	m	class:__anon175::ConversionState	file:
TupleDstPolicy	./ir/instruction.cpp	/^    struct TupleDstPolicy {$/;"	s	namespace:gbe::ir::internal	file:
TupleSrcPolicy	./ir/instruction.cpp	/^    struct TupleSrcPolicy {$/;"	s	namespace:gbe::ir::internal	file:
Type	./ir/function.hpp	/^    enum Type {$/;"	g	struct:gbe::ir::FunctionArgument
TypePair	./llvm/ExpandLargeIntegers.cpp	/^typedef LoHiPair<IntegerType *> TypePair;$/;"	t	namespace:__anon177	file:
TypedWriteInstruction	./ir/instruction.cpp	/^      INLINE TypedWriteInstruction(uint8_t imageIdx, Tuple srcTuple, uint8_t srcNum, Type srcType, Type coordType) {$/;"	f	class:gbe::ir::internal::TypedWriteInstruction
TypedWriteInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION TypedWriteInstruction : \/\/ TODO$/;"	c	namespace:gbe::ir::internal	file:
TypedWriteInstruction	./ir/instruction.hpp	/^  class TypedWriteInstruction : public Instruction {$/;"	c	namespace:gbe::ir
UCHAR_MAX	./libocl/tmpl/ocl_integer.tmpl.h	34;"	d
UDEF	./libocl/tmpl/ocl_integer.tmpl.h	101;"	d
UDEF	./libocl/tmpl/ocl_integer.tmpl.h	108;"	d
UDGraph	./ir/value.hpp	/^    typedef map<ValueUse, DefSet*> UDGraph;$/;"	t	class:gbe::ir::FunctionDAG
UEVar	./ir/liveness.hpp	/^    typedef set<Register> UEVar;$/;"	t	class:gbe::ir::Liveness
UINT_MAX	./libocl/tmpl/ocl_integer.tmpl.h	36;"	d
ULONG_MAX	./libocl/tmpl/ocl_integer.tmpl.h	37;"	d
UNLIKELY	./sys/platform.hpp	192;"	d
UNPACK_BYTE	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::UNPACK_BYTE(const GenRegister *dst, const GenRegister src, uint32_t elemSize, uint32_t elemNum) {$/;"	f	class:gbe::Selection::Opaque
UNPACK_LONG	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::UNPACK_LONG(const GenRegister dst, const GenRegister src) {$/;"	f	class:gbe::Selection::Opaque
UNTYPED_READ	./backend/gen75_encoder.cpp	/^  void Gen75Encoder::UNTYPED_READ(GenRegister dst, GenRegister src, GenRegister bti, uint32_t elemNum) {$/;"	f	class:gbe::Gen75Encoder
UNTYPED_READ	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::UNTYPED_READ(GenRegister dst, GenRegister src, GenRegister bti, uint32_t elemNum) {$/;"	f	class:gbe::Gen8Encoder
UNTYPED_READ	./backend/gen_encoder.cpp	/^  void GenEncoder::UNTYPED_READ(GenRegister dst, GenRegister src, GenRegister bti, uint32_t elemNum) {$/;"	f	class:gbe::GenEncoder
UNTYPED_READ	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::UNTYPED_READ(Reg addr,$/;"	f	class:gbe::Selection::Opaque
UNTYPED_READA64	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::UNTYPED_READA64(GenRegister dst, GenRegister src, uint32_t elemNum) {$/;"	f	class:gbe::Gen8Encoder
UNTYPED_READA64	./backend/gen_encoder.cpp	/^  void GenEncoder::UNTYPED_READA64(GenRegister dst, GenRegister src, uint32_t elemNum) {$/;"	f	class:gbe::GenEncoder
UNTYPED_READA64	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::UNTYPED_READA64(Reg addr,$/;"	f	class:gbe::Selection::Opaque
UNTYPED_RW_AOP_TYPE	./backend/gen/gen_mesa_disasm.c	597;"	d	file:
UNTYPED_RW_BTI	./backend/gen/gen_mesa_disasm.c	590;"	d	file:
UNTYPED_RW_CATEGORY	./backend/gen/gen_mesa_disasm.c	593;"	d	file:
UNTYPED_RW_MSG_TYPE	./backend/gen/gen_mesa_disasm.c	594;"	d	file:
UNTYPED_RW_RGBA	./backend/gen/gen_mesa_disasm.c	591;"	d	file:
UNTYPED_RW_SIMD_MODE	./backend/gen/gen_mesa_disasm.c	592;"	d	file:
UNTYPED_WRITE	./backend/gen75_encoder.cpp	/^  void Gen75Encoder::UNTYPED_WRITE(GenRegister msg, GenRegister data, GenRegister bti, uint32_t elemNum, bool useSends) {$/;"	f	class:gbe::Gen75Encoder
UNTYPED_WRITE	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::UNTYPED_WRITE(GenRegister msg, GenRegister data, GenRegister bti, uint32_t elemNum, bool useSends) {$/;"	f	class:gbe::Gen8Encoder
UNTYPED_WRITE	./backend/gen9_encoder.cpp	/^  void Gen9Encoder::UNTYPED_WRITE(GenRegister addr, GenRegister data, GenRegister bti, uint32_t elemNum, bool useSends)$/;"	f	class:gbe::Gen9Encoder
UNTYPED_WRITE	./backend/gen_encoder.cpp	/^  void GenEncoder::UNTYPED_WRITE(GenRegister msg, GenRegister data, GenRegister bti, uint32_t elemNum, bool useSends) {$/;"	f	class:gbe::GenEncoder
UNTYPED_WRITE	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::UNTYPED_WRITE(Reg addr,$/;"	f	class:gbe::Selection::Opaque
UNTYPED_WRITEA64	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::UNTYPED_WRITEA64(GenRegister msg, uint32_t elemNum) {$/;"	f	class:gbe::Gen8Encoder
UNTYPED_WRITEA64	./backend/gen_encoder.cpp	/^  void GenEncoder::UNTYPED_WRITEA64(GenRegister src, uint32_t elemNum){$/;"	f	class:gbe::GenEncoder
UNTYPED_WRITEA64	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::UNTYPED_WRITEA64(const GenRegister *src,$/;"	f	class:gbe::Selection::Opaque
USE_NONE	./ir/liveness.cpp	/^  static const uint32_t USE_NONE    = 0;$/;"	m	namespace:gbe::ir	file:
USE_READ	./ir/liveness.cpp	/^  static const uint32_t USE_READ    = 1 << 0;$/;"	m	namespace:gbe::ir	file:
USE_WRITTEN	./ir/liveness.cpp	/^  static const uint32_t USE_WRITTEN = 1 << 1;$/;"	m	namespace:gbe::ir	file:
USHRT_MAX	./libocl/tmpl/ocl_integer.tmpl.h	35;"	d
UnaryInstruction	./ir/instruction.cpp	/^      UnaryInstruction(Opcode opcode, Type type, Register dst, Register src) {$/;"	f	class:gbe::ir::internal::UnaryInstruction
UnaryInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION UnaryInstruction : public NaryInstruction<1>$/;"	c	namespace:gbe::ir::internal	file:
UnaryInstruction	./ir/instruction.hpp	/^  class UnaryInstruction : public Instruction {$/;"	c	namespace:gbe::ir
Unit	./ir/unit.cpp	/^  Unit::Unit(PointerSize pointerSize) : pointerSize(pointerSize), valid(true) {$/;"	f	class:gbe::ir::Unit
Unit	./ir/unit.hpp	/^  class Unit : public NonCopyable$/;"	c	namespace:gbe::ir
UnsignedI64ToFloat	./backend/gen_context.cpp	/^  void GenContext::UnsignedI64ToFloat(GenRegister dst, GenRegister high, GenRegister low, GenRegister exp,$/;"	f	class:gbe::GenContext
UseCountApproximate	./backend/gen_reg_allocation.cpp	/^  int UseCountApproximate(int loopDepth) {$/;"	f	namespace:gbe
UsePosition	./ir/liveness.cpp	/^  enum UsePosition {$/;"	g	namespace:gbe::ir	file:
UseSet	./ir/value.hpp	/^  typedef set<ValueUse*> UseSet;$/;"	t	namespace:gbe::ir
VALUE	./ir/function.hpp	/^      VALUE             = 3, \/\/ int, float$/;"	e	enum:gbe::ir::FunctionArgument::Type
VME	./backend/gen_encoder.cpp	/^  void GenEncoder::VME(unsigned char bti,$/;"	f	class:gbe::GenEncoder
VME	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::VME(uint32_t bti, GenRegister *dst, GenRegister *payloadVal,$/;"	f	class:gbe::Selection::Opaque
VME	./ir/instruction.cpp	/^  Instruction VME(uint8_t imageIndex, Tuple dst, Tuple src, uint32_t dstNum, uint32_t srcNum, int msg_type, int vme_search_path_lut, int lut_sub) {$/;"	f	namespace:gbe::ir
VME_BTI	./backend/gen/gen_mesa_disasm.c	584;"	d	file:
VME_MSG_TYPE	./backend/gen/gen_mesa_disasm.c	585;"	d	file:
Val	./llvm/ExpandLargeIntegers.cpp	/^  Value *Val;$/;"	m	struct:__anon177::ForwardPHI	file:
ValueDef	./ir/value.hpp	/^    explicit ValueDef(const FunctionArgument *arg) : type(DEF_FN_ARG) {$/;"	f	class:gbe::ir::ValueDef
ValueDef	./ir/value.hpp	/^    explicit ValueDef(const Instruction *insn, uint32_t dstID = 0u) :$/;"	f	class:gbe::ir::ValueDef
ValueDef	./ir/value.hpp	/^    explicit ValueDef(const PushLocation *pushed) : type(DEF_FN_PUSHED) {$/;"	f	class:gbe::ir::ValueDef
ValueDef	./ir/value.hpp	/^    explicit ValueDef(const Register &reg) : type(DEF_SPECIAL_REG) {$/;"	f	class:gbe::ir::ValueDef
ValueDef	./ir/value.hpp	/^  class ValueDef$/;"	c	namespace:gbe::ir
ValueIndex	./llvm/llvm_gen_backend.cpp	/^    typedef std::pair<Value*, uint32_t> ValueIndex;$/;"	t	class:gbe::RegisterTranslator	file:
ValueNumber	./llvm/ExpandLargeIntegers.cpp	/^  unsigned ValueNumber;$/;"	m	struct:__anon177::ForwardPHI	file:
ValuePair	./llvm/ExpandLargeIntegers.cpp	/^typedef LoHiPair<Value *> ValuePair;$/;"	t	namespace:__anon177	file:
ValueUse	./ir/value.hpp	/^    explicit ValueUse(const Instruction *insn, uint32_t srcID = 0u) :$/;"	f	class:gbe::ir::ValueUse
ValueUse	./ir/value.hpp	/^  class ValueUse$/;"	c	namespace:gbe::ir
VarKill	./ir/liveness.hpp	/^    typedef set<Register> VarKill;$/;"	t	class:gbe::ir::Liveness
VecValElement	./llvm/llvm_scalarize.cpp	/^      VecValElement(VectorValues *v, uint32_t i) : vecVals(v), id(i) {}$/;"	f	struct:gbe::Scalarize::VecValElement
VecValElement	./llvm/llvm_scalarize.cpp	/^    struct VecValElement{$/;"	s	class:gbe::Scalarize	file:
VectorElement	./llvm/ExpandLargeIntegers.cpp	/^  VectorElement() : parent(NULL), childId(0) {}$/;"	f	struct:__anon177::VectorElement
VectorElement	./llvm/ExpandLargeIntegers.cpp	/^  VectorElement(Value *p, unsigned i) : parent(p), childId(i) {}$/;"	f	struct:__anon177::VectorElement
VectorElement	./llvm/ExpandLargeIntegers.cpp	/^struct VectorElement {$/;"	s	namespace:__anon177	file:
VectorIllegals	./llvm/ExpandLargeIntegers.cpp	/^  DenseMap<Value *, VectorElement> VectorIllegals;$/;"	m	class:__anon178::ConversionState	file:
VectorLocation	./backend/gen_reg_allocation.cpp	/^  typedef std::pair<SelectionVector*, uint32_t> VectorLocation;$/;"	t	namespace:gbe	file:
VectorValues	./llvm/llvm_scalarize.cpp	/^    VectorValues() : vals()$/;"	f	struct:gbe::VectorValues
VectorValues	./llvm/llvm_scalarize.cpp	/^  struct VectorValues {$/;"	s	namespace:gbe	file:
VmeInstruction	./ir/instruction.cpp	/^      VmeInstruction(uint8_t imageIdx, Tuple dstTuple, Tuple srcTuple,$/;"	f	class:gbe::ir::internal::VmeInstruction
VmeInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION VmeInstruction :$/;"	c	namespace:gbe::ir::internal	file:
VmeInstruction	./ir/instruction.hpp	/^  class VmeInstruction : public Instruction {$/;"	c	namespace:gbe::ir
WAIT	./backend/gen_encoder.cpp	/^  void GenEncoder::WAIT(uint32_t n) {$/;"	f	class:gbe::GenEncoder
WAIT	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::WAIT(uint32_t n)$/;"	f	class:gbe::Selection::Opaque
WAIT	./ir/instruction.cpp	/^  Instruction WAIT(void) {$/;"	f	namespace:gbe::ir
WHILE	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::WHILE(Reg src, ir::LabelIndex jip) {$/;"	f	class:gbe::Selection::Opaque
WHILE	./ir/instruction.cpp	/^  Instruction WHILE(LabelIndex labelIndex, Register pred) {$/;"	f	namespace:gbe::ir
WIDTH	./ir/instruction.hpp	/^     WIDTH = 0,$/;"	e	enum:gbe::ir::GetImageInfoInstruction::__anon162
WIN32_LEAN_AND_MEAN	./sys/mutex.cpp	23;"	d	file:
WIN32_LEAN_AND_MEAN	./sys/platform.cpp	29;"	d	file:
WORKGROUP	./ir/instruction.cpp	/^  Instruction WORKGROUP(WorkGroupOps opcode, uint32_t slmAddr, Register dst, Tuple srcTuple, uint8_t srcNum, Type type) {$/;"	f	namespace:gbe::ir
WORKGROUP_OP	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::WORKGROUP_OP(uint32_t wg_op,$/;"	f	class:gbe::Selection::Opaque
WORKGROUP_OP_ALL	./ir/instruction.hpp	/^    WORKGROUP_OP_ALL = 2,$/;"	e	enum:gbe::ir::WorkGroupOps
WORKGROUP_OP_ANY	./ir/instruction.hpp	/^    WORKGROUP_OP_ANY = 1,$/;"	e	enum:gbe::ir::WorkGroupOps
WORKGROUP_OP_BROADCAST	./ir/instruction.hpp	/^    WORKGROUP_OP_BROADCAST = 3,$/;"	e	enum:gbe::ir::WorkGroupOps
WORKGROUP_OP_EXCLUSIVE_ADD	./ir/instruction.hpp	/^    WORKGROUP_OP_EXCLUSIVE_ADD = 10,$/;"	e	enum:gbe::ir::WorkGroupOps
WORKGROUP_OP_EXCLUSIVE_MAX	./ir/instruction.hpp	/^    WORKGROUP_OP_EXCLUSIVE_MAX = 12,$/;"	e	enum:gbe::ir::WorkGroupOps
WORKGROUP_OP_EXCLUSIVE_MIN	./ir/instruction.hpp	/^    WORKGROUP_OP_EXCLUSIVE_MIN = 11,$/;"	e	enum:gbe::ir::WorkGroupOps
WORKGROUP_OP_INCLUSIVE_ADD	./ir/instruction.hpp	/^    WORKGROUP_OP_INCLUSIVE_ADD = 7,$/;"	e	enum:gbe::ir::WorkGroupOps
WORKGROUP_OP_INCLUSIVE_MAX	./ir/instruction.hpp	/^    WORKGROUP_OP_INCLUSIVE_MAX = 9,$/;"	e	enum:gbe::ir::WorkGroupOps
WORKGROUP_OP_INCLUSIVE_MIN	./ir/instruction.hpp	/^    WORKGROUP_OP_INCLUSIVE_MIN = 8,$/;"	e	enum:gbe::ir::WorkGroupOps
WORKGROUP_OP_INVALID	./ir/instruction.hpp	/^    WORKGROUP_OP_INVALID$/;"	e	enum:gbe::ir::WorkGroupOps
WORKGROUP_OP_REDUCE_ADD	./ir/instruction.hpp	/^    WORKGROUP_OP_REDUCE_ADD = 4,$/;"	e	enum:gbe::ir::WorkGroupOps
WORKGROUP_OP_REDUCE_MAX	./ir/instruction.hpp	/^    WORKGROUP_OP_REDUCE_MAX = 6,$/;"	e	enum:gbe::ir::WorkGroupOps
WORKGROUP_OP_REDUCE_MIN	./ir/instruction.hpp	/^    WORKGROUP_OP_REDUCE_MIN = 5,$/;"	e	enum:gbe::ir::WorkGroupOps
WRITE64	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::WRITE64(Reg addr,$/;"	f	class:gbe::Selection::Opaque
WRITE64A64	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::WRITE64A64(Reg addr,$/;"	f	class:gbe::Selection::Opaque
WRITE_AFTER_READ	./backend/gen_insn_scheduling.cpp	/^    WRITE_AFTER_READ,$/;"	e	enum:gbe::__anon101	file:
WRITE_AFTER_WRITE	./backend/gen_insn_scheduling.cpp	/^    WRITE_AFTER_WRITE,$/;"	e	enum:gbe::__anon101	file:
WaitInstruction	./ir/instruction.cpp	/^      INLINE WaitInstruction() {$/;"	f	class:gbe::ir::internal::WaitInstruction
WaitInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION WaitInstruction :$/;"	c	namespace:gbe::ir::internal	file:
WaitInstruction	./ir/instruction.hpp	/^  class WaitInstruction : public Instruction {$/;"	c	namespace:gbe::ir
WorkGroupInstruction	./ir/instruction.cpp	/^        INLINE WorkGroupInstruction(WorkGroupOps opcode, uint32_t slmAddr, Register dst,$/;"	f	class:gbe::ir::internal::WorkGroupInstruction
WorkGroupInstruction	./ir/instruction.cpp	/^    class ALIGNED_INSTRUCTION WorkGroupInstruction :$/;"	c	namespace:gbe::ir::internal	file:
WorkGroupInstruction	./ir/instruction.hpp	/^  class WorkGroupInstruction : public Instruction {$/;"	c	namespace:gbe::ir
WorkGroupOps	./ir/instruction.hpp	/^  enum WorkGroupOps {$/;"	g	namespace:gbe::ir
WorkSet	./ir/liveness.hpp	/^    typedef set <struct BlockInfo*> WorkSet;$/;"	t	class:gbe::ir::Liveness
_DO_JOIN	./sys/platform.hpp	196;"	d
_DO_JOIN2	./sys/platform.hpp	197;"	d
_DebugInfo	./backend/program.h	/^typedef struct _DebugInfo {$/;"	s
_ImageInfoKey	./ir/instruction.hpp	/^    _ImageInfoKey(int key) : data(key) {};$/;"	f	union:gbe::ir::_ImageInfoKey
_ImageInfoKey	./ir/instruction.hpp	/^    _ImageInfoKey(uint8_t i, uint8_t t) : index(i), type(t) {};$/;"	f	union:gbe::ir::_ImageInfoKey
_ImageInfoKey	./ir/instruction.hpp	/^  typedef union _ImageInfoKey{$/;"	u	namespace:gbe::ir
_MemDebuggerInsertAlloc	./sys/alloc.hpp	/^  T* _MemDebuggerInsertAlloc(T *ptr, const char *file, const char *function, int line) {$/;"	f	namespace:gbe
__CLK_ADDRESS_BASE	./ocl_common_defines.h	/^    __CLK_ADDRESS_BASE             = 0,$/;"	e	enum:clk_sampler_type
__CLK_ADDRESS_BITS	./ocl_common_defines.h	/^    __CLK_ADDRESS_BITS             = 4,        \/\/ number of bits required to$/;"	e	enum:clk_sampler_type
__CLK_ADDRESS_MASK	./ocl_common_defines.h	/^    __CLK_ADDRESS_MASK             = (CLK_ADDRESS_NONE | CLK_ADDRESS_CLAMP |$/;"	e	enum:clk_sampler_type
__CLK_FILTER_BASE	./ocl_common_defines.h	/^    __CLK_FILTER_BASE              = (__CLK_ADDRESS_BASE +  __CLK_ADDRESS_BITS),$/;"	e	enum:clk_sampler_type
__CLK_FILTER_BITS	./ocl_common_defines.h	/^    __CLK_FILTER_BITS              = 2,        \/\/ number of bits required to$/;"	e	enum:clk_sampler_type
__CLK_FILTER_MASK	./ocl_common_defines.h	/^    __CLK_FILTER_MASK              = (CLK_FILTER_NEAREST | CLK_FILTER_LINEAR |$/;"	e	enum:clk_sampler_type
__CLK_INVALID_IMAGE_TYPE	./ocl_common_defines.h	/^  __CLK_INVALID_IMAGE_TYPE = __CLK_VALID_IMAGE_TYPE_COUNT,$/;"	e	enum:clk_channel_type
__CLK_MIP_BASE	./ocl_common_defines.h	/^    __CLK_MIP_BASE                 = (__CLK_FILTER_BASE + __CLK_FILTER_BITS),$/;"	e	enum:clk_sampler_type
__CLK_MIP_BITS	./ocl_common_defines.h	/^    __CLK_MIP_BITS                 = 2,$/;"	e	enum:clk_sampler_type
__CLK_MIP_MASK	./ocl_common_defines.h	/^    __CLK_MIP_MASK                 = (CLK_MIP_NEAREST | CLK_MIP_LINEAR |$/;"	e	enum:clk_sampler_type
__CLK_NORMALIZED_BASE	./ocl_common_defines.h	/^    __CLK_NORMALIZED_BASE          = 0,$/;"	e	enum:clk_sampler_type
__CLK_NORMALIZED_BITS	./ocl_common_defines.h	/^    __CLK_NORMALIZED_BITS          = 1,        \/\/ number of bits required to$/;"	e	enum:clk_sampler_type
__CLK_NORMALIZED_MASK	./ocl_common_defines.h	/^    __CLK_NORMALIZED_MASK          = (CLK_NORMALIZED_COORDS_FALSE |$/;"	e	enum:clk_sampler_type
__CLK_SAMPLER_ARG_BASE	./ocl_common_defines.h	/^    __CLK_SAMPLER_ARG_BASE         = (__CLK_MIP_BASE + __CLK_SAMPLER_BITS),$/;"	e	enum:clk_sampler_type
__CLK_SAMPLER_ARG_BITS	./ocl_common_defines.h	/^    __CLK_SAMPLER_ARG_BITS         = 8,$/;"	e	enum:clk_sampler_type
__CLK_SAMPLER_ARG_KEY_BIT	./ocl_common_defines.h	/^    __CLK_SAMPLER_ARG_KEY_BIT      = (1 << (__CLK_SAMPLER_ARG_BASE + __CLK_SAMPLER_ARG_BITS)),$/;"	e	enum:clk_sampler_type
__CLK_SAMPLER_ARG_KEY_BITS	./ocl_common_defines.h	/^    __CLK_SAMPLER_ARG_KEY_BITS     = 1,$/;"	e	enum:clk_sampler_type
__CLK_SAMPLER_ARG_MASK	./ocl_common_defines.h	/^    __CLK_SAMPLER_ARG_MASK         = (((1 << __CLK_SAMPLER_ARG_BITS) - 1) << __CLK_SAMPLER_ARG_BASE),$/;"	e	enum:clk_sampler_type
__CLK_SAMPLER_BITS	./ocl_common_defines.h	/^    __CLK_SAMPLER_BITS             = (__CLK_MIP_BASE + __CLK_MIP_BITS),$/;"	e	enum:clk_sampler_type
__CLK_SAMPLER_MASK	./ocl_common_defines.h	/^    __CLK_SAMPLER_MASK             = (__CLK_MIP_MASK | __CLK_FILTER_MASK |$/;"	e	enum:clk_sampler_type
__CLK_UNORM_INT8888	./ocl_common_defines.h	/^  __CLK_UNORM_INT8888 ,         \/\/ four channel ARGB unorm8$/;"	e	enum:clk_channel_type
__CLK_UNORM_INT8888R	./ocl_common_defines.h	/^  __CLK_UNORM_INT8888R,        \/\/ four channel BGRA unorm8$/;"	e	enum:clk_channel_type
__CLK_VALID_IMAGE_TYPE_COUNT	./ocl_common_defines.h	/^  __CLK_VALID_IMAGE_TYPE_COUNT,$/;"	e	enum:clk_channel_type
__CLK_VALID_IMAGE_TYPE_MASK	./ocl_common_defines.h	/^  __CLK_VALID_IMAGE_TYPE_MASK = ( 1 << __CLK_VALID_IMAGE_TYPE_MASK_BITS ) - 1$/;"	e	enum:clk_channel_type
__CLK_VALID_IMAGE_TYPE_MASK_BITS	./ocl_common_defines.h	/^  __CLK_VALID_IMAGE_TYPE_MASK_BITS = 4,         \/\/ number of bits required to$/;"	e	enum:clk_channel_type
__CL_VERSION_1_0__	./libocl/tmpl/ocl_defines.tmpl.h	21;"	d
__CL_VERSION_1_1__	./libocl/tmpl/ocl_defines.tmpl.h	22;"	d
__CL_VERSION_1_2__	./libocl/tmpl/ocl_defines.tmpl.h	23;"	d
__ENDIAN_LITTLE__	./libocl/tmpl/ocl_defines.tmpl.h	33;"	d
__FREEBSD__	./sys/platform.hpp	74;"	d
__FUNCTION__	./sys/platform.hpp	160;"	d
__GBE_ALLOC_HPP__	./sys/alloc.hpp	25;"	d
__GBE_ASSERT_HPP__	./sys/assert.hpp	26;"	d
__GBE_ATOMIC_HPP__	./sys/atomic.hpp	20;"	d
__GBE_CONTEXT_HPP__	./backend/context.hpp	21;"	d
__GBE_CVAR_HPP__	./sys/cvar.hpp	29;"	d
__GBE_EXCEPTION_HPP__	./sys/exception.hpp	27;"	d
__GBE_FIXED_ARRAY_HPP__	./sys/fixed_array.hpp	27;"	d
__GBE_GEN75_CONTEXT_HPP__	./backend/gen75_context.hpp	23;"	d
__GBE_GEN75_ENCODER_HPP__	./backend/gen75_encoder.hpp	23;"	d
__GBE_GEN7_ENCODER_HPP__	./backend/gen7_encoder.hpp	23;"	d
__GBE_GEN8_CONTEXT_HPP__	./backend/gen8_context.hpp	23;"	d
__GBE_GEN8_ENCODER_HPP__	./backend/gen8_encoder.hpp	23;"	d
__GBE_GEN9_ENCODER_HPP__	./backend/gen9_encoder.hpp	23;"	d
__GBE_GEN_CONTEXT_HPP__	./backend/gen_context.hpp	26;"	d
__GBE_GEN_ENCODER_HPP__	./backend/gen_encoder.hpp	52;"	d
__GBE_GEN_INSN_SCHEDULING_HPP__	./backend/gen_insn_scheduling.hpp	26;"	d
__GBE_GEN_INSN_SELECTION_OUTPUT_HPP__	./backend/gen_insn_selection_output.hpp	2;"	d
__GBE_GEN_MESA_DISASM_H__	./backend/gen/gen_mesa_disasm.h	29;"	d
__GBE_GEN_PROGRAM_HPP__	./backend/gen_program.hpp	26;"	d
__GBE_GEN_PROGRAM_H__	./backend/gen_program.h	28;"	d
__GBE_GEN_REG_ALLOCATION_HPP__	./backend/gen_reg_allocation.hpp	26;"	d
__GBE_INTRINSICS_HPP__	./sys/intrinsics.hpp	20;"	d
__GBE_INTRUSIVE_LIST_HPP__	./sys/intrusive_list.hpp	24;"	d
__GBE_IR_CONSTANT_HPP__	./ir/constant.hpp	26;"	d
__GBE_IR_CONTEXT_HPP__	./ir/context.hpp	25;"	d
__GBE_IR_FUNCTION_HPP__	./ir/function.hpp	25;"	d
__GBE_IR_HALF_HPP__	./ir/half.hpp	25;"	d
__GBE_IR_IMAGE_HPP__	./ir/image.hpp	24;"	d
__GBE_IR_IMMEDIATE_HPP__	./ir/immediate.hpp	26;"	d
__GBE_IR_INSTRUCTION_HPP__	./ir/instruction.hpp	25;"	d
__GBE_IR_LIVENESS_HPP__	./ir/liveness.hpp	25;"	d
__GBE_IR_LLVM_INCLUDES_HPP__	./llvm/llvm_includes.hpp	25;"	d
__GBE_IR_LLVM_TO_GEN_HPP__	./llvm/llvm_to_gen.hpp	25;"	d
__GBE_IR_LOWERING_HPP__	./ir/lowering.hpp	28;"	d
__GBE_IR_PRINTF_HPP__	./ir/printf.hpp	24;"	d
__GBE_IR_PROFILE_HPP__	./ir/profile.hpp	25;"	d
__GBE_IR_PROFILING_HPP__	./ir/profiling.hpp	23;"	d
__GBE_IR_REGISTER_HPP__	./ir/register.hpp	25;"	d
__GBE_IR_RELOC_HPP__	./ir/reloc.hpp	26;"	d
__GBE_IR_SAMPLER_HPP__	./ir/sampler.hpp	25;"	d
__GBE_IR_TYPE_HPP__	./ir/type.hpp	26;"	d
__GBE_IR_UNIT_HPP__	./ir/unit.hpp	25;"	d
__GBE_IR_VALUE_HPP__	./ir/value.hpp	25;"	d
__GBE_LIST_HPP__	./sys/list.hpp	26;"	d
__GBE_LLVM_GEN_BACKEND_HPP__	./llvm/llvm_gen_backend.hpp	27;"	d
__GBE_MAP_HPP__	./sys/map.hpp	26;"	d
__GBE_MUTEX_HPP__	./sys/mutex.hpp	20;"	d
__GBE_PLATFORM_HPP__	./sys/platform.hpp	21;"	d
__GBE_PROGRAM_HPP__	./backend/program.hpp	26;"	d
__GBE_PROGRAM_H__	./backend/program.h	29;"	d
__GBE_SET_HPP__	./sys/set.hpp	26;"	d
__GBE_VECTOR_HPP__	./sys/vector.hpp	26;"	d
__GBE_gen9_CONTEXT_HPP__	./backend/gen9_context.hpp	23;"	d
__GEN7_INSTRUCTION_HPP__	./backend/gen7_instruction.hpp	52;"	d
__GEN8_INSTRUCTION_HPP__	./backend/gen8_instruction.hpp	52;"	d
__GEN9_INSTRUCTION_HPP__	./backend/gen9_instruction.hpp	22;"	d
__GEN_DEFS_HPP__	./backend/gen_defs.hpp	52;"	d
__GEN_INSN_SELECTION_HPP__	./backend/gen_insn_selection.hpp	26;"	d
__GEN_REGISTER_HPP__	./backend/gen_register.hpp	60;"	d
__ICC__	./sys/platform.hpp	123;"	d
__IMAGE_SUPPORT__	./libocl/tmpl/ocl_defines.tmpl.h	34;"	d
__LINUX__	./sys/platform.hpp	64;"	d
__MACOSX__	./sys/platform.hpp	98;"	d
__MSVC__	./sys/platform.hpp	128;"	d
__NO_AVX__	./sys/platform.hpp	50;"	d
__OCL_ASYNC_H__	./libocl/include/ocl_async.h	19;"	d
__OCL_ATOM20_H__	./libocl/include/ocl_atom_20.h	19;"	d
__OCL_ATOM_H__	./libocl/include/ocl_atom.h	19;"	d
__OCL_COMMON_DEFINES__	./ocl_common_defines.h	4;"	d
__OCL_COMMON_DEF_H__	./libocl/tmpl/ocl_defines.tmpl.h	19;"	d
__OCL_COMMON_H__	./libocl/tmpl/ocl_common.tmpl.h	19;"	d
__OCL_ENQUEUE_H__	./libocl/include/ocl_enqueue.h	20;"	d
__OCL_FLOAT_H__	./libocl/include/ocl_float.h	19;"	d
__OCL_GEOMETRIC_H__	./libocl/include/ocl_geometric.h	19;"	d
__OCL_H__	./libocl/include/ocl.h	19;"	d
__OCL_IMAGE_H__	./libocl/include/ocl_image.h	19;"	d
__OCL_INTEGER_H__	./libocl/tmpl/ocl_integer.tmpl.h	19;"	d
__OCL_MATH_20_H__	./libocl/tmpl/ocl_math_20.tmpl.h	19;"	d
__OCL_MATH_H__	./libocl/tmpl/ocl_math.tmpl.h	19;"	d
__OCL_MEMCPY_H__	./libocl/include/ocl_memcpy.h	19;"	d
__OCL_MEMSET_H__	./libocl/include/ocl_memset.h	19;"	d
__OCL_MISC_H__	./libocl/include/ocl_misc.h	19;"	d
__OCL_PIPE_H__	./libocl/include/ocl_pipe.h	19;"	d
__OCL_PRINTF_H__	./libocl/include/ocl_printf.h	19;"	d
__OCL_RELATIONAL_H__	./libocl/tmpl/ocl_relational.tmpl.h	19;"	d
__OCL_SIMD_H__	./libocl/tmpl/ocl_simd.tmpl.h	19;"	d
__OCL_SYNC_H__	./libocl/include/ocl_sync.h	19;"	d
__OCL_TYPES_H__	./libocl/include/ocl_types.h	19;"	d
__OCL_VLOAD_20_H__	./libocl/include/ocl_vload_20.h	19;"	d
__OCL_VLOAD_H__	./libocl/include/ocl_vload.h	19;"	d
__OCL_WORKITEM_H__	./libocl/include/ocl_workitem.h	19;"	d
__OCL_WORK_GROUP_H__	./libocl/include/ocl_work_group.h	19;"	d
__OPENCL_VERSION__	./libocl/tmpl/ocl_defines.tmpl.h	28;"	d
__OPENCL_VERSION__	./libocl/tmpl/ocl_defines.tmpl.h	31;"	d
__STRUCTURIZER_HPP__	./ir/structurizer.hpp	19;"	d
__UNIX__	./sys/platform.hpp	101;"	d
__UNIX__	./sys/platform.hpp	108;"	d
__UNIX__	./sys/platform.hpp	67;"	d
__UNIX__	./sys/platform.hpp	77;"	d
__UNIX__	./sys/platform.hpp	91;"	d
__WIN32__	./sys/platform.hpp	84;"	d
__X86_64__	./sys/platform.hpp	39;"	d
__X86__	./sys/platform.hpp	41;"	d
__bsf	./sys/intrinsics.hpp	/^INLINE int __bsf(int v) {$/;"	f
__bsf	./sys/intrinsics.hpp	/^INLINE size_t __bsf(size_t v) {$/;"	f
__bsr	./sys/intrinsics.hpp	/^INLINE int __bsr(int v) {$/;"	f
__bsr	./sys/intrinsics.hpp	/^INLINE size_t __bsr(size_t v) {$/;"	f
__btc	./sys/intrinsics.hpp	/^INLINE int __btc(int v, int i) {$/;"	f
__btc	./sys/intrinsics.hpp	/^INLINE size_t __btc(size_t v, size_t i) {$/;"	f
__btr	./sys/intrinsics.hpp	/^INLINE int __btr(int v, int i) {$/;"	f
__btr	./sys/intrinsics.hpp	/^INLINE size_t __btr(size_t v, size_t i) {$/;"	f
__bts	./sys/intrinsics.hpp	/^INLINE int __bts(int v, int i) {$/;"	f
__bts	./sys/intrinsics.hpp	/^INLINE size_t __bts(size_t v, size_t i) {$/;"	f
__builtin_expect	./sys/platform.hpp	175;"	d
__constant	./libocl/include/ocl_types.h	64;"	d
__conv_half_to_float	./backend/gen/gen_mesa_disasm.c	/^static uint32_t __conv_half_to_float(uint16_t h)$/;"	f	file:
__dllexport	./sys/platform.hpp	136;"	d
__dllexport	./sys/platform.hpp	139;"	d
__dllimport	./sys/platform.hpp	137;"	d
__dllimport	./sys/platform.hpp	140;"	d
__global	./libocl/include/ocl_types.h	63;"	d
__int_t_type	./libocl/include/ocl_types.h	50;"	d
__int_t_type	./libocl/include/ocl_types.h	55;"	d
__int_type	./libocl/include/ocl_types.h	51;"	d
__int_type	./libocl/include/ocl_types.h	54;"	d
__kernel_exec	./libocl/tmpl/ocl_defines.tmpl.h	35;"	d
__load_acquire	./sys/intrinsics.hpp	/^INLINE T __load_acquire(volatile T *ptr)$/;"	f
__local	./libocl/include/ocl_types.h	65;"	d
__ocl_finitef	./libocl/include/ocl_float.h	/^INLINE_OVERLOADABLE int __ocl_finitef (float x){$/;"	f
__ocl_inff	./libocl/include/ocl_float.h	/^INLINE_OVERLOADABLE float __ocl_inff(void) {$/;"	f
__ocl_nanf	./libocl/include/ocl_float.h	/^INLINE_OVERLOADABLE float __ocl_nanf(void) {$/;"	f
__parse_printf_state	./llvm/llvm_printf_parser.cpp	/^  static char __parse_printf_state(char *begin, char *end, char** rend, PrintfState * state)$/;"	f	namespace:gbe
__popcnt	./sys/intrinsics.hpp	/^INLINE unsigned int __popcnt(unsigned int in) {$/;"	f
__private	./libocl/include/ocl_types.h	62;"	d
__store_release	./sys/intrinsics.hpp	/^INLINE void __store_release(volatile T *ptr, T x)$/;"	f
_abs	./backend/gen/gen_mesa_disasm.c	/^static const char *_abs[2] = {$/;"	v	file:
_has_errors	./llvm/llvm_to_gen.cpp	/^    bool _has_errors;$/;"	m	class:gbe::gbeDiagnosticContext	file:
_lock	./sys/mutex.hpp	/^    Atomic _lock;$/;"	m	class:gbe::MutexActive
_newScalar	./llvm/llvm_gen_backend.cpp	/^    ir::Register _newScalar(Value *value, Value *key, Type *type, uint32_t index, bool uniform) {$/;"	f	class:gbe::RegisterTranslator	file:
_prefix	./libocl/script/gen_vector.py	/^def _prefix(prefix, dtype):$/;"	f
_str	./llvm/llvm_to_gen.cpp	/^    std::string _str;$/;"	m	class:gbe::gbeDiagnosticContext	file:
abs	./backend/gen_register.hpp	/^    static INLINE GenRegister abs(GenRegister reg) {$/;"	f	class:gbe::GenRegister
acc	./backend/gen_register.hpp	/^    static INLINE GenRegister acc(void) {$/;"	f	class:gbe::GenRegister
acc_wr_control	./backend/gen7_instruction.hpp	/^      uint32_t acc_wr_control:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
acc_wr_control	./backend/gen8_instruction.hpp	/^      uint32_t acc_wr_control:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
acc_wr_control	./backend/gen9_instruction.hpp	/^      uint32_t acc_wr_control:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
acc_wr_control	./backend/gen_defs.hpp	/^      uint32_t acc_wr_control:1;$/;"	m	struct:GenCompactInstruction::__anon12::__anon13
acc_wr_control	./backend/gen_defs.hpp	/^      uint32_t acc_wr_control:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon17
acc_wr_control	./backend/gen_insn_compact.cpp	/^      uint32_t acc_wr_control:1;$/;"	m	struct:gbe::Src3ControlBits::__anon95	file:
accessCount	./backend/gen_reg_allocation.cpp	/^    int32_t accessCount;$/;"	m	struct:gbe::GenRegInterval	file:
accessQual	./backend/program.hpp	/^      std::string accessQual;$/;"	m	struct:gbe::KernelArgument::ArgInfo
accessQual	./ir/function.hpp	/^      std::string accessQual;$/;"	m	struct:gbe::ir::FunctionArgument::InfoFromLLVM
access_mode	./backend/gen/gen_mesa_disasm.c	/^static const char *access_mode[2] = {$/;"	v	file:
access_mode	./backend/gen7_instruction.hpp	/^      uint32_t access_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
access_mode	./backend/gen8_instruction.hpp	/^      uint32_t access_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
access_mode	./backend/gen9_instruction.hpp	/^      uint32_t access_mode:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
access_mode	./backend/gen_defs.hpp	/^      uint32_t access_mode:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon17
access_mode	./backend/gen_insn_compact.cpp	/^      uint32_t access_mode:1;$/;"	m	struct:gbe::ControlBits::__anon94	file:
access_mode	./backend/gen_insn_compact.cpp	/^      uint32_t access_mode:1;$/;"	m	struct:gbe::Src3ControlBits::__anon95	file:
accwr	./backend/gen/gen_mesa_disasm.c	/^static const char *accwr[2] = {$/;"	v	file:
ack_req	./backend/gen7_instruction.hpp	/^        uint32_t ack_req:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon63
ack_req	./backend/gen8_instruction.hpp	/^        uint32_t ack_req:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon128
ack_req	./backend/gen_defs.hpp	/^        uint32_t ack_req:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon22
ackreq	./backend/gen7_instruction.hpp	/^        uint32_t ackreq:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon78
ackreq	./backend/gen8_instruction.hpp	/^        uint32_t ackreq:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon146
ackreq	./backend/gen_defs.hpp	/^        uint32_t ackreq:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon36
acquireLLVMContextLock	./backend/program.cpp	/^void acquireLLVMContextLock()$/;"	f
active	./backend/gen_insn_scheduling.cpp	/^    intrusive_list<ScheduleListNode> active;$/;"	m	struct:gbe::SelectionScheduler	file:
add	./ir/lowering.cpp	/^    Instruction *add;     \/\/!< Can be NULL if we only have load(arg)$/;"	m	struct:gbe::ir::LoadAddImm	file:
addDependency	./backend/gen_insn_scheduling.cpp	/^  void DependencyTracker::addDependency(GenRegister reg, ScheduleDAGNode *node0, DepMode m) {$/;"	f	class:gbe::DependencyTracker
addDependency	./backend/gen_insn_scheduling.cpp	/^  void DependencyTracker::addDependency(ScheduleDAGNode *node, uint32_t index, DepMode m) {$/;"	f	class:gbe::DependencyTracker
addDependency	./backend/gen_insn_scheduling.cpp	/^  void DependencyTracker::addDependency(ScheduleDAGNode *node0, GenRegister reg, DepMode m) {$/;"	f	class:gbe::DependencyTracker
addDependency	./backend/gen_insn_scheduling.cpp	/^  void DependencyTracker::addDependency(ScheduleDAGNode *node0, ScheduleDAGNode *node1, DepMode depMode) {$/;"	f	class:gbe::DependencyTracker
addDependency	./backend/gen_insn_scheduling.cpp	/^  void DependencyTracker::addDependency(uint32_t index, ScheduleDAGNode *node, DepMode m) {$/;"	f	class:gbe::DependencyTracker
addEntry	./ir/reloc.hpp	/^      void addEntry(unsigned refOffset, unsigned defOffset) {$/;"	f	class:gbe::ir::RelocTable
addEraseCandidate	./llvm/ExpandLargeIntegers.cpp	/^  void addEraseCandidate(Instruction *c) {$/;"	f	class:__anon178::ConversionState
addID	./backend/gen_insn_selection_optimize.cpp	/^  void Selection::addID()$/;"	f	class:gbe::Selection
addLoop	./ir/function.cpp	/^  void Function::addLoop(LabelIndex preheader,$/;"	f	class:gbe::ir::Function
addTimestamps	./backend/gen8_context.cpp	/^  void Gen8Context::addTimestamps(GenRegister& t0, GenRegister& t1, GenRegister& tmp) {$/;"	f	class:gbe::Gen8Context
addTimestamps	./backend/gen_context.cpp	/^  void GenContext::addTimestamps(GenRegister& t0, GenRegister& t1, GenRegister& tmp)$/;"	f	class:gbe::GenContext
addToReplaceInfoMap	./backend/gen_insn_selection_optimize.cpp	/^  void SelBasicBlockOptimizer::addToReplaceInfoMap(SelectionInstruction& insn)$/;"	f	class:gbe::SelBasicBlockOptimizer
addWithCarry	./backend/gen_context.cpp	/^  void GenContext::addWithCarry(GenRegister dest, GenRegister src0, GenRegister src1) {$/;"	f	class:gbe::GenContext
addr	./backend/gen_reg_allocation.hpp	/^    int32_t addr;$/;"	m	struct:gbe::SpillRegTag
addr1	./backend/gen_register.hpp	/^    static INLINE GenRegister addr1(uint32_t subnr) {$/;"	f	class:gbe::GenRegister
addr8	./backend/gen_register.hpp	/^    static INLINE GenRegister addr8(uint32_t subnr) {$/;"	f	class:gbe::GenRegister
addrSpace	./backend/program.hpp	/^      uint32_t addrSpace;$/;"	m	struct:gbe::KernelArgument::ArgInfo
addrSpace	./ir/function.hpp	/^      uint32_t addrSpace;$/;"	m	struct:gbe::ir::FunctionArgument::InfoFromLLVM
addrSpace	./llvm/llvm_gen_backend.cpp	/^      ir::AddressSpace   addrSpace;$/;"	m	class:gbe::MemoryInstHelper	file:
addrStoreInst	./llvm/llvm_gen_backend.cpp	/^    std::set<Value *> addrStoreInst;$/;"	m	class:gbe::GenWriter	file:
address	./sys/alloc.hpp	/^    INLINE const_pointer address(const_reference r) { return &r; }$/;"	f	class:gbe::Allocator
address	./sys/alloc.hpp	/^    INLINE pointer address(reference r) { return &r; }$/;"	f	class:gbe::Allocator
addressIndex	./ir/instruction.hpp	/^    static const uint32_t addressIndex = 0;$/;"	m	class:gbe::ir::AtomicInstruction
addressIndex	./ir/instruction.hpp	/^    static const uint32_t addressIndex = 0;$/;"	m	class:gbe::ir::StoreInstruction
addressSpaceLLVMToGen	./llvm/llvm_gen_backend.cpp	/^  static INLINE ir::AddressSpace addressSpaceLLVMToGen(unsigned llvmMemSpace) {$/;"	f	namespace:gbe
adds	./ir/lowering.cpp	/^    vector<Instruction *> adds;  \/\/!< Can be NULL if we only have load(arg)$/;"	m	struct:gbe::ir::IndirectLoad	file:
afterMessage	./backend/gen_context.cpp	/^  void GenContext::afterMessage(const SelectionInstruction &insn, GenRegister bti, GenRegister tmp, GenRegister btiTmp, unsigned jip0) {$/;"	f	class:gbe::GenContext
align	./backend/program.hpp	/^    uint32_t align;    \/\/!< addr alignment of the argument$/;"	m	struct:gbe::KernelArgument
align	./ir/function.hpp	/^    uint32_t align; \/\/!< address alignment for the argument$/;"	m	struct:gbe::ir::FunctionArgument
alignScratchSize	./backend/gen75_context.cpp	/^  uint32_t Gen75Context::alignScratchSize(uint32_t size){$/;"	f	class:gbe::Gen75Context
alignScratchSize	./backend/gen8_context.cpp	/^  uint32_t Gen8Context::alignScratchSize(uint32_t size){$/;"	f	class:gbe::Gen8Context
alignScratchSize	./backend/gen_context.cpp	/^  uint32_t GenContext::alignScratchSize(uint32_t size){$/;"	f	class:gbe::GenContext
alignedFree	./sys/alloc.cpp	/^  void alignedFree(void* ptr) {$/;"	f	namespace:gbe
alignedMalloc	./sys/alloc.cpp	/^  void* alignedMalloc(size_t size, size_t align) {$/;"	f	namespace:gbe
alignment	./ir/constant.hpp	/^    uint32_t alignment; \/\/!< Alignment required for each constant$/;"	m	class:gbe::ir::Constant
allButBool	./ir/instruction.cpp	/^    static const Type allButBool[] = {TYPE_S8,  TYPE_U8,$/;"	m	namespace:gbe::ir::internal	file:
allButBoolNum	./ir/instruction.cpp	/^    static const uint32_t allButBoolNum = ARRAY_ELEM_NUM(allButBool);$/;"	m	namespace:gbe::ir::internal	file:
all_float_type	./libocl/script/gen_vector.py	/^all_float_type = "float","double","half"$/;"	v
all_int_type	./libocl/script/gen_vector.py	/^all_int_type = all_itype + all_utype$/;"	v
all_itype	./libocl/script/gen_vector.py	/^all_itype = "char","short","int","long"$/;"	v
all_predefined_type	./libocl/script/gen_vector.py	/^                      misc_ugentypem, misc_gentypen, misc_ugentypen$/;"	v
all_type	./libocl/script/gen_vector.py	/^all_type = all_int_type + all_float_type$/;"	v
all_utype	./libocl/script/gen_vector.py	/^all_utype = "uchar","ushort","uint","ulong"$/;"	v
all_vector	./libocl/script/gen_vector.py	/^all_vector = 1,2,3,4,8,16$/;"	v
alloc	./sys/alloc.cpp	/^    intptr_t alloc;$/;"	m	struct:gbe::AllocData	file:
allocCurbeReg	./backend/gen_context.cpp	/^  void GenContext::allocCurbeReg(ir::Register reg) {$/;"	f	class:gbe::GenContext
allocMap	./sys/alloc.cpp	/^    std::map<uintptr_t, AllocData> allocMap;$/;"	m	struct:gbe::MemDebugger	file:
allocNum	./sys/alloc.cpp	/^    volatile intptr_t allocNum;$/;"	m	struct:gbe::MemDebugger	file:
allocate	./backend/context.cpp	/^  int32_t Context::allocate(int32_t size, int32_t alignment, bool bFwd) {$/;"	f	class:gbe::Context
allocate	./backend/context.cpp	/^  int32_t SimpleAllocator::allocate(int32_t size, int32_t alignment, bool bFwd)$/;"	f	class:gbe::SimpleAllocator
allocate	./backend/gen_reg_allocation.cpp	/^  INLINE bool GenRegAllocator::Opaque::allocate(Selection &selection) {$/;"	f	class:gbe::GenRegAllocator::Opaque
allocate	./backend/gen_reg_allocation.cpp	/^  bool GenRegAllocator::allocate(Selection &selection) {$/;"	f	class:gbe::GenRegAllocator
allocate	./sys/alloc.cpp	/^  void *LinearAllocator::allocate(size_t size)$/;"	f	class:gbe::LinearAllocator
allocate	./sys/alloc.hpp	/^    INLINE pointer allocate(size_type n, void_allocator_ptr = 0) {$/;"	f	class:gbe::Allocator
allocate	./sys/alloc.hpp	/^    void *allocate(void) {$/;"	f	class:gbe::GrowingPool
allocateCurbePayload	./backend/gen_reg_allocation.cpp	/^  void GenRegAllocator::Opaque::allocateCurbePayload(void) {$/;"	f	class:gbe::GenRegAllocator::Opaque
allocateFlags	./backend/gen_reg_allocation.cpp	/^  void GenRegAllocator::Opaque::allocateFlags(Selection &selection) {$/;"	f	class:gbe::GenRegAllocator::Opaque
allocateGRFs	./backend/gen_reg_allocation.cpp	/^  bool GenRegAllocator::Opaque::allocateGRFs(Selection &selection) {$/;"	f	class:gbe::GenRegAllocator::Opaque
allocateGlobalVariableRegister	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::allocateGlobalVariableRegister(Function &F)$/;"	f	class:gbe::GenWriter
allocateKernel	./backend/gen_context.cpp	/^  Kernel *GenContext::allocateKernel(void) {$/;"	f	class:gbe::GenContext
allocateKernel	./backend/gen_program.hpp	/^    virtual Kernel *allocateKernel(const std::string &name) {$/;"	f	class:gbe::GenProgram
allocatePayloadReg	./backend/gen_reg_allocation.cpp	/^  void GenRegAllocator::Opaque::allocatePayloadReg(ir::Register reg,$/;"	f	class:gbe::GenRegAllocator::Opaque
allocateReg	./backend/gen_reg_allocation.cpp	/^  INLINE uint32_t GenRegAllocator::Opaque::allocateReg(GenRegInterval interval,$/;"	f	class:gbe::GenRegAllocator::Opaque
allocateScratchForSpilled	./backend/gen_reg_allocation.cpp	/^  INLINE bool GenRegAllocator::Opaque::allocateScratchForSpilled()$/;"	f	class:gbe::GenRegAllocator::Opaque
allocateScratchMem	./backend/context.cpp	/^  int32_t Context::allocateScratchMem(uint32_t size) {$/;"	f	class:gbe::Context
allocateSpecialRegs	./backend/gen_reg_allocation.cpp	/^  INLINE void GenRegAllocator::Opaque::allocateSpecialRegs(void) {$/;"	f	class:gbe::GenRegAllocator::Opaque
allocateVector	./backend/gen_reg_allocation.cpp	/^  void GenRegAllocator::Opaque::allocateVector(Selection &selection) {$/;"	f	class:gbe::GenRegAllocator::Opaque
allocated	./sys/alloc.hpp	/^      size_t allocated, maxElemNum;$/;"	m	class:gbe::GrowingPool::GrowingPoolElem
allocatedBlocks	./backend/context.cpp	/^    map<int32_t, int32_t> allocatedBlocks;$/;"	m	class:gbe::SimpleAllocator	file:
allocator_type	./sys/list.hpp	/^    typedef Allocator<value_type> allocator_type;$/;"	t	class:gbe::list
allocator_type	./sys/map.hpp	/^    typedef Allocator<value_type> allocator_type;$/;"	t	class:gbe::map
allocator_type	./sys/set.hpp	/^    typedef Allocator<value_type> allocator_type;$/;"	t	class:gbe::set
allocator_type	./sys/vector.hpp	/^    typedef Allocator<T>                       allocator_type;$/;"	t	class:gbe::vector
alter_form	./ir/printf.hpp	/^      char alter_form;$/;"	m	struct:gbe::ir::PrintfState
alu1	./backend/gen_encoder.cpp	/^  void alu1(GenEncoder *p, uint32_t opcode, GenRegister dst,$/;"	f	namespace:gbe
alu2	./backend/gen_encoder.cpp	/^  void alu2(GenEncoder *p,$/;"	f	namespace:gbe
alu3	./backend/gen7_encoder.cpp	/^  void Gen7Encoder::alu3(uint32_t opcode,$/;"	f	class:gbe::Gen7Encoder
alu3	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::alu3(uint32_t opcode,$/;"	f	class:gbe::Gen8Encoder
analyzePointerOrigin	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::analyzePointerOrigin(Function &F) {$/;"	f	class:gbe::GenWriter
analyzeUniform	./ir/liveness.cpp	/^  void Liveness::analyzeUniform(set<Register> *extentRegs) {$/;"	f	class:gbe::ir::Liveness
aop_type	./backend/gen7_instruction.hpp	/^        uint32_t aop_type:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon76
aop_type	./backend/gen8_instruction.hpp	/^        uint32_t aop_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon140
aop_type	./backend/gen8_instruction.hpp	/^        uint32_t aop_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon141
aop_type	./backend/gen_defs.hpp	/^        uint32_t aop_type:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon35
append	./backend/gen_insn_selection.cpp	/^  void SelectionBlock::append(SelectionInstruction *insn) {$/;"	f	class:gbe::SelectionBlock
append	./backend/gen_insn_selection.cpp	/^  void SelectionBlock::append(SelectionVector *vec) {$/;"	f	class:gbe::SelectionBlock
append	./backend/gen_insn_selection.cpp	/^  void SelectionBlock::append(ir::Register reg) { tmp.push_back(reg); }$/;"	f	class:gbe::SelectionBlock
append	./backend/gen_insn_selection.cpp	/^  void SelectionInstruction::append(SelectionInstruction &other) {$/;"	f	class:gbe::SelectionInstruction
append	./ir/constant.cpp	/^  void ConstantSet::append(const std::string &name,$/;"	f	class:gbe::ir::ConstantSet
append	./ir/context.cpp	/^  void Context::append(const Instruction &insn) {$/;"	f	class:gbe::ir::Context
append	./ir/function.cpp	/^  void BasicBlock::append(Instruction &insn) {$/;"	f	class:gbe::ir::BasicBlock
append	./ir/image.cpp	/^  void ImageSet::append(Register imageReg, Context *ctx, uint8_t bti)$/;"	f	class:gbe::ir::ImageSet
append	./ir/printf.hpp	/^      void append(uint32_t num, PrintfFmt* fmt) {$/;"	f	class:gbe::ir::PrintfSet
append	./ir/register.hpp	/^    INLINE Register append(RegisterFamily family,$/;"	f	class:gbe::ir::RegisterFile
append	./ir/sampler.cpp	/^  uint8_t SamplerSet::append(Register samplerReg, Context *ctx)$/;"	f	class:gbe::ir::SamplerSet
append	./ir/sampler.cpp	/^  uint8_t SamplerSet::append(uint32_t samplerValue, Context *ctx)$/;"	f	class:gbe::ir::SamplerSet
append	./libocl/script/gen_vector.py	/^    def append(self, line, nextInit = ""):$/;"	m	class:builtinProto
append	./sys/intrusive_list.cpp	/^  void append(intrusive_list_node *node, intrusive_list_node *prev) {$/;"	f	namespace:gbe
appendArrayTuple	./ir/register.cpp	/^  Tuple RegisterFile::appendArrayTuple(const Register *reg, uint32_t regNum) {$/;"	f	class:gbe::ir::RegisterFile
appendArrayTypeTuple	./ir/register.cpp	/^  Tuple RegisterFile::appendArrayTypeTuple(const uint8_t *types, uint32_t num) {$/;"	f	class:gbe::ir::RegisterFile
appendBlock	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::appendBlock(const ir::BasicBlock &bb) {$/;"	f	class:gbe::Selection::Opaque
appendElement	./llvm/ExpandLargeIntegers.cpp	/^  void appendElement(Value *v, Value *e) {$/;"	f	class:__anon178::ConversionState
appendInfo	./ir/image.cpp	/^  Register ImageSet::appendInfo(ImageInfoKey key, Context *ctx)$/;"	f	class:gbe::ir::ImageSet
appendInfo	./ir/image.cpp	/^  void ImageSet::appendInfo(ImageInfoKey key, uint32_t offset)$/;"	f	class:gbe::ir::ImageSet
appendInsn	./backend/gen_insn_selection.cpp	/^  SelectionInstruction *Selection::Opaque::appendInsn(SelectionOpcode opcode,$/;"	f	class:gbe::Selection::Opaque
appendPushedConstant	./ir/context.cpp	/^  void Context::appendPushedConstant(Register reg, const PushLocation &pushed)$/;"	f	class:gbe::ir::Context
appendReg	./ir/sampler.cpp	/^  uint8_t SamplerSet::appendReg(uint32_t key, Context *ctx) {$/;"	f	class:gbe::ir::SamplerSet
appendSampler	./llvm/llvm_gen_backend.cpp	/^  uint8_t GenWriter::appendSampler(CallSite::arg_iterator AI) {$/;"	f	class:gbe::GenWriter
appendSurface	./ir/context.hpp	/^    void appendSurface(uint8_t bti, Register reg) { fn->appendSurface(bti, reg); }$/;"	f	class:gbe::ir::Context
appendSurface	./ir/function.cpp	/^  void Function::appendSurface(uint8_t bti, Register reg) {$/;"	f	class:gbe::ir::Function
appendTuple	./ir/register.hpp	/^    INLINE Tuple appendTuple(First first, Rest... rest) {$/;"	f	class:gbe::ir::RegisterFile
appendTuple	./ir/register.hpp	/^    INLINE void appendTuple(void) {}$/;"	f	class:gbe::ir::RegisterFile
appendTypeTuple	./ir/register.hpp	/^    INLINE Tuple appendTypeTuple(First first, Rest... rest) {$/;"	f	class:gbe::ir::RegisterFile
appendTypeTuple	./ir/register.hpp	/^    INLINE void appendTypeTuple(void) {}$/;"	f	class:gbe::ir::RegisterFile
appendVector	./backend/gen_insn_selection.cpp	/^  SelectionVector *Selection::Opaque::appendVector(void) {$/;"	f	class:gbe::Selection::Opaque
apply	./ir/unit.hpp	/^    INLINE void apply(const T &functor) const {$/;"	f	class:gbe::ir::Unit
arf	./ir/instruction.cpp	/^      ARFRegister arf;$/;"	m	class:gbe::ir::internal::ReadARFInstruction	file:
arg	./ir/value.hpp	/^      const FunctionArgument *arg;$/;"	m	union:gbe::ir::ValueDef::Data
argID	./ir/function.hpp	/^    uint32_t argID;           \/\/!< Function argument$/;"	m	struct:gbe::ir::PushLocation
argID	./ir/lowering.cpp	/^    uint32_t argID;              \/\/!< Associated function argument$/;"	m	struct:gbe::ir::IndirectLoad	file:
argID	./ir/lowering.cpp	/^    uint32_t argID;       \/\/!< Associated function argument$/;"	m	struct:gbe::ir::LoadAddImm	file:
argName	./backend/program.hpp	/^      std::string argName;$/;"	m	struct:gbe::KernelArgument::ArgInfo
argName	./ir/function.hpp	/^      std::string argName; \/\/ My different from arg->getName()$/;"	m	struct:gbe::ir::FunctionArgument::InfoFromLLVM
argNum	./backend/program.hpp	/^    uint32_t argNum;           \/\/!< Number of function arguments$/;"	m	class:gbe::Kernel
argNum	./ir/function.hpp	/^    INLINE uint32_t argNum(void) const { return args.size(); }$/;"	f	class:gbe::ir::Function
arg_idx	./backend/program.h	/^    int32_t arg_idx;$/;"	m	struct:ImageInfo
args	./backend/program.hpp	/^    KernelArgument *args;      \/\/!< Each argument$/;"	m	class:gbe::Kernel
args	./ir/function.hpp	/^    vector<FunctionArgument*> args; \/\/!< Input registers of the function$/;"	m	class:gbe::ir::Function
arrayTuple	./ir/context.hpp	/^    INLINE Tuple arrayTuple(const Register *reg, uint32_t regNum) {$/;"	f	class:gbe::ir::Context
arrayTypeTuple	./ir/context.hpp	/^    INLINE Tuple arrayTypeTuple(const ir::Type *type, uint32_t num) {$/;"	f	class:gbe::ir::Context
asFloatValue	./ir/immediate.hpp	/^    INLINE float asFloatValue(void) const {$/;"	f	class:gbe::ir::Immediate
asHalfValue	./ir/immediate.hpp	/^    INLINE half asHalfValue(void) const {$/;"	f	class:gbe::ir::Immediate
asIntegerValue	./ir/immediate.hpp	/^    INLINE int64_t asIntegerValue(void) const {$/;"	f	class:gbe::ir::Immediate
asmFileName	./backend/gen_context.hpp	/^    const char* asmFileName;$/;"	m	class:gbe::GenContext
asm_file_name	./backend/gen_program.hpp	/^    const char* asm_file_name;$/;"	m	class:gbe::GenProgram
assignBti	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::assignBti(Function &F) {$/;"	f	class:gbe::GenWriter
atom_add	./libocl/include/ocl_atom.h	89;"	d
atom_add	./libocl/include/ocl_atom_20.h	89;"	d
atom_and	./libocl/include/ocl_atom.h	91;"	d
atom_and	./libocl/include/ocl_atom_20.h	91;"	d
atom_cmpxchg	./libocl/include/ocl_atom.h	99;"	d
atom_cmpxchg	./libocl/include/ocl_atom_20.h	99;"	d
atom_dec	./libocl/include/ocl_atom.h	98;"	d
atom_dec	./libocl/include/ocl_atom_20.h	98;"	d
atom_inc	./libocl/include/ocl_atom.h	97;"	d
atom_inc	./libocl/include/ocl_atom_20.h	97;"	d
atom_max	./libocl/include/ocl_atom.h	96;"	d
atom_max	./libocl/include/ocl_atom_20.h	96;"	d
atom_min	./libocl/include/ocl_atom.h	95;"	d
atom_min	./libocl/include/ocl_atom_20.h	95;"	d
atom_or	./libocl/include/ocl_atom.h	92;"	d
atom_or	./libocl/include/ocl_atom_20.h	92;"	d
atom_sub	./libocl/include/ocl_atom.h	90;"	d
atom_sub	./libocl/include/ocl_atom_20.h	90;"	d
atom_xchg	./libocl/include/ocl_atom.h	94;"	d
atom_xchg	./libocl/include/ocl_atom_20.h	94;"	d
atom_xor	./libocl/include/ocl_atom.h	93;"	d
atom_xor	./libocl/include/ocl_atom_20.h	93;"	d
atomic32_t	./sys/intrinsics.hpp	/^typedef int32_t atomic32_t;$/;"	t
atomicOpsLLVMToGen	./llvm/llvm_gen_backend.cpp	/^  static INLINE ir::AtomicOps atomicOpsLLVMToGen(llvm::AtomicRMWInst::BinOp llvmOp) {$/;"	f	namespace:gbe
atomic_add	./sys/intrinsics.hpp	/^  INLINE int64_t atomic_add(int64_t volatile* value, int64_t input)$/;"	f
atomic_add	./sys/intrinsics.hpp	/^INLINE int32_t atomic_add(int32_t volatile* value, int32_t input)$/;"	f
atomic_add	./sys/intrinsics.hpp	/^INLINE int32_t atomic_add(volatile int32_t* m, const int32_t v) {$/;"	f
atomic_add	./sys/intrinsics.hpp	/^INLINE int64_t atomic_add(volatile int64_t* m, const int64_t v) {$/;"	f
atomic_cmpxchg	./sys/intrinsics.hpp	/^  INLINE int64_t atomic_cmpxchg(int64_t volatile* value, const int64_t input, int64_t comparand)$/;"	f
atomic_cmpxchg	./sys/intrinsics.hpp	/^INLINE int32_t atomic_cmpxchg(int32_t volatile* value, const int32_t input, int32_t comparand)$/;"	f
atomic_cmpxchg	./sys/intrinsics.hpp	/^INLINE int32_t atomic_cmpxchg(volatile int32_t* m, const int32_t v, const int32_t c) {$/;"	f
atomic_cmpxchg	./sys/intrinsics.hpp	/^INLINE int64_t atomic_cmpxchg(volatile int64_t* m, const int64_t v, const int64_t c) {$/;"	f
atomic_opration_type	./backend/gen/gen_mesa_disasm.c	/^static const char *atomic_opration_type[] = {$/;"	v	file:
atomic_t	./sys/intrinsics.hpp	/^  typedef int32_t atomic_t;$/;"	t
atomic_t	./sys/intrinsics.hpp	/^  typedef int64_t atomic_t;$/;"	t
atomic_t	./sys/intrinsics.hpp	/^typedef int32_t atomic_t;$/;"	t
atomic_t	./sys/intrinsics.hpp	/^typedef int64_t atomic_t;$/;"	t
b	./ir/immediate.hpp	/^      bool *b;$/;"	m	union:gbe::ir::Immediate::__anon154
b3OpAlign	./backend/gen_reg_allocation.cpp	/^    bool b3OpAlign;$/;"	m	struct:gbe::GenRegInterval	file:
bHas32X32Mul	./backend/gen_insn_selection.cpp	/^    bool bHas32X32Mul;$/;"	m	class:gbe::Selection::Opaque	file:
bHasDoubleType	./backend/gen_insn_selection.cpp	/^    bool bHasDoubleType;$/;"	m	class:gbe::Selection::Opaque	file:
bHasHalfType	./backend/gen_insn_selection.cpp	/^    bool bHasHalfType;$/;"	m	class:gbe::Selection::Opaque	file:
bHasLongType	./backend/gen_insn_selection.cpp	/^    bool bHasLongType;$/;"	m	class:gbe::Selection::Opaque	file:
bHasSends	./backend/gen_insn_selection.cpp	/^    bool bHasSends;$/;"	m	class:gbe::Selection::Opaque	file:
bLongRegRestrict	./backend/gen_insn_selection.cpp	/^    bool bLongRegRestrict;$/;"	m	class:gbe::Selection::Opaque	file:
bTobbmap	./ir/structurizer.hpp	/^      std::map<Block *, BasicBlock *> bTobbmap;$/;"	m	class:gbe::ir::CFGStructurizer
back	./sys/fixed_array.hpp	/^    T& back(void) { return *(end() - 1); }$/;"	f	class:gbe::fixed_array
back	./sys/fixed_array.hpp	/^    const T& back(void) const { return *(end() - 1); }$/;"	f	class:gbe::fixed_array
back	./sys/intrusive_list.hpp	/^    INLINE const value_type* back(void) const  { return upcast(m_root.prev); }$/;"	f	class:gbe::intrusive_list
back	./sys/intrusive_list.hpp	/^    INLINE value_type* back(void)  { return upcast(m_root.prev); }$/;"	f	class:gbe::intrusive_list
barrierType	./backend/gen_insn_selection.hpp	/^      uint32_t barrierType;$/;"	m	union:gbe::SelectionInstruction::__anon83
barrierid	./ir/profile.hpp	/^    static const Register barrierid = Register(24);\/\/ barrierid$/;"	m	namespace:gbe::ir::ocl
bb	./backend/gen_insn_selection.hpp	/^    const ir::BasicBlock *bb;$/;"	m	class:gbe::SelectionBlock
bb	./backend/gen_insn_selection_optimize.cpp	/^    SelectionBlock &bb;$/;"	m	class:gbe::SelBasicBlockOptimizer	file:
bb	./ir/context.hpp	/^      BasicBlock *bb;              \/\/!< Basic block currently processed$/;"	m	struct:gbe::ir::Context::StackElem
bb	./ir/context.hpp	/^    BasicBlock *bb;             \/\/!< Current basic block we are filling$/;"	m	class:gbe::ir::Context
bb	./ir/liveness.hpp	/^      const BasicBlock &bb;$/;"	m	struct:gbe::ir::Liveness::BlockInfo
bbLastInsnIDMap	./backend/gen_reg_allocation.cpp	/^    map<const ir::BasicBlock *, int32_t> bbLastInsnIDMap;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
bbmap	./ir/structurizer.hpp	/^      std::map<BasicBlock *, Block *> bbmap;$/;"	m	class:gbe::ir::CFGStructurizer
bbs	./ir/function.hpp	/^    vector<LabelIndex> bbs;$/;"	m	struct:gbe::ir::Loop
beforeMessage	./backend/gen_context.cpp	/^  unsigned GenContext::beforeMessage(const SelectionInstruction &insn, GenRegister bti, GenRegister tmp, GenRegister btiTmp, unsigned desc) {$/;"	f	class:gbe::GenContext
begin	./sys/fixed_array.hpp	/^    T* begin(void) { return &elem[0]; }$/;"	f	class:gbe::fixed_array
begin	./sys/fixed_array.hpp	/^    const T* begin(void) const { return &elem[0]; }$/;"	f	class:gbe::fixed_array
begin	./sys/intrusive_list.hpp	/^    const_iterator begin(void) const  { return const_iterator(upcast(m_root.next)); }$/;"	f	class:gbe::intrusive_list
begin	./sys/intrusive_list.hpp	/^    iterator begin(void)  { return iterator(upcast(m_root.next)); }$/;"	f	class:gbe::intrusive_list
belongToStructure	./ir/function.hpp	/^    bool belongToStructure;$/;"	m	class:gbe::ir::BasicBlock
binInterpCB	./gbe_bin_interpreter.cpp	/^static struct BinInterpCallBackInitializer binInterpCB;$/;"	v	typeref:struct:BinInterpCallBackInitializer	file:
bin_path	./gbe_bin_generater.cpp	/^    static string bin_path;$/;"	m	class:program_build_instance	file:
bin_path	./gbe_bin_generater.cpp	/^string program_build_instance::bin_path;$/;"	m	class:program_build_instance	file:
bit_pattern	./backend/gen_insn_compact.cpp	/^    uint32_t bit_pattern;$/;"	m	struct:gbe::compact_table_entry	file:
bits1	./backend/gen7_instruction.hpp	/^    } bits1;$/;"	m	struct:Gen7NativeInstruction::__anon42	typeref:union:Gen7NativeInstruction::__anon42::__anon44
bits1	./backend/gen8_instruction.hpp	/^    }bits1;$/;"	m	struct:Gen8NativeInstruction::__anon102	typeref:union:Gen8NativeInstruction::__anon102::__anon104
bits1	./backend/gen9_instruction.hpp	/^    }bits1;$/;"	m	struct:Gen9NativeInstruction::__anon1	typeref:union:Gen9NativeInstruction::__anon1::__anon3
bits1	./backend/gen_defs.hpp	/^    } bits1;$/;"	m	struct:GenCompactInstruction::__anon12	typeref:struct:GenCompactInstruction::__anon12::__anon13
bits1	./backend/gen_defs.hpp	/^    } bits1;$/;"	m	struct:GenCompactInstruction::__anon9	typeref:struct:GenCompactInstruction::__anon9::__anon10
bits1	./backend/gen_defs.hpp	/^    } bits1;$/;"	m	struct:GenNativeInstruction::__anon16	typeref:struct:GenNativeInstruction::__anon16::__anon18
bits2	./backend/gen7_instruction.hpp	/^    } bits2;$/;"	m	struct:Gen7NativeInstruction::__anon42	typeref:union:Gen7NativeInstruction::__anon42::__anon51
bits2	./backend/gen8_instruction.hpp	/^    } bits2;$/;"	m	struct:Gen8NativeInstruction::__anon102	typeref:union:Gen8NativeInstruction::__anon102::__anon112
bits2	./backend/gen9_instruction.hpp	/^    } bits2;$/;"	m	struct:Gen9NativeInstruction::__anon1	typeref:union:Gen9NativeInstruction::__anon1::__anon5
bits2	./backend/gen_defs.hpp	/^    } bits2;$/;"	m	struct:GenCompactInstruction::__anon12	typeref:struct:GenCompactInstruction::__anon12::__anon14
bits2	./backend/gen_defs.hpp	/^    } bits2;$/;"	m	struct:GenCompactInstruction::__anon9	typeref:struct:GenCompactInstruction::__anon9::__anon11
bits2	./backend/gen_defs.hpp	/^    } bits2;$/;"	m	struct:GenNativeInstruction::__anon16	typeref:struct:GenNativeInstruction::__anon16::__anon19
bits3	./backend/gen7_instruction.hpp	/^    } bits3;$/;"	m	struct:Gen7NativeInstruction::__anon42	typeref:union:Gen7NativeInstruction::__anon42::__anon57
bits3	./backend/gen8_instruction.hpp	/^    } bits3;$/;"	m	struct:Gen8NativeInstruction::__anon102	typeref:union:Gen8NativeInstruction::__anon102::__anon121
bits3	./backend/gen9_instruction.hpp	/^    } bits3;$/;"	m	struct:Gen9NativeInstruction::__anon1	typeref:union:Gen9NativeInstruction::__anon1::__anon7
bits3	./backend/gen_defs.hpp	/^    } bits3;$/;"	m	struct:GenNativeInstruction::__anon16	typeref:union:GenNativeInstruction::__anon16::__anon20
block	./backend/gen_insn_selection.cpp	/^    SelectionBlock *block;$/;"	m	class:gbe::Selection::Opaque	file:
blockFuncs	./backend/program.hpp	/^    vector<std::string> blockFuncs;$/;"	m	class:gbe::Program
blockFuncs	./ir/unit.hpp	/^    vector<std::string> blockFuncs;$/;"	m	class:gbe::ir::Unit
blockList	./backend/gen_insn_selection.cpp	/^    intrusive_list<SelectionBlock> blockList;$/;"	m	class:gbe::Selection::Opaque	file:
blockList	./backend/gen_insn_selection.hpp	/^    intrusive_list<SelectionBlock> *blockList;$/;"	m	class:gbe::Selection
blockNum	./ir/function.hpp	/^    INLINE uint32_t blockNum(void) const { return blocks.size(); }$/;"	f	class:gbe::ir::Function
blockPatternMatch	./ir/structurizer.cpp	/^  void CFGStructurizer::blockPatternMatch()$/;"	f	class:gbe::ir::CFGStructurizer
block_size	./backend/gen7_instruction.hpp	/^        uint32_t block_size:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon71
block_size	./backend/gen7_instruction.hpp	/^        uint32_t block_size:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon73
block_size	./backend/gen7_instruction.hpp	/^        uint32_t block_size:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon72
block_size	./backend/gen8_instruction.hpp	/^        uint32_t block_size:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon135
block_size	./backend/gen8_instruction.hpp	/^        uint32_t block_size:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon137
block_size	./backend/gen8_instruction.hpp	/^        uint32_t block_size:3; \/\/ oword size$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon147
block_size	./backend/gen8_instruction.hpp	/^        uint32_t block_size:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon136
block_size	./backend/gen_defs.hpp	/^        uint32_t block_size:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon30
block_size	./backend/gen_defs.hpp	/^        uint32_t block_size:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon32
block_size	./backend/gen_defs.hpp	/^        uint32_t block_size:3;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon31
block_sz	./backend/gen8_instruction.hpp	/^        uint32_t block_sz:2; \/\/ 00 byte 01 dword$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon143
blockip	./ir/profile.hpp	/^    static const Register blockip = Register(23);  \/\/ blockip$/;"	m	namespace:gbe::ir::ocl
blocks	./ir/function.hpp	/^    vector<BasicBlock*> blocks;     \/\/!< All chained basic blocks$/;"	m	class:gbe::ir::Function
blocks	./ir/structurizer.hpp	/^      BlockVector blocks;$/;"	m	class:gbe::ir::CFGStructurizer
blocks_entry	./ir/structurizer.hpp	/^      Block* blocks_entry;$/;"	m	class:gbe::ir::CFGStructurizer
boolIntervalsMap	./backend/gen_reg_allocation.cpp	/^    map<SelectionBlock *, RegIntervalMap *> boolIntervalsMap;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
bottom_half	./backend/gen_register.hpp	/^    INLINE GenRegister bottom_half(void) const {$/;"	f	class:gbe::GenRegister
branchPos2	./backend/gen_context.hpp	/^    vector<std::pair<ir::LabelIndex, uint32_t>> branchPos2;$/;"	m	class:gbe::GenContext
branchPos3	./backend/gen_context.hpp	/^    vector<std::pair<LabelPair, uint32_t>> branchPos3;$/;"	m	class:gbe::GenContext
branch_gen6	./backend/gen7_instruction.hpp	/^      } branch_gen6;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon44	typeref:struct:Gen7NativeInstruction::__anon42::__anon44::__anon49
bti	./backend/gen7_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon66
bti	./backend/gen7_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon67
bti	./backend/gen7_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon68
bti	./backend/gen7_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon69
bti	./backend/gen7_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon70
bti	./backend/gen7_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon72
bti	./backend/gen7_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon73
bti	./backend/gen7_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon74
bti	./backend/gen7_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon75
bti	./backend/gen7_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon76
bti	./backend/gen7_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon80
bti	./backend/gen8_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon131
bti	./backend/gen8_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon132
bti	./backend/gen8_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon133
bti	./backend/gen8_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon134
bti	./backend/gen8_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon136
bti	./backend/gen8_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon137
bti	./backend/gen8_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon138
bti	./backend/gen8_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
bti	./backend/gen8_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon140
bti	./backend/gen8_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon141
bti	./backend/gen8_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon142
bti	./backend/gen8_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon143
bti	./backend/gen8_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon147
bti	./backend/gen8_instruction.hpp	/^        uint32_t bti:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon149
bti	./backend/gen_defs.hpp	/^        uint32_t bti:8;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon25
bti	./backend/gen_defs.hpp	/^        uint32_t bti:8;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon26
bti	./backend/gen_defs.hpp	/^        uint32_t bti:8;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon27
bti	./backend/gen_defs.hpp	/^        uint32_t bti:8;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon28
bti	./backend/gen_defs.hpp	/^        uint32_t bti:8;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon29
bti	./backend/gen_defs.hpp	/^        uint32_t bti:8;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon31
bti	./backend/gen_defs.hpp	/^        uint32_t bti:8;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon32
bti	./backend/gen_defs.hpp	/^        uint32_t bti:8;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon33
bti	./backend/gen_defs.hpp	/^        uint32_t bti:8;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon34
bti	./backend/gen_defs.hpp	/^        uint32_t bti:8;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon35
bti	./backend/gen_defs.hpp	/^        uint32_t bti:8;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon38
bti	./backend/gen_insn_selection.hpp	/^        uint16_t bti:8;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon87
bti	./backend/program.hpp	/^    uint8_t bti;      \/\/!< binding table index for __global buffer$/;"	m	struct:gbe::KernelArgument
bti	./ir/function.hpp	/^    uint8_t bti; \/\/!< binding table index$/;"	m	struct:gbe::ir::FunctionArgument
bti	./ir/instruction.cpp	/^      uint8_t bti;$/;"	m	class:gbe::ir::internal::StoreProfilingInstruction	file:
bti	./ir/profiling.hpp	/^      uint32_t bti;$/;"	m	class:gbe::ir::ProfilingInfo
btiBase	./llvm/llvm_gen_backend.cpp	/^    int btiBase;$/;"	m	class:gbe::GenWriter	file:
btiBuf	./ir/printf.hpp	/^      uint8_t btiBuf;$/;"	m	class:gbe::ir::PrintfSet
btiRegMap	./backend/context.hpp	/^    map<unsigned char, ir::Register> btiRegMap;$/;"	m	class:gbe::Context
btiRegMap	./ir/function.hpp	/^    map<uint8_t, Register> btiRegMap;\/\/!< map bti to surface base address$/;"	m	class:gbe::ir::Function
btiToGen	./llvm/llvm_gen_backend.cpp	/^  static INLINE ir::AddressSpace btiToGen(const unsigned bti) {$/;"	f	namespace:gbe
btype	./ir/structurizer.hpp	/^    BlockType btype;$/;"	m	class:gbe::ir::Block
buildArgList	./backend/context.cpp	/^  void Context::buildArgList(void) {$/;"	f	class:gbe::Context
buildBasicBlockDAG	./backend/gen_insn_selection.cpp	/^  uint32_t Selection::Opaque::buildBasicBlockDAG(const ir::BasicBlock &bb)$/;"	f	class:gbe::Selection::Opaque
buildConstantPush	./ir/lowering.cpp	/^  void FunctionArgumentLowerer::buildConstantPush(void)$/;"	f	class:gbe::ir::FunctionArgumentLowerer
buildDAG	./backend/gen_insn_scheduling.cpp	/^  int32_t SelectionScheduler::buildDAG(SelectionBlock &bb) {$/;"	f	class:gbe::SelectionScheduler
buildFromLLVMModule	./backend/program.cpp	/^  bool Program::buildFromLLVMModule(const void* module,$/;"	f	class:gbe::Program
buildFromUnit	./backend/program.cpp	/^  bool Program::buildFromUnit(const ir::Unit &unit, std::string &error) {$/;"	f	class:gbe::Program
buildJIPs	./backend/context.cpp	/^  void Context::buildJIPs(void) {$/;"	f	class:gbe::Context
buildModuleFromSource	./backend/program.cpp	/^  static bool buildModuleFromSource(const char *source, llvm::Module** out_module, llvm::LLVMContext* llvm_ctx,$/;"	f	namespace:gbe
buildPatchList	./backend/gen_context.cpp	/^  void GenContext::buildPatchList() {$/;"	f	class:gbe::GenContext
buildRegInfo	./llvm/llvm_gen_backend.cpp	/^  static void buildRegInfo(ir::BasicBlock &bb, vector<RegInfoForMov> &lastUse)$/;"	f	namespace:gbe
buildStack	./backend/context.cpp	/^  void Context::buildStack(void) {$/;"	f	class:gbe::Context
buildUsedLabels	./backend/context.cpp	/^  void Context::buildUsedLabels(void) {$/;"	f	class:gbe::Context
buildVectorOrScalar	./llvm/ExpandLargeIntegers.cpp	/^static Value *buildVectorOrScalar(ConversionState &State, IRBuilder<> &IRB, SmallVector<Value *, 16> Elements) {$/;"	f	file:
build_opt	./gbe_bin_generater.cpp	/^    string build_opt;$/;"	m	class:program_build_instance	file:
build_program	./gbe_bin_generater.cpp	/^void program_build_instance::build_program(void) throw(int)$/;"	f	class:program_build_instance
builder	./llvm/llvm_printf_parser.cpp	/^    IRBuilder<>* builder;$/;"	m	class:gbe::PrintfParser	file:
builder	./llvm/llvm_profiling.cpp	/^    IRBuilder<>* builder;$/;"	m	class:gbe::ProfilingInserter	file:
builder	./llvm/llvm_scalarize.cpp	/^    IRBuilder<>* builder;$/;"	m	class:gbe::Scalarize	file:
builtinProto	./libocl/script/gen_vector.py	/^class builtinProto():$/;"	c
bwdCodeGeneration	./backend/gen_insn_selection.cpp	/^    bool bwdCodeGeneration;$/;"	m	class:gbe::Selection::Opaque	file:
bwdList	./backend/gen_insn_selection.cpp	/^    intrusive_list<SelectionInstruction> bwdList;$/;"	m	class:gbe::Selection::Opaque	file:
byteGatherStateless	./backend/gen_insn_selection.cpp	/^    void byteGatherStateless(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
byteScatterStateless	./backend/gen_insn_selection.cpp	/^    void byteScatterStateless(Selection::Opaque &sel,$/;"	f	class:gbe::StoreInstructionPattern
calcGID	./backend/gen_context.cpp	/^  static void calcGID(GenRegister& reg, GenRegister& tmp, int flag, int subFlag, int dim, GenContext *gc)$/;"	f	namespace:gbe
calcGlobalXYZRange	./backend/gen_context.cpp	/^  void GenContext::calcGlobalXYZRange(GenRegister& reg, GenRegister& tmp, int flag, int subFlag)$/;"	f	class:gbe::GenContext
calculateFullS64MUL	./backend/gen8_context.cpp	/^  void Gen8Context::calculateFullS64MUL(GenRegister src0, GenRegister src1, GenRegister dst_h,$/;"	f	class:gbe::Gen8Context
calculateFullU64MUL	./backend/gen8_context.cpp	/^  void ChvContext::calculateFullU64MUL(GenRegister src0, GenRegister src1, GenRegister dst_h,$/;"	f	class:gbe::ChvContext
calculateFullU64MUL	./backend/gen8_context.cpp	/^  void Gen8Context::calculateFullU64MUL(GenRegister src0, GenRegister src1, GenRegister dst_h,$/;"	f	class:gbe::Gen8Context
calculateFullU64MUL	./backend/gen9_context.cpp	/^  void BxtContext::calculateFullU64MUL(GenRegister src0, GenRegister src1, GenRegister dst_h,$/;"	f	class:gbe::BxtContext
calculateNecessaryLiveout	./ir/structurizer.cpp	/^  void CFGStructurizer::calculateNecessaryLiveout()$/;"	f	class:gbe::ir::CFGStructurizer
calculateSpillCost	./backend/gen_reg_allocation.cpp	/^  void GenRegAllocator::Opaque::calculateSpillCost(Selection &selection) {$/;"	f	class:gbe::GenRegAllocator::Opaque
canBeHandled	./ir/structurizer.hpp	/^    bool canBeHandled;$/;"	m	class:gbe::ir::Block
canGetComponent	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::canGetComponent(Value* v)$/;"	f	class:gbe::Scalarize
canGetComponentArgs	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::canGetComponentArgs(User* u)$/;"	f	class:gbe::Scalarize
canGetRegisterFromImmediate	./backend/gen_insn_selection.cpp	/^  bool canGetRegisterFromImmediate(const ir::Instruction &insn) {$/;"	f	namespace:gbe
canHandleLong	./backend/gen8_encoder.cpp	/^  bool Gen8Encoder::canHandleLong(uint32_t opcode, GenRegister dst, GenRegister src0, GenRegister src1)$/;"	f	class:gbe::Gen8Encoder
canHandleLong	./backend/gen_encoder.cpp	/^  bool GenEncoder::canHandleLong(uint32_t opcode, GenRegister dst, GenRegister src0, GenRegister src1)$/;"	f	class:gbe::GenEncoder
cast	./ir/instruction.hpp	/^  INLINE T &cast(Instruction &insn) {$/;"	f	namespace:gbe::ir
cast	./ir/instruction.hpp	/^  INLINE T *cast(Instruction *insn) {$/;"	f	namespace:gbe::ir
cast	./ir/instruction.hpp	/^  INLINE const T &cast(const Instruction &insn) {$/;"	f	namespace:gbe::ir
cast	./ir/instruction.hpp	/^  INLINE const T *cast(const Instruction *insn) {$/;"	f	namespace:gbe::ir
category	./backend/gen7_instruction.hpp	/^        uint32_t category:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon69
category	./backend/gen7_instruction.hpp	/^        uint32_t category:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon70
category	./backend/gen7_instruction.hpp	/^        uint32_t category:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon71
category	./backend/gen7_instruction.hpp	/^        uint32_t category:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon72
category	./backend/gen7_instruction.hpp	/^        uint32_t category:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon76
category	./backend/gen7_instruction.hpp	/^        uint32_t category:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon80
category	./backend/gen8_instruction.hpp	/^        uint32_t category:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon133
category	./backend/gen8_instruction.hpp	/^        uint32_t category:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon134
category	./backend/gen8_instruction.hpp	/^        uint32_t category:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon135
category	./backend/gen8_instruction.hpp	/^        uint32_t category:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon136
category	./backend/gen8_instruction.hpp	/^        uint32_t category:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon140
category	./backend/gen8_instruction.hpp	/^        uint32_t category:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon149
category	./backend/gen_defs.hpp	/^        uint32_t category:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon28
category	./backend/gen_defs.hpp	/^        uint32_t category:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon29
category	./backend/gen_defs.hpp	/^        uint32_t category:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon30
category	./backend/gen_defs.hpp	/^        uint32_t category:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon31
category	./backend/gen_defs.hpp	/^        uint32_t category:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon35
category	./backend/gen_defs.hpp	/^        uint32_t category:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon38
cbInitializer	./backend/program.cpp	/^  static CallBackInitializer cbInitializer;$/;"	m	namespace:gbe	file:
cfgUpdate	./ir/structurizer.cpp	/^  void CFGStructurizer::cfgUpdate(Block* mergedBB,  const BlockSets& blockBBs)$/;"	f	class:gbe::ir::CFGStructurizer
chan_mask	./backend/gen7_instruction.hpp	/^        uint32_t chan_mask:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon74
chan_mask	./backend/gen8_instruction.hpp	/^        uint32_t chan_mask:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon138
chan_mask	./backend/gen_defs.hpp	/^        uint32_t chan_mask:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon33
chan_sel	./backend/gen/gen_mesa_disasm.c	/^static const char *chan_sel[4] = {$/;"	v	file:
changeInsideReplaceInfoMap	./backend/gen_insn_selection_optimize.cpp	/^  void SelBasicBlockOptimizer::changeInsideReplaceInfoMap(const SelectionInstruction& insn, GenRegister& var)$/;"	f	class:gbe::SelBasicBlockOptimizer
channelOrderSlot	./backend/program.h	/^    int32_t channelOrderSlot;$/;"	m	struct:ImageInfo
channel_mode	./backend/gen7_instruction.hpp	/^        uint32_t channel_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon71
channel_mode	./backend/gen8_instruction.hpp	/^        uint32_t channel_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon135
channel_mode	./backend/gen_defs.hpp	/^        uint32_t channel_mode:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon30
checkEmptyLabels	./ir/function.cpp	/^  void Function::checkEmptyLabels(void) {$/;"	f	class:gbe::ir::Function
checkForBarrier	./ir/structurizer.cpp	/^  bool CFGStructurizer::checkForBarrier(const BasicBlock* bb)$/;"	f	class:gbe::ir::CFGStructurizer
checkRegisterData	./ir/instruction.cpp	/^    static INLINE bool checkRegisterData(RegisterFamily family,$/;"	f	namespace:gbe::ir::internal
checkSpecialRegForWrite	./ir/instruction.cpp	/^    static INLINE bool checkSpecialRegForWrite(const Register &reg,$/;"	f	namespace:gbe::ir::internal
checkTypeFamily	./ir/instruction.cpp	/^    static INLINE bool checkTypeFamily(const Type &type,$/;"	f	namespace:gbe::ir::internal
check_type	./libocl/script/gen_vector.py	/^def check_type(types):$/;"	f
child	./backend/gen_insn_selection.cpp	/^    SelectionDAG *child[ir::Instruction::MAX_SRC_NUM];$/;"	m	class:gbe::SelectionDAG	file:
childId	./llvm/ExpandLargeIntegers.cpp	/^  unsigned childId;$/;"	m	struct:__anon177::VectorElement	file:
children	./backend/gen_insn_scheduling.cpp	/^    intrusive_list<ScheduleListNode> children;$/;"	m	struct:gbe::ScheduleDAGNode	file:
children	./ir/structurizer.hpp	/^    BlockList children;$/;"	m	class:gbe::ir::Block
chooseNib	./backend/gen_register.hpp	/^    void chooseNib(int nib) {$/;"	f	class:gbe::GenInstructionState
cl_intel_required_subgroup_size	./libocl/include/ocl.h	128;"	d
cl_intel_subgroups	./libocl/include/ocl.h	124;"	d
cl_intel_subgroups_short	./libocl/include/ocl.h	125;"	d
cl_khr_3d_image_writes	./libocl/include/ocl.h	123;"	d
cl_khr_3d_image_writes	./libocl/include/ocl.h	23;"	d
cl_khr_byte_addressable_store	./libocl/include/ocl.h	118;"	d
cl_khr_byte_addressable_store	./libocl/include/ocl.h	26;"	d
cl_khr_d3d10_sharing	./libocl/include/ocl.h	54;"	d
cl_khr_d3d11_sharing	./libocl/include/ocl.h	67;"	d
cl_khr_depth_images	./libocl/include/ocl.h	70;"	d
cl_khr_dx9_media_sharing	./libocl/include/ocl.h	73;"	d
cl_khr_fp16	./libocl/include/ocl.h	122;"	d
cl_khr_fp16	./libocl/include/ocl.h	29;"	d
cl_khr_fp64	./libocl/include/ocl.h	32;"	d
cl_khr_gl_depth_images	./libocl/include/ocl.h	76;"	d
cl_khr_gl_event	./libocl/include/ocl.h	57;"	d
cl_khr_gl_sharing	./libocl/include/ocl.h	120;"	d
cl_khr_gl_sharing	./libocl/include/ocl.h	41;"	d
cl_khr_global_int32_base_atomics	./libocl/include/ocl.h	114;"	d
cl_khr_global_int32_base_atomics	./libocl/include/ocl.h	35;"	d
cl_khr_global_int32_extended_atomics	./libocl/include/ocl.h	115;"	d
cl_khr_global_int32_extended_atomics	./libocl/include/ocl.h	38;"	d
cl_khr_icd	./libocl/include/ocl.h	119;"	d
cl_khr_icd	./libocl/include/ocl.h	44;"	d
cl_khr_int64_base_atomics	./libocl/include/ocl.h	60;"	d
cl_khr_int64_extended_atomics	./libocl/include/ocl.h	63;"	d
cl_khr_local_int32_base_atomics	./libocl/include/ocl.h	116;"	d
cl_khr_local_int32_base_atomics	./libocl/include/ocl.h	47;"	d
cl_khr_local_int32_extended_atomics	./libocl/include/ocl.h	117;"	d
cl_khr_local_int32_extended_atomics	./libocl/include/ocl.h	50;"	d
cl_khr_spir	./libocl/include/ocl.h	121;"	d
cl_khr_spir	./libocl/include/ocl.h	79;"	d
cl_mem_fence_flags	./libocl/include/ocl_types.h	/^typedef uint cl_mem_fence_flags;$/;"	t
cleanReplaceInfoMap	./backend/gen_insn_selection_optimize.cpp	/^  void SelBasicBlockOptimizer::cleanReplaceInfoMap()$/;"	f	class:gbe::SelBasicBlockOptimizer
clear	./backend/gen_insn_scheduling.cpp	/^  void DependencyTracker::clear(bool fullClear) { for (auto &x : nodes) x = NULL; if (fullClear) deps.clear(); }$/;"	f	class:gbe::DependencyTracker
clear	./llvm/llvm_gen_backend.cpp	/^    void clear(void) {$/;"	f	class:gbe::RegisterTranslator
clear	./sys/intrusive_list.hpp	/^    void clear(void) { erase(begin(), end()); }$/;"	f	class:gbe::intrusive_list
clearFlagRegister	./backend/gen_context.cpp	/^  void GenContext::clearFlagRegister(void) {$/;"	f	class:gbe::GenContext
clearInfo	./ir/image.cpp	/^  void ImageSet::clearInfo()$/;"	f	class:gbe::ir::ImageSet
clearLists	./backend/gen_insn_scheduling.cpp	/^  void SelectionScheduler::clearLists(void) {$/;"	f	class:gbe::SelectionScheduler
clk_channel_type	./ocl_common_defines.h	/^typedef enum clk_channel_type {$/;"	g
clk_channel_type	./ocl_common_defines.h	/^}clk_channel_type;$/;"	t	typeref:enum:clk_channel_type
clk_sampler_type	./ocl_common_defines.h	/^typedef enum clk_sampler_type {$/;"	g
clk_sampler_type	./ocl_common_defines.h	/^} clk_sampler_type;$/;"	t	typeref:enum:clk_sampler_type
cmp	./backend/gen_insn_scheduling.cpp	/^  inline bool cmp(const ScheduleDAGNode *v0, const ScheduleDAGNode *v1) {$/;"	f	namespace:gbe
cmp	./backend/gen_insn_selection.cpp	/^  INLINE bool cmp(const SelectionPattern *p0, const SelectionPattern *p1) {$/;"	f	namespace:gbe
cmp	./backend/gen_reg_allocation.cpp	/^  inline bool cmp(const GenRegInterval *i0, const GenRegInterval *i1) {$/;"	f	namespace:gbe
cmpBlockIP	./backend/gen_insn_selection.cpp	/^    void cmpBlockIP(uint32_t cond,$/;"	f	class:gbe::Selection::Opaque
cmpVec	./backend/gen_reg_allocation.cpp	/^  inline bool cmpVec(const SelectionVector *v0, const SelectionVector *v1) {$/;"	f	namespace:gbe
cmp_key	./backend/gen_insn_compact.cpp	/^  static int cmp_key(const void *p1, const void*p2) {$/;"	f	namespace:gbe
cmpt_control	./backend/gen7_instruction.hpp	/^      uint32_t cmpt_control:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
cmpt_control	./backend/gen8_instruction.hpp	/^      uint32_t cmpt_control:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
cmpt_control	./backend/gen9_instruction.hpp	/^      uint32_t cmpt_control:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
cmpt_control	./backend/gen_defs.hpp	/^      uint32_t cmpt_control:1;$/;"	m	struct:GenCompactInstruction::__anon12::__anon13
cmpt_control	./backend/gen_defs.hpp	/^      uint32_t cmpt_control:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon17
cmpxchg	./sys/atomic.hpp	/^    INLINE friend T cmpxchg    (AtomicInternal& value, const T v, const T c) { return atomic_cmpxchg(&value.data,v,c); }$/;"	f	struct:gbe::AtomicInternal
coalesce	./backend/context.cpp	/^  void SimpleAllocator::coalesce(Block *left, Block *right) {$/;"	f	class:gbe::SimpleAllocator
coalesce	./backend/gen_reg_allocation.cpp	/^  void GenRegAllocator::Opaque::coalesce(Selection &selection, SelectionVector *vector) {$/;"	f	class:gbe::GenRegAllocator::Opaque
code	./gbe_bin_generater.cpp	/^    const char* code;$/;"	m	class:program_build_instance	file:
codeGenStrategyDefault	./backend/gen_program.cpp	/^  static const struct CodeGenStrategy codeGenStrategyDefault[] = {$/;"	m	namespace:gbe	typeref:struct:gbe::CodeGenStrategy	file:
codeGenStrategySimd16	./backend/gen_program.cpp	/^  static const struct CodeGenStrategy codeGenStrategySimd16[] = {$/;"	m	namespace:gbe	typeref:struct:gbe::CodeGenStrategy	file:
col	./backend/program.h	/^    uint32_t col;$/;"	m	struct:_DebugInfo
collectDeviceEnqueueInfo	./llvm/llvm_device_enqueue.cpp	/^  void collectDeviceEnqueueInfo(Module *mod, ir::Unit &unit)$/;"	f	namespace:gbe
collectGlobalConstant	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::collectGlobalConstant(void) const {$/;"	f	class:gbe::GenWriter
collectImageArgs	./llvm/llvm_gen_backend.cpp	/^  static void collectImageArgs(std::string& accessQual, ImageArgsInfo& imageArgsInfo)$/;"	f	namespace:gbe
collectInsnNum	./ir/structurizer.cpp	/^  void CFGStructurizer::collectInsnNum(Block* block, const BasicBlock* bb)$/;"	f	class:gbe::ir::CFGStructurizer
collectShifter	./backend/gen_context.cpp	/^  void GenContext::collectShifter(GenRegister dest, GenRegister src) {$/;"	f	class:gbe::GenContext
column	./backend/gen/gen_mesa_disasm.c	/^static int column;$/;"	v	file:
commit_enable	./backend/gen7_instruction.hpp	/^        uint32_t commit_enable:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon75
commit_enable	./backend/gen8_instruction.hpp	/^        uint32_t commit_enable:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
commit_enable	./backend/gen_defs.hpp	/^        uint32_t commit_enable:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon34
common_gentype	./libocl/script/gen_vector.py	/^common_gentype = ["common_gentype", gen_vector_type(all_float_type)]$/;"	v
common_gentyped	./libocl/script/gen_vector.py	/^common_gentyped = ["common_gentyped", gen_vector_type(["double"])]$/;"	v
common_gentypef	./libocl/script/gen_vector.py	/^common_gentypef = ["common_gentypef", gen_vector_type(["float"])]$/;"	v
common_gentypeh	./libocl/script/gen_vector.py	/^common_gentypeh = ["common_gentypeh", gen_vector_type(["half"])]$/;"	v
commutes	./ir/instruction.cpp	/^      INLINE bool commutes(void) const {$/;"	f	class:gbe::ir::internal::BinaryInstruction
compactAlu1	./backend/gen_insn_compact.cpp	/^  bool compactAlu1(GenEncoder *p, uint32_t opcode, GenRegister dst, GenRegister src, uint32_t condition, bool split) {$/;"	f	namespace:gbe
compactAlu2	./backend/gen_insn_compact.cpp	/^  bool compactAlu2(GenEncoder *p, uint32_t opcode, GenRegister dst, GenRegister src0, GenRegister src1, uint32_t condition, bool split) {$/;"	f	namespace:gbe
compactAlu3	./backend/gen_insn_compact.cpp	/^  bool compactAlu3(GenEncoder *p, uint32_t opcode, GenRegister dst, GenRegister src0, GenRegister src1, GenRegister src2)$/;"	f	namespace:gbe
compactControlBits	./backend/gen_insn_compact.cpp	/^  int compactControlBits(GenEncoder *p, uint32_t quarter, uint32_t execWidth) {$/;"	f	namespace:gbe
compactControlBitsSrc3	./backend/gen_insn_compact.cpp	/^  int compactControlBitsSrc3(GenEncoder *p, uint32_t quarter, uint32_t execWidth) {$/;"	f	namespace:gbe
compactDataTypeBits	./backend/gen_insn_compact.cpp	/^  int compactDataTypeBits(GenEncoder *p, GenRegister *dst, GenRegister *src0, GenRegister *src1) {$/;"	f	namespace:gbe
compactSrcRegBits	./backend/gen_insn_compact.cpp	/^  int compactSrcRegBits(GenEncoder *p, GenRegister *src) {$/;"	f	namespace:gbe
compactSubRegBits	./backend/gen_insn_compact.cpp	/^  int compactSubRegBits(GenEncoder *p, GenRegister *dst, GenRegister *src0, GenRegister *src1) {$/;"	f	namespace:gbe
compact_control	./backend/gen_defs.hpp	/^      uint32_t compact_control:1;$/;"	m	struct:GenCompactInstruction::__anon9::__anon10
compact_table_entry	./backend/gen_insn_compact.cpp	/^  struct compact_table_entry {$/;"	s	namespace:gbe	file:
compileKernel	./backend/context.cpp	/^  Kernel *Context::compileKernel(void) {$/;"	f	class:gbe::Context
compileKernel	./backend/gen_program.cpp	/^  Kernel *GenProgram::compileKernel(const ir::Unit &unit, const std::string &name,$/;"	f	class:gbe::GenProgram
compileWgSize	./backend/program.hpp	/^    uint32_t compileWgSize[3]; \/\/!< required work group size by kernel attribute.$/;"	m	class:gbe::Kernel
compileWgSize	./ir/function.hpp	/^    size_t compileWgSize[3];        \/\/!< required work group size specified by$/;"	m	class:gbe::ir::Function
computeBool	./backend/gen_insn_selection.cpp	/^    bool computeBool;$/;"	m	class:gbe::SelectionDAG	file:
computeCFG	./ir/function.cpp	/^  void Function::computeCFG(void) {$/;"	f	class:gbe::ir::Function
computeExtraLiveInOut	./ir/liveness.cpp	/^  void Liveness::computeExtraLiveInOut(set<Register> &extentRegs) {$/;"	f	class:gbe::ir::Liveness
computeLiveInOut	./ir/liveness.cpp	/^  void Liveness::computeLiveInOut(void) {$/;"	f	class:gbe::ir::Liveness
computeRegPressure	./backend/gen_insn_scheduling.cpp	/^  void SelectionScheduler::computeRegPressure(ScheduleDAGNode *node,$/;"	f	class:gbe::SelectionScheduler
conditionSet	./llvm/llvm_gen_backend.cpp	/^    set<const Value*> conditionSet;$/;"	m	class:gbe::GenWriter	file:
conditional_modifier	./backend/gen/gen_mesa_disasm.c	/^static const char *conditional_modifier[16] = {$/;"	v	file:
conditional_modifier	./backend/gen_insn_compact.cpp	/^      uint32_t conditional_modifier:4;$/;"	m	struct:gbe::Src3ControlBits::__anon95	file:
conflictReg	./backend/gen_reg_allocation.cpp	/^    ir::Register conflictReg; \/\/ < has banck conflict with this register$/;"	m	struct:gbe::GenRegInterval	file:
const_iterator	./sys/intrusive_list.hpp	/^    typedef intrusive_list_iterator<const T*, const T&> const_iterator;$/;"	t	class:gbe::intrusive_list
const_pointer	./sys/alloc.hpp	/^    typedef const value_type* const_pointer;$/;"	t	class:gbe::Allocator
const_pointer	./sys/map.hpp	/^    typedef typename allocator_type::const_pointer const_pointer;$/;"	t	class:gbe::map
const_reference	./sys/alloc.hpp	/^    typedef const value_type& const_reference;$/;"	t	class:gbe::Allocator
const_reference	./sys/map.hpp	/^    typedef typename allocator_type::const_reference const_reference;$/;"	t	class:gbe::map
constant	./libocl/include/ocl_types.h	68;"	d
constantSet	./backend/program.hpp	/^    ir::ConstantSet *constantSet;$/;"	m	class:gbe::Program
constantSet	./ir/unit.hpp	/^    ConstantSet constantSet; \/\/!< All the constants defined in the unit$/;"	m	class:gbe::ir::Unit
constant_addrspace	./ir/profile.hpp	/^    static const Register constant_addrspace = Register(38);  \/\/ starting address of program-scope constant$/;"	m	namespace:gbe::ir::ocl
constants	./ir/constant.hpp	/^    vector<Constant> constants;\/\/!< Each constant description$/;"	m	class:gbe::ir::ConstantSet
contains	./sys/map.hpp	/^    INLINE bool contains(const Key &key) const {$/;"	f	class:gbe::map
contains	./sys/set.hpp	/^    INLINE bool contains(const Key &key) const {$/;"	f	class:gbe::set
content	./ir/printf.hpp	/^      const char* content;$/;"	m	struct:gbe::ir::PrintfLog
continueFlag	./backend/gen_insn_selection.hpp	/^        uint32_t continueFlag:8;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon92
control	./backend/gen/gen_mesa_disasm.c	/^static int control(FILE *file, const char *name, const char *ctrl[], uint32_t id, int *space)$/;"	f	file:
control_index	./backend/gen_defs.hpp	/^      uint32_t control_index:2;$/;"	m	struct:GenCompactInstruction::__anon9::__anon10
control_index	./backend/gen_defs.hpp	/^      uint32_t control_index:5;$/;"	m	struct:GenCompactInstruction::__anon12::__anon13
control_table	./backend/gen_insn_compact.cpp	/^  static compact_table_entry control_table[] = {$/;"	m	namespace:gbe	file:
convAPFloatToU16	./ir/half.cpp	/^  static uint16_t convAPFloatToU16(const llvm::APFloat& apf)$/;"	f	namespace:gbe::ir
convToHalf	./ir/half.cpp	/^  half half::convToHalf(int16_t v16) {$/;"	f	class:gbe::ir::half
convToHalf	./ir/half.cpp	/^  half half::convToHalf(uint16_t u16) {$/;"	f	class:gbe::ir::half
convU16ToAPFloat	./ir/half.cpp	/^  static llvm::APFloat convU16ToAPFloat(const uint16_t v)$/;"	f	namespace:gbe::ir
conversion_specifier	./ir/printf.hpp	/^      char conversion_specifier;$/;"	m	struct:gbe::ir::PrintfState
convert	./ir/instruction.cpp	/^      Instruction convert(void) const {$/;"	f	struct:gbe::ir::internal::BasePolicy
convertConstant	./llvm/PromoteIntegers.cpp	/^static Value *convertConstant(Constant *C, bool SignExt=false) {$/;"	f	file:
convertInstruction	./llvm/ExpandLargeIntegers.cpp	/^static void convertInstruction(Instruction *Inst, ConversionState &State,$/;"	f	file:
convertInstruction	./llvm/PromoteIntegers.cpp	/^static void convertInstruction(Instruction *Inst, ConversionState &State) {$/;"	f	file:
convertSpaceToName	./llvm/llvm_intrinsic_lowering.cpp	/^      static char convertSpaceToName(Value *val) {$/;"	f	class:gbe::InstrinsicLowering
convertU64ToU32	./backend/gen_insn_selection.cpp	/^    GenRegister convertU64ToU32(Selection::Opaque &sel,$/;"	f	class:gbe::AtomicInstructionPattern
convertU64ToU32	./backend/gen_insn_selection.cpp	/^    GenRegister convertU64ToU32(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
convertU64ToU32	./backend/gen_insn_selection.cpp	/^    GenRegister convertU64ToU32(Selection::Opaque &sel,$/;"	f	class:gbe::StoreInstructionPattern
convertedVector	./llvm/ExpandLargeIntegers.cpp	/^  bool convertedVector(Value *vector) {$/;"	f	class:__anon178::ConversionState
coordType	./ir/instruction.cpp	/^      uint8_t coordType;$/;"	m	class:gbe::ir::internal::TypedWriteInstruction	file:
copy	./ir/immediate.cpp	/^    void Immediate::copy(const Immediate &other, int32_t offset, uint32_t num) {$/;"	f	class:Immediate
copy_helper	./libocl/include/ocl_enqueue.h	/^    void *copy_helper;                \/\/ IFF (1<<25)$/;"	m	struct:Block_literal::Block_descriptor_1
cost	./backend/gen_insn_selection.cpp	/^    uint32_t cost;$/;"	m	class:gbe::SelectionPattern	file:
cost	./backend/gen_reg_allocation.cpp	/^    float cost;$/;"	m	struct:gbe::SpillInterval	file:
create	./backend/gen_insn_selection.cpp	/^  Selection::Opaque::create(SelectionOpcode opcode, uint32_t dstNum, uint32_t srcNum)$/;"	f	class:gbe::Selection::Opaque
create	./backend/gen_insn_selection.cpp	/^  SelectionInstruction *Selection::create(SelectionOpcode opcode, uint32_t dstNum, uint32_t srcNum) {$/;"	f	class:gbe::Selection
createBarrierNodupPass	./llvm/llvm_barrier_nodup.cpp	/^    ModulePass *createBarrierNodupPass(bool Nodup) {$/;"	f	namespace:gbe
createCustomLoopUnrollPass	./llvm/llvm_unroll.cpp	/^    LoopPass *createCustomLoopUnrollPass() {$/;"	f	namespace:gbe
createExpandConstantExprPass	./llvm/ExpandConstantExpr.cpp	/^FunctionPass *llvm::createExpandConstantExprPass() {$/;"	f	class:llvm
createExpandLargeIntegersPass	./llvm/ExpandLargeIntegers.cpp	/^FunctionPass *llvm::createExpandLargeIntegersPass() {$/;"	f	class:llvm
createGenPass	./llvm/llvm_gen_backend.cpp	/^  llvm::FunctionPass *createGenPass(ir::Unit &unit) {$/;"	f	namespace:gbe
createGenReg	./backend/gen_reg_allocation.cpp	/^  bool GenRegAllocator::Opaque::createGenReg(const Selection &selection, const GenRegInterval &interval) {$/;"	f	class:gbe::GenRegAllocator::Opaque
createIntrinsicLoweringPass	./llvm/llvm_intrinsic_lowering.cpp	/^    BasicBlockPass *createIntrinsicLoweringPass() {$/;"	f	namespace:gbe
createLoadStoreOptimizationPass	./llvm/llvm_loadstore_optimization.cpp	/^  BasicBlockPass *createLoadStoreOptimizationPass() {$/;"	f	namespace:gbe
createOclBitCodeModule	./llvm/llvm_bitcode_link.cpp	/^  static Module* createOclBitCodeModule(LLVMContext& ctx,$/;"	f	namespace:gbe
createPrintfParserPass	./llvm/llvm_printf_parser.cpp	/^  FunctionPass* createPrintfParserPass(ir::Unit &unit)$/;"	f	namespace:gbe
createProfilingInserterPass	./llvm/llvm_profiling.cpp	/^  FunctionPass* createProfilingInserterPass(int profilingType, ir::Unit &unit)$/;"	f	namespace:gbe
createPromoteIntegersPass	./llvm/PromoteIntegers.cpp	/^FunctionPass *llvm::createPromoteIntegersPass() {$/;"	f	class:llvm
createRemoveGEPPass	./llvm/llvm_passes.cpp	/^  BasicBlockPass *createRemoveGEPPass(const ir::Unit &unit) {$/;"	f	namespace:gbe
createSamplerFixPass	./llvm/llvm_sampler_fix.cpp	/^  FunctionPass* createSamplerFixPass() {$/;"	f	namespace:gbe
createScalarInstruction	./llvm/llvm_scalarize.cpp	/^  Instruction* Scalarize::createScalarInstruction(Instruction* inst, ArrayRef<Value*> args)$/;"	f	class:gbe::Scalarize
createScalarizePass	./llvm/llvm_scalarize.cpp	/^  FunctionPass* createScalarizePass()$/;"	f	namespace:gbe
createStripAttributesPass	./llvm/StripAttributes.cpp	/^FunctionPass *llvm::createStripAttributesPass(bool lastTime) {$/;"	f	class:llvm
ctx	./backend/gen_insn_scheduling.cpp	/^    GenContext &ctx;$/;"	m	struct:gbe::SelectionScheduler	file:
ctx	./backend/gen_insn_selection.cpp	/^    GenContext &ctx;$/;"	m	class:gbe::Selection::Opaque	file:
ctx	./backend/gen_insn_selection_optimize.cpp	/^    const GenContext &ctx;      \/\/in case that we need it$/;"	m	class:gbe::SelOptimizer	file:
ctx	./backend/gen_reg_allocation.cpp	/^    GenContext &ctx;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
ctx	./backend/program.hpp	/^    Context *ctx;              \/\/!< Save context after compiler to alloc constant buffer curbe$/;"	m	class:gbe::Kernel
ctx	./llvm/llvm_gen_backend.cpp	/^      ir::Context             &ctx;$/;"	m	class:gbe::MemoryInstHelper	file:
ctx	./llvm/llvm_gen_backend.cpp	/^    ir::Context &ctx;$/;"	m	class:gbe::RegisterTranslator	file:
ctx	./llvm/llvm_gen_backend.cpp	/^    ir::Context ctx;$/;"	m	class:gbe::GenWriter	file:
curbeRegs	./backend/context.hpp	/^    map<ir::Register, uint32_t> curbeRegs;$/;"	m	class:gbe::Context
curbeSize	./backend/program.hpp	/^    uint32_t curbeSize;        \/\/!< Size of the data to push$/;"	m	class:gbe::Kernel
curbeType	./ir/register.hpp	/^      gbe_curbe_type  curbeType;$/;"	m	struct:gbe::ir::RegisterData::PayloadRegisterData
curr	./backend/gen_encoder.hpp	/^    GenInstructionState curr;$/;"	m	class:gbe::GenEncoder
curr	./backend/gen_insn_selection.cpp	/^    GenInstructionState curr;$/;"	m	class:gbe::Selection::Opaque	file:
curr	./sys/alloc.hpp	/^    GrowingPoolElem *curr; \/\/!< To get new element from$/;"	m	class:gbe::GrowingPool
curr	./sys/alloc.hpp	/^    Segment *curr;$/;"	m	class:gbe::LinearAllocator
curr	./sys/cvar.hpp	/^      struct { float   min, *curr, max; } f; \/\/!< float variables with bounds$/;"	m	struct:gbe::CVarInit::__anon181::__anon183
curr	./sys/cvar.hpp	/^      struct { int32_t min, *curr, max; } i; \/\/!< integer variables with bounds$/;"	m	struct:gbe::CVarInit::__anon181::__anon182
currAuxLabel	./backend/gen_insn_selection.cpp	/^    uint32_t currAuxLabel;$/;"	m	class:gbe::Selection::Opaque	file:
d	./backend/gen7_instruction.hpp	/^      int d;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57
d	./backend/gen8_instruction.hpp	/^      int d;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121
d	./backend/gen_defs.hpp	/^      int d;$/;"	m	union:GenNativeInstruction::__anon16::__anon20
d	./backend/gen_register.hpp	/^      int32_t d;$/;"	m	union:gbe::GenRegister::__anon40
d8	./backend/gen_register.hpp	/^    static INLINE GenRegister d8(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
d8	./backend/gen_register.hpp	/^    static INLINE GenRegister d8(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
da1	./backend/gen7_instruction.hpp	/^      } da1;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon44	typeref:struct:Gen7NativeInstruction::__anon42::__anon44::__anon45
da1	./backend/gen7_instruction.hpp	/^      } da1;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon51	typeref:struct:Gen7NativeInstruction::__anon42::__anon51::__anon52
da1	./backend/gen7_instruction.hpp	/^      } da1;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon58
da1	./backend/gen8_instruction.hpp	/^      } da1;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon104	typeref:struct:Gen8NativeInstruction::__anon102::__anon104::__anon105
da1	./backend/gen8_instruction.hpp	/^      } da1;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon112	typeref:struct:Gen8NativeInstruction::__anon102::__anon112::__anon113
da1	./backend/gen8_instruction.hpp	/^      } da1;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon122
da16	./backend/gen7_instruction.hpp	/^      } da16;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon44	typeref:struct:Gen7NativeInstruction::__anon42::__anon44::__anon47
da16	./backend/gen7_instruction.hpp	/^      } da16;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon51	typeref:struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
da16	./backend/gen7_instruction.hpp	/^      } da16;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon59
da16	./backend/gen8_instruction.hpp	/^      } da16;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon104	typeref:struct:Gen8NativeInstruction::__anon102::__anon104::__anon107
da16	./backend/gen8_instruction.hpp	/^      } da16;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon112	typeref:struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
da16	./backend/gen8_instruction.hpp	/^      } da16;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon123
da16acc	./backend/gen8_instruction.hpp	/^      } da16acc;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon104	typeref:struct:Gen8NativeInstruction::__anon102::__anon104::__anon109
da16acc	./backend/gen8_instruction.hpp	/^      } da16acc;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon112	typeref:struct:Gen8NativeInstruction::__anon102::__anon112::__anon117
da16acc	./backend/gen8_instruction.hpp	/^      } da16acc;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon126
da3src	./backend/gen7_instruction.hpp	/^      } da3src;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon44	typeref:struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
da3src	./backend/gen7_instruction.hpp	/^      } da3src;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon51	typeref:struct:Gen7NativeInstruction::__anon42::__anon51::__anon56
da3src	./backend/gen7_instruction.hpp	/^      } da3src;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon77
da3src	./backend/gen8_instruction.hpp	/^      } da3src;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon104	typeref:struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
da3src	./backend/gen8_instruction.hpp	/^      } da3src;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon112	typeref:struct:Gen8NativeInstruction::__anon102::__anon112::__anon118
da3src	./backend/gen8_instruction.hpp	/^      } da3src;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon144
da3srcacc	./backend/gen8_instruction.hpp	/^      } da3srcacc;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon104	typeref:struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
da3srcacc	./backend/gen8_instruction.hpp	/^      } da3srcacc;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon112	typeref:struct:Gen8NativeInstruction::__anon102::__anon112::__anon119
da3srcacc	./backend/gen8_instruction.hpp	/^      } da3srcacc;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon145
dag	./backend/context.hpp	/^    ir::FunctionDAG *dag;                 \/\/!< Graph of values on the function$/;"	m	class:gbe::Context
dag	./ir/lowering.cpp	/^    FunctionDAG *dag;   \/\/!< Contains complete dependency information$/;"	m	class:gbe::ir::FunctionArgumentLowerer	file:
dag	./ir/value.cpp	/^    const FunctionDAG &dag;   \/\/!< Structure we are building$/;"	m	class:gbe::ir::LiveOutSet	file:
data	./backend/gen_insn_compact.cpp	/^    uint32_t data;$/;"	m	union:gbe::ControlBits	file:
data	./backend/gen_insn_compact.cpp	/^    uint32_t data;$/;"	m	union:gbe::DataTypeBits	file:
data	./backend/gen_insn_compact.cpp	/^    uint32_t data;$/;"	m	union:gbe::Gen8DataTypeBits	file:
data	./backend/gen_insn_compact.cpp	/^    uint32_t data;$/;"	m	union:gbe::Src3ControlBits	file:
data	./backend/gen_insn_compact.cpp	/^    uint32_t data;$/;"	m	union:gbe::SrcRegBits	file:
data	./backend/gen_insn_compact.cpp	/^    uint32_t data;$/;"	m	union:gbe::SubRegBits	file:
data	./ir/constant.hpp	/^    vector<char> data;         \/\/!< The constant data serialized in one array$/;"	m	class:gbe::ir::ConstantSet
data	./ir/immediate.hpp	/^    } data;     \/\/!< Value to store$/;"	m	class:gbe::ir::Immediate	typeref:union:gbe::ir::Immediate::__anon154
data	./ir/instruction.hpp	/^    uint16_t data;$/;"	m	union:gbe::ir::_ImageInfoKey
data	./ir/value.hpp	/^    } data;$/;"	m	class:gbe::ir::ValueDef	typeref:union:gbe::ir::ValueDef::Data
data	./sys/alloc.hpp	/^      T *data;$/;"	m	class:gbe::GrowingPool::GrowingPoolElem
data	./sys/alloc.hpp	/^      void *data;$/;"	m	struct:gbe::LinearAllocator::Segment
data	./sys/atomic.hpp	/^    volatile T data;$/;"	m	struct:gbe::AtomicInternal
data	./sys/fixed_array.hpp	/^    T* data(void) { return &elem[0]; }$/;"	f	class:gbe::fixed_array
data	./sys/fixed_array.hpp	/^    const T* data(void) const { return &elem[0]; }$/;"	f	class:gbe::fixed_array
dataTypeSlot	./backend/program.h	/^    int32_t dataTypeSlot;$/;"	m	struct:ImageInfo
data_port1_data_cache_msg_type	./backend/gen/gen_mesa_disasm.c	/^static const char *data_port1_data_cache_msg_type[] = {$/;"	v	file:
data_port_data_cache_block_size	./backend/gen/gen_mesa_disasm.c	/^static const char *data_port_data_cache_block_size[] = {$/;"	v	file:
data_port_data_cache_byte_scattered_simd_mode	./backend/gen/gen_mesa_disasm.c	/^static const char *data_port_data_cache_byte_scattered_simd_mode[] = {$/;"	v	file:
data_port_data_cache_category	./backend/gen/gen_mesa_disasm.c	/^static const char *data_port_data_cache_category[] = {$/;"	v	file:
data_port_data_cache_data_size	./backend/gen/gen_mesa_disasm.c	/^static const char *data_port_data_cache_data_size[] = {$/;"	v	file:
data_port_data_cache_msg_type	./backend/gen/gen_mesa_disasm.c	/^static const char *data_port_data_cache_msg_type[] = {$/;"	v	file:
data_port_data_cache_simd_mode	./backend/gen/gen_mesa_disasm.c	/^static const char *data_port_data_cache_simd_mode[] = {$/;"	v	file:
data_port_scratch_block_size	./backend/gen/gen_mesa_disasm.c	/^static const char *data_port_scratch_block_size[] = {$/;"	v	file:
data_port_scratch_channel_mode	./backend/gen/gen_mesa_disasm.c	/^static const char *data_port_scratch_channel_mode[] = {$/;"	v	file:
data_port_scratch_invalidate	./backend/gen/gen_mesa_disasm.c	/^static const char *data_port_scratch_invalidate[] = {$/;"	v	file:
data_port_scratch_msg_type	./backend/gen/gen_mesa_disasm.c	/^static const char *data_port_scratch_msg_type[] = {$/;"	v	file:
data_size	./backend/gen7_instruction.hpp	/^        uint32_t data_size:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon70
data_size	./backend/gen8_instruction.hpp	/^        uint32_t data_size:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon141
data_size	./backend/gen8_instruction.hpp	/^        uint32_t data_size:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon134
data_size	./backend/gen_defs.hpp	/^        uint32_t data_size:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon29
data_sz	./backend/gen8_instruction.hpp	/^        uint32_t data_sz:2; \/\/ 0 ->1block 1->2block$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon143
data_type	./backend/gen7_instruction.hpp	/^        uint32_t data_type:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon65
data_type	./backend/gen8_instruction.hpp	/^        uint32_t data_type:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon130
data_type	./backend/gen_defs.hpp	/^        uint32_t data_type:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon24
data_type_decompact	./backend/gen_insn_compact.cpp	/^  static compact_table_entry data_type_decompact[] = {$/;"	m	namespace:gbe	file:
data_type_index	./backend/gen_defs.hpp	/^      uint32_t data_type_index:5;$/;"	m	struct:GenCompactInstruction::__anon12::__anon13
data_type_table	./backend/gen_insn_compact.cpp	/^  static compact_table_entry data_type_table[] = {$/;"	m	namespace:gbe	file:
dce	./llvm/llvm_scalarize.cpp	/^  void Scalarize::dce()$/;"	f	class:gbe::Scalarize
deadList	./llvm/llvm_scalarize.cpp	/^    std::vector<Instruction*> deadList;$/;"	m	class:gbe::Scalarize	file:
deallocate	./backend/context.cpp	/^  void Context::deallocate(int32_t offset) { registerAllocator->deallocate(offset); }$/;"	f	class:gbe::Context
deallocate	./backend/context.cpp	/^  void SimpleAllocator::deallocate(int32_t offset)$/;"	f	class:gbe::SimpleAllocator
deallocate	./sys/alloc.hpp	/^    INLINE void deallocate(pointer p, size_type) {$/;"	f	class:gbe::Allocator
deallocate	./sys/alloc.hpp	/^    INLINE void deallocate(void *ptr) {$/;"	f	class:gbe::LinearAllocator
deallocate	./sys/alloc.hpp	/^    void deallocate(void *t) {$/;"	f	class:gbe::GrowingPool
deallocateScratchMem	./backend/context.cpp	/^  void Context::deallocateScratchMem(int32_t offset) {$/;"	f	class:gbe::Context
debug_control	./backend/gen7_instruction.hpp	/^      uint32_t debug_control:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
debug_control	./backend/gen8_instruction.hpp	/^      uint32_t debug_control:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
debug_control	./backend/gen9_instruction.hpp	/^      uint32_t debug_control:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
debug_control	./backend/gen_defs.hpp	/^      uint32_t debug_control:1;$/;"	m	struct:GenCompactInstruction::__anon12::__anon13
debug_control	./backend/gen_defs.hpp	/^      uint32_t debug_control:1;$/;"	m	struct:GenCompactInstruction::__anon9::__anon10
debug_control	./backend/gen_defs.hpp	/^      uint32_t debug_control:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon17
debug_ctrl	./backend/gen/gen_mesa_disasm.c	/^static const char *debug_ctrl[2] = {$/;"	v	file:
decompactInstruction	./backend/gen_insn_compact.cpp	/^  void decompactInstruction(GenCompactInstruction * p, void *insn, uint32_t insn_version) {$/;"	f	namespace:gbe
defMap	./ir/value.cpp	/^    FunctionDefMap defMap;    \/\/!< All per-block data$/;"	m	class:gbe::ir::LiveOutSet	file:
defName	./ir/value.hpp	/^    map<ValueDef, ValueDef*> defName;  \/\/!< Get the ValueDef pointer from the value$/;"	m	class:gbe::ir::FunctionDAG
defOffset	./ir/reloc.hpp	/^    unsigned int defOffset;$/;"	m	struct:gbe::ir::RelocEntry
defaultData	./ir/immediate.hpp	/^    uint64_t defaultData;$/;"	m	class:gbe::ir::Immediate
definedPhiRegs	./ir/function.hpp	/^    set <Register> definedPhiRegs;$/;"	m	class:gbe::ir::BasicBlock
depMode	./backend/gen_insn_scheduling.cpp	/^    DepMode depMode;$/;"	m	struct:gbe::ScheduleListNode	file:
depNum	./backend/gen_insn_scheduling.cpp	/^    uint32_t depNum;$/;"	m	struct:gbe::ScheduleDAGNode	file:
dep_ctrl	./backend/gen/gen_mesa_disasm.c	/^static const char *dep_ctrl[4] = {$/;"	v	file:
dependency_control	./backend/gen7_instruction.hpp	/^      uint32_t dependency_control:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
dependency_control	./backend/gen8_instruction.hpp	/^      uint32_t dependency_control:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
dependency_control	./backend/gen9_instruction.hpp	/^      uint32_t dependency_control:2;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
dependency_control	./backend/gen_insn_compact.cpp	/^      uint32_t dependency_control:2;$/;"	m	struct:gbe::ControlBits::__anon94	file:
dependency_control	./backend/gen_insn_compact.cpp	/^      uint32_t dependency_control:2;$/;"	m	struct:gbe::Src3ControlBits::__anon95	file:
dependsOn	./backend/gen_insn_scheduling.cpp	/^    bool dependsOn(ScheduleDAGNode *node) const {$/;"	f	struct:gbe::ScheduleDAGNode
deps	./backend/gen_insn_scheduling.cpp	/^    map<ScheduleDAGNode *, vector<ScheduleDAGNode*>> deps;$/;"	m	struct:gbe::DependencyTracker	file:
depthSlot	./backend/program.h	/^    int32_t depthSlot;$/;"	m	struct:ImageInfo
descriptor	./libocl/include/ocl_enqueue.h	/^  } *descriptor;$/;"	m	struct:Block_literal	typeref:struct:Block_literal::Block_descriptor_1
deserializeFromBin	./backend/program.cpp	/^  uint32_t Kernel::deserializeFromBin(std::istream& ins) {$/;"	f	class:gbe::Kernel
deserializeFromBin	./backend/program.cpp	/^  uint32_t Program::deserializeFromBin(std::istream& ins) {$/;"	f	class:gbe::Program
deserializeFromBin	./ir/constant.cpp	/^  uint32_t ConstantSet::deserializeFromBin(std::istream& ins) {$/;"	f	class:gbe::ir::ConstantSet
deserializeFromBin	./ir/image.cpp	/^  uint32_t ImageSet::deserializeFromBin(std::istream& ins) {$/;"	f	class:gbe::ir::ImageSet
deserializeFromBin	./ir/reloc.cpp	/^  uint32_t RelocTable::deserializeFromBin(std::istream& ins) {$/;"	f	class:gbe::ir::RelocTable
deserializeFromBin	./ir/sampler.cpp	/^  uint32_t SamplerSet::deserializeFromBin(std::istream& ins) {$/;"	f	class:gbe::ir::SamplerSet
deserializeFromLLVM	./sys/platform.hpp	/^  virtual uint32_t deserializeFromLLVM(void) { return 0;\/* not implemented now. *\/}$/;"	f	class:Serializable
dest	./backend/gen/gen_mesa_disasm.c	/^static int dest(FILE *file, const void* inst)$/;"	f	file:
dest_3src	./backend/gen/gen_mesa_disasm.c	/^static int dest_3src(FILE *file, const void *inst)$/;"	f	file:
dest_address_mode	./backend/gen7_instruction.hpp	/^        uint32_t dest_address_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon45
dest_address_mode	./backend/gen7_instruction.hpp	/^        uint32_t dest_address_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon46
dest_address_mode	./backend/gen7_instruction.hpp	/^        uint32_t dest_address_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon47
dest_address_mode	./backend/gen7_instruction.hpp	/^        uint32_t dest_address_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon48
dest_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t dest_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon105
dest_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t dest_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon106
dest_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t dest_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon107
dest_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t dest_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon108
dest_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t dest_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon109
dest_address_mode	./backend/gen9_instruction.hpp	/^        uint32_t dest_address_mode:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon3::__anon4
dest_address_mode	./backend/gen_insn_compact.cpp	/^      uint32_t dest_address_mode:1;$/;"	m	struct:gbe::DataTypeBits::__anon96	file:
dest_address_mode	./backend/gen_insn_compact.cpp	/^      uint32_t dest_address_mode:1;$/;"	m	struct:gbe::Gen8DataTypeBits::__anon97	file:
dest_horiz_stride	./backend/gen7_instruction.hpp	/^        uint32_t dest_horiz_stride:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon45
dest_horiz_stride	./backend/gen7_instruction.hpp	/^        uint32_t dest_horiz_stride:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon46
dest_horiz_stride	./backend/gen7_instruction.hpp	/^        uint32_t dest_horiz_stride:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon47
dest_horiz_stride	./backend/gen7_instruction.hpp	/^        uint32_t dest_horiz_stride:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon48
dest_horiz_stride	./backend/gen8_instruction.hpp	/^        uint32_t dest_horiz_stride:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon105
dest_horiz_stride	./backend/gen8_instruction.hpp	/^        uint32_t dest_horiz_stride:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon106
dest_horiz_stride	./backend/gen8_instruction.hpp	/^        uint32_t dest_horiz_stride:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon107
dest_horiz_stride	./backend/gen8_instruction.hpp	/^        uint32_t dest_horiz_stride:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon108
dest_horiz_stride	./backend/gen_insn_compact.cpp	/^      uint32_t dest_horiz_stride:2;$/;"	m	struct:gbe::DataTypeBits::__anon96	file:
dest_horiz_stride	./backend/gen_insn_compact.cpp	/^      uint32_t dest_horiz_stride:2;$/;"	m	struct:gbe::Gen8DataTypeBits::__anon97	file:
dest_indirect_offset	./backend/gen7_instruction.hpp	/^        int dest_indirect_offset:10;        \/* offset against the deref'd address reg *\/$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon46
dest_indirect_offset	./backend/gen7_instruction.hpp	/^        int dest_indirect_offset:6;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon48
dest_indirect_offset	./backend/gen8_instruction.hpp	/^        int dest_indirect_offset:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon108
dest_indirect_offset	./backend/gen8_instruction.hpp	/^        int dest_indirect_offset:9;        \/* offset against the deref'd address reg bit0-8 *\/$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon106
dest_indirect_offset_9	./backend/gen8_instruction.hpp	/^        int dest_indirect_offset_9:1;        \/* offset against the deref'd address reg bit9 *\/$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon108
dest_indirect_offset_9	./backend/gen8_instruction.hpp	/^        int dest_indirect_offset_9:1;      \/* offset against the deref'd address reg bit9 *\/$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon106
dest_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t dest_reg_file:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
dest_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t dest_reg_file:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon45
dest_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t dest_reg_file:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon46
dest_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t dest_reg_file:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon47
dest_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t dest_reg_file:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon48
dest_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t dest_reg_file:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon49
dest_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon105
dest_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon106
dest_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon107
dest_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon108
dest_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon109
dest_reg_file	./backend/gen_insn_compact.cpp	/^      uint32_t dest_reg_file:2;$/;"	m	struct:gbe::DataTypeBits::__anon96	file:
dest_reg_file	./backend/gen_insn_compact.cpp	/^      uint32_t dest_reg_file:2;$/;"	m	struct:gbe::Gen8DataTypeBits::__anon97	file:
dest_reg_file_0	./backend/gen9_instruction.hpp	/^        uint32_t dest_reg_file_0:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon3::__anon4
dest_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t dest_reg_nr:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon45
dest_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t dest_reg_nr:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon47
dest_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t dest_reg_nr:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
dest_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon105
dest_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon107
dest_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon109
dest_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
dest_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
dest_reg_nr	./backend/gen9_instruction.hpp	/^        uint32_t dest_reg_nr:8;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon3::__anon4
dest_reg_nr	./backend/gen_defs.hpp	/^      uint32_t dest_reg_nr:8;$/;"	m	struct:GenCompactInstruction::__anon12::__anon14
dest_reg_type	./backend/gen7_instruction.hpp	/^        uint32_t dest_reg_type:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon45
dest_reg_type	./backend/gen7_instruction.hpp	/^        uint32_t dest_reg_type:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon46
dest_reg_type	./backend/gen7_instruction.hpp	/^        uint32_t dest_reg_type:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon47
dest_reg_type	./backend/gen7_instruction.hpp	/^        uint32_t dest_reg_type:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon48
dest_reg_type	./backend/gen7_instruction.hpp	/^        uint32_t dest_reg_type:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon49
dest_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon105
dest_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon106
dest_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon107
dest_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon108
dest_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t dest_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon109
dest_reg_type	./backend/gen9_instruction.hpp	/^        uint32_t dest_reg_type:4;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon3::__anon4
dest_reg_type	./backend/gen_insn_compact.cpp	/^      uint32_t dest_reg_type:3;$/;"	m	struct:gbe::DataTypeBits::__anon96	file:
dest_reg_type	./backend/gen_insn_compact.cpp	/^      uint32_t dest_reg_type:4;$/;"	m	struct:gbe::Gen8DataTypeBits::__anon97	file:
dest_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t dest_subreg_nr:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon47
dest_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t dest_subreg_nr:3; \/* subnr for the address reg a0.x *\/$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon46
dest_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t dest_subreg_nr:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon48
dest_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t dest_subreg_nr:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
dest_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t dest_subreg_nr:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon45
dest_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t dest_subreg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon107
dest_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t dest_subreg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon109
dest_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t dest_subreg_nr:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon108
dest_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t dest_subreg_nr:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
dest_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t dest_subreg_nr:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
dest_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t dest_subreg_nr:4;         \/* subnr for the address reg a0.x *\/$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon106
dest_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t dest_subreg_nr:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon105
dest_subreg_nr	./backend/gen9_instruction.hpp	/^        uint32_t dest_subreg_nr:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon3::__anon4
dest_subreg_nr	./backend/gen_insn_compact.cpp	/^      uint32_t dest_subreg_nr:5;$/;"	m	struct:gbe::SubRegBits::__anon98	file:
dest_type	./backend/gen8_instruction.hpp	/^        uint32_t dest_type:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
dest_type	./backend/gen8_instruction.hpp	/^        uint32_t dest_type:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
dest_writemask	./backend/gen7_instruction.hpp	/^        uint32_t dest_writemask:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon47
dest_writemask	./backend/gen7_instruction.hpp	/^        uint32_t dest_writemask:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon48
dest_writemask	./backend/gen7_instruction.hpp	/^        uint32_t dest_writemask:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
dest_writemask	./backend/gen8_instruction.hpp	/^        uint32_t dest_writemask:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon107
dest_writemask	./backend/gen8_instruction.hpp	/^        uint32_t dest_writemask:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon108
dest_writemask	./backend/gen8_instruction.hpp	/^        uint32_t dest_writemask:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
destreg_or_condmod	./backend/gen7_instruction.hpp	/^      uint32_t destreg_or_condmod:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
destreg_or_condmod	./backend/gen8_instruction.hpp	/^      uint32_t destreg_or_condmod:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
destreg_or_condmod	./backend/gen9_instruction.hpp	/^      uint32_t destreg_or_condmod:4;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
destreg_or_condmod	./backend/gen_defs.hpp	/^      uint32_t destreg_or_condmod:4;$/;"	m	struct:GenCompactInstruction::__anon12::__anon13
destreg_or_condmod	./backend/gen_defs.hpp	/^      uint32_t destreg_or_condmod:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon17
destroy	./sys/alloc.hpp	/^    INLINE void destroy(pointer p) { p->~T(); }$/;"	f	class:gbe::Allocator
destroySelectionLibrary	./backend/gen_insn_selection.cpp	/^  static void destroySelectionLibrary(void) { GBE_DELETE(selLib); }$/;"	f	namespace:gbe
deviceID	./backend/gen_context.hpp	/^    uint32_t deviceID;$/;"	m	class:gbe::GenContext
deviceID	./backend/gen_encoder.hpp	/^    uint32_t deviceID;$/;"	m	class:gbe::GenEncoder
deviceID	./backend/gen_program.hpp	/^    uint32_t deviceID;      \/\/!< Current device ID$/;"	m	class:gbe::GenKernel
deviceID	./backend/gen_program.hpp	/^    uint32_t deviceID;$/;"	m	class:gbe::GenProgram
deviceID	./ir/profiling.hpp	/^      uint32_t deviceID;$/;"	m	class:gbe::ir::ProfilingInfo
df	./backend/gen_register.hpp	/^      double df;$/;"	m	union:gbe::GenRegister::__anon40
df1	./backend/gen_register.hpp	/^    static INLINE GenRegister df1(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
df1	./backend/gen_register.hpp	/^    static INLINE GenRegister df1(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
df16	./backend/gen_register.hpp	/^    static INLINE GenRegister df16(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
df16	./backend/gen_register.hpp	/^    static INLINE GenRegister df16(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
df16grf	./backend/gen_register.hpp	/^    static INLINE GenRegister df16grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
df16grf	./backend/gen_register.hpp	/^    static INLINE GenRegister df16grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
df1grf	./backend/gen_register.hpp	/^    static INLINE GenRegister df1grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
df1grf	./backend/gen_register.hpp	/^    static INLINE GenRegister df1grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
df8	./backend/gen_register.hpp	/^    static INLINE GenRegister df8(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
df8	./backend/gen_register.hpp	/^    static INLINE GenRegister df8(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
df8grf	./backend/gen_register.hpp	/^    static INLINE GenRegister df8grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
df8grf	./backend/gen_register.hpp	/^    static INLINE GenRegister df8grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
difference_type	./sys/alloc.hpp	/^    typedef std::ptrdiff_t difference_type;$/;"	t	class:gbe::Allocator
dimOrderSlot	./backend/program.h	/^    int32_t dimOrderSlot;$/;"	m	struct:ImageInfo
dispatchMask	./ir/profiling.hpp	/^        uint16_t dispatchMask;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
dispose_helper	./libocl/include/ocl_enqueue.h	/^    void *dispose_helper;             \/\/ IFF (1<<25)$/;"	m	struct:Block_literal::Block_descriptor_1
doFinalization	./llvm/llvm_gen_backend.cpp	/^    virtual bool doFinalization(Module &M) { return false; }$/;"	f	class:gbe::GenWriter
doInitialization	./llvm/llvm_gen_backend.cpp	/^  bool GenWriter::doInitialization(Module &M) {$/;"	f	class:gbe::GenWriter
doLocalCopyPropagation	./backend/gen_insn_selection_optimize.cpp	/^  void SelBasicBlockOptimizer::doLocalCopyPropagation()$/;"	f	class:gbe::SelBasicBlockOptimizer
doReplacement	./backend/gen_insn_selection_optimize.cpp	/^  void SelBasicBlockOptimizer::doReplacement(ReplaceInfo* info)$/;"	f	class:gbe::SelBasicBlockOptimizer
doesnotmatter	./sys/alloc.cpp	/^    int *doesnotmatter;$/;"	m	struct:gbe::ForceMemDebugger	file:
dst	./backend/gen_insn_selection.hpp	/^    GenRegister &dst(uint32_t dstID) { return regs[dstID]; }$/;"	f	class:gbe::SelectionInstruction
dst	./backend/gen_insn_selection.hpp	/^    const GenRegister &dst(uint32_t dstID) const { return regs[dstID]; }$/;"	f	class:gbe::SelectionInstruction
dst	./ir/instruction.cpp	/^        Register      dst[0];$/;"	m	class:gbe::ir::internal::StoreInstruction	file:
dst	./ir/instruction.cpp	/^        Register dst[1];$/;"	m	class:gbe::ir::internal::PrintfInstruction	file:
dst	./ir/instruction.cpp	/^        Register dst[1];$/;"	m	class:gbe::ir::internal::SubGroupInstruction	file:
dst	./ir/instruction.cpp	/^        Register dst[1];$/;"	m	class:gbe::ir::internal::WorkGroupInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[0], src[0];$/;"	m	class:gbe::ir::internal::CalcTimestampInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[0], src[0];$/;"	m	class:gbe::ir::internal::LabelInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[0], src[0];$/;"	m	class:gbe::ir::internal::SyncInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[0], src[0];$/;"	m	class:gbe::ir::internal::WaitInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[0];               \/\/!< No dest register$/;"	m	class:gbe::ir::internal::TypedWriteInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[0];       \/\/!< No destination$/;"	m	class:gbe::ir::internal::BranchInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[0];$/;"	m	class:gbe::ir::internal::MediaBlockWriteInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[0];$/;"	m	class:gbe::ir::internal::StoreProfilingInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[1];                  \/\/!< dest register to put the information.$/;"	m	class:gbe::ir::internal::GetImageInfoInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[1];               \/\/!< RegisterData to store into$/;"	m	class:gbe::ir::internal::LoadImmInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[1];      \/\/!< Index of the register in the register file$/;"	m	class:gbe::ir::internal::NaryInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[1]; \/\/!< Dst is the register index$/;"	m	class:gbe::ir::internal::SelectInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[1];$/;"	m	class:gbe::ir::internal::AtomicInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[1];$/;"	m	class:gbe::ir::internal::ConvertInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[1];$/;"	m	class:gbe::ir::internal::IndirectMovInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[1];$/;"	m	class:gbe::ir::internal::ReadARFInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[1];$/;"	m	class:gbe::ir::internal::RegionInstruction	file:
dst	./ir/instruction.cpp	/^      Register dst[1];$/;"	m	class:gbe::ir::internal::TernaryInstruction	file:
dst	./ir/instruction.cpp	/^      Tuple dst;$/;"	m	class:gbe::ir::internal::BitCastInstruction	file:
dst	./ir/instruction.cpp	/^      Tuple dst;$/;"	m	class:gbe::ir::internal::MediaBlockReadInstruction	file:
dst	./ir/instruction.cpp	/^      Tuple dst;$/;"	m	class:gbe::ir::internal::SampleInstruction	file:
dst	./ir/instruction.cpp	/^      Tuple dst;$/;"	m	class:gbe::ir::internal::VmeInstruction	file:
dstID	./ir/value.hpp	/^        uint32_t dstID;          \/\/<! Which destination we take into account$/;"	m	struct:gbe::ir::ValueDef::Data::__anon156
dstNum	./ir/instruction.cpp	/^      static const uint32_t dstNum = 1;$/;"	m	class:gbe::ir::internal::GetImageInfoInstruction	file:
dstNum	./ir/instruction.cpp	/^      static const uint32_t dstNum = 4;$/;"	m	class:gbe::ir::internal::SampleInstruction	file:
dstNum	./ir/instruction.cpp	/^      uint32_t dstNum;$/;"	m	class:gbe::ir::internal::VmeInstruction	file:
dstNum	./ir/instruction.cpp	/^      uint8_t dstNum;     \/\/!<Dst Number$/;"	m	class:gbe::ir::internal::BitCastInstruction	file:
dstNum	./ir/instruction.cpp	/^      uint8_t dstNum;$/;"	m	class:gbe::ir::internal::MediaBlockReadInstruction	file:
dstType	./ir/instruction.cpp	/^      Type dstType; \/\/!< Type to convert to$/;"	m	class:gbe::ir::internal::ConvertInstruction	file:
dst_reg_nr	./backend/gen_defs.hpp	/^      uint32_t dst_reg_nr:7;$/;"	m	struct:GenCompactInstruction::__anon9::__anon10
dst_special_acc	./backend/gen8_instruction.hpp	/^        uint32_t dst_special_acc:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon109
dst_special_acc	./backend/gen8_instruction.hpp	/^        uint32_t dst_special_acc:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
duEmpty	./ir/value.hpp	/^    UseSet *duEmpty;                   \/\/!< Void def set$/;"	m	class:gbe::ir::FunctionDAG
duGraph	./ir/value.hpp	/^    DUGraph duGraph;                   \/\/!< All the DU chains$/;"	m	class:gbe::ir::FunctionDAG
dump	./gbe_bin_generater.cpp	/^    void dump (void) {$/;"	f	class:program_build_instance
dumpAlloc	./sys/alloc.cpp	/^  void MemDebugger::dumpAlloc(void) {$/;"	f	class:gbe::MemDebugger
dumpData	./sys/alloc.cpp	/^  void MemDebugger::dumpData(const AllocData &data) {$/;"	f	class:gbe::MemDebugger
dumpFreeList	./backend/context.cpp	/^  void SimpleAllocator::dumpFreeList() {$/;"	f	class:gbe::SimpleAllocator
dupPrintfSet	./backend/program.hpp	/^    void * dupPrintfSet() const {$/;"	f	class:gbe::Kernel
dupProfilingInfo	./backend/program.hpp	/^    void * dupProfilingInfo() const {$/;"	f	class:gbe::Kernel
dwAligned	./llvm/llvm_gen_backend.cpp	/^      bool               dwAligned;$/;"	m	class:gbe::MemoryInstHelper	file:
dwblockip	./ir/profile.hpp	/^    static const Register dwblockip = Register(30);  \/\/ blockip$/;"	m	namespace:gbe::ir::ocl
elem	./backend/gen_insn_selection.hpp	/^        uint16_t elem:8;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon84
elem	./sys/fixed_array.hpp	/^    T elem[N];            \/\/!< Store the elements$/;"	m	class:gbe::fixed_array
elemNum	./ir/immediate.hpp	/^    uint32_t elemNum; \/\/!< vector imm data type$/;"	m	class:gbe::ir::Immediate
elements	./backend/gen_insn_selection_optimize.cpp	/^      uint32_t elements;$/;"	m	class:gbe::SelBasicBlockOptimizer::ReplaceInfo	file:
emit	./backend/gen_insn_selection.cpp	/^    INLINE bool emit(Selection::Opaque &sel, SelectionDAG &dag) const {$/;"	f	class:gbe::AtomicInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    INLINE bool emit(Selection::Opaque &sel, SelectionDAG &dag) const {$/;"	f	class:gbe::BranchInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    INLINE bool emit(Selection::Opaque &sel, SelectionDAG &dag) const {$/;"	f	class:gbe::CalcTimestampInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    INLINE bool emit(Selection::Opaque &sel, SelectionDAG &dag) const {$/;"	f	class:gbe::IndirectMovInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    INLINE bool emit(Selection::Opaque &sel, SelectionDAG &dag) const {$/;"	f	class:gbe::NullaryInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    INLINE bool emit(Selection::Opaque &sel, SelectionDAG &dag) const {$/;"	f	class:gbe::PrintfInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    INLINE bool emit(Selection::Opaque &sel, SelectionDAG &dag) const {$/;"	f	class:gbe::ReadARFInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    INLINE bool emit(Selection::Opaque &sel, SelectionDAG &dag) const {$/;"	f	class:gbe::RegionInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    INLINE bool emit(Selection::Opaque &sel, SelectionDAG &dag) const {$/;"	f	class:gbe::SimdShuffleInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    INLINE bool emit(Selection::Opaque &sel, SelectionDAG &dag) const {$/;"	f	class:gbe::StoreProfilingInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    INLINE bool emit(Selection::Opaque &sel, SelectionDAG &dag) const$/;"	f	class:gbe::BinaryInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    INLINE bool emit(Selection::Opaque &sel, SelectionDAG &dag) const$/;"	f	class:gbe::CompareInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    INLINE bool emit(Selection::Opaque &sel, SelectionDAG &dag) const$/;"	f	class:gbe::SelectInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    INLINE bool emit(Selection::Opaque &sel, SelectionDAG &dag) const$/;"	f	class:gbe::SubGroupInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    virtual bool emit(Selection::Opaque  &sel, SelectionDAG &dag) const$/;"	f	class:gbe::LoadInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    virtual bool emit(Selection::Opaque  &sel, SelectionDAG &dag) const$/;"	f	class:gbe::MulAddInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    virtual bool emit(Selection::Opaque  &sel, SelectionDAG &dag) const$/;"	f	class:gbe::StoreInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    virtual bool emit(Selection::Opaque &sel, SelectionDAG &dag) const {$/;"	f	class:gbe::OneToManyPattern
emit	./backend/gen_insn_selection.cpp	/^    virtual bool emit(Selection::Opaque &sel, SelectionDAG &dag) const {$/;"	f	class:gbe::SqrtDivInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    virtual bool emit(Selection::Opaque &sel, SelectionDAG &dag) const$/;"	f	class:gbe::Int32x16MulInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    virtual bool emit(Selection::Opaque &sel, SelectionDAG &dag) const$/;"	f	class:gbe::Int32x32MulInstructionPattern
emit	./backend/gen_insn_selection.cpp	/^    virtual bool emit(Selection::Opaque &sel, SelectionDAG &dag) const$/;"	f	class:gbe::SelectModifierInstructionPattern
emitAlignedByteGather	./backend/gen_insn_selection.cpp	/^    void emitAlignedByteGather(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
emitAllocaInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitAllocaInst(AllocaInst &I) {$/;"	f	class:gbe::GenWriter
emitAtomicA64Instruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitAtomicA64Instruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitAtomicA64Instruction	./backend/gen_context.cpp	/^  void GenContext::emitAtomicA64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitAtomicCmpXchgInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitAtomicCmpXchgInst(AtomicCmpXchgInst &I) {$/;"	f	class:gbe::GenWriter
emitAtomicInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitAtomicInst(CallInst &I, CallSite &CS, ir::AtomicOps opcode) {$/;"	f	class:gbe::GenWriter
emitAtomicInstHelper	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitAtomicInstHelper(const ir::AtomicOps opcode,const ir::Type type, const ir::Register dst, llvm::Value* llvmPtr, const ir::Tuple payloadTuple) {$/;"	f	class:gbe::GenWriter
emitAtomicInstruction	./backend/gen_context.cpp	/^  void GenContext::emitAtomicInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitAtomicRMWInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitAtomicRMWInst(AtomicRMWInst &I) {$/;"	f	class:gbe::GenWriter
emitBackwardBranch	./backend/gen_insn_selection.cpp	/^    void emitBackwardBranch(Selection::Opaque &sel,$/;"	f	class:gbe::BranchInstructionPattern
emitBarrierInstruction	./backend/gen9_context.cpp	/^  void Gen9Context::emitBarrierInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::Gen9Context
emitBarrierInstruction	./backend/gen_context.cpp	/^  void GenContext::emitBarrierInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitBasicBlock	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitBasicBlock(BasicBlock *BB) {$/;"	f	class:gbe::GenWriter
emitBatchLoadOrStore	./llvm/llvm_gen_backend.cpp	/^  void MemoryInstHelper::emitBatchLoadOrStore(const ir::Type type, const uint32_t elemNum,$/;"	f	class:gbe::MemoryInstHelper
emitBinaryInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitBinaryInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::Gen8Context
emitBinaryInstruction	./backend/gen_context.cpp	/^  void GenContext::emitBinaryInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitBinaryOperator	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitBinaryOperator(Instruction &I) {$/;"	f	class:gbe::GenWriter
emitBinaryWithTempInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitBinaryWithTempInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitBinaryWithTempInstruction	./backend/gen_context.cpp	/^  void GenContext::emitBinaryWithTempInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitBlockReadWriteImageInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitBlockReadWriteImageInst(CallInst &I, CallSite &CS, bool isWrite, uint8_t vec_size, ir::Type type) {$/;"	f	class:gbe::GenWriter
emitBlockReadWriteMemInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitBlockReadWriteMemInst(CallInst &I, CallSite &CS, bool isWrite, uint8_t vec_size, ir::Type type) {$/;"	f	class:gbe::GenWriter
emitBranchInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitBranchInst(BranchInst &I) {$/;"	f	class:gbe::GenWriter
emitByteGatherA64Instruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitByteGatherA64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::Gen8Context
emitByteGatherA64Instruction	./backend/gen_context.cpp	/^  void GenContext::emitByteGatherA64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitByteGatherInstruction	./backend/gen_context.cpp	/^  void GenContext::emitByteGatherInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitByteScatter	./backend/gen_insn_selection.cpp	/^    void emitByteScatter(Selection::Opaque &sel,$/;"	f	class:gbe::StoreInstructionPattern
emitByteScatterA64Instruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitByteScatterA64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::Gen8Context
emitByteScatterA64Instruction	./backend/gen_context.cpp	/^  void GenContext::emitByteScatterA64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitByteScatterInstruction	./backend/gen_context.cpp	/^  void GenContext::emitByteScatterInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitCalcTimestampInstruction	./backend/gen_context.cpp	/^  void GenContext::emitCalcTimestampInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::GenContext
emitCallInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitCallInst(CallInst &I) {$/;"	f	class:gbe::GenWriter
emitCastInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitCastInst(CastInst &I) {$/;"	f	class:gbe::GenWriter
emitCode	./backend/gen_context.cpp	/^  bool GenContext::emitCode(void) {$/;"	f	class:gbe::GenContext
emitCompareInstruction	./backend/gen_context.cpp	/^  void GenContext::emitCompareInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitDWordGather	./backend/gen_insn_selection.cpp	/^    void emitDWordGather(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
emitDWordGatherInstruction	./backend/gen_context.cpp	/^  void GenContext::emitDWordGatherInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitDivRemInst	./backend/gen_insn_selection.cpp	/^    bool emitDivRemInst(Selection::Opaque &sel, SelectionDAG &dag, ir::Opcode op) const$/;"	f	class:gbe::BinaryInstructionPattern
emitEotInstruction	./backend/gen_context.cpp	/^  void GenContext::emitEotInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitExtractElement	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitExtractElement(ExtractElementInst &I) {$/;"	f	class:gbe::GenWriter
emitExtractValue	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitExtractValue(ExtractValueInst &I) {$/;"	f	class:gbe::GenWriter
emitF64DIVInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitF64DIVInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::Gen8Context
emitF64DIVInstruction	./backend/gen_context.cpp	/^  void GenContext::emitF64DIVInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitFCmpInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitFCmpInst(FCmpInst &I) {$/;"	f	class:gbe::GenWriter
emitFenceInstruction	./backend/gen_context.cpp	/^  void GenContext::emitFenceInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitFloatToI64Instruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitFloatToI64Instruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitFloatToI64Instruction	./backend/gen_context.cpp	/^  void GenContext::emitFloatToI64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitForwardBranch	./backend/gen_insn_selection.cpp	/^    void emitForwardBranch(Selection::Opaque &sel,$/;"	f	class:gbe::BranchInstructionPattern
emitFunction	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitFunction(Function &F)$/;"	f	class:gbe::GenWriter
emitFunctionPrototype	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitFunctionPrototype(Function &F)$/;"	f	class:gbe::GenWriter
emitI64CompareInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitI64CompareInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitI64CompareInstruction	./backend/gen_context.cpp	/^  void GenContext::emitI64CompareInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitI64DIVREMInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitI64DIVREMInstruction(const SelectionInstruction &cnst_insn)$/;"	f	class:gbe::Gen8Context
emitI64DIVREMInstruction	./backend/gen_context.cpp	/^  void GenContext::emitI64DIVREMInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitI64HADDInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitI64HADDInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitI64HADDInstruction	./backend/gen_context.cpp	/^  void GenContext::emitI64HADDInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitI64MADSATInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitI64MADSATInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitI64MADSATInstruction	./backend/gen_context.cpp	/^  void GenContext::emitI64MADSATInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitI64MULHIInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitI64MULHIInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitI64MULHIInstruction	./backend/gen_context.cpp	/^  void GenContext::emitI64MULHIInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitI64MULInstruction	./backend/gen8_context.cpp	/^  void ChvContext::emitI64MULInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::ChvContext
emitI64MULInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitI64MULInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitI64MULInstruction	./backend/gen9_context.cpp	/^  void BxtContext::emitI64MULInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::BxtContext
emitI64MULInstruction	./backend/gen_context.cpp	/^  void GenContext::emitI64MULInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitI64RHADDInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitI64RHADDInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitI64RHADDInstruction	./backend/gen_context.cpp	/^  void GenContext::emitI64RHADDInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitI64SATADDInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitI64SATADDInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitI64SATADDInstruction	./backend/gen_context.cpp	/^  void GenContext::emitI64SATADDInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitI64SATSUBInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitI64SATSUBInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitI64SATSUBInstruction	./backend/gen_context.cpp	/^  void GenContext::emitI64SATSUBInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitI64ShiftInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitI64ShiftInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitI64ShiftInstruction	./backend/gen_context.cpp	/^  void GenContext::emitI64ShiftInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitI64ToFloatInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitI64ToFloatInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitI64ToFloatInstruction	./backend/gen_context.cpp	/^  void GenContext::emitI64ToFloatInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitICmpInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitICmpInst(ICmpInst &I) {$/;"	f	class:gbe::GenWriter
emitIndirectMoveInstruction	./backend/gen_context.cpp	/^  void GenContext::emitIndirectMoveInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitInsertElement	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitInsertElement(InsertElementInst &I) {$/;"	f	class:gbe::GenWriter
emitInstructionStream	./backend/gen_context.cpp	/^  void GenContext::emitInstructionStream(void) {$/;"	f	class:gbe::GenContext
emitJumpInstruction	./backend/gen_context.cpp	/^  void GenContext::emitJumpInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitLabelInstruction	./backend/gen_context.cpp	/^  void GenContext::emitLabelInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitLoadInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitLoadInst(LoadInst &I) {$/;"	f	class:gbe::GenWriter
emitLoadOrStore	./llvm/llvm_gen_backend.cpp	/^  void MemoryInstHelper::emitLoadOrStore(T &I) {$/;"	f	class:gbe::MemoryInstHelper
emitMBReadInstruction	./backend/gen_context.cpp	/^  void GenContext::emitMBReadInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitMBWriteInstruction	./backend/gen_context.cpp	/^  void GenContext::emitMBWriteInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitMathInstruction	./backend/gen_context.cpp	/^  void GenContext::emitMathInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitMovForPHI	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitMovForPHI(BasicBlock *curr, BasicBlock *succ) {$/;"	f	class:gbe::GenWriter
emitMulImmediate	./backend/gen_insn_selection.cpp	/^    bool emitMulImmediate(Selection::Opaque  &sel, SelectionDAG &dag, uint32_t childID) const {$/;"	f	class:gbe::Int32x16MulInstructionPattern
emitMulSpecialReg	./backend/gen_insn_selection.cpp	/^    bool emitMulSpecialReg(Selection::Opaque &sel, SelectionDAG &dag, uint32_t childID) const {$/;"	f	class:gbe::Int32x16MulInstructionPattern
emitNoOpInstruction	./backend/gen_context.cpp	/^  void GenContext::emitNoOpInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitOBReadInstruction	./backend/gen_context.cpp	/^  void GenContext::emitOBReadInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitOBWriteInstruction	./backend/gen_context.cpp	/^  void GenContext::emitOBWriteInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitOWordRead	./backend/gen_insn_selection.cpp	/^    void emitOWordRead(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
emitOWordWrite	./backend/gen_insn_selection.cpp	/^    void emitOWordWrite(Selection::Opaque &sel,$/;"	f	class:gbe::StoreInstructionPattern
emitPHINode	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitPHINode(PHINode &I) {$/;"	f	class:gbe::GenWriter
emitPackByteInstruction	./backend/gen_context.cpp	/^  void GenContext::emitPackByteInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitPackLongInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitPackLongInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::Gen8Context
emitPackLongInstruction	./backend/gen_context.cpp	/^  void GenContext::emitPackLongInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitPrintfInstruction	./backend/gen_context.cpp	/^  void GenContext::emitPrintfInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitPrintfLongInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitPrintfLongInstruction(GenRegister& addr, GenRegister& data,$/;"	f	class:gbe::Gen8Context
emitPrintfLongInstruction	./backend/gen_context.cpp	/^  void GenContext::emitPrintfLongInstruction(GenRegister& addr, GenRegister& data,$/;"	f	class:gbe::GenContext
emitRead64	./backend/gen_insn_selection.cpp	/^    void emitRead64(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
emitRead64A64Instruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitRead64A64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::Gen8Context
emitRead64A64Instruction	./backend/gen_context.cpp	/^  void GenContext::emitRead64A64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitRead64Instruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitRead64Instruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitRead64Instruction	./backend/gen_context.cpp	/^  void GenContext::emitRead64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitReturnInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitReturnInst(ReturnInst &I) {$/;"	f	class:gbe::GenWriter
emitRoundingCallInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitRoundingCallInst(CallInst &I, CallSite &CS, ir::Opcode opcode) {$/;"	f	class:gbe::GenWriter
emitSGBroadcast	./backend/gen_insn_selection.cpp	/^    INLINE bool emitSGBroadcast(Selection::Opaque &sel, const ir::SubGroupInstruction &insn, SelectionDAG &dag) const$/;"	f	class:gbe::SubGroupInstructionPattern
emitSGReduce	./backend/gen_insn_selection.cpp	/^    INLINE bool emitSGReduce(Selection::Opaque &sel, const ir::SubGroupInstruction &insn) const$/;"	f	class:gbe::SubGroupInstructionPattern
emitSLMOffset	./backend/gen75_context.cpp	/^  void Gen75Context::emitSLMOffset(void) {$/;"	f	class:gbe::Gen75Context
emitSLMOffset	./backend/gen8_context.cpp	/^  void Gen8Context::emitSLMOffset(void) {$/;"	f	class:gbe::Gen8Context
emitSLMOffset	./backend/gen_context.hpp	/^    virtual void emitSLMOffset(void) { };$/;"	f	class:gbe::GenContext
emitSampleInstruction	./backend/gen_context.cpp	/^  void GenContext::emitSampleInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitSelectInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitSelectInst(SelectInst &I) {$/;"	f	class:gbe::GenWriter
emitShuffleVectorInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitShuffleVectorInst(ShuffleVectorInst &I) {}$/;"	f	class:gbe::GenWriter
emitSimdShuffleInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitSimdShuffleInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::Gen8Context
emitSimdShuffleInstruction	./backend/gen_context.cpp	/^  void GenContext::emitSimdShuffleInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitSpillRegInstruction	./backend/gen_context.cpp	/^  void GenContext::emitSpillRegInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitStackPointer	./backend/gen75_context.cpp	/^  void Gen75Context::emitStackPointer(void) {$/;"	f	class:gbe::Gen75Context
emitStackPointer	./backend/gen8_context.cpp	/^  void ChvContext::emitStackPointer(void) {$/;"	f	class:gbe::ChvContext
emitStackPointer	./backend/gen9_context.cpp	/^  void BxtContext::emitStackPointer(void) {$/;"	f	class:gbe::BxtContext
emitStackPointer	./backend/gen_context.cpp	/^  void GenContext::emitStackPointer(void) {$/;"	f	class:gbe::GenContext
emitStoreInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitStoreInst(StoreInst &I) {$/;"	f	class:gbe::GenWriter
emitStoreProfilingInstruction	./backend/gen_context.cpp	/^  void GenContext::emitStoreProfilingInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitSubGroupInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitSubGroupInst(CallInst &I, CallSite &CS, ir::WorkGroupOps opcode) {$/;"	f	class:gbe::GenWriter
emitSubGroupOpInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitSubGroupOpInstruction(const SelectionInstruction &insn){$/;"	f	class:gbe::Gen8Context
emitSubGroupOpInstruction	./backend/gen_context.cpp	/^  void GenContext::emitSubGroupOpInstruction(const SelectionInstruction &insn){$/;"	f	class:gbe::GenContext
emitTernaryInstruction	./backend/gen_context.cpp	/^  void GenContext::emitTernaryInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitTypedWriteInstruction	./backend/gen_context.cpp	/^  void GenContext::emitTypedWriteInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitUnSpillRegInstruction	./backend/gen_context.cpp	/^  void GenContext::emitUnSpillRegInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitUnalignedByteGather	./backend/gen_insn_selection.cpp	/^    void emitUnalignedByteGather(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
emitUnalignedDQLoadStore	./llvm/llvm_gen_backend.cpp	/^  void MemoryInstHelper::emitUnalignedDQLoadStore(Value *llvmValues)$/;"	f	class:gbe::MemoryInstHelper
emitUnaryCallInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitUnaryCallInst(CallInst &I, CallSite &CS, ir::Opcode opcode, ir::Type type) {$/;"	f	class:gbe::GenWriter
emitUnaryInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitUnaryInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitUnaryInstruction	./backend/gen_context.cpp	/^  void GenContext::emitUnaryInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitUnaryWithTempInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitUnaryWithTempInstruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitUnaryWithTempInstruction	./backend/gen_context.cpp	/^  void GenContext::emitUnaryWithTempInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitUnpackByteInstruction	./backend/gen_context.cpp	/^  void GenContext::emitUnpackByteInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitUnpackLongInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitUnpackLongInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::Gen8Context
emitUnpackLongInstruction	./backend/gen_context.cpp	/^  void GenContext::emitUnpackLongInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitUntypedRead	./backend/gen_insn_selection.cpp	/^    void emitUntypedRead(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
emitUntypedReadA64Instruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitUntypedReadA64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::Gen8Context
emitUntypedReadA64Instruction	./backend/gen_context.cpp	/^  void GenContext::emitUntypedReadA64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitUntypedReadInstruction	./backend/gen_context.cpp	/^  void GenContext::emitUntypedReadInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitUntypedWrite	./backend/gen_insn_selection.cpp	/^    void emitUntypedWrite(Selection::Opaque &sel,$/;"	f	class:gbe::StoreInstructionPattern
emitUntypedWriteA64Instruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitUntypedWriteA64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::Gen8Context
emitUntypedWriteA64Instruction	./backend/gen_context.cpp	/^  void GenContext::emitUntypedWriteA64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitUntypedWriteInstruction	./backend/gen_context.cpp	/^  void GenContext::emitUntypedWriteInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitVmeInstruction	./backend/gen_context.cpp	/^  void GenContext::emitVmeInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitWaitInstruction	./backend/gen_context.cpp	/^  void GenContext::emitWaitInstruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitWorkGroupInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::emitWorkGroupInst(CallInst &I, CallSite &CS, ir::WorkGroupOps opcode) {$/;"	f	class:gbe::GenWriter
emitWorkGroupOpInstruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitWorkGroupOpInstruction(const SelectionInstruction &insn){$/;"	f	class:gbe::Gen8Context
emitWorkGroupOpInstruction	./backend/gen_context.cpp	/^  void GenContext::emitWorkGroupOpInstruction(const SelectionInstruction &insn){$/;"	f	class:gbe::GenContext
emitWrite64	./backend/gen_insn_selection.cpp	/^    void emitWrite64(Selection::Opaque &sel,$/;"	f	class:gbe::StoreInstructionPattern
emitWrite64A64Instruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitWrite64A64Instruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitWrite64A64Instruction	./backend/gen_context.cpp	/^  void GenContext::emitWrite64A64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
emitWrite64Instruction	./backend/gen8_context.cpp	/^  void Gen8Context::emitWrite64Instruction(const SelectionInstruction &insn)$/;"	f	class:gbe::Gen8Context
emitWrite64Instruction	./backend/gen_context.cpp	/^  void GenContext::emitWrite64Instruction(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
empty	./ir/image.hpp	/^    bool empty() const { return regMap.empty(); }$/;"	f	class:gbe::ir::ImageSet
empty	./ir/sampler.hpp	/^    bool empty() const { return samplerMap.empty(); }$/;"	f	class:gbe::ir::SamplerSet
empty	./sys/intrusive_list.hpp	/^    INLINE bool empty(void) const  { return !m_root.in_list(); }$/;"	f	class:gbe::intrusive_list_base
end	./sys/fixed_array.hpp	/^    T* end(void) { return begin() + N; }$/;"	f	class:gbe::fixed_array
end	./sys/fixed_array.hpp	/^    const T* end(void) const { return begin() + N; }$/;"	f	class:gbe::fixed_array
end	./sys/intrusive_list.hpp	/^    const_iterator end(void) const    { return const_iterator(upcast(&m_root)); }$/;"	f	class:gbe::intrusive_list
end	./sys/intrusive_list.hpp	/^    iterator end(void)    { return iterator(upcast(&m_root)); }$/;"	f	class:gbe::intrusive_list
endBackwardGeneration	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::endBackwardGeneration(void) {$/;"	f	class:gbe::Selection::Opaque
endBlock	./ir/context.cpp	/^  void Context::endBlock(void) {$/;"	f	class:gbe::ir::Context
endFunction	./ir/context.cpp	/^  void Context::endFunction(void) {$/;"	f	class:gbe::ir::Context
end_of_thread	./backend/gen/gen_mesa_disasm.c	/^static const char *end_of_thread[2] = {$/;"	v	file:
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon62
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon63
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon64
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon65
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon66
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon67
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon68
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon69
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon70
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon71
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon72
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon73
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon74
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon75
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon76
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon78
end_of_thread	./backend/gen7_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon80
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon127
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon128
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon129
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon130
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon131
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon132
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon133
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon134
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon135
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon136
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon137
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon138
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon140
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon141
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon142
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon143
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon146
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon147
end_of_thread	./backend/gen8_instruction.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon149
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon21
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon22
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon23
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon24
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon25
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon26
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon27
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon28
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon29
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon30
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon31
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon32
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon33
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon34
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon35
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon36
end_of_thread	./backend/gen_defs.hpp	/^        uint32_t end_of_thread:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon38
endifLabel	./backend/gen_insn_selection.hpp	/^    ir::LabelIndex endifLabel;$/;"	m	class:gbe::SelectionBlock
endifLabel	./ir/function.hpp	/^    LabelIndex endifLabel;$/;"	m	class:gbe::ir::BasicBlock
endifOffset	./backend/gen_insn_selection.hpp	/^    int endifOffset;$/;"	m	class:gbe::SelectionBlock
ending	./backend/gen_reg_allocation.cpp	/^    vector<GenRegInterval*> ending;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
enqlsize0	./ir/profile.hpp	/^    static const Register enqlsize0 = Register(12);    \/\/ get_local_size(0)$/;"	m	namespace:gbe::ir::ocl
enqlsize1	./ir/profile.hpp	/^    static const Register enqlsize1 = Register(13);   \/\/ get_local_size(1)$/;"	m	namespace:gbe::ir::ocl
enqlsize2	./ir/profile.hpp	/^    static const Register enqlsize2 = Register(14);   \/\/ get_local_size(2)$/;"	m	namespace:gbe::ir::ocl
enqueuebufptr	./ir/profile.hpp	/^    static const Register enqueuebufptr = Register(40); \/\/ enqueue buffer address .$/;"	m	namespace:gbe::ir::ocl
entries	./ir/reloc.hpp	/^      vector<RelocEntry> entries;$/;"	m	class:gbe::ir::RelocTable
erase	./sys/intrusive_list.hpp	/^    iterator erase(iterator first, iterator last) {$/;"	f	class:gbe::intrusive_list
erase	./sys/intrusive_list.hpp	/^    iterator erase(iterator it) {$/;"	f	class:gbe::intrusive_list
eraseReplacedInstructions	./llvm/ExpandLargeIntegers.cpp	/^  void eraseReplacedInstructions() {$/;"	f	class:__anon178::ConversionState
eraseReplacedInstructions	./llvm/PromoteIntegers.cpp	/^  void eraseReplacedInstructions() {$/;"	f	class:__anon175::ConversionState
errCode	./backend/gen_context.hpp	/^    CompileErrorCode errCode;$/;"	m	class:gbe::GenContext
esize	./backend/gen/gen_mesa_disasm.c	/^static const int esize[6] = {$/;"	v	file:
eu_id	./ir/profiling.hpp	/^            uint16_t eu_id:4;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151::GenInfo::Gen7Info
eu_id	./ir/profiling.hpp	/^            uint16_t eu_id:4;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151::GenInfo::Gen8Info
event	./libocl/include/ocl_misc.h	/^  uint event;$/;"	m	struct:time_stamp
exdesc_31_16	./backend/gen9_instruction.hpp	/^        uint32_t exdesc_31_16:16;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon5::__anon6
exec_size	./backend/gen/gen_mesa_disasm.c	/^static const char *exec_size[8] = {$/;"	v	file:
execution_size	./backend/gen7_instruction.hpp	/^      uint32_t execution_size:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
execution_size	./backend/gen8_instruction.hpp	/^      uint32_t execution_size:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
execution_size	./backend/gen9_instruction.hpp	/^      uint32_t execution_size:3;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
execution_size	./backend/gen_defs.hpp	/^      uint32_t execution_size:3;$/;"	m	struct:GenNativeInstruction::__anon16::__anon17
execution_size	./backend/gen_insn_compact.cpp	/^      uint32_t execution_size:3;$/;"	m	struct:gbe::ControlBits::__anon94	file:
execution_size	./backend/gen_insn_compact.cpp	/^      uint32_t execution_size:3;$/;"	m	struct:gbe::Src3ControlBits::__anon95	file:
exits	./ir/function.hpp	/^    vector<std::pair<LabelIndex, LabelIndex>> exits;$/;"	m	struct:gbe::ir::Loop
expandConstant	./llvm/ExpandLargeIntegers.cpp	/^static ValuePair expandConstant(Constant *C) {$/;"	f	file:
expandConstantExpr	./llvm/ExpandConstantExpr.cpp	/^static Value *expandConstantExpr(Instruction *InsertPt, ConstantExpr *Expr) {$/;"	f	file:
expandConstantVector	./llvm/ExpandConstantExpr.cpp	/^static Value *expandConstantVector(Instruction *InsertPt, ConstantVector *CV) {$/;"	f	file:
expandInstruction	./llvm/ExpandConstantExpr.cpp	/^static bool expandInstruction(Instruction *Inst) {$/;"	f	file:
expireGRF	./backend/gen_reg_allocation.cpp	/^  bool GenRegAllocator::Opaque::expireGRF(const GenRegInterval &limit) {$/;"	f	class:gbe::GenRegAllocator::Opaque
expireReg	./backend/gen_reg_allocation.cpp	/^  INLINE bool GenRegAllocator::Opaque::expireReg(ir::Register reg)$/;"	f	class:gbe::GenRegAllocator::Opaque
expiringID	./backend/gen_reg_allocation.cpp	/^    uint32_t expiringID;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
extra	./backend/gen_insn_selection.hpp	/^    } extra;$/;"	m	class:gbe::SelectionInstruction	typeref:union:gbe::SelectionInstruction::__anon83
extract	./ir/immediate.cpp	/^    Immediate Immediate::extract (const Immediate &left, const Immediate &right, Type dstType) {$/;"	f	class:Immediate
extractConstantElem	./llvm/llvm_gen_backend.cpp	/^  static Constant *extractConstantElem(Constant *CPV, uint32_t index) {$/;"	f	namespace:gbe
extractFromVector	./llvm/llvm_scalarize.cpp	/^  void Scalarize::extractFromVector(Value* insn) {$/;"	f	class:gbe::Scalarize
f	./backend/gen7_instruction.hpp	/^      float f;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57
f	./backend/gen8_instruction.hpp	/^      float f;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121
f	./backend/gen_defs.hpp	/^      float f;$/;"	m	union:GenNativeInstruction::__anon16::__anon20
f	./backend/gen_register.hpp	/^      float f;$/;"	m	union:gbe::GenRegister::__anon40
f	./sys/cvar.hpp	/^      struct { float   min, *curr, max; } f; \/\/!< float variables with bounds$/;"	m	union:gbe::CVarInit::__anon181	typeref:struct:gbe::CVarInit::__anon181::__anon183
f16	./ir/immediate.hpp	/^      half *f16;$/;"	m	union:gbe::ir::Immediate::__anon154
f16grf	./backend/gen_register.hpp	/^    static INLINE GenRegister f16grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
f16grf	./backend/gen_register.hpp	/^    static INLINE GenRegister f16grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
f1grf	./backend/gen_register.hpp	/^    static INLINE GenRegister f1grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
f1grf	./backend/gen_register.hpp	/^    static INLINE GenRegister f1grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
f2grf	./backend/gen_register.hpp	/^    static INLINE GenRegister f2grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
f2grf	./backend/gen_register.hpp	/^    static INLINE GenRegister f2grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
f32	./ir/immediate.hpp	/^      float *f32;$/;"	m	union:gbe::ir::Immediate::__anon154
f4grf	./backend/gen_register.hpp	/^    static INLINE GenRegister f4grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
f4grf	./backend/gen_register.hpp	/^    static INLINE GenRegister f4grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
f64	./ir/immediate.hpp	/^      double *f64;$/;"	m	union:gbe::ir::Immediate::__anon154
f8grf	./backend/gen_register.hpp	/^    static INLINE GenRegister f8grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
f8grf	./backend/gen_register.hpp	/^    static INLINE GenRegister f8grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
fall_through	./ir/structurizer.hpp	/^    Block* fall_through;$/;"	m	class:gbe::ir::Block
fallthrough	./ir/structurizer.hpp	/^    Block*& fallthrough() { return fall_through; }$/;"	f	class:gbe::ir::Block
family	./ir/register.hpp	/^    RegisterFamily family;            \/\/!< Register size or if it is a flag$/;"	m	class:gbe::ir::RegisterData
fast_clear	./sys/intrusive_list.hpp	/^    void fast_clear(void) { m_root.next = m_root.prev = &m_root; }$/;"	f	class:gbe::intrusive_list
fast_integer_gentype	./libocl/script/gen_vector.py	/^fast_integer_gentype = ["fast_integer_gentype", gen_vector_type(["uint", "int"])]$/;"	v
fd	./gbe_bin_generater.cpp	/^    int fd;$/;"	m	class:program_build_instance	file:
features	./backend/gen_insn_selection_optimize.cpp	/^    uint32_t features;$/;"	m	class:gbe::SelOptimizer	file:
file	./backend/gen_insn_selection.cpp	/^    ir::RegisterFile file;$/;"	m	class:gbe::Selection::Opaque	file:
file	./ir/function.hpp	/^    RegisterFile file;              \/\/!< RegisterDatas used by the instructions$/;"	m	class:gbe::ir::Function
fileName	./sys/alloc.cpp	/^    int fileName, functionName, line;$/;"	m	struct:gbe::AllocData	file:
file_len	./gbe_bin_generater.cpp	/^    int file_len;$/;"	m	class:program_build_instance	file:
file_map_open	./gbe_bin_generater.cpp	/^const char* program_build_instance::file_map_open(void) throw(int)$/;"	f	class:program_build_instance
find	./llvm/llvm_gen_backend.hpp	/^    OCLInstrinsic find(const std::string symbol) const {$/;"	f	struct:gbe::OCLIntrinsicMap
findAllLoops	./llvm/llvm_gen_backend.cpp	/^  static INLINE void findAllLoops(LoopInfo * LI, std::vector<std::pair<Loop*, int>> &lp)$/;"	f	namespace:gbe
findConsecutiveAccess	./llvm/llvm_loadstore_optimization.cpp	/^  GenLoadStoreOptimization::findConsecutiveAccess(BasicBlock &BB,$/;"	f	class:gbe::GenLoadStoreOptimization
findNextSpillCandidate	./backend/gen_reg_allocation.cpp	/^  INLINE bool GenRegAllocator::Opaque::findNextSpillCandidate($/;"	f	class:gbe::GenRegAllocator::Opaque
findPointerEscape	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::findPointerEscape(Value *ptr,  std::set<Value *> &mixedPtr, bool bFirstPass, std::vector<Value *> &revisit) {$/;"	f	class:gbe::GenWriter
findRegisterInSpillQueue	./backend/gen_reg_allocation.cpp	/^  INLINE SpillIntervalIter findRegisterInSpillQueue($/;"	f	namespace:gbe
findSafeInstruction	./llvm/llvm_loadstore_optimization.cpp	/^  findSafeInstruction(SmallVector<Instruction*, 16> &toBeDeleted,$/;"	f	namespace:gbe
fixedFunctionID	./ir/profiling.hpp	/^        uint32_t fixedFunctionID:4;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
fixed_array	./sys/fixed_array.hpp	/^    fixed_array(const T array[N]) { std::memcpy(elem, array, N * sizeof(T)); }$/;"	f	class:gbe::fixed_array
fixed_array	./sys/fixed_array.hpp	/^    fixed_array(void) {}$/;"	f	class:gbe::fixed_array
fixed_array	./sys/fixed_array.hpp	/^  class fixed_array$/;"	c	namespace:gbe
fixup_type	./libocl/script/gen_vector.py	/^def fixup_type(dstType, srcType, n):$/;"	f
flag	./backend/gen_register.hpp	/^    static INLINE GenRegister flag(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
flagBooleans	./backend/gen_reg_allocation.cpp	/^    set<ir::Register> flagBooleans;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
flagIndex	./backend/gen_register.hpp	/^    uint32_t flagIndex;   \/\/!< Only if virtual flag (index of the register)$/;"	m	class:gbe::GenInstructionState
flag_nr	./backend/gen_register.hpp	/^    INLINE int flag_nr(void) const {$/;"	f	class:gbe::GenRegister
flag_reg	./backend/gen/gen_mesa_disasm.c	/^static int flag_reg(FILE *file, const int flag_nr, const int flag_sub_reg_nr)$/;"	f	file:
flag_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t flag_reg_nr:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
flag_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t flag_reg_nr:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon52
flag_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t flag_reg_nr:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon53
flag_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t flag_reg_nr:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
flag_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t flag_reg_nr:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
flag_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t flag_reg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon105
flag_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t flag_reg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon106
flag_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t flag_reg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon107
flag_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t flag_reg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon108
flag_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t flag_reg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon109
flag_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t flag_reg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
flag_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t flag_reg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
flag_reg_nr	./backend/gen9_instruction.hpp	/^        uint32_t flag_reg_nr:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon3::__anon4
flag_reg_nr	./backend/gen_insn_compact.cpp	/^      uint32_t flag_reg_nr:1;$/;"	m	struct:gbe::ControlBits::__anon94	file:
flag_reg_nr	./backend/gen_insn_compact.cpp	/^      uint32_t flag_reg_nr:1;$/;"	m	struct:gbe::Src3ControlBits::__anon95	file:
flag_sub_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t flag_sub_reg_nr:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
flag_sub_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t flag_sub_reg_nr:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon52
flag_sub_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t flag_sub_reg_nr:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon53
flag_sub_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t flag_sub_reg_nr:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
flag_sub_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t flag_sub_reg_nr:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
flag_sub_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t flag_sub_reg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon105
flag_sub_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t flag_sub_reg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon106
flag_sub_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t flag_sub_reg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon107
flag_sub_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t flag_sub_reg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon108
flag_sub_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t flag_sub_reg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon109
flag_sub_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t flag_sub_reg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
flag_sub_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t flag_sub_reg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
flag_sub_reg_nr	./backend/gen9_instruction.hpp	/^        uint32_t flag_sub_reg_nr:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon3::__anon4
flag_sub_reg_nr	./backend/gen_insn_compact.cpp	/^      uint32_t flag_sub_reg_nr:1;$/;"	m	struct:gbe::ControlBits::__anon94	file:
flag_sub_reg_nr	./backend/gen_insn_compact.cpp	/^      uint32_t flag_sub_reg_nr:1;$/;"	m	struct:gbe::Src3ControlBits::__anon95	file:
flag_subnr	./backend/gen_register.hpp	/^    INLINE int flag_subnr(void) const {$/;"	f	class:gbe::GenRegister
flags	./libocl/include/ocl_enqueue.h	/^  int flags;$/;"	m	struct:Block_literal
float1	./libocl/include/ocl_image.h	24;"	d
float1	./libocl/include/ocl_image.h	92;"	d
floatTy	./llvm/llvm_scalarize.cpp	/^    Type* floatTy;$/;"	m	class:gbe::Scalarize	file:
float_shape_type	./libocl/include/ocl_float.h	/^} float_shape_type;$/;"	t	typeref:union:__anon169
flush_constant	./backend/gen8_instruction.hpp	/^        uint32_t flush_constant:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
flush_instruction	./backend/gen8_instruction.hpp	/^        uint32_t flush_instruction:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
flush_rw	./backend/gen8_instruction.hpp	/^        uint32_t flush_rw:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
flush_texture	./backend/gen8_instruction.hpp	/^        uint32_t flush_texture:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
fmts	./ir/printf.hpp	/^      std::map<uint32_t, PrintfFmt> fmts;$/;"	m	class:gbe::ir::PrintfSet
fn	./backend/context.hpp	/^    const ir::Function &fn;               \/\/!< Function to compile$/;"	m	class:gbe::Context
fn	./ir/context.hpp	/^      Function *fn;                \/\/!< Function to process$/;"	m	struct:gbe::ir::Context::StackElem
fn	./ir/context.hpp	/^    Function *fn;               \/\/!< Current function we are processing$/;"	m	class:gbe::ir::Context
fn	./ir/function.hpp	/^    Function &fn;          \/\/!< Function the block belongs to$/;"	m	class:gbe::ir::BasicBlock
fn	./ir/function.hpp	/^    const Function &fn;       \/\/!< Function it belongs to$/;"	m	struct:gbe::ir::PushLocation
fn	./ir/liveness.hpp	/^    Function &fn;$/;"	m	class:gbe::ir::Liveness
fn	./ir/structurizer.hpp	/^      Function *fn;$/;"	m	class:gbe::ir::CFGStructurizer
fn	./ir/value.hpp	/^    const Function &fn;                \/\/!< Function we are referring to$/;"	m	class:gbe::ir::FunctionDAG
fnStack	./ir/context.hpp	/^    vector<StackElem> fnStack;     \/\/!< Stack of functions still to finish$/;"	m	class:gbe::ir::Context
forceMemDebugger	./sys/alloc.cpp	/^  } forceMemDebugger;$/;"	m	namespace:gbe	typeref:struct:gbe::ForceMemDebugger	file:
foreach	./ir/function.hpp	/^    INLINE void foreach(const T &functor) {$/;"	f	class:gbe::ir::BasicBlock
foreach	./ir/liveness.hpp	/^    void foreach(const T &functor) {$/;"	f	class:gbe::ir::Liveness
foreachBlock	./ir/function.hpp	/^    INLINE void foreachBlock(const T &functor) const {$/;"	f	class:gbe::ir::Function
foreachInstruction	./ir/function.hpp	/^    INLINE void foreachInstruction(const T &functor) const {$/;"	f	class:gbe::ir::Function
format	./backend/gen/gen_mesa_disasm.c	/^static int format(FILE *f, const char *format, ...)$/;"	f	file:
free	./sys/alloc.hpp	/^    GrowingPoolElem *free; \/\/!< Blocks that can be reused (after rewind)$/;"	m	class:gbe::GrowingPool
freeList	./sys/alloc.hpp	/^    void *freeList;        \/\/!< Elements that have been deallocated$/;"	m	class:gbe::GrowingPool
front	./sys/fixed_array.hpp	/^    T& front(void) { return *begin(); }$/;"	f	class:gbe::fixed_array
front	./sys/fixed_array.hpp	/^    const T& front(void) const { return *begin(); }$/;"	f	class:gbe::fixed_array
front	./sys/intrusive_list.hpp	/^    INLINE const value_type* front(void) const { return upcast(m_root.next); }$/;"	f	class:gbe::intrusive_list
front	./sys/intrusive_list.hpp	/^    INLINE value_type* front(void) { return upcast(m_root.next); }$/;"	f	class:gbe::intrusive_list
full	./sys/alloc.hpp	/^    GrowingPoolElem *full; \/\/!< Blocks fully used$/;"	m	class:gbe::GrowingPool
function	./backend/gen7_instruction.hpp	/^        uint32_t function:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon65
function	./backend/gen8_instruction.hpp	/^        uint32_t function:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon130
function	./backend/gen_defs.hpp	/^        uint32_t function:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon24
function	./backend/gen_insn_selection.hpp	/^        uint16_t function:8;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon84
functionAttributes	./backend/program.hpp	/^    std::string functionAttributes; \/\/!< function attribute qualifiers combined.$/;"	m	class:gbe::Kernel
functionAttributes	./ir/function.hpp	/^    std::string functionAttributes; \/\/!< function attribute qualifiers combined.$/;"	m	class:gbe::ir::Function
functionName	./libocl/script/gen_vector.py	/^    functionName = ""$/;"	v	class:builtinProto
functionName	./sys/alloc.cpp	/^    int fileName, functionName, line;$/;"	m	struct:gbe::AllocData	file:
functionProto	./libocl/script/gen_vector.py	/^functionProto = builtinProto()$/;"	v
function_control	./backend/gen7_instruction.hpp	/^        uint32_t function_control:19;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon62
function_control	./backend/gen8_instruction.hpp	/^        uint32_t function_control:19;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon127
function_control	./backend/gen_defs.hpp	/^        uint32_t function_control:19;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon21
functions	./ir/unit.hpp	/^    FunctionSet functions; \/\/!< All the defined functions$/;"	m	class:gbe::ir::Unit
gateway_sub_function	./backend/gen/gen_mesa_disasm.c	/^static const char *gateway_sub_function[8] = {$/;"	v	file:
gatherComponents	./llvm/llvm_scalarize.cpp	/^  void Scalarize::gatherComponents(int component, ArrayRef<Value*> args, SmallVectorImpl<Value*>& componentArgs)$/;"	f	class:gbe::Scalarize
gatherLoopInfo	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::gatherLoopInfo(ir::Function &fn) {$/;"	f	class:gbe::GenWriter
gbe	./backend/context.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/context.hpp	/^namespace gbe {$/;"	n
gbe	./backend/context.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen75_context.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/gen75_context.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen75_encoder.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/gen75_encoder.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen7_encoder.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/gen7_encoder.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen8_context.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/gen8_context.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen8_encoder.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/gen8_encoder.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen9_context.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/gen9_context.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen9_encoder.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/gen9_encoder.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen_context.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/gen_context.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen_encoder.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/gen_encoder.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen_insn_compact.cpp	/^namespace gbe {$/;"	n	file:
gbe	./backend/gen_insn_scheduling.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/gen_insn_scheduling.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen_insn_selection.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/gen_insn_selection.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen_insn_selection_optimize.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/gen_insn_selection_output.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/gen_insn_selection_output.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen_program.cpp	/^namespace gbe {$/;"	n	file:
gbe	./backend/gen_program.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen_reg_allocation.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/gen_reg_allocation.hpp	/^namespace gbe$/;"	n
gbe	./backend/gen_register.hpp	/^namespace gbe$/;"	n
gbe	./backend/program.cpp	/^namespace gbe {$/;"	n	file:
gbe	./backend/program.cpp	/^namespace gbe$/;"	n	file:
gbe	./backend/program.hpp	/^namespace gbe {$/;"	n
gbe	./ir/constant.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/constant.hpp	/^namespace gbe {$/;"	n
gbe	./ir/context.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/context.hpp	/^namespace gbe {$/;"	n
gbe	./ir/function.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/function.hpp	/^namespace gbe {$/;"	n
gbe	./ir/half.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/half.hpp	/^namespace gbe {$/;"	n
gbe	./ir/image.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/image.hpp	/^namespace gbe {$/;"	n
gbe	./ir/immediate.hpp	/^namespace gbe {$/;"	n
gbe	./ir/instruction.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/instruction.hpp	/^namespace gbe {$/;"	n
gbe	./ir/liveness.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/liveness.hpp	/^namespace gbe {$/;"	n
gbe	./ir/lowering.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/lowering.hpp	/^namespace gbe {$/;"	n
gbe	./ir/printf.cpp	/^namespace gbe$/;"	n	file:
gbe	./ir/printf.hpp	/^namespace gbe$/;"	n
gbe	./ir/profile.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/profile.hpp	/^namespace gbe {$/;"	n
gbe	./ir/profiling.cpp	/^namespace gbe$/;"	n	file:
gbe	./ir/profiling.hpp	/^namespace gbe$/;"	n
gbe	./ir/register.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/register.hpp	/^namespace gbe {$/;"	n
gbe	./ir/reloc.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/reloc.hpp	/^namespace gbe {$/;"	n
gbe	./ir/sampler.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/sampler.hpp	/^namespace gbe {$/;"	n
gbe	./ir/structurizer.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/structurizer.hpp	/^namespace gbe {$/;"	n
gbe	./ir/type.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/type.hpp	/^namespace gbe {$/;"	n
gbe	./ir/unit.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/unit.hpp	/^namespace gbe {$/;"	n
gbe	./ir/value.cpp	/^namespace gbe {$/;"	n	file:
gbe	./ir/value.hpp	/^namespace gbe {$/;"	n
gbe	./llvm/llvm_barrier_nodup.cpp	/^namespace gbe {$/;"	n	file:
gbe	./llvm/llvm_bitcode_link.cpp	/^namespace gbe$/;"	n	file:
gbe	./llvm/llvm_device_enqueue.cpp	/^namespace gbe {$/;"	n	file:
gbe	./llvm/llvm_gen_backend.cpp	/^namespace gbe$/;"	n	file:
gbe	./llvm/llvm_gen_backend.hpp	/^namespace gbe$/;"	n
gbe	./llvm/llvm_intrinsic_lowering.cpp	/^namespace gbe {$/;"	n	file:
gbe	./llvm/llvm_loadstore_optimization.cpp	/^namespace gbe {$/;"	n	file:
gbe	./llvm/llvm_passes.cpp	/^namespace gbe$/;"	n	file:
gbe	./llvm/llvm_printf_parser.cpp	/^namespace gbe$/;"	n	file:
gbe	./llvm/llvm_profiling.cpp	/^namespace gbe$/;"	n	file:
gbe	./llvm/llvm_sampler_fix.cpp	/^namespace gbe {$/;"	n	file:
gbe	./llvm/llvm_scalarize.cpp	/^namespace gbe {$/;"	n	file:
gbe	./llvm/llvm_to_gen.cpp	/^namespace gbe$/;"	n	file:
gbe	./llvm/llvm_to_gen.hpp	/^namespace gbe {$/;"	n
gbe	./llvm/llvm_unroll.cpp	/^namespace gbe {$/;"	n	file:
gbe	./sys/alloc.cpp	/^namespace gbe$/;"	n	file:
gbe	./sys/alloc.hpp	/^namespace gbe$/;"	n
gbe	./sys/assert.cpp	/^namespace gbe$/;"	n	file:
gbe	./sys/assert.hpp	/^namespace gbe$/;"	n
gbe	./sys/atomic.hpp	/^namespace gbe$/;"	n
gbe	./sys/cvar.cpp	/^namespace gbe$/;"	n	file:
gbe	./sys/cvar.hpp	/^namespace gbe$/;"	n
gbe	./sys/exception.hpp	/^namespace gbe$/;"	n
gbe	./sys/fixed_array.hpp	/^namespace gbe$/;"	n
gbe	./sys/intrusive_list.cpp	/^namespace gbe$/;"	n	file:
gbe	./sys/intrusive_list.hpp	/^namespace gbe$/;"	n
gbe	./sys/list.hpp	/^namespace gbe$/;"	n
gbe	./sys/map.hpp	/^namespace gbe$/;"	n
gbe	./sys/mutex.cpp	/^namespace gbe$/;"	n	file:
gbe	./sys/mutex.hpp	/^namespace gbe$/;"	n
gbe	./sys/platform.cpp	/^namespace gbe$/;"	n	file:
gbe	./sys/platform.hpp	/^namespace gbe$/;"	n
gbe	./sys/set.hpp	/^namespace gbe$/;"	n
gbe	./sys/vector.hpp	/^namespace gbe$/;"	n
gbeDiagnosticContext	./llvm/llvm_to_gen.cpp	/^    gbeDiagnosticContext() : _str(""), messages(_str), printer(messages), _has_errors(false) {}$/;"	f	class:gbe::gbeDiagnosticContext
gbeDiagnosticContext	./llvm/llvm_to_gen.cpp	/^  class gbeDiagnosticContext$/;"	c	namespace:gbe	file:
gbeDiagnosticHandler	./llvm/llvm_to_gen.cpp	/^  void gbeDiagnosticHandler(const llvm::DiagnosticInfo &diagnostic, void *context)$/;"	f	namespace:gbe
gbe_arg_type	./backend/program.h	/^enum gbe_arg_type {$/;"	g
gbe_config_file	./Android.mk	/^gbe_config_file = $(LOCAL_PATH)\/GBEConfig.h$/;"	m
gbe_curbe_type	./backend/program.h	/^enum gbe_curbe_type {$/;"	g
gbe_dup_printfset	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_dup_printfset_cb *gbe_dup_printfset = NULL;$/;"	v
gbe_dup_printfset_cb	./backend/program.h	/^typedef void* (gbe_dup_printfset_cb)(gbe_kernel gbeKernel);$/;"	t
gbe_dup_profiling	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_dup_profiling_cb *gbe_dup_profiling = NULL;$/;"	v
gbe_dup_profiling_cb	./backend/program.h	/^typedef void* (gbe_dup_profiling_cb)(gbe_kernel gbeKernel);$/;"	t
gbe_extra_argument	./backend/program.h	/^enum gbe_extra_argument {$/;"	g
gbe_get_arg_info_value	./backend/program.h	/^enum gbe_get_arg_info_value {$/;"	g
gbe_get_image_base_index_cb	./backend/program.h	/^typedef uint32_t (gbe_get_image_base_index_cb)();$/;"	t
gbe_get_printf_buf_bti	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_get_printf_buf_bti_cb *gbe_get_printf_buf_bti = NULL;$/;"	v
gbe_get_printf_buf_bti_cb	./backend/program.h	/^typedef uint8_t (gbe_get_printf_buf_bti_cb)(void* printf_info);$/;"	t
gbe_get_printf_num	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_get_printf_num_cb *gbe_get_printf_num = NULL;$/;"	v
gbe_get_printf_num_cb	./backend/program.h	/^typedef uint32_t (gbe_get_printf_num_cb)(void* printf_info);$/;"	t
gbe_get_profiling_bti	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_get_profiling_bti_cb *gbe_get_profiling_bti = NULL;$/;"	v
gbe_get_profiling_bti_cb	./backend/program.h	/^typedef uint32_t (gbe_get_profiling_bti_cb)(gbe_kernel gbeKernel);$/;"	t
gbe_kernel	./backend/program.h	/^typedef struct _gbe_kernel *gbe_kernel;$/;"	t	typeref:struct:_gbe_kernel
gbe_kernel_get_arg_align	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_arg_align_cb *gbe_kernel_get_arg_align = NULL;$/;"	v
gbe_kernel_get_arg_align_cb	./backend/program.h	/^typedef uint32_t (gbe_kernel_get_arg_align_cb)(gbe_kernel, uint32_t argID);$/;"	t
gbe_kernel_get_arg_bti	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_arg_bti_cb *gbe_kernel_get_arg_bti = NULL;$/;"	v
gbe_kernel_get_arg_bti_cb	./backend/program.h	/^typedef uint8_t (gbe_kernel_get_arg_bti_cb)(gbe_kernel, uint32_t argID);$/;"	t
gbe_kernel_get_arg_info	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_arg_info_cb *gbe_kernel_get_arg_info = NULL;$/;"	v
gbe_kernel_get_arg_info_cb	./backend/program.h	/^typedef void* (gbe_kernel_get_arg_info_cb)(gbe_kernel, uint32_t argID, uint32_t value);$/;"	t
gbe_kernel_get_arg_num	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_arg_num_cb *gbe_kernel_get_arg_num = NULL;$/;"	v
gbe_kernel_get_arg_num_cb	./backend/program.h	/^typedef uint32_t (gbe_kernel_get_arg_num_cb)(gbe_kernel);$/;"	t
gbe_kernel_get_arg_size	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_arg_size_cb *gbe_kernel_get_arg_size = NULL;$/;"	v
gbe_kernel_get_arg_size_cb	./backend/program.h	/^typedef uint32_t (gbe_kernel_get_arg_size_cb)(gbe_kernel, uint32_t argID);$/;"	t
gbe_kernel_get_arg_type	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_arg_type_cb *gbe_kernel_get_arg_type = NULL;$/;"	v
gbe_kernel_get_arg_type_cb	./backend/program.h	/^typedef enum gbe_arg_type (gbe_kernel_get_arg_type_cb)(gbe_kernel, uint32_t argID);$/;"	t	typeref:enum:gbe_kernel_get_arg_type_cb
gbe_kernel_get_attributes	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_attributes_cb *gbe_kernel_get_attributes = NULL;$/;"	v
gbe_kernel_get_attributes_cb	./backend/program.h	/^typedef const char *(gbe_kernel_get_attributes_cb)(gbe_kernel);$/;"	t
gbe_kernel_get_code	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_code_cb *gbe_kernel_get_code = NULL;$/;"	v
gbe_kernel_get_code_cb	./backend/program.h	/^typedef const char *(gbe_kernel_get_code_cb)(gbe_kernel);$/;"	t
gbe_kernel_get_code_size	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_code_size_cb *gbe_kernel_get_code_size = NULL;$/;"	v
gbe_kernel_get_code_size_cb	./backend/program.h	/^typedef size_t (gbe_kernel_get_code_size_cb)(gbe_kernel);$/;"	t
gbe_kernel_get_compile_wg_size	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_compile_wg_size_cb *gbe_kernel_get_compile_wg_size = NULL;$/;"	v
gbe_kernel_get_compile_wg_size_cb	./backend/program.h	/^typedef void (gbe_kernel_get_compile_wg_size_cb)(gbe_kernel gbeKernel, size_t wg_sz[3]);$/;"	t
gbe_kernel_get_curbe_offset	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_curbe_offset_cb *gbe_kernel_get_curbe_offset = NULL;$/;"	v
gbe_kernel_get_curbe_offset_cb	./backend/program.h	/^typedef int32_t (gbe_kernel_get_curbe_offset_cb)(gbe_kernel, enum gbe_curbe_type type, uint32_t sub_type);$/;"	t
gbe_kernel_get_curbe_size	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_curbe_size_cb *gbe_kernel_get_curbe_size = NULL;$/;"	v
gbe_kernel_get_curbe_size_cb	./backend/program.h	/^typedef int32_t (gbe_kernel_get_curbe_size_cb)(gbe_kernel);$/;"	t
gbe_kernel_get_image_data	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_image_data_cb *gbe_kernel_get_image_data = NULL;$/;"	v
gbe_kernel_get_image_data_cb	./backend/program.h	/^typedef void (gbe_kernel_get_image_data_cb)(gbe_kernel gbeKernel, ImageInfo *images);$/;"	t
gbe_kernel_get_image_size	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_image_size_cb *gbe_kernel_get_image_size = NULL;$/;"	v
gbe_kernel_get_image_size_cb	./backend/program.h	/^typedef size_t (gbe_kernel_get_image_size_cb)(gbe_kernel gbeKernel);$/;"	t
gbe_kernel_get_name	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_name_cb *gbe_kernel_get_name = NULL;$/;"	v
gbe_kernel_get_name_cb	./backend/program.h	/^typedef const char *(gbe_kernel_get_name_cb)(gbe_kernel);$/;"	t
gbe_kernel_get_ocl_version	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_ocl_version_cb *gbe_kernel_get_ocl_version = NULL;$/;"	v
gbe_kernel_get_ocl_version_cb	./backend/program.h	/^typedef uint32_t (gbe_kernel_get_ocl_version_cb)(gbe_kernel);$/;"	t
gbe_kernel_get_required_work_group_size	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_required_work_group_size_cb *gbe_kernel_get_required_work_group_size = NULL;$/;"	v
gbe_kernel_get_required_work_group_size_cb	./backend/program.h	/^typedef uint32_t (gbe_kernel_get_required_work_group_size_cb)(gbe_kernel, uint32_t dim);$/;"	t
gbe_kernel_get_sampler_data	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_sampler_data_cb *gbe_kernel_get_sampler_data = NULL;$/;"	v
gbe_kernel_get_sampler_data_cb	./backend/program.h	/^typedef void (gbe_kernel_get_sampler_data_cb)(gbe_kernel gbeKernel, uint32_t *samplers);$/;"	t
gbe_kernel_get_sampler_size	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_sampler_size_cb *gbe_kernel_get_sampler_size = NULL;$/;"	v
gbe_kernel_get_sampler_size_cb	./backend/program.h	/^typedef size_t (gbe_kernel_get_sampler_size_cb)(gbe_kernel gbeKernel);$/;"	t
gbe_kernel_get_scratch_size	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_scratch_size_cb *gbe_kernel_get_scratch_size = NULL;$/;"	v
gbe_kernel_get_scratch_size_cb	./backend/program.h	/^typedef int32_t (gbe_kernel_get_scratch_size_cb)(gbe_kernel);$/;"	t
gbe_kernel_get_simd_width	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_simd_width_cb *gbe_kernel_get_simd_width = NULL;$/;"	v
gbe_kernel_get_simd_width_cb	./backend/program.h	/^typedef uint32_t (gbe_kernel_get_simd_width_cb)(gbe_kernel);$/;"	t
gbe_kernel_get_slm_size	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_slm_size_cb *gbe_kernel_get_slm_size = NULL;$/;"	v
gbe_kernel_get_slm_size_cb	./backend/program.h	/^typedef int32_t (gbe_kernel_get_slm_size_cb)(gbe_kernel);$/;"	t
gbe_kernel_get_stack_size	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_get_stack_size_cb *gbe_kernel_get_stack_size = NULL;$/;"	v
gbe_kernel_get_stack_size_cb	./backend/program.h	/^typedef int32_t (gbe_kernel_get_stack_size_cb)(gbe_kernel);$/;"	t
gbe_kernel_use_device_enqueue	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_use_device_enqueue_cb *gbe_kernel_use_device_enqueue = NULL;$/;"	v
gbe_kernel_use_device_enqueue_cb	./backend/program.h	/^typedef uint32_t (gbe_kernel_use_device_enqueue_cb)(gbe_kernel);$/;"	t
gbe_kernel_use_slm	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_kernel_use_slm_cb *gbe_kernel_use_slm = NULL;$/;"	v
gbe_kernel_use_slm_cb	./backend/program.h	/^typedef int32_t (gbe_kernel_use_slm_cb)(gbe_kernel);$/;"	t
gbe_output_printf	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_output_printf_cb *gbe_output_printf = NULL;$/;"	v
gbe_output_printf_cb	./backend/program.h	/^typedef void (gbe_output_printf_cb) (void* printf_info, void* buf_addr);$/;"	t
gbe_output_profiling	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_output_profiling_cb *gbe_output_profiling = NULL;$/;"	v
gbe_output_profiling_cb	./backend/program.h	/^typedef void (gbe_output_profiling_cb)(void* profiling_info, void* buf);$/;"	t
gbe_prog	./gbe_bin_generater.cpp	/^    gbe::Program* gbe_prog;$/;"	m	class:program_build_instance	file:
gbe_program	./backend/program.h	/^typedef struct _gbe_program *gbe_program;$/;"	t	typeref:struct:_gbe_program
gbe_program_build_from_llvm	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_build_from_llvm_cb *gbe_program_build_from_llvm = NULL;$/;"	v
gbe_program_build_from_llvm_cb	./backend/program.h	/^typedef void gbe_program_build_from_llvm_cb(gbe_program program,$/;"	t
gbe_program_check_opt	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_check_opt_cb *gbe_program_check_opt = NULL;$/;"	v
gbe_program_check_opt_cb	./backend/program.h	/^typedef bool (gbe_program_check_opt_cb)(const char *option);$/;"	t
gbe_program_clean_llvm_resource	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_clean_llvm_resource_cb *gbe_program_clean_llvm_resource = NULL;$/;"	v
gbe_program_clean_llvm_resource_cb	./backend/program.h	/^typedef void (gbe_program_clean_llvm_resource_cb)(gbe_program);$/;"	t
gbe_program_compile_from_source	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_compile_from_source_cb *gbe_program_compile_from_source = NULL;$/;"	v
gbe_program_compile_from_source_cb	./backend/program.h	/^typedef gbe_program (gbe_program_compile_from_source_cb)(uint32_t deviceID,$/;"	t
gbe_program_delete	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_delete_cb *gbe_program_delete = NULL;$/;"	v
gbe_program_delete_cb	./backend/program.h	/^typedef void (gbe_program_delete_cb)(gbe_program);$/;"	t
gbe_program_get_device_enqueue_kernel_name	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_get_device_enqueue_kernel_name_cb *gbe_program_get_device_enqueue_kernel_name = NULL;$/;"	v
gbe_program_get_device_enqueue_kernel_name_cb	./backend/program.h	/^typedef const char* (gbe_program_get_device_enqueue_kernel_name_cb)(gbe_program, uint32_t ID);$/;"	t
gbe_program_get_global_constant_data	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_get_global_constant_data_cb *gbe_program_get_global_constant_data = NULL;$/;"	v
gbe_program_get_global_constant_data_cb	./backend/program.h	/^typedef void (gbe_program_get_global_constant_data_cb)(gbe_program gbeProgram, char *mem);$/;"	t
gbe_program_get_global_constant_size	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_get_global_constant_size_cb *gbe_program_get_global_constant_size = NULL;$/;"	v
gbe_program_get_global_constant_size_cb	./backend/program.h	/^typedef size_t (gbe_program_get_global_constant_size_cb)(gbe_program gbeProgram);$/;"	t
gbe_program_get_global_reloc_count	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_get_global_reloc_count_cb *gbe_program_get_global_reloc_count = NULL;$/;"	v
gbe_program_get_global_reloc_count_cb	./backend/program.h	/^typedef size_t (gbe_program_get_global_reloc_count_cb)(gbe_program gbeProgram);$/;"	t
gbe_program_get_global_reloc_table	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_get_global_reloc_table_cb *gbe_program_get_global_reloc_table = NULL;$/;"	v
gbe_program_get_global_reloc_table_cb	./backend/program.h	/^typedef void (gbe_program_get_global_reloc_table_cb)(gbe_program gbeProgram, char *mem);$/;"	t
gbe_program_get_kernel	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_get_kernel_cb *gbe_program_get_kernel = NULL;$/;"	v
gbe_program_get_kernel_by_name	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_get_kernel_by_name_cb *gbe_program_get_kernel_by_name = NULL;$/;"	v
gbe_program_get_kernel_by_name_cb	./backend/program.h	/^typedef gbe_kernel (gbe_program_get_kernel_by_name_cb)(gbe_program, const char *name);$/;"	t
gbe_program_get_kernel_cb	./backend/program.h	/^typedef gbe_kernel (gbe_program_get_kernel_cb)(gbe_program, uint32_t ID);$/;"	t
gbe_program_get_kernel_num	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_get_kernel_num_cb *gbe_program_get_kernel_num = NULL;$/;"	v
gbe_program_get_kernel_num_cb	./backend/program.h	/^typedef uint32_t (gbe_program_get_kernel_num_cb)(gbe_program);$/;"	t
gbe_program_link_from_llvm	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_link_from_llvm_cb *gbe_program_link_from_llvm = NULL;$/;"	v
gbe_program_link_from_llvm_cb	./backend/program.h	/^typedef bool (gbe_program_link_from_llvm_cb)(gbe_program dst_program,$/;"	t
gbe_program_link_program	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_link_program_cb *gbe_program_link_program = NULL;$/;"	v
gbe_program_link_program_cb	./backend/program.h	/^typedef bool (gbe_program_link_program_cb)(gbe_program           dst_program,$/;"	t
gbe_program_new_from_binary	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_new_from_binary_cb *gbe_program_new_from_binary = NULL;$/;"	v
gbe_program_new_from_binary_cb	./backend/program.h	/^typedef gbe_program (gbe_program_new_from_binary_cb)(uint32_t deviceID, const char *binary, size_t size);$/;"	t
gbe_program_new_from_llvm	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_new_from_llvm_cb *gbe_program_new_from_llvm = NULL;$/;"	v
gbe_program_new_from_llvm_binary	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_new_from_llvm_binary_cb *gbe_program_new_from_llvm_binary = NULL;$/;"	v
gbe_program_new_from_llvm_binary_cb	./backend/program.h	/^typedef gbe_program (gbe_program_new_from_llvm_binary_cb)(uint32_t deviceID, const char *binary, size_t size);$/;"	t
gbe_program_new_from_llvm_cb	./backend/program.h	/^typedef gbe_program (gbe_program_new_from_llvm_cb)(uint32_t deviceID,$/;"	t
gbe_program_new_from_llvm_file	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_new_from_llvm_file_cb *gbe_program_new_from_llvm_file = NULL;$/;"	v
gbe_program_new_from_llvm_file_cb	./backend/program.h	/^typedef gbe_program (gbe_program_new_from_llvm_file_cb)(uint32_t deviceID,$/;"	t
gbe_program_new_from_source	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_new_from_source_cb *gbe_program_new_from_source = NULL;$/;"	v
gbe_program_new_from_source_cb	./backend/program.h	/^typedef gbe_program (gbe_program_new_from_source_cb)(uint32_t deviceID,$/;"	t
gbe_program_new_gen_program	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_new_gen_program_cb *gbe_program_new_gen_program = NULL;$/;"	v
gbe_program_new_gen_program_cb	./backend/program.h	/^typedef gbe_program (gbe_program_new_gen_program_cb)(uint32_t deviceID,$/;"	t
gbe_program_serialize_to_binary	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_program_serialize_to_binary_cb *gbe_program_serialize_to_binary = NULL;$/;"	v
gbe_program_serialize_to_binary_cb	./backend/program.h	/^typedef size_t (gbe_program_serialize_to_binary_cb)(gbe_program program, char **binary, int binary_type);$/;"	t
gbe_release_printf_info	./backend/program.cpp	/^GBE_EXPORT_SYMBOL gbe_release_printf_info_cb *gbe_release_printf_info = NULL;$/;"	v
gbe_release_printf_info_cb	./backend/program.h	/^typedef void (gbe_release_printf_info_cb)(void* printf_info);$/;"	t
gbe_set_image_base_index_cb	./backend/program.h	/^typedef void (gbe_set_image_base_index_cb)(uint32_t base_idx);$/;"	t
gen	./backend/gen_encoder.hpp	/^    uint32_t gen;$/;"	m	class:gbe::GenEncoder
gen6_dp_sampler_const_cache	./backend/gen7_instruction.hpp	/^      } gen6_dp_sampler_const_cache;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon68
gen6_dp_sampler_const_cache	./backend/gen8_instruction.hpp	/^      } gen6_dp_sampler_const_cache;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon132
gen6_dp_sampler_const_cache	./backend/gen_defs.hpp	/^      } gen6_dp_sampler_const_cache;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon27
gen7	./ir/profiling.hpp	/^          } gen7;$/;"	m	union:gbe::ir::ProfilingInfo::__anon151::GenInfo	typeref:struct:gbe::ir::ProfilingInfo::__anon151::GenInfo::Gen7Info
gen7_atomic_op	./backend/gen7_instruction.hpp	/^      } gen7_atomic_op;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon76
gen7_atomic_op	./backend/gen8_instruction.hpp	/^      } gen7_atomic_op;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon140
gen7_atomic_op	./backend/gen_defs.hpp	/^      } gen7_atomic_op;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon35
gen7_branch	./backend/gen7_instruction.hpp	/^      } gen7_branch;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon79
gen7_byte_rw	./backend/gen7_instruction.hpp	/^      } gen7_byte_rw;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon70
gen7_byte_rw	./backend/gen8_instruction.hpp	/^      } gen7_byte_rw;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon134
gen7_byte_rw	./backend/gen_defs.hpp	/^      } gen7_byte_rw;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon29
gen7_dword_rw	./backend/gen7_instruction.hpp	/^      } gen7_dword_rw;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon73
gen7_dword_rw	./backend/gen8_instruction.hpp	/^      } gen7_dword_rw;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon137
gen7_dword_rw	./backend/gen_defs.hpp	/^      } gen7_dword_rw;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon32
gen7_insn	./backend/gen_defs.hpp	/^  union Gen7NativeInstruction gen7_insn;$/;"	m	union:GenNativeInstruction	typeref:union:GenNativeInstruction::Gen7NativeInstruction
gen7_mblock_rw	./backend/gen7_instruction.hpp	/^      } gen7_mblock_rw;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon80
gen7_mblock_rw	./backend/gen8_instruction.hpp	/^      } gen7_mblock_rw;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon149
gen7_mblock_rw	./backend/gen_defs.hpp	/^      } gen7_mblock_rw;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon38
gen7_memory_fence	./backend/gen7_instruction.hpp	/^      } gen7_memory_fence;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon75
gen7_memory_fence	./backend/gen8_instruction.hpp	/^      } gen7_memory_fence;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
gen7_memory_fence	./backend/gen_defs.hpp	/^      } gen7_memory_fence;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon34
gen7_msg_gw	./backend/gen7_instruction.hpp	/^      } gen7_msg_gw;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon78
gen7_msg_gw	./backend/gen8_instruction.hpp	/^      } gen7_msg_gw;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon146
gen7_msg_gw	./backend/gen_defs.hpp	/^      } gen7_msg_gw;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon36
gen7_oblock_rw	./backend/gen7_instruction.hpp	/^      } gen7_oblock_rw;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon72
gen7_oblock_rw	./backend/gen8_instruction.hpp	/^      } gen7_oblock_rw;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon136
gen7_oblock_rw	./backend/gen_defs.hpp	/^      } gen7_oblock_rw;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon31
gen7_scratch_rw	./backend/gen7_instruction.hpp	/^      } gen7_scratch_rw;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon71
gen7_scratch_rw	./backend/gen8_instruction.hpp	/^      } gen7_scratch_rw;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon135
gen7_scratch_rw	./backend/gen_defs.hpp	/^      } gen7_scratch_rw;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon30
gen7_typed_rw	./backend/gen7_instruction.hpp	/^      } gen7_typed_rw;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon74
gen7_typed_rw	./backend/gen8_instruction.hpp	/^      } gen7_typed_rw;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon138
gen7_typed_rw	./backend/gen_defs.hpp	/^      } gen7_typed_rw;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon33
gen7_untyped_rw	./backend/gen7_instruction.hpp	/^      } gen7_untyped_rw;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon69
gen7_untyped_rw	./backend/gen8_instruction.hpp	/^      } gen7_untyped_rw;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon133
gen7_untyped_rw	./backend/gen_defs.hpp	/^      } gen7_untyped_rw;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon28
gen8	./ir/profiling.hpp	/^          } gen8;$/;"	m	union:gbe::ir::ProfilingInfo::__anon151::GenInfo	typeref:struct:gbe::ir::ProfilingInfo::__anon151::GenInfo::Gen8Info
gen8_atomic_a64	./backend/gen8_instruction.hpp	/^      } gen8_atomic_a64;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon141
gen8_block_rw_a64	./backend/gen8_instruction.hpp	/^      } gen8_block_rw_a64;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon147
gen8_branch	./backend/gen8_instruction.hpp	/^      } gen8_branch;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon112	typeref:struct:Gen8NativeInstruction::__anon102::__anon112::__anon120
gen8_branch	./backend/gen8_instruction.hpp	/^      } gen8_branch;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon148
gen8_branch	./backend/gen_defs.hpp	/^      } gen8_branch;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon37
gen8_data_type_table	./backend/gen_insn_compact.cpp	/^  static compact_table_entry gen8_data_type_table[] = {$/;"	m	namespace:gbe	file:
gen8_insn	./backend/gen_defs.hpp	/^  union Gen8NativeInstruction gen8_insn;$/;"	m	union:GenNativeInstruction	typeref:union:GenNativeInstruction::Gen8NativeInstruction
gen8_scatter_rw_a64	./backend/gen8_instruction.hpp	/^      } gen8_scatter_rw_a64;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon143
gen8_untyped_rw_a64	./backend/gen8_instruction.hpp	/^      } gen8_untyped_rw_a64;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon142
gen9_insn	./backend/gen_defs.hpp	/^  union Gen9NativeInstruction gen9_insn;$/;"	m	union:GenNativeInstruction	typeref:union:GenNativeInstruction::Gen9NativeInstruction
genHeaderCompare	./backend/gen_program.cpp	/^  static bool genHeaderCompare(const unsigned char *BufPtr, GEN_BINARY_HEADER_INDEX index)$/;"	f	namespace:gbe
genInfo	./ir/profiling.hpp	/^        } genInfo;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151	typeref:union:gbe::ir::ProfilingInfo::__anon151::GenInfo
genProgramBuildFromLLVM	./backend/gen_program.cpp	/^  static void genProgramBuildFromLLVM(gbe_program program,$/;"	f	namespace:gbe
genProgramLinkFromLLVM	./backend/gen_program.cpp	/^  static bool genProgramLinkFromLLVM(gbe_program           dst_program,$/;"	f	namespace:gbe
genProgramNewFromBinary	./backend/gen_program.cpp	/^  static gbe_program genProgramNewFromBinary(uint32_t deviceID, const char *binary, size_t size) {$/;"	f	namespace:gbe
genProgramNewFromLLVM	./backend/gen_program.cpp	/^  static gbe_program genProgramNewFromLLVM(uint32_t deviceID,$/;"	f	namespace:gbe
genProgramNewFromLLVMBinary	./backend/gen_program.cpp	/^  static gbe_program genProgramNewFromLLVMBinary(uint32_t deviceID, const char *binary, size_t size) {$/;"	f	namespace:gbe
genProgramNewGenProgram	./backend/gen_program.cpp	/^  static gbe_program genProgramNewGenProgram(uint32_t deviceID, const void* module,$/;"	f	namespace:gbe
genProgramSerializeToBinary	./backend/gen_program.cpp	/^  static size_t genProgramSerializeToBinary(gbe_program program, char **binary, int binary_type) {$/;"	f	namespace:gbe
genReg	./backend/gen_reg_allocation.cpp	/^  GenRegister GenRegAllocator::genReg(const GenRegister &reg) {$/;"	f	class:gbe::GenRegAllocator
genReg	./backend/gen_reg_allocation.cpp	/^  INLINE GenRegister GenRegAllocator::Opaque::genReg(const GenRegister &reg) {$/;"	f	class:gbe::GenRegAllocator::Opaque
genSetupCallBacks	./backend/gen_program.cpp	/^void genSetupCallBacks(void)$/;"	f
gen_binary_header	./backend/gen_program.cpp	/^  static const unsigned char gen_binary_header[GBHI_MAX][GEN_BINARY_HEADER_LENGTH]= \\$/;"	m	namespace:gbe	file:
gen_disasm	./backend/gen/gen_mesa_disasm.c	/^int gen_disasm (FILE *file, const void *inst, uint32_t deviceID, uint32_t compacted)$/;"	f
gen_pci_id	./gbe_bin_generater.cpp	/^static uint32_t gen_pci_id = 0;$/;"	v	file:
gen_proto_str	./libocl/script/gen_vector.py	/^    def gen_proto_str(self):$/;"	m	class:builtinProto
gen_proto_str_1	./libocl/script/gen_vector.py	/^    def gen_proto_str_1(self, vtypeSeq, ptypeSeqs, i):$/;"	m	class:builtinProto
gen_vector_type	./libocl/script/gen_vector.py	/^def gen_vector_type(type_set, vector_set = all_vector):$/;"	f
gen_version	./backend/gen/gen_mesa_disasm.c	/^static int gen_version;$/;"	v	file:
generateAtomicMessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::generateAtomicMessageDesc(unsigned function, unsigned bti, unsigned srcNum) {$/;"	f	class:gbe::GenEncoder
generateByteGatherMessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::generateByteGatherMessageDesc(unsigned bti, unsigned elemSize) {$/;"	f	class:gbe::GenEncoder
generateByteScatterMessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::generateByteScatterMessageDesc(unsigned bti, unsigned elemSize) {$/;"	f	class:gbe::GenEncoder
generateByteScatterSendsMessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::generateByteScatterSendsMessageDesc(unsigned bti, unsigned elemSize) {$/;"	f	class:gbe::GenEncoder
generateEncoder	./backend/gen75_context.hpp	/^    virtual GenEncoder* generateEncoder(void) {$/;"	f	class:gbe::Gen75Context
generateEncoder	./backend/gen8_context.hpp	/^    virtual GenEncoder* generateEncoder(void) {$/;"	f	class:gbe::Gen8Context
generateEncoder	./backend/gen9_context.hpp	/^    virtual GenEncoder* generateEncoder(void) {$/;"	f	class:gbe::Gen9Context
generateEncoder	./backend/gen_context.hpp	/^    virtual GenEncoder* generateEncoder(void) {$/;"	f	class:gbe::GenContext
generateLocalMask	./backend/gen_insn_selection.cpp	/^  ir::Register generateLocalMask(Selection::Opaque &sel, GenRegister addr) {$/;"	f	namespace:gbe
generateOneParameterInst	./llvm/llvm_printf_parser.cpp	/^  bool PrintfParser::generateOneParameterInst(PrintfSlot& slot, Value* arg, Value*& new_arg)$/;"	f	class:gbe::PrintfParser
generatePrintfFmtString	./ir/printf.cpp	/^    static void generatePrintfFmtString(PrintfState& state, std::string& str)$/;"	f	namespace:gbe::ir
generateUntypedReadMessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::generateUntypedReadMessageDesc(unsigned bti, unsigned elemNum) {$/;"	f	class:gbe::GenEncoder
generateUntypedWriteMessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::generateUntypedWriteMessageDesc(unsigned bti, unsigned elemNum) {$/;"	f	class:gbe::GenEncoder
generateUntypedWriteSendsMessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::generateUntypedWriteSendsMessageDesc(unsigned bti, unsigned elemNum) {$/;"	f	class:gbe::GenEncoder
generated_path	./Android.mk	/^generated_path := $(call local-generated-sources-dir)$/;"	m
generated_sources	./libocl/Android.mk	/^generated_sources := $(call local-generated-sources-dir)\/libocl$/;"	m
generic_gen5	./backend/gen7_instruction.hpp	/^      } generic_gen5;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon62
generic_gen5	./backend/gen8_instruction.hpp	/^      } generic_gen5;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon127
generic_gen5	./backend/gen_defs.hpp	/^      } generic_gen5;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon21
get	./ir/register.hpp	/^    INLINE Register get(Tuple index, uint32_t which) const {$/;"	f	class:gbe::ir::RegisterFile
get	./ir/register.hpp	/^    INLINE RegisterData get(Register index) const { return regs[index]; }$/;"	f	class:gbe::ir::RegisterFile
getARFRegister	./ir/instruction.cpp	/^      INLINE ir::ARFRegister getARFRegister(void) const { return this->arf; }$/;"	f	class:gbe::ir::internal::ReadARFInstruction
getAddressIndex	./ir/instruction.cpp	/^      unsigned     getAddressIndex()   const { return 0; }$/;"	f	class:gbe::ir::internal::MemInstruction
getAddressMode	./ir/instruction.cpp	/^      AddressMode  getAddressMode()    const { return AM; }$/;"	f	class:gbe::ir::internal::MemInstruction
getAddressRegister	./ir/instruction.cpp	/^      Register     getAddressRegister()const { return offset; }$/;"	f	class:gbe::ir::internal::MemInstruction
getAddressSpace	./ir/instruction.cpp	/^      AddressSpace getAddressSpace()   const { return AS; }$/;"	f	class:gbe::ir::internal::MemInstruction
getAddressSpace	./llvm/llvm_loadstore_optimization.cpp	/^  unsigned GenLoadStoreOptimization::getAddressSpace(Value *I) {$/;"	f	class:gbe::GenLoadStoreOptimization
getAlign	./llvm/ExpandLargeIntegers.cpp	/^static AlignPair getAlign(const DataLayout &DL, T *I, Type *PrefAlignTy) {$/;"	f	file:
getAlignment	./ir/constant.hpp	/^    uint32_t getAlignment (void) const { return alignment; }$/;"	f	class:gbe::ir::Constant
getAlignmentByte	./llvm/llvm_passes.cpp	/^  uint32_t getAlignmentByte(const ir::Unit &unit, Type* Ty)$/;"	f	namespace:gbe
getAnalysisUsage	./llvm/llvm_barrier_nodup.cpp	/^      void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:gbe::BarrierNodup
getAnalysisUsage	./llvm/llvm_gen_backend.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:gbe::GenWriter
getAnalysisUsage	./llvm/llvm_intrinsic_lowering.cpp	/^      void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:gbe::InstrinsicLowering
getAnalysisUsage	./llvm/llvm_loadstore_optimization.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:gbe::GenLoadStoreOptimization
getAnalysisUsage	./llvm/llvm_passes.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:gbe::GenRemoveGEPPasss
getAnalysisUsage	./llvm/llvm_scalarize.cpp	/^  void Scalarize::getAnalysisUsage(AnalysisUsage& AU) const$/;"	f	class:gbe::Scalarize
getAnalysisUsage	./llvm/llvm_unroll.cpp	/^      void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:gbe::CustomLoopUnroll
getArg	./ir/function.hpp	/^    INLINE FunctionArgument &getArg(uint32_t ID) {$/;"	f	class:gbe::ir::Function
getArg	./ir/function.hpp	/^    INLINE FunctionArgument *getArg(const Register &reg) {$/;"	f	class:gbe::ir::Function
getArg	./ir/function.hpp	/^    INLINE const FunctionArgument &getArg(uint32_t ID) const {$/;"	f	class:gbe::ir::Function
getArg	./ir/function.hpp	/^    INLINE const FunctionArgument *getArg(const Register &reg) const {$/;"	f	class:gbe::ir::Function
getArgAlign	./backend/program.hpp	/^    INLINE uint32_t getArgAlign(uint32_t argID) const {$/;"	f	class:gbe::Kernel
getArgBTI	./backend/program.hpp	/^    INLINE uint8_t getArgBTI(uint32_t argID) const {$/;"	f	class:gbe::Kernel
getArgID	./ir/function.hpp	/^    INLINE int32_t getArgID(FunctionArgument *requestArg) {$/;"	f	class:gbe::ir::Function
getArgInfo	./backend/program.hpp	/^    KernelArgument::ArgInfo* getArgInfo(uint32_t id) const { return &args[id].info; }$/;"	f	class:gbe::Kernel
getArgNum	./backend/program.hpp	/^    INLINE uint32_t getArgNum(void) const { return argNum; }$/;"	f	class:gbe::Kernel
getArgSize	./backend/program.hpp	/^    INLINE uint32_t getArgSize(uint32_t argID) const {$/;"	f	class:gbe::Kernel
getArgType	./backend/program.hpp	/^    INLINE gbe_arg_type getArgType(uint32_t argID) const {$/;"	f	class:gbe::Kernel
getArgUse	./ir/lowering.cpp	/^  ArgUse FunctionArgumentLowerer::getArgUse(uint32_t argID)$/;"	f	class:gbe::ir::FunctionArgumentLowerer
getAtomicOpcode	./ir/instruction.cpp	/^      INLINE AtomicOps getAtomicOpcode(void) const { return this->atomicOp; }$/;"	f	class:gbe::ir::internal::AtomicInstruction
getBTI	./ir/instruction.cpp	/^      uint32_t getBTI(void) const { return this->bti; }$/;"	f	class:gbe::ir::internal::StoreProfilingInstruction
getBTI	./ir/profiling.hpp	/^      uint32_t getBTI() const {$/;"	f	class:gbe::ir::ProfilingInfo
getBTITemps	./backend/gen_insn_selection.cpp	/^    INLINE vector<GenRegister> getBTITemps(const ir::AddressMode &AM) {$/;"	f	class:gbe::Selection::Opaque
getBaseSrcNum	./ir/instruction.cpp	/^      int          getBaseSrcNum()    const { return AM == AM_DynamicBti ? 2 : 1; }$/;"	f	class:gbe::ir::internal::MemInstruction
getBasicBlock	./ir/structurizer.hpp	/^    BasicBlock* getBasicBlock() { return p_bb; }$/;"	f	class:gbe::ir::SimpleBlock
getBlock	./ir/context.hpp	/^    BasicBlock *getBlock(void) { return bb; }$/;"	f	class:gbe::ir::Context
getBlock	./ir/function.cpp	/^  BasicBlock &Function::getBlock(LabelIndex label) const {$/;"	f	class:gbe::ir::Function
getBlockDefInsns	./ir/value.cpp	/^  static void getBlockDefInsns(const BasicBlock *bb, const DefSet *dSet, Register r, set <const Instruction *> &defInsns) {$/;"	f	namespace:gbe::ir
getBlockIP	./backend/gen_context.cpp	/^  GenRegister GenContext::getBlockIP(void) {$/;"	f	class:gbe::GenContext
getBlockIP	./backend/gen_insn_selection.cpp	/^    GenRegister getBlockIP() {$/;"	f	class:gbe::Selection::Opaque
getBlockInfo	./ir/liveness.hpp	/^    INLINE const BlockInfo &getBlockInfo(const BasicBlock *bb) const {$/;"	f	class:gbe::ir::Liveness
getBlocks	./ir/function.hpp	/^    vector<BasicBlock *> &getBlocks() { return blocks; }$/;"	f	class:gbe::ir::Function
getBottomBlock	./ir/function.cpp	/^  BasicBlock &Function::getBottomBlock(void) {$/;"	f	class:gbe::ir::Function
getBottomBlock	./ir/function.cpp	/^  const BasicBlock &Function::getBottomBlock(void) const {$/;"	f	class:gbe::ir::Function
getBti	./ir/instruction.cpp	/^        uint32_t getBti(void) const { return this->bti; }$/;"	f	class:gbe::ir::internal::PrintfInstruction
getBtiReg	./ir/instruction.cpp	/^      Register     getBtiReg()         const { assert(AM == AM_DynamicBti); return BtiReg; }$/;"	f	class:gbe::ir::internal::MemInstruction
getBtiRegister	./llvm/llvm_gen_backend.cpp	/^  Value *GenWriter::getBtiRegister(Value *Val) {$/;"	f	class:gbe::GenWriter
getBufBTI	./ir/printf.hpp	/^      uint8_t getBufBTI() const      { return btiBuf; }$/;"	f	class:gbe::ir::PrintfSet
getByteScatterGatherSize	./backend/gen_insn_selection.cpp	/^  INLINE uint32_t getByteScatterGatherSize(Selection::Opaque &sel, ir::Type type) {$/;"	f	namespace:gbe
getChildNo	./llvm/llvm_gen_backend.cpp	/^  static unsigned getChildNo(BasicBlock *bb) {$/;"	f	namespace:gbe
getChildPossible	./llvm/llvm_gen_backend.cpp	/^  static BasicBlock *getChildPossible(BasicBlock *bb, unsigned index) {$/;"	f	namespace:gbe
getClearConverted	./llvm/PromoteIntegers.cpp	/^static Value *getClearConverted(Value *Operand, Instruction *InsertPt,$/;"	f	file:
getCode	./backend/gen_program.cpp	/^  const char *GenKernel::getCode(void) const { return (const char*) insns; }$/;"	f	class:gbe::GenKernel
getCodeSize	./backend/gen_program.cpp	/^  uint32_t GenKernel::getCodeSize(void) const { return insnNum * sizeof(GenInstruction); }$/;"	f	class:gbe::GenKernel
getCompactVersion	./backend/gen8_encoder.hpp	/^    virtual uint32_t getCompactVersion() { return 8; }$/;"	f	class:gbe::Gen8Encoder
getCompactVersion	./backend/gen_encoder.hpp	/^    virtual uint32_t getCompactVersion() { return 7; }$/;"	f	class:gbe::GenEncoder
getCompileWorkGroupSize	./backend/program.hpp	/^    void getCompileWorkGroupSize (size_t wg_sz[3]) const {$/;"	f	class:gbe::Kernel
getCompileWorkGroupSize	./ir/function.hpp	/^    const size_t *getCompileWorkGroupSize(void) const {return compileWgSize;}$/;"	f	class:gbe::ir::Function
getComponent	./llvm/llvm_scalarize.cpp	/^    llvm::Value* getComponent(int c)$/;"	f	struct:gbe::VectorValues
getComponent	./llvm/llvm_scalarize.cpp	/^  Value* Scalarize::getComponent(int component, Value* v)$/;"	f	class:gbe::Scalarize
getConstant	./ir/constant.hpp	/^    Constant& getConstant(const std::string & name) {$/;"	f	class:gbe::ir::ConstantSet
getConstant	./ir/constant.hpp	/^    Constant& getConstant(size_t i) { return constants[i]; }$/;"	f	class:gbe::ir::ConstantSet
getConstantData	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::getConstantData(const Constant * c, void* mem, uint32_t& offset, vector<ir::RelocEntry> &relocs) const {$/;"	f	class:gbe::GenWriter
getConstantNum	./ir/constant.hpp	/^    size_t getConstantNum(void) const { return constants.size(); }$/;"	f	class:gbe::ir::ConstantSet
getConstantRegister	./llvm/llvm_gen_backend.cpp	/^  ir::Register GenWriter::getConstantRegister(Constant *c, uint32_t elemID) {$/;"	f	class:gbe::GenWriter
getConstantSet	./ir/unit.hpp	/^    ConstantSet& getConstantSet(void) { return constantSet; }$/;"	f	class:gbe::ir::Unit
getConstantSet	./ir/unit.hpp	/^    const ConstantSet& getConstantSet(void) const { return constantSet; }$/;"	f	class:gbe::ir::Unit
getConverted	./llvm/ExpandLargeIntegers.cpp	/^  ValuePair getConverted(Value *Val) {$/;"	f	class:__anon178::ConversionState
getConverted	./llvm/PromoteIntegers.cpp	/^  Value *getConverted(Value *Val) {$/;"	f	class:__anon175::ConversionState
getCoordType	./ir/instruction.cpp	/^      INLINE Type getCoordType(void) const { return (Type)this->coordType; }$/;"	f	class:gbe::ir::internal::TypedWriteInstruction
getCount	./ir/reloc.hpp	/^      uint32_t getCount() { return entries.size(); }$/;"	f	class:gbe::ir::RelocTable
getCtx	./backend/gen_insn_selection.cpp	/^  const GenContext& Selection::getCtx()$/;"	f	class:gbe::Selection
getCurbeOffset	./backend/program.cpp	/^  int32_t Kernel::getCurbeOffset(gbe_curbe_type type, uint32_t subType) const {$/;"	f	class:gbe::Kernel
getCurbeSize	./backend/program.hpp	/^    INLINE uint32_t getCurbeSize(void) const { return this->curbeSize; }$/;"	f	class:gbe::Kernel
getData	./ir/constant.hpp	/^    void getData(char *mem) const {$/;"	f	class:gbe::ir::ConstantSet
getData	./ir/image.cpp	/^  void ImageSet::getData(struct ImageInfo *imageInfos) const {$/;"	f	class:gbe::ir::ImageSet
getData	./ir/printf.hpp	/^      T getData(void) {$/;"	f	struct:gbe::ir::PrintfLog
getData	./ir/reloc.hpp	/^      void getData(char *p) {$/;"	f	class:gbe::ir::RelocTable
getData	./ir/sampler.hpp	/^    void getData(uint32_t *samplers) const {$/;"	f	class:gbe::ir::SamplerSet
getDataSize	./ir/constant.hpp	/^    size_t getDataSize(void) const { return data.size(); }$/;"	f	class:gbe::ir::ConstantSet
getDataSize	./ir/image.hpp	/^    size_t getDataSize(void) const { return regMap.size(); }$/;"	f	class:gbe::ir::ImageSet
getDataSize	./ir/image.hpp	/^    size_t getDataSize(void) { return regMap.size(); }$/;"	f	class:gbe::ir::ImageSet
getDataSize	./ir/sampler.hpp	/^    size_t getDataSize(void) const { return samplerMap.size(); }$/;"	f	class:gbe::ir::SamplerSet
getDataSize	./ir/sampler.hpp	/^    size_t getDataSize(void) { return samplerMap.size(); }$/;"	f	class:gbe::ir::SamplerSet
getDef	./ir/value.cpp	/^  const DefSet &FunctionDAG::getDef(const Instruction *insn, uint32_t srcID) const {$/;"	f	class:gbe::ir::FunctionDAG
getDef	./ir/value.cpp	/^  const DefSet &FunctionDAG::getDef(const ValueUse &use) const {$/;"	f	class:gbe::ir::FunctionDAG
getDefAddress	./ir/value.cpp	/^  const ValueDef *FunctionDAG::getDefAddress(const FunctionArgument *arg) const {$/;"	f	class:gbe::ir::FunctionDAG
getDefAddress	./ir/value.cpp	/^  const ValueDef *FunctionDAG::getDefAddress(const Instruction *insn, uint32_t dstID) const {$/;"	f	class:gbe::ir::FunctionDAG
getDefAddress	./ir/value.cpp	/^  const ValueDef *FunctionDAG::getDefAddress(const PushLocation *pushed) const {$/;"	f	class:gbe::ir::FunctionDAG
getDefAddress	./ir/value.cpp	/^  const ValueDef *FunctionDAG::getDefAddress(const Register &reg) const {$/;"	f	class:gbe::ir::FunctionDAG
getDefAddress	./ir/value.cpp	/^  const ValueDef *FunctionDAG::getDefAddress(const ValueDef &def) const {$/;"	f	class:gbe::ir::FunctionDAG
getDefSet	./ir/value.cpp	/^  LiveOutSet::RegDefSet &LiveOutSet::getDefSet(const BasicBlock *bb, Register reg)$/;"	f	class:gbe::ir::LiveOutSet
getDeviceEnqueueKernelName	./backend/program.hpp	/^    const char *getDeviceEnqueueKernelName(uint32_t index) const {$/;"	f	class:gbe::Program
getDeviceID	./ir/profiling.hpp	/^      uint32_t getDeviceID() const {$/;"	f	class:gbe::ir::ProfilingInfo
getDistance	./ir/function.hpp	/^    INLINE uint32_t getDistance(LabelIndex b0, LabelIndex b1) const {$/;"	f	class:gbe::ir::Function
getDoubleValue	./ir/immediate.hpp	/^    INLINE double getDoubleValue(void) const {$/;"	f	class:gbe::ir::Immediate
getDst	./ir/instruction.cpp	/^        INLINE Register getDst(const Function &fn, unsigned id) const {$/;"	f	class:gbe::ir::internal::LoadInstruction
getDst	./ir/instruction.cpp	/^      INLINE Register getDst(const Function &fn, uint32_t ID) const {$/;"	f	struct:gbe::ir::internal::NDstPolicy
getDst	./ir/instruction.cpp	/^      INLINE Register getDst(const Function &fn, uint32_t ID) const {$/;"	f	struct:gbe::ir::internal::TupleDstPolicy
getDstData	./ir/instruction.cpp	/^  RegisterData Instruction::getDstData(uint32_t ID) const {$/;"	f	class:gbe::ir::Instruction
getDstID	./ir/value.hpp	/^    INLINE uint32_t getDstID(void) const {$/;"	f	class:gbe::ir::ValueDef
getDstNum	./ir/instruction.cpp	/^        INLINE unsigned getDstNum() const { return valueNum; }$/;"	f	class:gbe::ir::internal::LoadInstruction
getDstNum	./ir/instruction.cpp	/^      INLINE uint32_t getDstNum(void) const { return dstNum; }$/;"	f	struct:gbe::ir::internal::NDstPolicy
getDstNum	./ir/instruction.cpp	/^      INLINE uint32_t getDstNum(void) const {$/;"	f	struct:gbe::ir::internal::TupleDstPolicy
getDstNum4Type	./ir/instruction.hpp	/^    static INLINE uint32_t getDstNum4Type(int infoType) {$/;"	f	class:gbe::ir::GetImageInfoInstruction
getDstType	./ir/instruction.cpp	/^      INLINE Type getDstType(void) const { return TYPE_U32; }$/;"	f	class:gbe::ir::internal::VmeInstruction
getDstType	./ir/instruction.cpp	/^      INLINE Type getDstType(void) const { return getType((RegisterFamily)dstFamily); }$/;"	f	class:gbe::ir::internal::BitCastInstruction
getDstType	./ir/instruction.cpp	/^      INLINE Type getDstType(void) const { return this->dstIsFloat ? TYPE_FLOAT : TYPE_U32; }$/;"	f	class:gbe::ir::internal::SampleInstruction
getDstType	./ir/instruction.cpp	/^      INLINE Type getDstType(void) const { return this->dstType; }$/;"	f	class:gbe::ir::internal::ConvertInstruction
getEffectByteData	./backend/gen_insn_selection.cpp	/^    void getEffectByteData(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
getElemNum	./ir/immediate.hpp	/^    INLINE uint32_t getElemNum(void) const {$/;"	f	class:gbe::ir::Immediate
getElement	./llvm/ExpandLargeIntegers.cpp	/^  Value *getElement(Value *v, unsigned id) {$/;"	f	class:__anon178::ConversionState
getEltType	./llvm/llvm_passes.cpp	/^  Type* getEltType(Type* eltTy, uint32_t index) {$/;"	f	namespace:gbe
getEntry	./ir/structurizer.hpp	/^    virtual BasicBlock* getEntry() { return p_bb; }$/;"	f	class:gbe::ir::SimpleBlock
getEntry	./ir/structurizer.hpp	/^    virtual BasicBlock* getEntry()$/;"	f	class:gbe::ir::Block
getEntry	./ir/structurizer.hpp	/^    virtual BasicBlock* getEntry()$/;"	f	class:gbe::ir::SelfLoopBlock
getErrCode	./backend/gen_context.hpp	/^    CompileErrorCode getErrCode() { return errCode; }$/;"	f	class:gbe::GenContext
getExit	./ir/structurizer.hpp	/^    virtual BasicBlock* getExit() { return p_bb; }$/;"	f	class:gbe::ir::SimpleBlock
getExit	./ir/structurizer.hpp	/^    virtual BasicBlock* getExit()$/;"	f	class:gbe::ir::Block
getExit	./ir/structurizer.hpp	/^    virtual BasicBlock* getExit()$/;"	f	class:gbe::ir::SelfLoopBlock
getExpandedIntTypes	./llvm/ExpandLargeIntegers.cpp	/^static TypePair getExpandedIntTypes(Type *Ty) {$/;"	f	file:
getFamily	./ir/type.hpp	/^  INLINE RegisterFamily getFamily(Type type) {$/;"	f	namespace:gbe::ir
getFamily	./llvm/llvm_gen_backend.cpp	/^  static ir::RegisterFamily getFamily(ir::Context &ctx, const Type *type)$/;"	f	namespace:gbe
getFamilyName	./ir/register.hpp	/^  INLINE char getFamilyName(RegisterFamily family) {$/;"	f	namespace:gbe::ir
getFamilySize	./ir/register.hpp	/^  INLINE uint32_t getFamilySize(RegisterFamily family) {$/;"	f	namespace:gbe::ir
getFirstBB	./ir/structurizer.hpp	/^    virtual BasicBlock* getFirstBB() { return p_bb; }$/;"	f	class:gbe::ir::SimpleBlock
getFirstInstruction	./ir/function.cpp	/^  Instruction *BasicBlock::getFirstInstruction(void) const {$/;"	f	class:gbe::ir::BasicBlock
getFirstSpecialReg	./ir/function.cpp	/^  uint32_t Function::getFirstSpecialReg(void) const {$/;"	f	class:gbe::ir::Function
getFlag	./backend/gen_insn_scheduling.cpp	/^  static GenRegister getFlag(const SelectionInstruction &insn) {$/;"	f	namespace:gbe
getFloatValue	./ir/immediate.hpp	/^    INLINE float getFloatValue(void) const {$/;"	f	class:gbe::ir::Immediate
getFreeBlock	./sys/alloc.hpp	/^    INLINE void getFreeBlock(void) {$/;"	f	class:gbe::GrowingPool
getFunction	./backend/context.hpp	/^    INLINE const ir::Function &getFunction(void) const { return this->fn; }$/;"	f	class:gbe::Context
getFunction	./backend/gen_context.hpp	/^    INLINE const ir::Function &getFunction(void) const { return fn; }$/;"	f	class:gbe::GenContext
getFunction	./ir/context.cpp	/^  Function &Context::getFunction(void) {$/;"	f	class:gbe::ir::Context
getFunction	./ir/instruction.cpp	/^  Function &Instruction::getFunction(void) {$/;"	f	class:gbe::ir::Instruction
getFunction	./ir/instruction.cpp	/^  const Function &Instruction::getFunction(void) const {$/;"	f	class:gbe::ir::Instruction
getFunction	./ir/liveness.hpp	/^    INLINE const Function &getFunction(void) const { return fn; }$/;"	f	class:gbe::ir::Liveness
getFunction	./ir/unit.cpp	/^  Function *Unit::getFunction(const std::string &name) const {$/;"	f	class:gbe::ir::Unit
getFunction	./ir/value.hpp	/^    INLINE const Function &getFunction(void) const { return fn; }$/;"	f	class:gbe::ir::FunctionDAG
getFunctionArgument	./ir/value.hpp	/^    INLINE const FunctionArgument *getFunctionArgument(void) const {$/;"	f	class:gbe::ir::ValueDef
getFunctionAttributes	./backend/program.hpp	/^    const char* getFunctionAttributes(void) const {return this->functionAttributes.c_str();}$/;"	f	class:gbe::Kernel
getFunctionAttributes	./ir/function.hpp	/^    const std::string& getFunctionAttributes(void) const {return this->functionAttributes;}$/;"	f	class:gbe::ir::Function
getFunctionDAG	./backend/context.hpp	/^    INLINE const ir::FunctionDAG &getFunctionDAG(void) const { return *dag; }$/;"	f	class:gbe::Context
getFunctionSet	./ir/unit.hpp	/^    const FunctionSet &getFunctionSet(void) const { return functions; }$/;"	f	class:gbe::ir::Unit
getGEPConstOffset	./llvm/llvm_passes.cpp	/^  int32_t getGEPConstOffset(const ir::Unit &unit, Type *eltTy, int32_t TypeIndex) {$/;"	f	namespace:gbe
getGenCompare	./backend/gen_insn_selection.cpp	/^  uint32_t getGenCompare(ir::Opcode opcode, bool inverse = false) {$/;"	f	namespace:gbe
getGenType	./backend/gen_insn_selection.cpp	/^  uint32_t getGenType(ir::Type type) {$/;"	f	namespace:gbe
getGlobalConstantData	./backend/program.hpp	/^    void getGlobalConstantData(char *mem) const { constantSet->getData(mem); }$/;"	f	class:gbe::Program
getGlobalConstantSize	./backend/program.hpp	/^    size_t getGlobalConstantSize(void) const { return constantSet->getDataSize(); }$/;"	f	class:gbe::Program
getGlobalRelocCount	./backend/program.hpp	/^    uint32_t getGlobalRelocCount(void) const { return relocTable->getCount(); }$/;"	f	class:gbe::Program
getGlobalRelocTable	./backend/program.hpp	/^    void getGlobalRelocTable(char *p) const { relocTable->getData(p); }$/;"	f	class:gbe::Program
getHalfValue	./ir/immediate.hpp	/^    INLINE half getHalfValue(void) const {$/;"	f	class:gbe::ir::Immediate
getIFENDIFFix	./backend/gen_context.hpp	/^    bool getIFENDIFFix(void) const { return ifEndifFix; }$/;"	f	class:gbe::GenContext
getIRType	./backend/gen_insn_selection.cpp	/^  ir::Type getIRType(uint32_t genType) {$/;"	f	namespace:gbe
getIdx	./ir/image.cpp	/^  uint32_t ImageSet::getIdx(const Register imageReg) const$/;"	f	class:gbe::ir::ImageSet
getImageData	./backend/program.hpp	/^    void getImageData(ImageInfo *images) const { imageSet->getData(images); }$/;"	f	class:gbe::Kernel
getImageID	./llvm/llvm_gen_backend.cpp	/^  uint8_t GenWriter::getImageID(CallInst &I) {$/;"	f	class:gbe::GenWriter
getImageIndex	./ir/instruction.cpp	/^      INLINE uint8_t getImageIndex(void) const { return imageIdx; }$/;"	f	class:gbe::ir::internal::GetImageInfoInstruction
getImageIndex	./ir/instruction.cpp	/^      INLINE uint8_t getImageIndex(void) const { return this->imageIdx; }$/;"	f	class:gbe::ir::internal::MediaBlockReadInstruction
getImageIndex	./ir/instruction.cpp	/^      INLINE uint8_t getImageIndex(void) const { return this->imageIdx; }$/;"	f	class:gbe::ir::internal::MediaBlockWriteInstruction
getImageIndex	./ir/instruction.cpp	/^      INLINE uint8_t getImageIndex(void) const { return this->imageIdx; }$/;"	f	class:gbe::ir::internal::SampleInstruction
getImageIndex	./ir/instruction.cpp	/^      INLINE uint8_t getImageIndex(void) const { return this->imageIdx; }$/;"	f	class:gbe::ir::internal::TypedWriteInstruction
getImageIndex	./ir/instruction.cpp	/^      INLINE uint8_t getImageIndex(void) const { return this->imageIdx; }$/;"	f	class:gbe::ir::internal::VmeInstruction
getImageSet	./ir/function.hpp	/^    ImageSet* getImageSet(void) const {return imageSet; }$/;"	f	class:gbe::ir::Function
getImageSize	./backend/program.hpp	/^    size_t getImageSize(void) const { return (imageSet == NULL ? 0 : imageSet->getDataSize()); }$/;"	f	class:gbe::Kernel
getImmediate	./ir/context.hpp	/^    INLINE Immediate getImmediate(ImmediateIndex index) const {$/;"	f	class:gbe::ir::Context
getImmediate	./ir/function.hpp	/^    INLINE const Immediate &getImmediate(ImmediateIndex ID) const {$/;"	f	class:gbe::ir::Function
getImmediate	./ir/instruction.cpp	/^      INLINE Immediate getImmediate(const Function &fn) const {$/;"	f	class:gbe::ir::internal::LoadImmInstruction
getImmediate	./ir/instruction.cpp	/^  Immediate LoadImmInstruction::getImmediate(void) const {$/;"	f	class:gbe::ir::LoadImmInstruction
getInProfilingMode	./ir/unit.hpp	/^    bool getInProfilingMode(void) const { return inProfilingMode; }$/;"	f	class:gbe::ir::Unit
getIndex	./backend/gen_insn_scheduling.cpp	/^  uint32_t DependencyTracker::getIndex(GenRegister reg) const {$/;"	f	class:gbe::DependencyTracker
getInfoOffset	./ir/image.cpp	/^  int32_t ImageSet::getInfoOffset(ImageInfoKey key) const$/;"	f	class:gbe::ir::ImageSet
getInfoOffset4Type	./ir/image.cpp	/^  static uint32_t getInfoOffset4Type(struct ImageInfo *imageInfo, int type)$/;"	f	namespace:gbe::ir
getInfoType	./ir/instruction.cpp	/^      INLINE uint32_t getInfoType(void) const { return infoType; }$/;"	f	class:gbe::ir::internal::GetImageInfoInstruction
getInstruction	./ir/value.hpp	/^    INLINE const Instruction *getInstruction(void) const {$/;"	f	class:gbe::ir::ValueDef
getInstruction	./ir/value.hpp	/^    const Instruction *getInstruction(void) const { return insn; }$/;"	f	class:gbe::ir::ValueUse
getInstructionUseLocal	./llvm/llvm_gen_backend.cpp	/^  static const Instruction *getInstructionUseLocal(const Value *v) {$/;"	f	namespace:gbe
getIntegerValue	./ir/immediate.hpp	/^    INLINE int64_t getIntegerValue(void) const {$/;"	f	class:gbe::ir::Immediate
getInversePredicated	./ir/instruction.cpp	/^      INLINE bool getInversePredicated(void) const { return inversePredicate; }$/;"	f	class:gbe::ir::internal::BranchInstruction
getKernel	./backend/context.hpp	/^    INLINE Kernel *getKernel(void) const { return this->kernel; }$/;"	f	class:gbe::Context
getKernel	./backend/program.hpp	/^    Kernel *getKernel(const std::string &name) const {$/;"	f	class:gbe::Program
getKernel	./backend/program.hpp	/^    Kernel *getKernel(uint32_t ID) const {$/;"	f	class:gbe::Program
getKernelFunctionMetadata	./llvm/llvm_gen_backend.cpp	/^  MDNode *GenWriter::getKernelFunctionMetadata(Function *F) {$/;"	f	class:gbe::GenWriter
getKernelNum	./backend/program.hpp	/^    uint32_t getKernelNum(void) const { return kernels.size(); }$/;"	f	class:gbe::Program
getLabelImmReg	./backend/gen_insn_selection.cpp	/^    GenRegister getLabelImmReg(ir::LabelIndex label) {$/;"	f	class:gbe::Selection::Opaque
getLabelImmReg	./backend/gen_insn_selection.cpp	/^    GenRegister getLabelImmReg(uint32_t labelValue) {$/;"	f	class:gbe::Selection::Opaque
getLabelIndex	./backend/context.hpp	/^    INLINE ir::LabelIndex getLabelIndex(const ir::Instruction *insn) const {$/;"	f	class:gbe::Context
getLabelIndex	./ir/function.cpp	/^  LabelIndex BasicBlock::getLabelIndex(void) const {$/;"	f	class:gbe::ir::BasicBlock
getLabelIndex	./ir/instruction.cpp	/^      INLINE LabelIndex getLabelIndex(void) const { return labelIndex; }$/;"	f	class:gbe::ir::internal::LabelInstruction
getLabelIndex	./ir/instruction.cpp	/^      INLINE LabelIndex getLabelIndex(void) const {$/;"	f	class:gbe::ir::internal::BranchInstruction
getLabelInstruction	./ir/function.cpp	/^  const LabelInstruction *Function::getLabelInstruction(LabelIndex index) const {$/;"	f	class:gbe::ir::Function
getLaneIDReg	./backend/gen_insn_selection.cpp	/^  GenRegister Selection::Opaque::getLaneIDReg()$/;"	f	class:gbe::Selection::Opaque
getLargestBlockSize	./backend/gen_insn_selection.cpp	/^  uint32_t Selection::Opaque::getLargestBlockSize(void) const {$/;"	f	class:gbe::Selection::Opaque
getLargestBlockSize	./backend/gen_insn_selection.cpp	/^  uint32_t Selection::getLargestBlockSize(void) const {$/;"	f	class:gbe::Selection
getLargestBlockSize	./ir/function.cpp	/^  uint32_t Function::getLargestBlockSize(void) const {$/;"	f	class:gbe::ir::Function
getLastInstruction	./ir/function.cpp	/^  Instruction *BasicBlock::getLastInstruction(void) const {$/;"	f	class:gbe::ir::BasicBlock
getLatencyGen7	./backend/gen_insn_scheduling.cpp	/^  static uint32_t getLatencyGen7(const SelectionInstruction &insn) {$/;"	f	namespace:gbe
getLdMsgOrder	./backend/gen_insn_selection.cpp	/^    uint32_t getLdMsgOrder()  const { return ldMsgOrder; }$/;"	f	class:gbe::Selection::Opaque
getLiveIn	./backend/gen_context.hpp	/^    INLINE const ir::Liveness::UEVar &getLiveIn(const ir::BasicBlock *bb) const {$/;"	f	class:gbe::GenContext
getLiveIn	./ir/liveness.hpp	/^    const UEVar &getLiveIn(const BasicBlock *bb) const {$/;"	f	class:gbe::ir::Liveness
getLiveIn	./ir/structurizer.cpp	/^  void CFGStructurizer::getLiveIn(BasicBlock& bb, std::set<Register>& livein)$/;"	f	class:gbe::ir::CFGStructurizer
getLiveOut	./backend/gen_context.hpp	/^    INLINE const ir::Liveness::LiveOut &getLiveOut(const ir::BasicBlock *bb) const {$/;"	f	class:gbe::GenContext
getLiveOut	./ir/liveness.hpp	/^    const LiveOut &getLiveOut(const BasicBlock *bb) const {$/;"	f	class:gbe::ir::Liveness
getLiveness	./backend/context.hpp	/^    INLINE const ir::Liveness &getLiveness(void) const { return *liveness; }$/;"	f	class:gbe::Context
getLivenessBBs	./ir/value.cpp	/^  static void getLivenessBBs(const Liveness &liveness, Register r, const set<const BasicBlock *> &useDefSet,$/;"	f	namespace:gbe::ir
getLivenessInfo	./ir/liveness.hpp	/^    INLINE const Info &getLivenessInfo(void) const { return liveness; }$/;"	f	class:gbe::ir::Liveness
getLoadOrStoreValue	./llvm/llvm_gen_backend.cpp	/^  static INLINE Value *getLoadOrStoreValue(LoadInst &I) {$/;"	f	namespace:gbe
getLoadOrStoreValue	./llvm/llvm_gen_backend.cpp	/^  static INLINE Value *getLoadOrStoreValue(StoreInst &I) {$/;"	f	namespace:gbe
getLocationMap	./ir/function.hpp	/^    const LocationMap &getLocationMap(void) const { return this->locationMap; }$/;"	f	class:gbe::ir::Function
getLoopDepth	./ir/function.cpp	/^  int Function::getLoopDepth(LabelIndex Block) const{$/;"	f	class:gbe::ir::Function
getLoops	./ir/function.hpp	/^    INLINE const vector<Loop * > &getLoops() { return loops; }$/;"	f	class:gbe::ir::Function
getMaxLabel	./backend/context.hpp	/^    uint32_t getMaxLabel(void) const {$/;"	f	class:gbe::Context
getMaxScatchMemUsed	./backend/context.cpp	/^    int32_t getMaxScatchMemUsed() { return maxOffset; }$/;"	f	class:gbe::ScratchAllocator
getMemoryIndex	./backend/gen_insn_scheduling.cpp	/^  uint32_t DependencyTracker::getMemoryIndex() const {$/;"	f	class:gbe::DependencyTracker
getModuleOclVersion	./llvm/llvm_passes.cpp	/^  uint32_t getModuleOclVersion(const llvm::Module *M) {$/;"	f	namespace:gbe
getMsgType	./ir/instruction.cpp	/^      INLINE uint8_t getMsgType(void) const { return this->msg_type; }$/;"	f	class:gbe::ir::internal::VmeInstruction
getName	./backend/program.hpp	/^    INLINE const char *getName(void) const { return name.c_str(); }$/;"	f	class:gbe::Kernel
getName	./ir/constant.hpp	/^    const std::string& getName(void) const { return name; }$/;"	f	class:gbe::ir::Constant
getName	./ir/function.hpp	/^    const std::string &getName(void) const { return name; }$/;"	f	class:gbe::ir::Function
getNewBti	./llvm/llvm_gen_backend.cpp	/^  unsigned GenWriter::getNewBti(Value *origin, bool force) {$/;"	f	class:gbe::GenWriter
getNextBlock	./ir/function.hpp	/^    BasicBlock *getNextBlock(void) const { return this->nextBlock; }$/;"	f	class:gbe::ir::BasicBlock
getNum	./ir/instruction.cpp	/^        uint32_t getNum(void) const { return this->num; }$/;"	f	class:gbe::ir::internal::PrintfInstruction
getOBlockSize	./backend/gen_encoder.cpp	/^  uint32_t GenEncoder::getOBlockSize(uint32_t oword_size, bool low_half)$/;"	f	class:gbe::GenEncoder
getOclVersion	./backend/program.hpp	/^    INLINE uint32_t getOclVersion(void) const { return this->oclVersion; }$/;"	f	class:gbe::Kernel
getOclVersion	./ir/function.cpp	/^  uint32_t Function::getOclVersion(void) const {$/;"	f	class:gbe::ir::Function
getOclVersion	./ir/unit.hpp	/^    uint32_t getOclVersion() const { return oclVersion; }$/;"	f	class:gbe::ir::Unit
getOffset	./ir/constant.hpp	/^    uint32_t getOffset(void) const { return offset; }$/;"	f	class:gbe::ir::Constant
getOffset	./ir/instruction.cpp	/^      INLINE uint32_t getOffset(void) const { return this->offset; }$/;"	f	class:gbe::ir::internal::IndirectMovInstruction
getOffset	./ir/instruction.cpp	/^      INLINE uint32_t getOffset(void) const { return this->offset; }$/;"	f	class:gbe::ir::internal::RegionInstruction
getOffsetAddress	./llvm/llvm_gen_backend.cpp	/^  ir::Register MemoryInstHelper::getOffsetAddress(ir::Register basePtr, unsigned offset) {$/;"	f	class:gbe::MemoryInstHelper
getOffsetFromImm	./ir/lowering.cpp	/^  INLINE uint64_t getOffsetFromImm(const Immediate &imm) {$/;"	f	namespace:gbe::ir
getOffsetReg	./backend/gen_insn_selection.cpp	/^    INLINE GenRegister getOffsetReg(GenRegister reg, int nr, int subnr, bool isDst = true) {$/;"	f	class:gbe::Selection::Opaque
getOutput	./ir/function.hpp	/^    INLINE Register getOutput(uint32_t ID) const { return outputs[ID]; }$/;"	f	class:gbe::ir::Function
getPHICopy	./llvm/llvm_gen_backend.cpp	/^  INLINE Value *GenWriter::getPHICopy(Value *PHI) {$/;"	f	class:gbe::GenWriter
getPadding	./llvm/llvm_passes.cpp	/^  int32_t getPadding(int32_t offset, int32_t align) {$/;"	f	namespace:gbe
getParameters	./ir/instruction.cpp	/^      INLINE uint32_t getParameters(void) const { return this->parameters; }$/;"	f	class:gbe::ir::internal::SyncInstruction
getParent	./ir/function.hpp	/^    Function &getParent(void) { return fn; }$/;"	f	class:gbe::ir::BasicBlock
getParent	./ir/function.hpp	/^    const Function &getParent(void) const { return fn; }$/;"	f	class:gbe::ir::BasicBlock
getParent	./ir/instruction.hpp	/^    BasicBlock *getParent(void) { return parent; }$/;"	f	class:gbe::ir::Instruction
getParent	./ir/instruction.hpp	/^    const BasicBlock *getParent(void) const { return parent; }$/;"	f	class:gbe::ir::Instruction
getPassName	./llvm/llvm_barrier_nodup.cpp	/^      virtual StringRef getPassName() const$/;"	f	class:gbe::BarrierNodup
getPassName	./llvm/llvm_gen_backend.cpp	/^    virtual const char *getPassName() const { return "Gen Back-End"; }$/;"	f	class:gbe::GenWriter
getPassName	./llvm/llvm_gen_backend.cpp	/^    virtual llvm::StringRef getPassName() const { return "Gen Back-End"; }$/;"	f	class:gbe::GenWriter
getPassName	./llvm/llvm_intrinsic_lowering.cpp	/^      virtual StringRef getPassName() const$/;"	f	class:gbe::InstrinsicLowering
getPassName	./llvm/llvm_loadstore_optimization.cpp	/^    virtual StringRef getPassName() const$/;"	f	class:gbe::GenLoadStoreOptimization
getPassName	./llvm/llvm_passes.cpp	/^    virtual StringRef getPassName() const {$/;"	f	class:gbe::GenRemoveGEPPasss
getPassName	./llvm/llvm_printf_parser.cpp	/^    virtual StringRef getPassName() const$/;"	f	class:gbe::PrintfParser
getPassName	./llvm/llvm_profiling.cpp	/^    virtual StringRef getPassName() const$/;"	f	class:gbe::ProfilingInserter
getPassName	./llvm/llvm_unroll.cpp	/^      virtual StringRef getPassName() const$/;"	f	class:gbe::CustomLoopUnroll
getPayloadType	./ir/register.hpp	/^    INLINE void getPayloadType(Register index, gbe_curbe_type &curbeType, int &subType) const {$/;"	f	class:gbe::ir::RegisterFile
getPayloadType	./ir/register.hpp	/^    INLINE void getPayloadType(gbe_curbe_type &curbeType, int &subType) const {$/;"	f	class:gbe::ir::RegisterData
getPointNum	./ir/instruction.cpp	/^      uint32_t getPointNum(void) const { return this->pointNum; }$/;"	f	class:gbe::ir::internal::CalcTimestampInstruction
getPointerBase	./llvm/llvm_gen_backend.cpp	/^  Value *GenWriter::getPointerBase(Value *ptr) {$/;"	f	class:gbe::GenWriter
getPointerFamily	./ir/context.hpp	/^    INLINE RegisterFamily getPointerFamily(void) const {$/;"	f	class:gbe::ir::Context
getPointerFamily	./ir/function.cpp	/^  RegisterFamily Function::getPointerFamily(void) const {$/;"	f	class:gbe::ir::Function
getPointerFamily	./ir/unit.hpp	/^    INLINE RegisterFamily getPointerFamily(void) const {$/;"	f	class:gbe::ir::Unit
getPointerOperand	./llvm/llvm_loadstore_optimization.cpp	/^  Value *GenLoadStoreOptimization::getPointerOperand(Value *I) {$/;"	f	class:gbe::GenLoadStoreOptimization
getPointerSize	./backend/gen8_context.hpp	/^    virtual uint32_t getPointerSize(void) { return 8; }$/;"	f	class:gbe::Gen8Context
getPointerSize	./backend/gen_context.hpp	/^    virtual uint32_t getPointerSize(void) { return 4; }$/;"	f	class:gbe::GenContext
getPointerSize	./ir/context.hpp	/^    INLINE PointerSize getPointerSize(void) const {$/;"	f	class:gbe::ir::Context
getPointerSize	./ir/unit.hpp	/^    INLINE PointerSize getPointerSize(void) const { return pointerSize; }$/;"	f	class:gbe::ir::Unit
getPredecessorSet	./ir/function.hpp	/^    const BlockSet &getPredecessorSet(void) const { return predecessors; }$/;"	f	class:gbe::ir::BasicBlock
getPredicate	./ir/instruction.hpp	/^    INLINE Register getPredicate(void) const { return this->getSrc(0); }$/;"	f	class:gbe::ir::SelectInstruction
getPredicate	./ir/instruction.hpp	/^    RegisterData getPredicate(void) const {$/;"	f	class:gbe::ir::BranchInstruction
getPredicateIndex	./ir/instruction.hpp	/^    Register getPredicateIndex(void) const {$/;"	f	class:gbe::ir::BranchInstruction
getPrevBlock	./ir/function.hpp	/^    BasicBlock *getPrevBlock(void) const { return this->prevBlock; }$/;"	f	class:gbe::ir::BasicBlock
getPrintfBufBTI	./backend/program.hpp	/^    uint8_t getPrintfBufBTI() const {$/;"	f	class:gbe::Kernel
getPrintfBufferElementSize	./ir/printf.hpp	/^      uint32_t getPrintfBufferElementSize(uint32_t i) {$/;"	f	class:gbe::ir::PrintfSet
getPrintfInfo	./llvm/llvm_gen_backend.cpp	/^    ir::PrintfSet::PrintfFmt* getPrintfInfo(CallInst* inst) {$/;"	f	class:gbe::GenWriter
getPrintfNum	./backend/program.hpp	/^    uint32_t getPrintfNum() const {$/;"	f	class:gbe::Kernel
getPrintfNum	./ir/printf.hpp	/^      uint32_t getPrintfNum(void) const {$/;"	f	class:gbe::ir::PrintfSet
getPrintfSet	./ir/function.hpp	/^    PrintfSet* getPrintfSet(void) const {return printfSet; }$/;"	f	class:gbe::ir::Function
getProfile	./ir/function.hpp	/^    INLINE Profile getProfile(void) const { return profile; }$/;"	f	class:gbe::ir::Function
getProfilingBTI	./backend/program.hpp	/^    uint32_t getProfilingBTI(void) const {$/;"	f	class:gbe::Kernel
getProfilingBufBTI	./backend/program.hpp	/^    uint32_t getProfilingBufBTI() const {$/;"	f	class:gbe::Kernel
getProfilingInfo	./ir/unit.hpp	/^    ProfilingInfo* getProfilingInfo(void) const { return profilingInfo; }$/;"	f	class:gbe::ir::Unit
getProfilingMode	./backend/gen_context.hpp	/^    bool getProfilingMode(void) const { return inProfilingMode; }$/;"	f	class:gbe::GenContext
getProfilingType	./ir/instruction.cpp	/^      uint32_t getProfilingType(void) const { return this->profilingType; }$/;"	f	class:gbe::ir::internal::StoreProfilingInstruction
getProfilingType	./ir/profiling.hpp	/^      uint32_t getProfilingType() const {$/;"	f	class:gbe::ir::ProfilingInfo
getPromotedIntType	./llvm/PromoteIntegers.cpp	/^static Type *getPromotedIntType(IntegerType *Ty) {$/;"	f	file:
getPromotedType	./llvm/PromoteIntegers.cpp	/^static Type *getPromotedType(Type *Ty) {$/;"	f	file:
getPushLocation	./ir/function.hpp	/^    INLINE const PushLocation &getPushLocation(Register reg) {$/;"	f	class:gbe::ir::Function
getPushLocation	./ir/function.hpp	/^    INLINE const PushLocation *getPushLocation(Register reg) const {$/;"	f	class:gbe::ir::Function
getPushLocation	./ir/value.hpp	/^    INLINE const PushLocation *getPushLocation(void) const {$/;"	f	class:gbe::ir::ValueDef
getPushMap	./ir/function.hpp	/^    const PushMap &getPushMap(void) const { return this->pushMap; }$/;"	f	class:gbe::ir::Function
getRealValue	./llvm/llvm_gen_backend.cpp	/^    void getRealValue(Value* &value, uint32_t& index) {$/;"	f	class:gbe::RegisterTranslator
getRegAttrib	./backend/gen_reg_allocation.cpp	/^    INLINE void getRegAttrib(ir::Register reg, uint32_t &regSize, ir::RegisterFamily *regFamily = NULL) const {$/;"	f	class:gbe::GenRegAllocator::Opaque
getRegDef	./ir/value.cpp	/^  const DefSet *FunctionDAG::getRegDef(const Register &reg) const {$/;"	f	class:gbe::ir::FunctionDAG
getRegNum	./backend/gen_insn_selection.cpp	/^    INLINE uint32_t getRegNum(ir::ARFRegister arf) const {$/;"	f	class:gbe::ReadARFInstructionPattern
getRegNum	./backend/gen_insn_selection.cpp	/^    INLINE uint32_t getRegNum(void) const { return file.regNum(); }$/;"	f	class:gbe::Selection::Opaque
getRegNum	./backend/gen_insn_selection.cpp	/^  uint32_t Selection::getRegNum(void) const {$/;"	f	class:gbe::Selection
getRegPayloadType	./backend/context.hpp	/^    INLINE void getRegPayloadType(ir::Register reg, gbe_curbe_type &curbeType, int &subType) const {$/;"	f	class:gbe::Context
getRegPayloadType	./ir/function.hpp	/^    INLINE void getRegPayloadType(Register reg, gbe_curbe_type &curbeType, int &subType) const {$/;"	f	class:gbe::ir::Function
getRegSize	./backend/gen_reg_allocation.cpp	/^  uint32_t GenRegAllocator::getRegSize(ir::Register reg) {$/;"	f	class:gbe::GenRegAllocator
getRegUDBBs	./ir/value.cpp	/^  void FunctionDAG::getRegUDBBs(Register r, set<const BasicBlock *> &BBs) const{$/;"	f	class:gbe::ir::FunctionDAG
getRegUse	./ir/value.cpp	/^  const UseSet *FunctionDAG::getRegUse(const Register &reg) const {$/;"	f	class:gbe::ir::FunctionDAG
getRegister	./ir/function.cpp	/^  Register PushLocation::getRegister(void) const {$/;"	f	class:gbe::ir::PushLocation
getRegister	./ir/function.hpp	/^    INLINE Register getRegister(Tuple ID, uint32_t which) const {$/;"	f	class:gbe::ir::Function
getRegister	./ir/value.hpp	/^    INLINE Register getRegister(void) const {$/;"	f	class:gbe::ir::ValueDef
getRegister	./ir/value.hpp	/^    Register getRegister(void) const { return insn->getSrc(srcID); }$/;"	f	class:gbe::ir::ValueUse
getRegister	./llvm/llvm_gen_backend.cpp	/^  ir::Register GenWriter::getRegister(Value *value, uint32_t elemID) {$/;"	f	class:gbe::GenWriter
getRegisterData	./backend/gen_insn_selection.cpp	/^    INLINE ir::RegisterData getRegisterData(ir::Register reg) const {$/;"	f	class:gbe::Selection::Opaque
getRegisterData	./backend/gen_insn_selection.cpp	/^  ir::RegisterData Selection::getRegisterData(ir::Register reg) const {$/;"	f	class:gbe::Selection
getRegisterData	./ir/function.hpp	/^    INLINE RegisterData getRegisterData(Register reg) const { return file.get(reg); }$/;"	f	class:gbe::ir::Function
getRegisterFamily	./backend/gen_insn_selection.cpp	/^    INLINE ir::RegisterFamily getRegisterFamily(ir::Register reg) const {$/;"	f	class:gbe::Selection::Opaque
getRegisterFamily	./backend/gen_insn_selection.cpp	/^  ir::RegisterFamily Selection::getRegisterFamily(ir::Register reg) const {$/;"	f	class:gbe::Selection
getRegisterFamily	./ir/function.hpp	/^    INLINE RegisterFamily getRegisterFamily(Register reg) const {$/;"	f	class:gbe::ir::Function
getRegisterFile	./ir/function.hpp	/^    INLINE const RegisterFile &getRegisterFile(void) const { return file; }$/;"	f	class:gbe::ir::Function
getRegisterFromImmediate	./backend/gen_insn_selection.cpp	/^  GenRegister getRegisterFromImmediate(ir::Immediate imm, ir::Type type, bool negate = false)$/;"	f	namespace:gbe
getRelocTable	./ir/unit.hpp	/^    RelocTable& getRelocTable(void)   { return relocTable; }$/;"	f	class:gbe::ir::Unit
getRelocTable	./ir/unit.hpp	/^    const RelocTable& getRelocTable(void) const  { return relocTable; }$/;"	f	class:gbe::ir::Unit
getSIMDWidth	./backend/program.hpp	/^    INLINE uint32_t getSIMDWidth(void) const { return this->simdWidth; }$/;"	f	class:gbe::Kernel
getSLMSize	./backend/program.hpp	/^    INLINE uint32_t getSLMSize(void) const { return this->slmSize; }$/;"	f	class:gbe::Kernel
getSLMSize	./ir/function.hpp	/^    INLINE uint32_t getSLMSize(void) const { return this->slmSize; }$/;"	f	class:gbe::ir::Function
getSamplerData	./backend/program.hpp	/^    void getSamplerData(uint32_t *samplers) const { samplerSet->getData(samplers); }$/;"	f	class:gbe::Kernel
getSamplerIndex	./ir/instruction.cpp	/^      INLINE uint8_t getSamplerIndex(void) const { return this->samplerIdx; }$/;"	f	class:gbe::ir::internal::SampleInstruction
getSamplerOffset	./ir/instruction.cpp	/^      INLINE uint8_t getSamplerOffset(void) const { return this->samplerOffset; }$/;"	f	class:gbe::ir::internal::SampleInstruction
getSamplerSet	./ir/function.hpp	/^    SamplerSet* getSamplerSet(void) const {return samplerSet; }$/;"	f	class:gbe::ir::Function
getSamplerSize	./backend/program.hpp	/^    size_t getSamplerSize(void) const { return (samplerSet == NULL ? 0 : samplerSet->getDataSize()); }$/;"	f	class:gbe::Kernel
getScalar	./llvm/llvm_gen_backend.cpp	/^    ir::Register getScalar(Value *value, uint32_t index = 0u) {$/;"	f	class:gbe::RegisterTranslator
getScratchSize	./backend/gen75_context.hpp	/^    virtual uint32_t getScratchSize(void) {$/;"	f	class:gbe::Gen75Context
getScratchSize	./backend/gen8_context.hpp	/^    virtual uint32_t getScratchSize(void) {$/;"	f	class:gbe::Gen8Context
getScratchSize	./backend/gen_context.hpp	/^    virtual uint32_t getScratchSize(void) { return GEN7_SCRATCH_SIZE; }$/;"	f	class:gbe::GenContext
getScratchSize	./backend/program.hpp	/^    INLINE uint32_t getScratchSize(void) const { return this->scratchSize; }$/;"	f	class:gbe::Kernel
getSeconds	./sys/platform.cpp	/^  double getSeconds() {$/;"	f	namespace:gbe
getSequentialData	./llvm/llvm_gen_backend.cpp	/^  void getSequentialData(const ConstantDataSequential *cda, void *ptr, uint32_t &offset) {$/;"	f	namespace:gbe
getSignExtend	./llvm/PromoteIntegers.cpp	/^static Value *getSignExtend(Value *Operand, Value *OrigOperand,$/;"	f	file:
getSimdWidth	./backend/gen_context.hpp	/^    INLINE uint32_t getSimdWidth(void) const { return simdWidth; }$/;"	f	class:gbe::GenContext
getSimdWidth	./ir/function.hpp	/^    uint32_t getSimdWidth(void) const { return simdWidth; }$/;"	f	class:gbe::ir::Function
getSinglePointerOrigin	./llvm/llvm_gen_backend.cpp	/^  Value *GenWriter::getSinglePointerOrigin(Value *ptr) {$/;"	f	class:gbe::GenWriter
getSize	./ir/constant.hpp	/^    uint32_t getSize (void) const { return size; }$/;"	f	class:gbe::ir::Constant
getSlmAddr	./ir/instruction.cpp	/^        uint32_t getSlmAddr(void) const { return this->slmAddr; }$/;"	f	class:gbe::ir::internal::WorkGroupInstruction
getSlowByteGather	./backend/gen_insn_selection.cpp	/^    bool getSlowByteGather() { return slowByteGather; }$/;"	f	class:gbe::Selection::Opaque
getSpecialReg	./ir/value.hpp	/^    INLINE Register getSpecialReg(void) const {$/;"	f	class:gbe::ir::ValueDef
getSpecialRegNum	./ir/function.cpp	/^  uint32_t Function::getSpecialRegNum(void) const {$/;"	f	class:gbe::ir::Function
getSpillCost	./backend/gen_reg_allocation.cpp	/^  INLINE float getSpillCost(const GenRegInterval &v) {$/;"	f	namespace:gbe
getSplitedValue	./llvm/ExpandLargeIntegers.cpp	/^static void getSplitedValue(ConversionState &State, Value *Val, SmallVector<Value *, 16> &Result) {$/;"	f	file:
getSrc	./ir/instruction.cpp	/^        INLINE Register getSrc(const Function &fn, unsigned id) const {$/;"	f	class:gbe::ir::internal::LoadInstruction
getSrc	./ir/instruction.cpp	/^        INLINE Register getSrc(const Function &fn, unsigned id) const {$/;"	f	class:gbe::ir::internal::StoreInstruction
getSrc	./ir/instruction.cpp	/^      INLINE Register getSrc(const Function &fn, uint32_t ID) const {$/;"	f	class:gbe::ir::internal::AtomicInstruction
getSrc	./ir/instruction.cpp	/^      INLINE Register getSrc(const Function &fn, uint32_t ID) const {$/;"	f	class:gbe::ir::internal::BranchInstruction
getSrc	./ir/instruction.cpp	/^      INLINE Register getSrc(const Function &fn, uint32_t ID) const {$/;"	f	struct:gbe::ir::internal::NSrcPolicy
getSrc	./ir/instruction.cpp	/^      INLINE Register getSrc(const Function &fn, uint32_t ID) const {$/;"	f	struct:gbe::ir::internal::TupleSrcPolicy
getSrcData	./ir/instruction.cpp	/^  RegisterData Instruction::getSrcData(uint32_t ID) const {$/;"	f	class:gbe::ir::Instruction
getSrcGenRegImm	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::getSrcGenRegImm(SelectionDAG &dag, GenRegister &src0,$/;"	f	class:gbe::Selection::Opaque
getSrcGenRegImm	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::getSrcGenRegImm(SelectionDAG &dag,$/;"	f	class:gbe::Selection::Opaque
getSrcID	./ir/value.hpp	/^    uint32_t getSrcID(void) const { return srcID; }$/;"	f	class:gbe::ir::ValueUse
getSrcNum	./ir/instruction.cpp	/^        INLINE unsigned getSrcNum()        const { return getBaseSrcNum() + valueNum; }$/;"	f	class:gbe::ir::internal::StoreInstruction
getSrcNum	./ir/instruction.cpp	/^        INLINE unsigned getSrcNum() const { return getBaseSrcNum(); }$/;"	f	class:gbe::ir::internal::LoadInstruction
getSrcNum	./ir/instruction.cpp	/^      INLINE uint32_t getSrcNum(void) const { return hasPredicate ? 1 : 0; }$/;"	f	class:gbe::ir::internal::BranchInstruction
getSrcNum	./ir/instruction.cpp	/^      INLINE uint32_t getSrcNum(void) const { return srcNum; }$/;"	f	class:gbe::ir::internal::AtomicInstruction
getSrcNum	./ir/instruction.cpp	/^      INLINE uint32_t getSrcNum(void) const { return srcNum; }$/;"	f	struct:gbe::ir::internal::NSrcPolicy
getSrcNum	./ir/instruction.cpp	/^      INLINE uint32_t getSrcNum(void) const {$/;"	f	struct:gbe::ir::internal::TupleSrcPolicy
getSrcType	./ir/instruction.cpp	/^      INLINE Type getSrcType(void) const { return (Type)this->srcType; }$/;"	f	class:gbe::ir::internal::TypedWriteInstruction
getSrcType	./ir/instruction.cpp	/^      INLINE Type getSrcType(void) const { return TYPE_U32; }$/;"	f	class:gbe::ir::internal::VmeInstruction
getSrcType	./ir/instruction.cpp	/^      INLINE Type getSrcType(void) const { return getType((RegisterFamily)srcFamily); }$/;"	f	class:gbe::ir::internal::BitCastInstruction
getSrcType	./ir/instruction.cpp	/^      INLINE Type getSrcType(void) const { return this->srcIsFloat ? TYPE_FLOAT : TYPE_S32; }$/;"	f	class:gbe::ir::internal::SampleInstruction
getSrcType	./ir/instruction.cpp	/^      INLINE Type getSrcType(void) const { return this->srcType; }$/;"	f	class:gbe::ir::internal::ConvertInstruction
getStackSize	./backend/program.hpp	/^    INLINE uint32_t getStackSize(void) const { return this->stackSize; }$/;"	f	class:gbe::Kernel
getStackSize	./ir/function.hpp	/^    INLINE uint32_t getStackSize(void) const { return this->stackSize; }$/;"	f	class:gbe::ir::Function
getStructureBasicBlocks	./ir/structurizer.cpp	/^  std::set<BasicBlock *> CFGStructurizer::getStructureBasicBlocks(Block *block)$/;"	f	class:gbe::ir::CFGStructurizer
getStructureBasicBlocksIndex	./ir/structurizer.cpp	/^  std::set<int> CFGStructurizer::getStructureBasicBlocksIndex(Block* block, std::vector<BasicBlock *> &bbs)$/;"	f	class:gbe::ir::CFGStructurizer
getStructureSequence	./ir/structurizer.cpp	/^  void CFGStructurizer::getStructureSequence(Block *block, std::vector<BasicBlock*> &seq)$/;"	f	class:gbe::ir::CFGStructurizer
getSuccessorSet	./ir/function.hpp	/^    const BlockSet &getSuccessorSet(void) const { return successors; }$/;"	f	class:gbe::ir::BasicBlock
getSurfaceBaseReg	./backend/context.cpp	/^  ir::Register Context::getSurfaceBaseReg(unsigned char bti) {$/;"	f	class:gbe::Context
getSurfaceBaseReg	./ir/function.cpp	/^  Register Function::getSurfaceBaseReg(uint8_t bti) const {$/;"	f	class:gbe::ir::Function
getSurfaceIndex	./ir/instruction.cpp	/^      unsigned     getSurfaceIndex()   const { assert(AM != AM_DynamicBti); return SurfaceIndex; }$/;"	f	class:gbe::ir::internal::MemInstruction
getThroughputGen7	./backend/gen_insn_scheduling.cpp	/^  static uint32_t getThroughputGen7(const SelectionInstruction &insn, bool isSIMD8) {$/;"	f	namespace:gbe
getTimestamptType	./ir/instruction.cpp	/^      uint32_t getTimestamptType(void) const { return this->timestampType; }$/;"	f	class:gbe::ir::internal::CalcTimestampInstruction
getTopBlock	./ir/function.cpp	/^  BasicBlock &Function::getTopBlock(void) const {$/;"	f	class:gbe::ir::Function
getType	./ir/function.hpp	/^    INLINE uint8_t getType(Tuple ID, uint32_t which) const {$/;"	f	class:gbe::ir::Function
getType	./ir/immediate.hpp	/^    INLINE Type getType(void) const {$/;"	f	class:gbe::ir::Immediate
getType	./ir/instruction.cpp	/^        INLINE Type getType(void) const { return this->type; }$/;"	f	class:gbe::ir::internal::SubGroupInstruction
getType	./ir/instruction.cpp	/^        INLINE Type getType(void) const { return this->type; }$/;"	f	class:gbe::ir::internal::WorkGroupInstruction
getType	./ir/instruction.cpp	/^        Type getType(const Function& fn, uint32_t ID) const {$/;"	f	class:gbe::ir::internal::PrintfInstruction
getType	./ir/instruction.cpp	/^      INLINE Type getType(void) const { return this->type; }$/;"	f	class:gbe::ir::internal::IndirectMovInstruction
getType	./ir/instruction.cpp	/^      INLINE Type getType(void) const { return this->type; }$/;"	f	class:gbe::ir::internal::LoadImmInstruction
getType	./ir/instruction.cpp	/^      INLINE Type getType(void) const { return this->type; }$/;"	f	class:gbe::ir::internal::MediaBlockReadInstruction
getType	./ir/instruction.cpp	/^      INLINE Type getType(void) const { return this->type; }$/;"	f	class:gbe::ir::internal::MediaBlockWriteInstruction
getType	./ir/instruction.cpp	/^      INLINE Type getType(void) const { return this->type; }$/;"	f	class:gbe::ir::internal::NaryInstruction
getType	./ir/instruction.cpp	/^      INLINE Type getType(void) const { return this->type; }$/;"	f	class:gbe::ir::internal::ReadARFInstruction
getType	./ir/instruction.cpp	/^      INLINE Type getType(void) const { return this->type; }$/;"	f	class:gbe::ir::internal::SelectInstruction
getType	./ir/instruction.cpp	/^      Type getType(void) const { return type; }$/;"	f	class:gbe::ir::internal::TernaryInstruction
getType	./ir/instruction.hpp	/^    Type getType(uint32_t ID) const { return this->getType(this->getFunction(), ID); };$/;"	f	class:gbe::ir::PrintfInstruction
getType	./ir/register.hpp	/^    INLINE uint8_t getType(Tuple index, uint32_t which) const {$/;"	f	class:gbe::ir::RegisterFile
getType	./ir/type.hpp	/^  INLINE Type getType(RegisterFamily family) {$/;"	f	namespace:gbe::ir
getType	./ir/value.hpp	/^    INLINE Type getType(void) const { return type; }$/;"	f	class:gbe::ir::ValueDef
getType	./llvm/llvm_gen_backend.cpp	/^  static ir::Type getType(ir::Context &ctx, const Type *type)$/;"	f	namespace:gbe
getTypeBitSize	./llvm/llvm_passes.cpp	/^  uint32_t getTypeBitSize(const ir::Unit &unit, Type* Ty)$/;"	f	namespace:gbe
getTypeByteSize	./llvm/llvm_passes.cpp	/^  uint32_t getTypeByteSize(const ir::Unit &unit, Type* Ty)$/;"	f	namespace:gbe
getTypeName	./llvm/llvm_gen_backend.cpp	/^  static std::string getTypeName(ir::Context &ctx, const Type *type, int sign)$/;"	f	namespace:gbe
getTypeSize	./ir/immediate.hpp	/^    uint32_t getTypeSize(void) const {$/;"	f	class:gbe::ir::Immediate
getTypeSize	./llvm/llvm_gen_backend.cpp	/^  static uint32_t getTypeSize(Module* M, const ir::Unit &unit, std::string& name) {$/;"	f	namespace:gbe
getUnit	./ir/context.hpp	/^    INLINE Unit &getUnit(void) { return unit; }$/;"	f	class:gbe::ir::Context
getUnsignedIntegerValue	./ir/immediate.hpp	/^    INLINE uint64_t getUnsignedIntegerValue(void) const {$/;"	f	class:gbe::ir::Immediate
getUnsignedType	./llvm/llvm_gen_backend.cpp	/^  static ir::Type getUnsignedType(ir::Context &ctx, const Type *type)$/;"	f	namespace:gbe
getUse	./ir/value.cpp	/^  const UseSet &FunctionDAG::getUse(const FunctionArgument *arg) const {$/;"	f	class:gbe::ir::FunctionDAG
getUse	./ir/value.cpp	/^  const UseSet &FunctionDAG::getUse(const Instruction *insn, uint32_t dstID) const {$/;"	f	class:gbe::ir::FunctionDAG
getUse	./ir/value.cpp	/^  const UseSet &FunctionDAG::getUse(const Register &reg) const {$/;"	f	class:gbe::ir::FunctionDAG
getUse	./ir/value.cpp	/^  const UseSet &FunctionDAG::getUse(const ValueDef &def) const {$/;"	f	class:gbe::ir::FunctionDAG
getUseAddress	./ir/value.cpp	/^  const ValueUse *FunctionDAG::getUseAddress(const Instruction *insn, uint32_t srcID) const {$/;"	f	class:gbe::ir::FunctionDAG
getUseDeviceEnqueue	./backend/program.hpp	/^    INLINE bool getUseDeviceEnqueue(void) const { return this->useDeviceEnqueue; }$/;"	f	class:gbe::Kernel
getUseDeviceEnqueue	./ir/function.hpp	/^    INLINE bool getUseDeviceEnqueue(void) const { return this->useDeviceEnqueue; }$/;"	f	class:gbe::ir::Function
getUseSLM	./backend/program.hpp	/^    INLINE bool getUseSLM(void) const { return this->useSLM; }$/;"	f	class:gbe::Kernel
getUseSLM	./ir/function.hpp	/^    INLINE bool getUseSLM(void) const { return this->useSLM; }$/;"	f	class:gbe::ir::Function
getVal	./ir/half.hpp	/^      uint16_t getVal(void) { return val; };$/;"	f	class:gbe::ir::half
getValid	./ir/unit.hpp	/^    bool getValid() { return valid; }$/;"	f	class:gbe::ir::Unit
getValue	./ir/instruction.cpp	/^        INLINE Register getValue(const Function &fn, unsigned id) const {$/;"	f	class:gbe::ir::internal::LoadInstruction
getValue	./ir/instruction.cpp	/^        INLINE Register getValue(const Function &fn, unsigned id) const {$/;"	f	class:gbe::ir::internal::StoreInstruction
getValue	./ir/instruction.hpp	/^    INLINE Register getValue(uint32_t valueID) const {$/;"	f	class:gbe::ir::LoadInstruction
getValue	./ir/instruction.hpp	/^    INLINE Register getValue(uint32_t valueID) const {$/;"	f	class:gbe::ir::StoreInstruction
getValueNum	./ir/instruction.cpp	/^        INLINE uint32_t getValueNum(void) const { return valueNum; }$/;"	f	class:gbe::ir::internal::LoadInstruction
getValueNum	./ir/instruction.cpp	/^        INLINE unsigned getValueNum()      const { return valueNum; }$/;"	f	class:gbe::ir::internal::StoreInstruction
getValueTuple	./llvm/llvm_gen_backend.cpp	/^  ir::Tuple MemoryInstHelper::getValueTuple(llvm::Value *llvmValues, llvm::Type *elemType, unsigned start, unsigned elemNum) {$/;"	f	class:gbe::MemoryInstHelper
getValueType	./ir/instruction.cpp	/^      Type         getValueType()      const { return type; }$/;"	f	class:gbe::ir::internal::MemInstruction
getValueType	./llvm/llvm_loadstore_optimization.cpp	/^  Type *GenLoadStoreOptimization::getValueType(Value *insn) {$/;"	f	class:gbe::GenLoadStoreOptimization
getVectorInfo	./llvm/llvm_gen_backend.cpp	/^  static ir::Type getVectorInfo(ir::Context &ctx, Value *value, uint32_t &elemNum, bool useUnsigned = false)$/;"	f	namespace:gbe
getVectorMap	./llvm/ExpandLargeIntegers.cpp	/^  VectorElement &getVectorMap(Value *child) {$/;"	f	class:__anon178::ConversionState
getVectorNum	./backend/gen_insn_selection.cpp	/^    INLINE uint32_t getVectorNum(void) const { return this->vectorNum; }$/;"	f	class:gbe::Selection::Opaque
getVectorNum	./backend/gen_insn_selection.cpp	/^  uint32_t Selection::getVectorNum(void) const {$/;"	f	class:gbe::Selection
getVectorSize	./ir/instruction.cpp	/^      INLINE uint8_t getVectorSize(void) const { return this->dstNum; }$/;"	f	class:gbe::ir::internal::MediaBlockReadInstruction
getVectorSize	./ir/instruction.cpp	/^      INLINE uint8_t getVectorSize(void) const { return this->vec_size; }$/;"	f	class:gbe::ir::internal::MediaBlockWriteInstruction
getWorkGroupOpcode	./ir/instruction.cpp	/^        INLINE WorkGroupOps getWorkGroupOpcode(void) const { return this->workGroupOp; }$/;"	f	class:gbe::ir::internal::SubGroupInstruction
getWorkGroupOpcode	./ir/instruction.cpp	/^        INLINE WorkGroupOps getWorkGroupOpcode(void) const { return this->workGroupOp; }$/;"	f	class:gbe::ir::internal::WorkGroupInstruction
get_code	./gbe_bin_generater.cpp	/^    const char* get_code (void) {$/;"	f	class:program_build_instance
get_program_path	./gbe_bin_generater.cpp	/^    const string& get_program_path (void) {$/;"	f	class:program_build_instance
get_size	./gbe_bin_generater.cpp	/^    int get_size (void) {$/;"	f	class:program_build_instance
getbti	./backend/gen_insn_selection.hpp	/^    INLINE uint32_t getbti() const {$/;"	f	class:gbe::SelectionInstruction
gettidMapSLM	./ir/function.hpp	/^    int32_t gettidMapSLM(void) const { return tidMapSLM; }$/;"	f	class:gbe::ir::Function
getwgBroadcastSLM	./ir/function.hpp	/^    int32_t getwgBroadcastSLM(void) const { return wgBroadcastSLM; }$/;"	f	class:gbe::ir::Function
gidXEnd	./ir/profiling.hpp	/^        uint32_t gidXEnd;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
gidXStart	./ir/profiling.hpp	/^        uint32_t gidXStart;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
gidYEnd	./ir/profiling.hpp	/^        uint32_t gidYEnd;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
gidYStart	./ir/profiling.hpp	/^        uint32_t gidYStart;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
gidZEnd	./ir/profiling.hpp	/^        uint32_t gidZEnd;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
gidZStart	./ir/profiling.hpp	/^        uint32_t gidZStart;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
global	./libocl/include/ocl_types.h	66;"	d
globalPointer	./llvm/llvm_gen_backend.cpp	/^    map<const Value*, int> globalPointer;$/;"	m	class:gbe::GenWriter	file:
global_work_offset	./libocl/include/ocl_enqueue.h	/^  int global_work_offset[3];$/;"	m	struct:ndrange_info_t
global_work_size	./libocl/include/ocl_enqueue.h	/^  int global_work_size[3];$/;"	m	struct:ndrange_info_t
goffset0	./ir/profile.hpp	/^    static const Register goffset0 = Register(18); \/\/ get_global_offset(0)$/;"	m	namespace:gbe::ir::ocl
goffset1	./ir/profile.hpp	/^    static const Register goffset1 = Register(19); \/\/ get_global_offset(1)$/;"	m	namespace:gbe::ir::ocl
goffset2	./ir/profile.hpp	/^    static const Register goffset2 = Register(20); \/\/ get_global_offset(2)$/;"	m	namespace:gbe::ir::ocl
grfBooleans	./backend/gen_reg_allocation.cpp	/^    set<ir::Register> grfBooleans;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
grfNum	./backend/gen_insn_scheduling.cpp	/^    uint32_t grfNum;$/;"	m	struct:gbe::DependencyTracker	file:
grfOffset	./backend/gen_register.hpp	/^    static INLINE uint32_t grfOffset(GenRegister reg) {$/;"	f	class:gbe::GenRegister
groupid0	./ir/profile.hpp	/^    static const Register groupid0 = Register(3);  \/\/ get_group_id(0)$/;"	m	namespace:gbe::ir::ocl
groupid1	./ir/profile.hpp	/^    static const Register groupid1 = Register(4);  \/\/ get_group_id(1)$/;"	m	namespace:gbe::ir::ocl
groupid2	./ir/profile.hpp	/^    static const Register groupid2 = Register(5);  \/\/ get_group_id(2)$/;"	m	namespace:gbe::ir::ocl
gsize0	./ir/profile.hpp	/^    static const Register gsize0 = Register(15);   \/\/ get_global_size(0)$/;"	m	namespace:gbe::ir::ocl
gsize1	./ir/profile.hpp	/^    static const Register gsize1 = Register(16);   \/\/ get_global_size(1)$/;"	m	namespace:gbe::ir::ocl
gsize2	./ir/profile.hpp	/^    static const Register gsize2 = Register(17);   \/\/ get_global_size(2)$/;"	m	namespace:gbe::ir::ocl
h2	./backend/gen_register.hpp	/^    static INLINE GenRegister h2(GenRegister reg) {$/;"	f	class:gbe::GenRegister
hSlot	./backend/program.h	/^    int32_t hSlot;$/;"	m	struct:ImageInfo
half	./ir/half.hpp	/^      half(const half& other) { this->val = other.val; };$/;"	f	class:gbe::ir::half
half	./ir/half.hpp	/^      half(uint16_t v) : val(v) {};$/;"	f	class:gbe::ir::half
half	./ir/half.hpp	/^  class half$/;"	c	namespace:gbe::ir
half	./libocl/include/ocl_types.h	/^DEF(half);$/;"	v
half_native_math_gentype	./libocl/script/gen_vector.py	/^half_native_math_gentype = ["half_native_math_gentype", gen_vector_type(["float"])]$/;"	v
half_slice_id	./ir/profiling.hpp	/^            uint16_t half_slice_id:1;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151::GenInfo::Gen7Info
handleDouble	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::handleDouble(GenEncoder *p, uint32_t opcode, GenRegister dst, GenRegister src0, GenRegister src1)$/;"	f	class:gbe::Gen8Encoder
handleDouble	./backend/gen_encoder.cpp	/^  void GenEncoder::handleDouble(GenEncoder *p, uint32_t opcode, GenRegister dst, GenRegister src0, GenRegister src1) {$/;"	f	class:gbe::GenEncoder
handleElseBlock	./ir/structurizer.cpp	/^  void CFGStructurizer::handleElseBlock(Block * block, LabelIndex& elselabel, LabelIndex& endiflabel)$/;"	f	class:gbe::ir::CFGStructurizer
handleIfBlock	./ir/structurizer.cpp	/^  void CFGStructurizer::handleIfBlock(Block *block, LabelIndex& matchingEndifLabel, LabelIndex& matchingElseLabel)$/;"	f	class:gbe::ir::CFGStructurizer
handleParentLoops	./llvm/llvm_unroll.cpp	/^      bool handleParentLoops(Loop *L, LPPassManager &LPM) {$/;"	f	class:gbe::CustomLoopUnroll
handleSLM	./backend/context.cpp	/^  void Context::handleSLM(void) {$/;"	f	class:gbe::Context
handleSelfLoopBlock	./ir/structurizer.cpp	/^  void CFGStructurizer::handleSelfLoopBlock(Block *loopblock, LabelIndex& whileLabel)$/;"	f	class:gbe::ir::CFGStructurizer
handleStoreLoadAddress	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::handleStoreLoadAddress(Function &F) {$/;"	f	class:gbe::GenWriter
handleStructuredBlocks	./ir/structurizer.cpp	/^  void CFGStructurizer::handleStructuredBlocks()$/;"	f	class:gbe::ir::CFGStructurizer
handleThenBlock	./ir/structurizer.cpp	/^  void CFGStructurizer::handleThenBlock(Block * block, LabelIndex& endiflabel)$/;"	f	class:gbe::ir::CFGStructurizer
handleThenBlock2	./ir/structurizer.cpp	/^  void CFGStructurizer::handleThenBlock2(Block *block, Block *elseblock, LabelIndex elseBBLabel)$/;"	f	class:gbe::ir::CFGStructurizer
has32X32Mul	./backend/gen_insn_selection.cpp	/^    bool has32X32Mul() const { return bHas32X32Mul; }$/;"	f	class:gbe::Selection::Opaque
hasBarrier	./backend/gen_insn_selection.hpp	/^    bool hasBarrier;$/;"	m	class:gbe::SelectionBlock
hasBarrier	./ir/structurizer.hpp	/^    bool& hasBarrier() { return has_barrier; }$/;"	f	class:gbe::ir::Block
hasBranch	./backend/gen_insn_selection.hpp	/^    bool hasBranch;$/;"	m	class:gbe::SelectionBlock
hasConverted	./llvm/ExpandLargeIntegers.cpp	/^  bool hasConverted(Value *Val) {$/;"	f	class:__anon178::ConversionState
hasDoubleType	./backend/gen_insn_selection.cpp	/^    bool hasDoubleType() const { return bHasDoubleType; }$/;"	f	class:gbe::Selection::Opaque
hasExtraBra	./ir/function.hpp	/^    bool hasExtraBra;$/;"	m	class:gbe::ir::BasicBlock
hasExtraBtiReg	./ir/instruction.cpp	/^      bool         hasExtraBtiReg()   const { return AM == AM_DynamicBti; }$/;"	f	class:gbe::ir::internal::MemInstruction
hasHalfType	./backend/gen_insn_selection.cpp	/^    bool hasHalfType() const { return bHasHalfType; }$/;"	f	class:gbe::Selection::Opaque
hasJIP	./backend/context.hpp	/^    INLINE bool hasJIP(const ir::Instruction *insn) const {$/;"	f	class:gbe::Context
hasLongRegRestrict	./backend/gen_insn_selection.cpp	/^    bool hasLongRegRestrict() { return bLongRegRestrict; }$/;"	f	class:gbe::Selection::Opaque
hasLongType	./backend/gen_insn_selection.cpp	/^    bool hasLongType() const { return bHasLongType; }$/;"	f	class:gbe::Selection::Opaque
hasPrivateLoadStore	./llvm/llvm_unroll.cpp	/^      static bool hasPrivateLoadStore(Loop *L) {$/;"	f	class:gbe::CustomLoopUnroll
hasQWord	./backend/gen_insn_selection.cpp	/^  bool Selection::Opaque::hasQWord(const ir::Instruction &insn) {$/;"	f	class:gbe::Selection::Opaque
hasSends	./backend/gen_insn_selection.cpp	/^    bool hasSends() const { return bHasSends; }$/;"	f	class:gbe::Selection::Opaque
hasSideEffect	./ir/instruction.cpp	/^  bool Instruction::hasSideEffect(void) const {$/;"	f	class:gbe::ir::Instruction
has_barrier	./ir/structurizer.hpp	/^    bool has_barrier;$/;"	m	class:gbe::ir::Block
has_errors	./llvm/llvm_gen_backend.cpp	/^    bool has_errors;$/;"	m	class:gbe::GenWriter	file:
has_errors	./llvm/llvm_to_gen.cpp	/^    bool has_errors(){return _has_errors;}$/;"	f	class:gbe::gbeDiagnosticContext
head	./backend/context.cpp	/^    Block *head;$/;"	m	class:gbe::SimpleAllocator	file:
header	./backend/gen7_instruction.hpp	/^        uint32_t header:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon63
header	./backend/gen7_instruction.hpp	/^        uint32_t header:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon64
header	./backend/gen7_instruction.hpp	/^    } header;$/;"	m	struct:Gen7NativeInstruction::__anon42	typeref:struct:Gen7NativeInstruction::__anon42::__anon43
header	./backend/gen8_instruction.hpp	/^        uint32_t header:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon128
header	./backend/gen8_instruction.hpp	/^        uint32_t header:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon129
header	./backend/gen8_instruction.hpp	/^    } header;$/;"	m	struct:Gen8NativeInstruction::__anon102	typeref:struct:Gen8NativeInstruction::__anon102::__anon103
header	./backend/gen9_instruction.hpp	/^    } header;$/;"	m	struct:Gen9NativeInstruction::__anon1	typeref:struct:Gen9NativeInstruction::__anon1::__anon2
header	./backend/gen_defs.hpp	/^        uint32_t header:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon22
header	./backend/gen_defs.hpp	/^        uint32_t header:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon23
header	./backend/gen_defs.hpp	/^    } header;$/;"	m	struct:GenNativeInstruction::__anon16	typeref:struct:GenNativeInstruction::__anon16::__anon17
headerFileName	./libocl/script/gen_vector.py	/^headerFileName = sys.argv[2]$/;"	v
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon62
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon65
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon66
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon67
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon68
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon69
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon70
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon71
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon72
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon73
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon74
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon75
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon76
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon78
header_present	./backend/gen7_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon80
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon127
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon130
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon131
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon132
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon133
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon134
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon135
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon136
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon137
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon138
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon140
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon141
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon142
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon143
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon146
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon147
header_present	./backend/gen8_instruction.hpp	/^        uint32_t header_present:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon149
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon21
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon24
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon25
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon26
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon27
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon28
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon29
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon30
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon31
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon32
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon33
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon34
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon35
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon36
header_present	./backend/gen_defs.hpp	/^        uint32_t header_present:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon38
high	./backend/gen_defs.hpp	/^    struct GenInstruction high;$/;"	m	struct:GenNativeInstruction::__anon15	typeref:struct:GenNativeInstruction::__anon15::GenInstruction
high	./backend/gen_defs.hpp	/^  uint32_t high;$/;"	m	struct:GenInstruction
horiz_stride	./backend/gen/gen_mesa_disasm.c	/^static const char *horiz_stride[4] = {$/;"	v	file:
hstride	./backend/gen_insn_selection.hpp	/^        uint16_t hstride:5;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon85
hstrideFromSize	./backend/gen_register.hpp	/^    static INLINE uint32_t hstrideFromSize(int size) {$/;"	f	class:gbe::GenRegister
hstride_size	./backend/gen_register.hpp	/^    static INLINE int hstride_size(GenRegister reg) {$/;"	f	class:gbe::GenRegister
i	./sys/cvar.hpp	/^      struct { int32_t min, *curr, max; } i; \/\/!< integer variables with bounds$/;"	m	union:gbe::CVarInit::__anon181	typeref:struct:gbe::CVarInit::__anon181::__anon182
i64	./backend/gen_register.hpp	/^      int64_t i64;$/;"	m	union:gbe::GenRegister::__anon40
ia1	./backend/gen7_instruction.hpp	/^      } ia1;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon44	typeref:struct:Gen7NativeInstruction::__anon42::__anon44::__anon46
ia1	./backend/gen7_instruction.hpp	/^      } ia1;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon51	typeref:struct:Gen7NativeInstruction::__anon42::__anon51::__anon53
ia1	./backend/gen7_instruction.hpp	/^      } ia1;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon60
ia1	./backend/gen8_instruction.hpp	/^      } ia1;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon104	typeref:struct:Gen8NativeInstruction::__anon102::__anon104::__anon106
ia1	./backend/gen8_instruction.hpp	/^      } ia1;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon112	typeref:struct:Gen8NativeInstruction::__anon102::__anon112::__anon114
ia1	./backend/gen8_instruction.hpp	/^      } ia1;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon124
ia16	./backend/gen7_instruction.hpp	/^      } ia16;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon44	typeref:struct:Gen7NativeInstruction::__anon42::__anon44::__anon48
ia16	./backend/gen7_instruction.hpp	/^      } ia16;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon51	typeref:struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
ia16	./backend/gen7_instruction.hpp	/^      } ia16;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon61
ia16	./backend/gen8_instruction.hpp	/^      } ia16;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon104	typeref:struct:Gen8NativeInstruction::__anon102::__anon104::__anon108
ia16	./backend/gen8_instruction.hpp	/^      } ia16;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon112	typeref:struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
ia16	./backend/gen8_instruction.hpp	/^      } ia16;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon125
id	./llvm/llvm_scalarize.cpp	/^      uint32_t id;$/;"	m	struct:gbe::Scalarize::VecValElement	file:
idx	./backend/program.h	/^    int32_t idx;$/;"	m	struct:ImageInfo
ifBlock	./ir/instruction.cpp	/^        bool             ifBlock;$/;"	m	class:gbe::ir::internal::LoadInstruction	file:
ifBlock	./ir/instruction.cpp	/^        bool         ifBlock;$/;"	m	class:gbe::ir::internal::StoreInstruction	file:
ifEndifFix	./backend/gen_context.hpp	/^    bool ifEndifFix;$/;"	m	class:gbe::GenContext
ifPatternMatch	./ir/structurizer.cpp	/^  int CFGStructurizer::ifPatternMatch(Block *block)$/;"	f	class:gbe::ir::CFGStructurizer
ignoreDependency	./backend/gen_insn_scheduling.cpp	/^    INLINE bool ignoreDependency(GenRegister reg) const {$/;"	f	struct:gbe::DependencyTracker
ignored	./backend/gen7_instruction.hpp	/^        uint32_t ignored:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon72
ignored	./backend/gen7_instruction.hpp	/^        uint32_t ignored:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon80
ignored	./backend/gen8_instruction.hpp	/^        uint32_t ignored:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon147
ignored	./backend/gen8_instruction.hpp	/^        uint32_t ignored:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon136
ignored	./backend/gen8_instruction.hpp	/^        uint32_t ignored:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon143
ignored	./backend/gen8_instruction.hpp	/^        uint32_t ignored:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon149
ignored	./backend/gen_defs.hpp	/^        uint32_t ignored:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon31
ignored	./backend/gen_defs.hpp	/^        uint32_t ignored:3;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon38
ignored0	./backend/gen7_instruction.hpp	/^        uint32_t ignored0:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon70
ignored0	./backend/gen7_instruction.hpp	/^        uint32_t ignored0:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon71
ignored0	./backend/gen7_instruction.hpp	/^        uint32_t ignored0:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon73
ignored0	./backend/gen8_instruction.hpp	/^        uint32_t ignored0:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon134
ignored0	./backend/gen8_instruction.hpp	/^        uint32_t ignored0:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon135
ignored0	./backend/gen8_instruction.hpp	/^        uint32_t ignored0:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon137
ignored0	./backend/gen_defs.hpp	/^        uint32_t ignored0:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon29
ignored0	./backend/gen_defs.hpp	/^        uint32_t ignored0:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon30
ignored0	./backend/gen_defs.hpp	/^        uint32_t ignored0:3;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon32
ignored1	./backend/gen7_instruction.hpp	/^        uint32_t ignored1:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon73
ignored1	./backend/gen7_instruction.hpp	/^        uint32_t ignored1:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon70
ignored1	./backend/gen8_instruction.hpp	/^        uint32_t ignored1:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon137
ignored1	./backend/gen8_instruction.hpp	/^        uint32_t ignored1:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon134
ignored1	./backend/gen_defs.hpp	/^        uint32_t ignored1:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon32
ignored1	./backend/gen_defs.hpp	/^        uint32_t ignored1:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon29
imageIdx	./ir/instruction.cpp	/^      uint8_t imageIdx;                \/\/!< surface index.$/;"	m	class:gbe::ir::internal::GetImageInfoInstruction	file:
imageIdx	./ir/instruction.cpp	/^      uint8_t imageIdx;$/;"	m	class:gbe::ir::internal::MediaBlockReadInstruction	file:
imageIdx	./ir/instruction.cpp	/^      uint8_t imageIdx;$/;"	m	class:gbe::ir::internal::MediaBlockWriteInstruction	file:
imageIdx	./ir/instruction.cpp	/^      uint8_t imageIdx;$/;"	m	class:gbe::ir::internal::SampleInstruction	file:
imageIdx	./ir/instruction.cpp	/^      uint8_t imageIdx;$/;"	m	class:gbe::ir::internal::TypedWriteInstruction	file:
imageIdx	./ir/instruction.cpp	/^      uint8_t imageIdx;$/;"	m	class:gbe::ir::internal::VmeInstruction	file:
imageSet	./backend/program.hpp	/^    ir::ImageSet *imageSet;    \/\/!< Copy from the corresponding function.$/;"	m	class:gbe::Kernel
imageSet	./ir/function.hpp	/^    ImageSet* imageSet;             \/\/!< Image set in this function's arguments..$/;"	m	class:gbe::ir::Function
imm	./backend/gen/gen_mesa_disasm.c	/^static int imm(FILE *file, uint32_t type, const void* inst)$/;"	f	file:
imm	./backend/gen_register.hpp	/^    static INLINE GenRegister imm(uint32_t type) {$/;"	f	class:gbe::GenRegister
imm	./ir/instruction.hpp	/^      unsigned short imm;  \/\/ fixed bti$/;"	m	union:gbe::ir::BTI::__anon160
immReg	./ir/context.hpp	/^    template <typename T> INLINE Register immReg(T value) {$/;"	f	class:gbe::ir::Context
immVec	./ir/immediate.hpp	/^      const Immediate **immVec;$/;"	m	union:gbe::ir::Immediate::__anon154
immd	./backend/gen_register.hpp	/^    static INLINE GenRegister immd(int d) {$/;"	f	class:gbe::GenRegister
immdf	./backend/gen_register.hpp	/^    static INLINE GenRegister immdf(double df) {$/;"	f	class:gbe::GenRegister
immediateIndex	./ir/instruction.cpp	/^      ImmediateIndex immediateIndex; \/\/!< Index in the vector of immediates$/;"	m	class:gbe::ir::internal::LoadImmInstruction	file:
immediateNum	./ir/function.hpp	/^    INLINE uint32_t immediateNum(void) const { return immediates.size(); }$/;"	f	class:gbe::ir::Function
immediates	./ir/function.hpp	/^    vector<Immediate> immediates;   \/\/!< All immediate values in the function$/;"	m	class:gbe::ir::Function
immf	./backend/gen_register.hpp	/^    static INLINE GenRegister immf(float f) {$/;"	f	class:gbe::GenRegister
immh	./backend/gen_register.hpp	/^    static INLINE GenRegister immh(uint16_t uw) {$/;"	f	class:gbe::GenRegister
immint64	./backend/gen_register.hpp	/^    static INLINE GenRegister immint64(int64_t i) {$/;"	f	class:gbe::GenRegister
immud	./backend/gen_register.hpp	/^    static INLINE GenRegister immud(uint32_t ud) {$/;"	f	class:gbe::GenRegister
immuint64	./backend/gen_register.hpp	/^    static INLINE GenRegister immuint64(uint64_t i) {$/;"	f	class:gbe::GenRegister
immuw	./backend/gen_register.hpp	/^    static INLINE GenRegister immuw(uint16_t uw) {$/;"	f	class:gbe::GenRegister
immv	./backend/gen_register.hpp	/^    static INLINE GenRegister immv(uint32_t v) {$/;"	f	class:gbe::GenRegister
immvf	./backend/gen_register.hpp	/^    static INLINE GenRegister immvf(uint32_t v) {$/;"	f	class:gbe::GenRegister
immvf4	./backend/gen_register.hpp	/^    static INLINE GenRegister immvf4(uint32_t v0, uint32_t v1, uint32_t v2, uint32_t v3) {$/;"	f	class:gbe::GenRegister
immw	./backend/gen_register.hpp	/^    static INLINE GenRegister immw(int16_t w) {$/;"	f	class:gbe::GenRegister
inLiveOut	./ir/liveness.hpp	/^      INLINE bool inLiveOut(Register reg) const {$/;"	f	struct:gbe::ir::Liveness::BlockInfo
inProfilingMode	./backend/gen_context.hpp	/^    bool inProfilingMode;$/;"	m	class:gbe::GenContext
inProfilingMode	./ir/unit.hpp	/^    bool inProfilingMode;$/;"	m	class:gbe::ir::Unit
inUpwardUsed	./ir/liveness.hpp	/^      INLINE bool inUpwardUsed(Register reg) const {$/;"	f	struct:gbe::ir::Liveness::BlockInfo
inVarKill	./ir/liveness.hpp	/^      INLINE bool inVarKill(Register reg) const {$/;"	f	struct:gbe::ir::Liveness::BlockInfo
in_list	./sys/intrusive_list.hpp	/^    INLINE bool in_list(void) const  { return this != next; }$/;"	f	struct:gbe::intrusive_list_node
incBtiBase	./llvm/llvm_gen_backend.cpp	/^    uint32_t incBtiBase() {$/;"	f	class:gbe::GenWriter
incompletePhis	./llvm/llvm_scalarize.cpp	/^    SmallVector<PHINode*, 16> incompletePhis;$/;"	m	class:gbe::Scalarize	file:
indentSpace	./libocl/script/gen_vector.py	/^    def indentSpace(self):$/;"	m	class:builtinProto
indent_to_str	./sys/platform.hpp	/^  static std::string indent_to_str(int indent) {$/;"	f	class:Serializable
index	./backend/gen_insn_compact.cpp	/^    uint32_t index;$/;"	m	struct:gbe::compact_table_entry	file:
index	./backend/gen_insn_selection.hpp	/^    uint32_t index;$/;"	m	class:gbe::SelectionInstruction
index	./ir/instruction.hpp	/^     uint8_t index; \/*! the allocated image index *\/$/;"	m	struct:gbe::ir::_ImageInfoKey::__anon161
index1	./backend/gen_insn_selection.hpp	/^    uint32_t index1;$/;"	m	class:gbe::SelectionInstruction
indexMap	./ir/image.hpp	/^    map<uint32_t, struct ImageInfo *> indexMap;$/;"	m	class:gbe::ir::ImageSet
index_t	./sys/platform.hpp	/^typedef int32_t index_t;$/;"	t
index_t	./sys/platform.hpp	/^typedef int64_t index_t;$/;"	t
indirect	./backend/gen_register.hpp	/^    static INLINE GenRegister indirect(uint32_t type, uint32_t subnr, uint32_t width,$/;"	f	class:gbe::GenRegister
indirectSeq	./ir/lowering.cpp	/^    IndirectLoadSeq indirectSeq;  \/\/!< All the indirect loads$/;"	m	class:gbe::ir::FunctionArgumentLowerer	file:
indirect_offset	./backend/gen_insn_selection.hpp	/^      uint32_t indirect_offset;$/;"	m	union:gbe::SelectionInstruction::__anon83
info	./backend/program.hpp	/^    ArgInfo info;$/;"	m	struct:gbe::KernelArgument
info	./ir/function.hpp	/^    InfoFromLLVM info;  \/\/!< Holds the llvm passed info$/;"	m	struct:gbe::ir::FunctionArgument
infoRegMap	./ir/image.hpp	/^    map<uint16_t, Register> infoRegMap;$/;"	m	class:gbe::ir::ImageSet
infoType	./ir/instruction.cpp	/^      uint8_t infoType;                 \/\/!< Type of the requested information.$/;"	m	class:gbe::ir::internal::GetImageInfoInstruction	file:
init	./ir/profile.cpp	/^    static void init(Function &fn) {$/;"	f	namespace:gbe::ir::ocl
init	./libocl/script/gen_vector.py	/^    def init(self, sectionHeader, sectionPrefix, justproto):$/;"	m	class:builtinProto
initBlock	./ir/liveness.cpp	/^  void Liveness::initBlock(const BasicBlock &bb) {$/;"	f	class:gbe::ir::Liveness
initInstruction	./ir/liveness.cpp	/^  void Liveness::initInstruction(BlockInfo &info, const Instruction &insn) {$/;"	f	class:gbe::ir::Liveness
initProfile	./ir/profile.cpp	/^  void initProfile(Function &fn) {$/;"	f	namespace:gbe::ir
init_from_line	./libocl/script/gen_vector.py	/^    def init_from_line(self, t):$/;"	m	class:builtinProto
initializeBlocks	./ir/structurizer.cpp	/^  void CFGStructurizer::initializeBlocks()$/;"	f	class:gbe::ir::CFGStructurizer
initializeInstructionDef	./ir/value.cpp	/^  void LiveOutSet::initializeInstructionDef(void) {$/;"	f	class:gbe::ir::LiveOutSet
initializeOtherDef	./ir/value.cpp	/^  void LiveOutSet::initializeOtherDef(void) {$/;"	f	class:gbe::ir::LiveOutSet
input	./ir/context.cpp	/^  void Context::input(const std::string &name, FunctionArgument::Type type, Register reg,$/;"	f	class:gbe::ir::Context
insert	./backend/gen_insn_selection.cpp	/^  void SelectionLibrary::insert(void) {$/;"	f	class:gbe::SelectionLibrary
insert	./ir/instruction.cpp	/^  void Instruction::insert(Instruction *prev, Instruction ** new_ins) {$/;"	f	class:gbe::ir::Instruction
insert	./sys/intrusive_list.hpp	/^    iterator insert(iterator pos, value_type* v) {$/;"	f	class:gbe::intrusive_list
insertAlloc	./sys/alloc.cpp	/^  void* MemDebugger::insertAlloc(void *ptr, const char *file, const char *function, int line)$/;"	f	class:gbe::MemDebugger
insertAt	./ir/function.cpp	/^  void BasicBlock::insertAt(iterator pos, Instruction &insn) {$/;"	f	class:gbe::ir::BasicBlock
insertBlock	./ir/structurizer.cpp	/^  Block* CFGStructurizer::insertBlock(Block *p_block)$/;"	f	class:gbe::ir::CFGStructurizer
insertCurbeReg	./backend/context.cpp	/^  void Context::insertCurbeReg(ir::Register reg, uint32_t offset) {$/;"	f	class:gbe::Context
insertJumpPos	./backend/gen_context.cpp	/^ void GenContext::insertJumpPos(const SelectionInstruction &insn) {$/;"	f	class:gbe::GenContext
insertNewReg	./backend/gen_reg_allocation.cpp	/^  INLINE void GenRegAllocator::Opaque::insertNewReg(const Selection &selection,$/;"	f	class:gbe::GenRegAllocator::Opaque
insertRegister	./llvm/llvm_gen_backend.cpp	/^    void insertRegister(const ir::Register &reg, Value *value, uint32_t index) {$/;"	f	class:gbe::RegisterTranslator
insn	./backend/gen_insn_scheduling.cpp	/^    SelectionInstruction &insn;$/;"	m	struct:gbe::ScheduleDAGNode	file:
insn	./backend/gen_insn_selection.cpp	/^    const ir::Instruction &insn;$/;"	m	class:gbe::SelectionDAG	file:
insn	./backend/gen_insn_selection.hpp	/^    SelectionInstruction *insn;$/;"	m	class:gbe::SelectionVector
insn	./backend/gen_insn_selection_optimize.cpp	/^      SelectionInstruction& insn;$/;"	m	class:gbe::SelBasicBlockOptimizer::ReplaceInfo	file:
insn	./ir/value.hpp	/^        const Instruction *insn; \/\/<! Instruction itself$/;"	m	struct:gbe::ir::ValueDef::Data::__anon156
insn	./ir/value.hpp	/^    const Instruction *insn; \/\/!< Instruction where the value is used$/;"	m	class:gbe::ir::ValueUse
insnAllocator	./backend/gen_insn_selection.cpp	/^    LinearAllocator insnAllocator;$/;"	m	class:gbe::Selection::Opaque	file:
insnDAG	./backend/gen_insn_selection.cpp	/^    vector<SelectionDAG*> insnDAG;$/;"	m	class:gbe::Selection::Opaque	file:
insnList	./backend/gen_insn_selection.hpp	/^    intrusive_list<SelectionInstruction> insnList;$/;"	m	class:gbe::SelectionBlock
insnNodes	./backend/gen_insn_scheduling.cpp	/^    vector<ScheduleDAGNode*> insnNodes;$/;"	m	struct:gbe::DependencyTracker	file:
insnNum	./backend/gen_insn_selection.cpp	/^    uint32_t insnNum;$/;"	m	class:gbe::SelectionPattern	file:
insnNum	./backend/gen_program.hpp	/^    uint32_t insnNum;      \/\/!< Number of instructions$/;"	m	class:gbe::GenKernel
insnNum	./ir/structurizer.hpp	/^    int insnNum;$/;"	m	class:gbe::ir::Block
insns	./backend/gen_program.hpp	/^    GenInstruction *insns; \/\/!< Instruction stream$/;"	m	class:gbe::GenKernel
int1	./libocl/include/ocl_image.h	23;"	d
int1	./libocl/include/ocl_image.h	91;"	d
int16_t	./sys/platform.hpp	/^typedef          __int16_t  int16_t;$/;"	t
int32_t	./sys/platform.hpp	/^typedef          __int32_t  int32_t;$/;"	t
int64_t	./sys/platform.hpp	/^typedef          __int64_t  int64_t;$/;"	t
int8_t	./sys/platform.hpp	/^typedef          __int8_t    int8_t;$/;"	t
intTy	./llvm/llvm_printf_parser.cpp	/^    Type* intTy;$/;"	m	class:gbe::PrintfParser	file:
intTy	./llvm/llvm_profiling.cpp	/^    Type* intTy;$/;"	m	class:gbe::ProfilingInserter	file:
intTy	./llvm/llvm_scalarize.cpp	/^    Type* intTy;$/;"	m	class:gbe::Scalarize	file:
int_type	./backend/gen7_instruction.hpp	/^        uint32_t int_type:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon65
int_type	./backend/gen8_instruction.hpp	/^        uint32_t int_type:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon130
int_type	./backend/gen_defs.hpp	/^        uint32_t int_type:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon24
integer_gentype	./libocl/script/gen_vector.py	/^integer_gentype = ["integer_gentype", gen_vector_type(all_int_type)]$/;"	v
integer_sgentype	./libocl/script/gen_vector.py	/^integer_sgentype = ["integer_sgentype", gen_vector_type(all_int_type, [1])]$/;"	v
integer_ugentype	./libocl/script/gen_vector.py	/^integer_ugentype = ["integer_ugentype", gen_vector_type(all_utype)]$/;"	v
interfere	./ir/value.cpp	/^  bool FunctionDAG::interfere(const BasicBlock *bb, Register inReg, Register outReg) const {$/;"	f	class:gbe::ir::FunctionDAG
interfere	./ir/value.cpp	/^  bool FunctionDAG::interfere(const Liveness &liveness, Register r0, Register r1) const {$/;"	f	class:gbe::ir::FunctionDAG
interfereLivein	./ir/value.cpp	/^  bool FunctionDAG::interfereLivein(const BasicBlock *bb, Register r0, Register r1) const {$/;"	f	class:gbe::ir::FunctionDAG
interfereLiveout	./ir/value.cpp	/^  bool FunctionDAG::interfereLiveout(const BasicBlock *bb, Register r0, Register r1) const {$/;"	f	class:gbe::ir::FunctionDAG
intermedia	./backend/gen_insn_selection_optimize.cpp	/^      const GenRegister& intermedia;$/;"	m	class:gbe::SelBasicBlockOptimizer::ReplaceInfo	file:
internal	./ir/instruction.cpp	/^  namespace internal$/;"	n	namespace:gbe::ir	file:
intervals	./backend/gen_reg_allocation.cpp	/^    vector<GenRegInterval> intervals;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
intptr_t	./libocl/include/ocl_types.h	/^typedef __int_type(__INT,__INTPTR_WIDTH__) intptr_t;$/;"	t
intrinsicMap	./llvm/llvm_gen_backend.hpp	/^  static const OCLIntrinsicMap intrinsicMap;$/;"	m	namespace:gbe
intrusive_list	./sys/intrusive_list.hpp	/^    intrusive_list(void) : intrusive_list_base() {$/;"	f	class:gbe::intrusive_list
intrusive_list	./sys/intrusive_list.hpp	/^  class intrusive_list : public intrusive_list_base$/;"	c	namespace:gbe
intrusive_list_base	./sys/intrusive_list.cpp	/^  intrusive_list_base::intrusive_list_base() : m_root() {}$/;"	f	class:gbe::intrusive_list_base
intrusive_list_base	./sys/intrusive_list.hpp	/^  class intrusive_list_base$/;"	c	namespace:gbe
intrusive_list_iterator	./sys/intrusive_list.hpp	/^    INLINE intrusive_list_iterator(Pointer iterNode) : m_node(iterNode) {}$/;"	f	class:gbe::intrusive_list_iterator
intrusive_list_iterator	./sys/intrusive_list.hpp	/^    INLINE intrusive_list_iterator(void): m_node(0) {}$/;"	f	class:gbe::intrusive_list_iterator
intrusive_list_iterator	./sys/intrusive_list.hpp	/^  class intrusive_list_iterator$/;"	c	namespace:gbe
intrusive_list_node	./sys/intrusive_list.hpp	/^    INLINE intrusive_list_node(void) { next = prev = this; }$/;"	f	struct:gbe::intrusive_list_node
intrusive_list_node	./sys/intrusive_list.hpp	/^  struct intrusive_list_node$/;"	s	namespace:gbe
invalidate_after_read	./backend/gen7_instruction.hpp	/^        uint32_t invalidate_after_read:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon71
invalidate_after_read	./backend/gen7_instruction.hpp	/^        uint32_t invalidate_after_read:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon72
invalidate_after_read	./backend/gen7_instruction.hpp	/^        uint32_t invalidate_after_read:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon73
invalidate_after_read	./backend/gen8_instruction.hpp	/^        uint32_t invalidate_after_read:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon135
invalidate_after_read	./backend/gen8_instruction.hpp	/^        uint32_t invalidate_after_read:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon136
invalidate_after_read	./backend/gen8_instruction.hpp	/^        uint32_t invalidate_after_read:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon137
invalidate_after_read	./backend/gen_defs.hpp	/^        uint32_t invalidate_after_read:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon30
invalidate_after_read	./backend/gen_defs.hpp	/^        uint32_t invalidate_after_read:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon31
invalidate_after_read	./backend/gen_defs.hpp	/^        uint32_t invalidate_after_read:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon32
inversePredicate	./ir/structurizer.hpp	/^    bool inversePredicate;$/;"	m	class:gbe::ir::Block
invoke	./libocl/include/ocl_enqueue.h	/^  __global void* invoke;$/;"	m	struct:Block_literal
ip	./backend/gen_register.hpp	/^    static INLINE GenRegister ip(void) {$/;"	f	class:gbe::GenRegister
ir	./backend/context.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./backend/program.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/constant.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/constant.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/context.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/context.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/function.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/function.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/half.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/half.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/image.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/image.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/immediate.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/instruction.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/instruction.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/liveness.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/liveness.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/lowering.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/lowering.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/printf.cpp	/^  namespace ir$/;"	n	namespace:gbe	file:
ir	./ir/printf.hpp	/^  namespace ir$/;"	n	namespace:gbe
ir	./ir/profile.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/profile.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/profiling.cpp	/^namespace ir$/;"	n	namespace:gbe	file:
ir	./ir/profiling.hpp	/^  namespace ir$/;"	n	namespace:gbe
ir	./ir/register.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/register.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/reloc.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/reloc.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/sampler.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/sampler.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/structurizer.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/structurizer.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/type.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/type.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/unit.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/unit.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./ir/value.cpp	/^namespace ir {$/;"	n	namespace:gbe	file:
ir	./ir/value.hpp	/^namespace ir {$/;"	n	namespace:gbe
ir	./llvm/llvm_gen_backend.hpp	/^  namespace ir { class Unit; }$/;"	n	namespace:gbe
ir	./llvm/llvm_to_gen.hpp	/^  namespace ir {$/;"	n	namespace:gbe
is16BitSpecialReg	./backend/gen_insn_selection.cpp	/^    bool is16BitSpecialReg(ir::Register reg) const {$/;"	f	class:gbe::Int32x16MulInstructionPattern
is3DWrite	./backend/gen_insn_selection.hpp	/^        uint16_t is3DWrite:1;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon87
isAligned	./ir/instruction.cpp	/^      INLINE bool  isAligned(void)     const { return !!dwAligned; }$/;"	f	class:gbe::ir::internal::MemInstruction
isAllConstant	./backend/gen_insn_selection.cpp	/^    INLINE bool isAllConstant(const ir::BTI &bti) const {$/;"	f	class:gbe::LoadInstructionPattern
isAllocated	./backend/gen_reg_allocation.cpp	/^    INLINE bool isAllocated(const ir::Register &reg) {$/;"	f	class:gbe::GenRegAllocator::Opaque
isAllocated	./backend/gen_reg_allocation.cpp	/^  bool GenRegAllocator::Opaque::isAllocated(const SelectionVector *vector) const {$/;"	f	class:gbe::GenRegAllocator::Opaque
isAllocated	./backend/gen_reg_allocation.cpp	/^  bool GenRegAllocator::isAllocated(const ir::Register &reg) {$/;"	f	class:gbe::GenRegAllocator
isBlock	./ir/instruction.cpp	/^        INLINE bool isBlock() const { return ifBlock; }$/;"	f	class:gbe::ir::internal::LoadInstruction
isBlock	./ir/instruction.cpp	/^        INLINE bool isBlock() const { return ifBlock; }$/;"	f	class:gbe::ir::internal::StoreInstruction
isBranch	./backend/gen_insn_selection.cpp	/^  bool SelectionInstruction::isBranch(void) const {$/;"	f	class:gbe::SelectionInstruction
isCompType	./ir/immediate.hpp	/^    INLINE bool isCompType(void) const {$/;"	f	class:gbe::ir::Immediate
isConst	./ir/instruction.hpp	/^    uint8_t isConst; \/\/ whether fixed bti$/;"	m	struct:gbe::ir::BTI
isCrossMoreThan2	./backend/gen_encoder.cpp	/^  INLINE bool isCrossMoreThan2(GenRegister reg) {$/;"	f	namespace:gbe
isDWLabel	./backend/context.hpp	/^    bool isDWLabel(void) const {$/;"	f	class:gbe::Context
isEntryBlock	./ir/function.cpp	/^  bool Function::isEntryBlock(const BasicBlock &bb) const {$/;"	f	class:gbe::ir::Function
isFPIntBitCast	./llvm/llvm_gen_backend.cpp	/^  static inline bool isFPIntBitCast(const Instruction &I) {$/;"	f	namespace:gbe
isImage1dArrayT	./ir/function.hpp	/^      bool isImage1dArrayT() const {$/;"	f	struct:gbe::ir::FunctionArgument::InfoFromLLVM
isImage1dBufferT	./ir/function.hpp	/^      bool isImage1dBufferT() const {$/;"	f	struct:gbe::ir::FunctionArgument::InfoFromLLVM
isImage1dT	./ir/function.hpp	/^      bool isImage1dT() const {$/;"	f	struct:gbe::ir::FunctionArgument::InfoFromLLVM
isImage2dArrayT	./ir/function.hpp	/^      bool isImage2dArrayT() const {$/;"	f	struct:gbe::ir::FunctionArgument::InfoFromLLVM
isImage2dT	./ir/function.hpp	/^      bool isImage2dT() const {$/;"	f	struct:gbe::ir::FunctionArgument::InfoFromLLVM
isImage3dT	./ir/function.hpp	/^      bool isImage3dT() const {$/;"	f	struct:gbe::ir::FunctionArgument::InfoFromLLVM
isImageType	./ir/function.hpp	/^      bool isImageType() const {$/;"	f	struct:gbe::ir::FunctionArgument::InfoFromLLVM
isInvokeBitcast	./llvm/llvm_device_enqueue.cpp	/^  BitCastInst *isInvokeBitcast(Instruction *I) {$/;"	f	namespace:gbe
isJustProto	./libocl/script/gen_vector.py	/^isJustProto = sys.argv[3]$/;"	v
isKernelFunction	./llvm/llvm_passes.cpp	/^  bool isKernelFunction(const llvm::Function &F) {$/;"	f	namespace:gbe
isLD	./backend/gen_insn_selection.hpp	/^        bool     isLD;  \/\/ is this a ld message?$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon88
isLabel	./backend/gen_insn_selection.cpp	/^  bool SelectionInstruction::isLabel(void) const {$/;"	f	class:gbe::SelectionInstruction
isLabelUsed	./backend/context.hpp	/^    INLINE bool isLabelUsed(ir::LabelIndex index) const {$/;"	f	class:gbe::Context
isLegalBitSize	./llvm/ExpandLargeIntegers.cpp	/^static bool isLegalBitSize(unsigned Bits) {$/;"	f	file:
isLegalSize	./llvm/PromoteIntegers.cpp	/^static bool isLegalSize(unsigned Size) {$/;"	f	file:
isLoad	./llvm/llvm_gen_backend.cpp	/^      bool                  isLoad;$/;"	m	class:gbe::MemoryInstHelper	file:
isLoadStoreCompatible	./llvm/llvm_loadstore_optimization.cpp	/^  bool GenLoadStoreOptimization::isLoadStoreCompatible(Value *A, Value *B) {$/;"	f	class:gbe::GenLoadStoreOptimization
isLongReg	./backend/gen_insn_selection.cpp	/^    INLINE bool isLongReg(const ir::Register &reg) const {$/;"	f	class:gbe::Selection::Opaque
isLoopExit	./ir/function.hpp	/^    bool isLoopExit;$/;"	m	class:gbe::ir::BasicBlock
isMemberOf	./ir/instruction.hpp	/^    template <typename T> INLINE bool isMemberOf(void) const {$/;"	f	class:gbe::ir::Instruction
isMergeable	./backend/gen_insn_selection.cpp	/^    INLINE bool isMergeable(uint32_t which) const { return mergeable&(1<<which); }$/;"	f	class:gbe::SelectionDAG
isMixedPoint	./llvm/llvm_gen_backend.cpp	/^  bool isMixedPoint(Value *val, SmallVector<Value *, 4> &pointers) {$/;"	f	namespace:gbe
isMutexInitializing	./sys/alloc.cpp	/^  static bool isMutexInitializing = true;$/;"	m	namespace:gbe	file:
isNative	./backend/gen_insn_selection.cpp	/^  bool SelectionInstruction::isNative(void) const {$/;"	f	class:gbe::SelectionInstruction
isNull	./backend/gen_register.hpp	/^    static INLINE bool isNull(GenRegister reg) {$/;"	f	class:gbe::GenRegister
isOpcodeFrom	./ir/instruction.hpp	/^  INLINE bool isOpcodeFrom(Opcode op) {$/;"	f	namespace:gbe::ir
isPartialWrite	./backend/gen_insn_selection.cpp	/^    INLINE bool isPartialWrite(const ir::Register &reg) const {$/;"	f	class:gbe::Selection::Opaque
isPartialWrite	./backend/gen_insn_selection.cpp	/^  bool Selection::isPartialWrite(const ir::Register &reg) const {$/;"	f	class:gbe::Selection
isPayloadReg	./backend/context.hpp	/^    INLINE bool isPayloadReg(ir::Register reg) const{$/;"	f	class:gbe::Context
isPayloadReg	./ir/function.hpp	/^    INLINE bool isPayloadReg(Register reg) const{$/;"	f	class:gbe::ir::Function
isPayloadReg	./ir/register.hpp	/^    INLINE bool isPayloadReg(Register index) const {$/;"	f	class:gbe::ir::RegisterFile
isPayloadType	./ir/register.hpp	/^    INLINE bool isPayloadType(void) const {$/;"	f	class:gbe::ir::RegisterData
isPipeType	./ir/function.hpp	/^      bool isPipeType() const {$/;"	f	struct:gbe::ir::FunctionArgument::InfoFromLLVM
isPointer	./libocl/script/gen_vector.py	/^def isPointer(t):$/;"	f
isPowerOf	./sys/platform.hpp	/^  INLINE uint32_t isPowerOf(uint32_t i) {$/;"	f	namespace:gbe
isPowerOf	./sys/platform.hpp	/^  template<> INLINE uint32_t isPowerOf<2>(uint32_t i) { return ((i-1)&i) == 0; }$/;"	f	namespace:gbe
isPredicated	./ir/instruction.cpp	/^      INLINE bool isPredicated(void) const { return hasPredicate; }$/;"	f	class:gbe::ir::internal::BranchInstruction
isProgramGlobal	./llvm/llvm_gen_backend.cpp	/^  static bool isProgramGlobal(const GlobalVariable &v) {$/;"	f	namespace:gbe
isRead	./backend/gen_insn_selection.cpp	/^  bool SelectionInstruction::isRead(void) const {$/;"	f	class:gbe::SelectionInstruction
isReadConstantLegacy	./backend/gen_insn_selection.cpp	/^    bool isReadConstantLegacy(const ir::LoadInstruction &load) const {$/;"	f	class:gbe::LoadInstructionPattern
isRoot	./backend/gen_insn_selection.cpp	/^  bool Selection::Opaque::isRoot(const ir::Instruction &insn) const {$/;"	f	class:gbe::Selection::Opaque
isSameRegion	./backend/gen_register.hpp	/^    INLINE bool isSameRegion(GenRegister reg) const {$/;"	f	class:gbe::GenRegister
isSamplerType	./ir/function.hpp	/^      bool isSamplerType() const {$/;"	f	struct:gbe::ir::FunctionArgument::InfoFromLLVM
isScalarReg	./backend/gen_insn_selection.cpp	/^    INLINE bool isScalarReg(const ir::Register &reg) const {$/;"	f	class:gbe::Selection::Opaque
isScalarReg	./backend/gen_insn_selection.cpp	/^  bool Selection::isScalarReg(const ir::Register &reg) const {$/;"	f	class:gbe::Selection
isScalarType	./llvm/llvm_gen_backend.cpp	/^  static bool isScalarType(const Type *type)$/;"	f	namespace:gbe
isSimpleBlock	./backend/gen_insn_selection.cpp	/^  bool Selection::Opaque::isSimpleBlock(const ir::BasicBlock &bb, uint32_t insnNum) {$/;"	f	class:gbe::Selection::Opaque
isSimpleLoadStore	./llvm/llvm_loadstore_optimization.cpp	/^  bool GenLoadStoreOptimization::isSimpleLoadStore(Value *I) {$/;"	f	class:gbe::GenLoadStoreOptimization
isSingleBti	./llvm/llvm_gen_backend.cpp	/^  bool GenWriter::isSingleBti(Value *Val) {$/;"	f	class:gbe::GenWriter
isSpecialReg	./backend/gen_context.hpp	/^    INLINE bool isSpecialReg(ir::Register reg) const {$/;"	f	class:gbe::GenContext
isSpecialReg	./ir/function.cpp	/^  bool Function::isSpecialReg(const Register &reg) const {$/;"	f	class:gbe::ir::Function
isSrc	./backend/gen_insn_selection.hpp	/^    uint16_t isSrc;$/;"	m	class:gbe::SelectionVector
isSrcDstDiffSpan	./backend/gen_encoder.cpp	/^  INLINE bool isSrcDstDiffSpan(GenRegister dst, GenRegister src) {$/;"	f	namespace:gbe
isStructureExit	./ir/function.hpp	/^    bool isStructureExit;$/;"	m	class:gbe::ir::BasicBlock
isSuperRegisterFree	./backend/context.cpp	/^  bool Context::isSuperRegisterFree(int offset) {$/;"	f	class:gbe::Context
isSuperRegisterFree	./backend/context.cpp	/^  bool SimpleAllocator::isSuperRegisterFree(int32_t offset) {$/;"	f	class:gbe::SimpleAllocator
isTmpReg	./backend/gen_reg_allocation.hpp	/^    bool isTmpReg;$/;"	m	struct:gbe::SpillRegTag
isUndefConst	./llvm/llvm_gen_backend.cpp	/^    bool isUndefConst(Value *value, uint32_t index) {$/;"	f	class:gbe::RegisterTranslator
isUniform	./backend/gen_insn_selection.hpp	/^        bool     isUniform;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon88
isUniform	./ir/register.hpp	/^    INLINE bool isUniform() const { return uniform; }$/;"	f	class:gbe::ir::RegisterData
isUniform	./ir/register.hpp	/^    INLINE bool isUniform(Register index) { return regs[index].isUniform(); }$/;"	f	class:gbe::ir::RegisterFile
isUniformRegister	./ir/function.hpp	/^    INLINE bool isUniformRegister(Register reg) { return file.isUniform(reg); }$/;"	f	class:gbe::ir::Function
isUsed	./backend/gen_insn_selection.cpp	/^    bool isUsed;$/;"	m	class:gbe::SelectionDAG	file:
isValid	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::isValid(const Instruction* inst)$/;"	f	class:gbe::Scalarize
isVectorOfBytes	./backend/gen_encoder.cpp	/^  INLINE bool isVectorOfBytes(GenRegister reg) {$/;"	f	namespace:gbe
isVectorOfLongs	./backend/gen_encoder.cpp	/^  INLINE bool isVectorOfLongs(GenRegister reg) {$/;"	f	namespace:gbe
isWrite	./backend/gen_insn_selection.cpp	/^  bool SelectionInstruction::isWrite(void) const {$/;"	f	class:gbe::SelectionInstruction
is_signed_int	./backend/gen_register.hpp	/^    INLINE bool is_signed_int(void) const {$/;"	f	class:gbe::GenRegister
is_special_acc	./backend/gen/gen_mesa_disasm.c	/^static int is_special_acc(const void* inst)$/;"	f	file:
is_unpacked_long	./backend/gen_register.hpp	/^    INLINE bool is_unpacked_long(void) const {$/;"	f	class:gbe::GenRegister
isa	./libocl/include/ocl_enqueue.h	/^  void *isa; \/\/ initialized to &_NSConcreteStackBlock or &_NSConcreteGlobalBlock$/;"	m	struct:Block_literal
isdf	./backend/gen_register.hpp	/^    INLINE bool isdf(void) const {$/;"	f	class:gbe::GenRegister
isimmdf	./backend/gen_register.hpp	/^    INLINE bool isimmdf(void) const {$/;"	f	class:gbe::GenRegister
isint64	./backend/gen_register.hpp	/^    INLINE bool isint64(void) const {$/;"	f	class:gbe::GenRegister
iterateLiveOut	./ir/value.cpp	/^  void LiveOutSet::iterateLiveOut(void) {$/;"	f	class:gbe::ir::LiveOutSet
iterator	./sys/intrusive_list.hpp	/^    typedef intrusive_list_iterator<T*, T&> iterator;$/;"	t	class:gbe::intrusive_list
iterator	./sys/vector.hpp	/^    typedef typename parent_type::iterator     iterator;$/;"	t	class:gbe::vector
jip	./backend/gen7_instruction.hpp	/^        uint32_t jip:16;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon79
jip	./backend/gen8_instruction.hpp	/^        uint32_t jip:32;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon148
jip	./backend/gen_defs.hpp	/^        uint32_t jip:32;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon37
jump_count	./backend/gen7_instruction.hpp	/^        int jump_count:16;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon49
justproto	./libocl/script/gen_vector.py	/^    justproto = 0$/;"	v	class:builtinProto
kChunkBits	./llvm/ExpandLargeIntegers.cpp	/^static const unsigned kChunkBits = 64;$/;"	v	file:
kChunkBytes	./llvm/ExpandLargeIntegers.cpp	/^static const unsigned kChunkBytes = kChunkBits \/ CHAR_BIT;$/;"	v	file:
kernel	./backend/context.hpp	/^    Kernel *kernel;                       \/\/!< Kernel we are building$/;"	m	class:gbe::Context
kernelDupPrintfSet	./backend/program.cpp	/^  static void* kernelDupPrintfSet(gbe_kernel gbeKernel) {$/;"	f	namespace:gbe
kernelDupProfiling	./backend/program.cpp	/^  static void* kernelDupProfiling(gbe_kernel gbeKernel) {$/;"	f	namespace:gbe
kernelGetArgAlign	./backend/program.cpp	/^  static uint32_t kernelGetArgAlign(gbe_kernel genKernel, uint32_t argID) {$/;"	f	namespace:gbe
kernelGetArgBTI	./backend/program.cpp	/^  static uint8_t kernelGetArgBTI(gbe_kernel genKernel, uint32_t argID) {$/;"	f	namespace:gbe
kernelGetArgInfo	./backend/program.cpp	/^  static void *kernelGetArgInfo(gbe_kernel genKernel, uint32_t argID, uint32_t value) {$/;"	f	namespace:gbe
kernelGetArgNum	./backend/program.cpp	/^  static uint32_t kernelGetArgNum(gbe_kernel genKernel) {$/;"	f	namespace:gbe
kernelGetArgSize	./backend/program.cpp	/^  static uint32_t kernelGetArgSize(gbe_kernel genKernel, uint32_t argID) {$/;"	f	namespace:gbe
kernelGetArgType	./backend/program.cpp	/^  static gbe_arg_type kernelGetArgType(gbe_kernel genKernel, uint32_t argID) {$/;"	f	namespace:gbe
kernelGetAttributes	./backend/program.cpp	/^  static const char *kernelGetAttributes(gbe_kernel genKernel) {$/;"	f	namespace:gbe
kernelGetCode	./backend/program.cpp	/^  static const char *kernelGetCode(gbe_kernel genKernel) {$/;"	f	namespace:gbe
kernelGetCodeSize	./backend/program.cpp	/^  static size_t kernelGetCodeSize(gbe_kernel genKernel) {$/;"	f	namespace:gbe
kernelGetCompileWorkGroupSize	./backend/program.cpp	/^  static void kernelGetCompileWorkGroupSize(gbe_kernel gbeKernel, size_t wg_size[3]) {$/;"	f	namespace:gbe
kernelGetCurbeOffset	./backend/program.cpp	/^  static int32_t kernelGetCurbeOffset(gbe_kernel genKernel, gbe_curbe_type type, uint32_t subType) {$/;"	f	namespace:gbe
kernelGetCurbeSize	./backend/program.cpp	/^  static int32_t kernelGetCurbeSize(gbe_kernel genKernel) {$/;"	f	namespace:gbe
kernelGetImageData	./backend/program.cpp	/^  static void kernelGetImageData(gbe_kernel gbeKernel, ImageInfo *images) {$/;"	f	namespace:gbe
kernelGetImageSize	./backend/program.cpp	/^  static size_t kernelGetImageSize(gbe_kernel gbeKernel) {$/;"	f	namespace:gbe
kernelGetName	./backend/program.cpp	/^  static const char *kernelGetName(gbe_kernel genKernel) {$/;"	f	namespace:gbe
kernelGetOclVersion	./backend/program.cpp	/^  static uint32_t kernelGetOclVersion(gbe_kernel gbeKernel) {$/;"	f	namespace:gbe
kernelGetPrintfBufBTI	./backend/program.cpp	/^  static uint8_t kernelGetPrintfBufBTI(void * printf_info) {$/;"	f	namespace:gbe
kernelGetPrintfNum	./backend/program.cpp	/^  static uint32_t kernelGetPrintfNum(void * printf_info) {$/;"	f	namespace:gbe
kernelGetProfilingBTI	./backend/program.cpp	/^  static uint32_t kernelGetProfilingBTI(gbe_kernel gbeKernel) {$/;"	f	namespace:gbe
kernelGetRequiredWorkGroupSize	./backend/program.cpp	/^  static uint32_t kernelGetRequiredWorkGroupSize(gbe_kernel kernel, uint32_t dim) {$/;"	f	namespace:gbe
kernelGetSIMDWidth	./backend/program.cpp	/^  static uint32_t kernelGetSIMDWidth(gbe_kernel genKernel) {$/;"	f	namespace:gbe
kernelGetSLMSize	./backend/program.cpp	/^  static int32_t kernelGetSLMSize(gbe_kernel genKernel) {$/;"	f	namespace:gbe
kernelGetSamplerData	./backend/program.cpp	/^  static void kernelGetSamplerData(gbe_kernel gbeKernel, uint32_t *samplers) {$/;"	f	namespace:gbe
kernelGetSamplerSize	./backend/program.cpp	/^  static size_t kernelGetSamplerSize(gbe_kernel gbeKernel) {$/;"	f	namespace:gbe
kernelGetScratchSize	./backend/program.cpp	/^  static int32_t kernelGetScratchSize(gbe_kernel genKernel) {$/;"	f	namespace:gbe
kernelGetStackSize	./backend/program.cpp	/^  static int32_t kernelGetStackSize(gbe_kernel genKernel) {$/;"	f	namespace:gbe
kernelID	./ir/profiling.hpp	/^        uint32_t kernelID:24;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
kernelOutputPrintf	./backend/program.cpp	/^  static void kernelOutputPrintf(void * printf_info, void* buf_addr)$/;"	f	namespace:gbe
kernelOutputProfiling	./backend/program.cpp	/^  static void kernelOutputProfiling(void *profiling_info, void* buf) {$/;"	f	namespace:gbe
kernelReleasePrintfSet	./backend/program.cpp	/^  static void kernelReleasePrintfSet(void * printf_info) {$/;"	f	namespace:gbe
kernelUseDeviceEnqueue	./backend/program.cpp	/^  static uint32_t kernelUseDeviceEnqueue(gbe_kernel gbeKernel) {$/;"	f	namespace:gbe
kernelUseSLM	./backend/program.cpp	/^  static int32_t kernelUseSLM(gbe_kernel genKernel) {$/;"	f	namespace:gbe
kernel_exec	./libocl/tmpl/ocl_defines.tmpl.h	37;"	d
kernels	./backend/program.hpp	/^    map<std::string, Kernel*> kernels;$/;"	m	class:gbe::Program
key_compare	./sys/map.hpp	/^    typedef Pred key_compare;$/;"	t	class:gbe::map
key_compare	./sys/set.hpp	/^    typedef Pred key_compare;$/;"	t	class:gbe::set
key_type	./sys/map.hpp	/^    typedef Key key_type;$/;"	t	class:gbe::map
key_type	./sys/set.hpp	/^    typedef Key key_type;$/;"	t	class:gbe::set
l0	./backend/gen_context.hpp	/^      ir::LabelIndex l0;$/;"	m	struct:gbe::GenContext::LabelPair
l1	./backend/gen_context.hpp	/^      ir::LabelIndex l1;$/;"	m	struct:gbe::GenContext::LabelPair
lIterator	./ir/structurizer.hpp	/^  typedef std::list<Block *>::iterator lIterator;$/;"	t	namespace:gbe::ir
label	./ir/context.cpp	/^  LabelIndex Context::label(void) {$/;"	f	class:gbe::ir::Context
label	./ir/structurizer.hpp	/^    int label;$/;"	m	class:gbe::ir::Block
labelIndex	./ir/instruction.cpp	/^      LabelIndex labelIndex;  \/\/!< Index of the label$/;"	m	class:gbe::ir::internal::LabelInstruction	file:
labelIndex	./ir/instruction.cpp	/^      LabelIndex labelIndex; \/\/!< Index of the label the branch targets$/;"	m	class:gbe::ir::internal::BranchInstruction	file:
labelMap	./llvm/llvm_gen_backend.cpp	/^    map<const BasicBlock*, ir::LabelIndex> labelMap;$/;"	m	class:gbe::GenWriter	file:
labelNum	./ir/function.hpp	/^    INLINE uint32_t labelNum(void) const { return labels.size(); }$/;"	f	class:gbe::ir::Function
labelPos	./backend/gen_context.hpp	/^    map<ir::LabelIndex, uint32_t> labelPos;$/;"	m	class:gbe::GenContext
labels	./ir/function.hpp	/^    vector<BasicBlock*> labels;     \/\/!< Each label points to a basic block$/;"	m	class:gbe::ir::Function
lastRead	./llvm/llvm_gen_backend.cpp	/^    uint32_t lastRead;$/;"	m	struct:gbe::RegInfoForMov	file:
lastReadInsn	./llvm/llvm_gen_backend.cpp	/^    ir::Instruction *lastReadInsn;$/;"	m	struct:gbe::RegInfoForMov	file:
lastTime	./llvm/StripAttributes.cpp	/^    bool lastTime; \/\/last time all StripAttributes$/;"	m	class:__anon173::StripAttributes	file:
lastWrite	./llvm/llvm_gen_backend.cpp	/^    uint32_t lastWrite;$/;"	m	struct:gbe::RegInfoForMov	file:
lastWriteInsn	./llvm/llvm_gen_backend.cpp	/^    ir::Instruction *lastWriteInsn;$/;"	m	struct:gbe::RegInfoForMov	file:
ldMsgOrder	./backend/gen_insn_selection.cpp	/^    uint32_t ldMsgOrder;$/;"	m	class:gbe::Selection::Opaque	file:
left_justified	./ir/printf.hpp	/^      char left_justified;$/;"	m	struct:gbe::ir::PrintfState
legacyMode	./llvm/llvm_gen_backend.cpp	/^      bool              legacyMode;$/;"	m	class:gbe::MemoryInstHelper	file:
legacyMode	./llvm/llvm_gen_backend.cpp	/^    bool legacyMode;$/;"	m	class:gbe::GenWriter	file:
length_modifier	./ir/printf.hpp	/^      int length_modifier;$/;"	m	struct:gbe::ir::PrintfState
less	./ir/immediate.cpp	/^    Immediate Immediate::less (const Immediate &left, const Immediate &right) {$/;"	f	class:Immediate
lid0	./ir/profile.hpp	/^    static const Register lid0 = Register(0);      \/\/ get_local_id(0)$/;"	m	namespace:gbe::ir::ocl
lid1	./ir/profile.hpp	/^    static const Register lid1 = Register(1);      \/\/ get_local_id(1)$/;"	m	namespace:gbe::ir::ocl
lid2	./ir/profile.hpp	/^    static const Register lid2 = Register(2);      \/\/ get_local_id(2)$/;"	m	namespace:gbe::ir::ocl
limitRegisterPressure	./backend/gen_context.hpp	/^    bool limitRegisterPressure;$/;"	m	class:gbe::GenContext
limitRegisterPressure	./backend/gen_program.cpp	/^    bool limitRegisterPressure;$/;"	m	struct:gbe::CodeGenStrategy	file:
line	./backend/program.h	/^    uint32_t line;$/;"	m	struct:_DebugInfo
line	./sys/alloc.cpp	/^    int fileName, functionName, line;$/;"	m	struct:gbe::AllocData	file:
link	./sys/intrusive_list.cpp	/^  void link(intrusive_list_node* node, intrusive_list_node* nextNode) {$/;"	f	namespace:gbe
list	./sys/list.hpp	/^    INLINE explicit list(const allocator_type &a = allocator_type()) :$/;"	f	class:gbe::list
list	./sys/list.hpp	/^    INLINE explicit list(size_type n,$/;"	f	class:gbe::list
list	./sys/list.hpp	/^    INLINE list(InputIterator first,$/;"	f	class:gbe::list
list	./sys/list.hpp	/^    INLINE list(const list &x) : parent_type(x) {}$/;"	f	class:gbe::list
list	./sys/list.hpp	/^  class list : public std::list<T, Allocator<T>>$/;"	c	namespace:gbe
liveOut	./ir/liveness.hpp	/^      LiveOut liveOut;$/;"	m	struct:gbe::ir::Liveness::BlockInfo
liveinInterfere	./ir/value.cpp	/^  static bool liveinInterfere(const BasicBlock *bb, const Instruction *defInsn, Register r1) {$/;"	f	namespace:gbe::ir
liveness	./backend/context.hpp	/^    ir::Liveness *liveness;               \/\/!< Liveness info for the variables$/;"	m	class:gbe::Context
liveness	./ir/liveness.hpp	/^    Info liveness;$/;"	m	class:gbe::ir::Liveness
liveness	./ir/lowering.cpp	/^    Liveness *liveness; \/\/!< To compute the function graph$/;"	m	class:gbe::ir::FunctionArgumentLowerer	file:
liveness	./ir/value.cpp	/^    Liveness &liveness;       \/\/!< Contains LiveOut information$/;"	m	class:gbe::ir::LiveOutSet	file:
liveout	./backend/gen_insn_selection_optimize.cpp	/^    const ir::Liveness::LiveOut& liveout;$/;"	m	class:gbe::SelBasicBlockOptimizer	file:
liveout	./ir/function.hpp	/^    std::set<Register> liveout;$/;"	m	class:gbe::ir::BasicBlock
llvm	./llvm/ExpandUtils.cpp	/^namespace llvm {$/;"	n	file:
llvm	./llvm/llvm_gen_backend.hpp	/^namespace llvm {$/;"	n
llvmToGen	./llvm/llvm_to_gen.cpp	/^  bool llvmToGen(ir::Unit &unit, const void* module,$/;"	f	namespace:gbe
llvm_ctx	./backend/gen_program.hpp	/^    void* llvm_ctx;$/;"	m	class:gbe::GenProgram
load	./ir/lowering.cpp	/^    Instruction *load;           \/\/!< Load from the argument$/;"	m	struct:gbe::ir::IndirectLoad	file:
load	./ir/lowering.cpp	/^    Instruction *load;    \/\/!< Load from the argument$/;"	m	struct:gbe::ir::LoadAddImm	file:
loadBottomHalf	./backend/gen_context.cpp	/^  void GenContext::loadBottomHalf(GenRegister dest, GenRegister src) {$/;"	f	class:gbe::GenContext
loadImm	./ir/lowering.cpp	/^    Instruction *loadImm; \/\/!< Can also be NULL$/;"	m	struct:gbe::ir::LoadAddImm	file:
loadLaneID	./backend/gen_context.cpp	/^  void GenContext::loadLaneID(GenRegister dst) {$/;"	f	class:gbe::GenContext
loadTopHalf	./backend/gen_context.cpp	/^  void GenContext::loadTopHalf(GenRegister dest, GenRegister src) {$/;"	f	class:gbe::GenContext
local	./libocl/include/ocl_types.h	67;"	d
local_work_size	./libocl/include/ocl_enqueue.h	/^  int local_work_size[3];$/;"	m	struct:ndrange_info_t
locationMap	./ir/function.hpp	/^    LocationMap locationMap;        \/\/!< Pushed function arguments (loc->reg)$/;"	m	class:gbe::ir::Function
lock	./ir/printf.cpp	/^    pthread_mutex_t PrintfSet::lock = PTHREAD_MUTEX_INITIALIZER;$/;"	m	class:gbe::ir::PrintfSet	file:
lock	./ir/printf.hpp	/^      static pthread_mutex_t lock;$/;"	m	class:gbe::ir::PrintfSet
lock	./ir/profiling.cpp	/^  pthread_mutex_t ProfilingInfo::lock = PTHREAD_MUTEX_INITIALIZER;$/;"	m	class:gbe::ir::ProfilingInfo	file:
lock	./ir/profiling.hpp	/^      static pthread_mutex_t lock;$/;"	m	class:gbe::ir::ProfilingInfo
lock	./sys/mutex.cpp	/^  void MutexSys::lock( void ) { EnterCriticalSection((CRITICAL_SECTION*)mutex); }$/;"	f	class:gbe::MutexSys
lock	./sys/mutex.cpp	/^  void MutexSys::lock( void ) { pthread_mutex_lock((pthread_mutex_t*)mutex); }$/;"	f	class:gbe::MutexSys
lock	./sys/mutex.hpp	/^    INLINE void lock(void) {$/;"	f	class:gbe::MutexActive
logi2	./sys/platform.hpp	/^  INLINE uint32_t logi2(uint32_t x) {$/;"	f	namespace:gbe
logicalType	./ir/instruction.cpp	/^    static const Type logicalType[] = {TYPE_S8,  TYPE_U8,$/;"	m	namespace:gbe::ir::internal	file:
logicalTypeNum	./ir/instruction.cpp	/^    static const uint32_t logicalTypeNum = ARRAY_ELEM_NUM(logicalType);$/;"	m	namespace:gbe::ir::internal	file:
longjmp	./backend/gen_insn_selection.hpp	/^      bool longjmp;$/;"	m	union:gbe::SelectionInstruction::__anon83
loopPatternMatch	./ir/structurizer.cpp	/^  int CFGStructurizer::loopPatternMatch(Block *block) {$/;"	f	class:gbe::ir::CFGStructurizer
loops	./ir/function.hpp	/^    vector<Loop *> loops;           \/\/!< Loops info of the function$/;"	m	class:gbe::ir::Function
loops	./ir/structurizer.hpp	/^      gbe::vector<Loop *> loops;$/;"	m	class:gbe::ir::CFGStructurizer
low	./backend/gen_defs.hpp	/^    struct GenInstruction low;$/;"	m	struct:GenNativeInstruction::__anon15	typeref:struct:GenNativeInstruction::__anon15::GenInstruction
low	./backend/gen_defs.hpp	/^  struct GenInstruction low;$/;"	m	union:GenCompactInstruction	typeref:struct:GenCompactInstruction::GenInstruction
low	./backend/gen_defs.hpp	/^  uint32_t low;$/;"	m	struct:GenInstruction
lower	./ir/lowering.cpp	/^  ArgUse FunctionArgumentLowerer::lower(uint32_t argID) {$/;"	f	class:gbe::ir::FunctionArgumentLowerer
lower	./ir/lowering.cpp	/^  void ContextReturn::lower(const std::string &functionName) {$/;"	f	class:gbe::ir::ContextReturn
lower	./ir/lowering.cpp	/^  void FunctionArgumentLowerer::lower(const std::string &functionName) {$/;"	f	class:gbe::ir::FunctionArgumentLowerer
lowerFunctionArguments	./ir/lowering.cpp	/^  void lowerFunctionArguments(Unit &unit, const std::string &functionName) {$/;"	f	namespace:gbe::ir
lowerIndirectRead	./ir/lowering.cpp	/^  void FunctionArgumentLowerer::lowerIndirectRead(uint32_t argID)$/;"	f	class:gbe::ir::FunctionArgumentLowerer
lowerReturn	./ir/lowering.cpp	/^  void lowerReturn(Unit &unit, const std::string &functionName) {$/;"	f	namespace:gbe::ir
lshr	./ir/immediate.cpp	/^    Immediate Immediate::lshr (const Immediate &left, const Immediate &right) {$/;"	f	class:Immediate
lsize0	./ir/profile.hpp	/^    static const Register lsize0 = Register(9);    \/\/ get_local_size(0)$/;"	m	namespace:gbe::ir::ocl
lsize1	./ir/profile.hpp	/^    static const Register lsize1 = Register(10);   \/\/ get_local_size(1)$/;"	m	namespace:gbe::ir::ocl
lsize2	./ir/profile.hpp	/^    static const Register lsize2 = Register(11);   \/\/ get_local_size(2)$/;"	m	namespace:gbe::ir::ocl
lut_sub	./backend/gen7_instruction.hpp	/^        uint32_t lut_sub:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon67
lut_sub	./backend/gen_defs.hpp	/^        uint32_t lut_sub:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon26
lut_sub	./backend/gen_insn_selection.hpp	/^        uint16_t lut_sub:2;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon89
lut_sub	./ir/instruction.cpp	/^      uint8_t lut_sub;$/;"	m	class:gbe::ir::internal::VmeInstruction	file:
mAddressMode	./llvm/llvm_gen_backend.cpp	/^      ir::AddressMode mAddressMode;$/;"	m	class:gbe::MemoryInstHelper	file:
mBTI	./llvm/llvm_gen_backend.cpp	/^      ir::Register            mBTI;$/;"	m	class:gbe::MemoryInstHelper	file:
mPtr	./llvm/llvm_gen_backend.cpp	/^      ir::Register            mPtr;$/;"	m	class:gbe::MemoryInstHelper	file:
m_node	./sys/intrusive_list.hpp	/^    Pointer m_node;$/;"	m	class:gbe::intrusive_list_iterator
m_root	./sys/intrusive_list.hpp	/^    intrusive_list_node m_root;$/;"	m	class:gbe::intrusive_list_base
madType	./ir/instruction.cpp	/^    static const Type madType[] = {TYPE_FLOAT};$/;"	m	namespace:gbe::ir::internal	file:
madTypeNum	./ir/instruction.cpp	/^    static const uint32_t madTypeNum = ARRAY_ELEM_NUM(madType);$/;"	m	namespace:gbe::ir::internal	file:
magic	./ir/printf.hpp	/^      uint32_t magic;  \/\/ 0xAABBCCDD as magic for ASSERT.$/;"	m	struct:gbe::ir::PrintfLog
magic_begin	./backend/program.hpp	/^    static const uint32_t magic_begin = TO_MAGIC('K', 'E', 'R', 'N');$/;"	m	class:gbe::Kernel
magic_begin	./backend/program.hpp	/^    static const uint32_t magic_begin = TO_MAGIC('P', 'R', 'O', 'G');$/;"	m	class:gbe::Program
magic_begin	./ir/constant.hpp	/^    static const uint32_t magic_begin = TO_MAGIC('C', 'N', 'S', 'T');$/;"	m	class:gbe::ir::ConstantSet
magic_begin	./ir/image.hpp	/^    static const uint32_t magic_begin = TO_MAGIC('I', 'M', 'A', 'G');$/;"	m	class:gbe::ir::ImageSet
magic_begin	./ir/reloc.hpp	/^    static const uint32_t magic_begin = TO_MAGIC('R', 'E', 'L', 'C');$/;"	m	class:gbe::ir::RelocTable
magic_begin	./ir/sampler.hpp	/^    static const uint32_t magic_begin = TO_MAGIC('S', 'A', 'M', 'P');$/;"	m	class:gbe::ir::SamplerSet
magic_end	./backend/program.hpp	/^    static const uint32_t magic_end = TO_MAGIC('G', 'O', 'R', 'P');$/;"	m	class:gbe::Program
magic_end	./backend/program.hpp	/^    static const uint32_t magic_end = TO_MAGIC('N', 'R', 'E', 'K');$/;"	m	class:gbe::Kernel
magic_end	./ir/constant.hpp	/^    static const uint32_t magic_end = TO_MAGIC('T', 'S', 'N', 'C');$/;"	m	class:gbe::ir::ConstantSet
magic_end	./ir/image.hpp	/^    static const uint32_t magic_end = TO_MAGIC('G', 'A', 'M', 'I');$/;"	m	class:gbe::ir::ImageSet
magic_end	./ir/reloc.hpp	/^    static const uint32_t magic_end = TO_MAGIC('C', 'L', 'E', 'R');$/;"	m	class:gbe::ir::RelocTable
magic_end	./ir/sampler.hpp	/^    static const uint32_t magic_end = TO_MAGIC('P', 'M', 'A', 'S');$/;"	m	class:gbe::ir::SamplerSet
main	./gbe_bin_generater.cpp	/^int main (int argc, const char **argv)$/;"	f
makeBarrier	./backend/gen_insn_scheduling.cpp	/^  void DependencyTracker::makeBarrier(int32_t barrierID, int32_t insnNum) {$/;"	f	class:gbe::DependencyTracker
makeDefSet	./ir/value.cpp	/^  void LiveOutSet::makeDefSet(DefSet &udChain, const BasicBlock &bb, Register reg)$/;"	f	class:gbe::ir::LiveOutSet
makePerComponentScalarizedCalls	./llvm/llvm_scalarize.cpp	/^  void Scalarize::makePerComponentScalarizedCalls(Instruction* inst, ArrayRef<Value*> args)$/;"	f	class:gbe::Scalarize
makeScalarizedCalls	./llvm/llvm_scalarize.cpp	/^  void Scalarize::makeScalarizedCalls(Function* f, ArrayRef<Value*> args, int count, VectorValues& vVals)$/;"	f	class:gbe::Scalarize
makeTypeSigned	./llvm/llvm_gen_backend.cpp	/^  static ir::Type makeTypeSigned(const ir::Type &type) {$/;"	f	namespace:gbe
makeTypeUnsigned	./llvm/llvm_gen_backend.cpp	/^  static ir::Type makeTypeUnsigned(const ir::Type &type) {$/;"	f	namespace:gbe
map	./llvm/llvm_gen_backend.hpp	/^    gbe::map<std::string, OCLInstrinsic> map;$/;"	m	struct:gbe::OCLIntrinsicMap
map	./sys/map.hpp	/^    INLINE map(InputIterator first,$/;"	f	class:gbe::map
map	./sys/map.hpp	/^    INLINE map(const key_compare &comp = key_compare(),$/;"	f	class:gbe::map
map	./sys/map.hpp	/^  class map : public std::map<Key,T,Pred,Allocator<std::pair<const Key, T>>>,$/;"	c	namespace:gbe
mapped_type	./sys/map.hpp	/^    typedef T mapped_type;$/;"	t	class:gbe::map
mark	./ir/structurizer.hpp	/^    bool mark;$/;"	m	class:gbe::ir::Block
markAllChildren	./backend/gen_insn_selection.cpp	/^  static void markAllChildren(SelectionDAG &dag) {$/;"	f	namespace:gbe
markNeedEndif	./ir/structurizer.cpp	/^  void CFGStructurizer::markNeedEndif(Block *block, bool status)$/;"	f	class:gbe::ir::CFGStructurizer
markNeedIf	./ir/structurizer.cpp	/^  void CFGStructurizer::markNeedIf(Block *block, bool status)$/;"	f	class:gbe::ir::CFGStructurizer
markStructuredBlocks	./ir/structurizer.cpp	/^  void CFGStructurizer::markStructuredBlocks(Block *block, bool status)$/;"	f	class:gbe::ir::CFGStructurizer
mask	./backend/gen_register.hpp	/^    static INLINE GenRegister mask(uint32_t subnr) {$/;"	f	class:gbe::GenRegister
mask_control	./backend/gen7_instruction.hpp	/^      uint32_t mask_control:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
mask_control	./backend/gen8_instruction.hpp	/^        uint32_t mask_control:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon105
mask_control	./backend/gen8_instruction.hpp	/^        uint32_t mask_control:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon106
mask_control	./backend/gen8_instruction.hpp	/^        uint32_t mask_control:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon107
mask_control	./backend/gen8_instruction.hpp	/^        uint32_t mask_control:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon108
mask_control	./backend/gen8_instruction.hpp	/^        uint32_t mask_control:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon109
mask_control	./backend/gen8_instruction.hpp	/^        uint32_t mask_control:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
mask_control	./backend/gen8_instruction.hpp	/^        uint32_t mask_control:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
mask_control	./backend/gen9_instruction.hpp	/^        uint32_t mask_control:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon3::__anon4
mask_control	./backend/gen_insn_compact.cpp	/^      uint32_t mask_control:1;$/;"	m	struct:gbe::ControlBits::__anon94	file:
mask_control	./backend/gen_insn_compact.cpp	/^      uint32_t mask_control:1;$/;"	m	struct:gbe::Src3ControlBits::__anon95	file:
matchBasicBlock	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::matchBasicBlock(const ir::BasicBlock &bb, uint32_t insnNum)$/;"	f	class:gbe::Selection::Opaque
matchLoad	./ir/lowering.cpp	/^  bool matchLoad(Instruction *insn,$/;"	f	namespace:gbe::ir
matchLoadAddImm	./ir/lowering.cpp	/^  bool FunctionArgumentLowerer::matchLoadAddImm(uint32_t argID)$/;"	f	class:gbe::ir::FunctionArgumentLowerer
match_scalar	./libocl/script/gen_vector.py	/^def match_scalar(dtype):$/;"	f
match_signed	./libocl/script/gen_vector.py	/^def match_signed(dtype):$/;"	f
match_unsigned	./libocl/script/gen_vector.py	/^def match_unsigned(dtype):$/;"	f
matchingElseLabel	./ir/function.hpp	/^    LabelIndex matchingElseLabel;$/;"	m	class:gbe::ir::BasicBlock
matchingEndifLabel	./ir/function.hpp	/^    LabelIndex matchingEndifLabel;$/;"	m	class:gbe::ir::BasicBlock
matchingStructureEntry	./ir/function.hpp	/^    BasicBlock *matchingStructureEntry;$/;"	m	class:gbe::ir::BasicBlock
materializedFuncCall	./llvm/llvm_bitcode_link.cpp	/^  static bool materializedFuncCall(Module& src, Module& lib, llvm::Function& KF,$/;"	f	namespace:gbe
math_function_gen7	./backend/gen/gen_mesa_disasm.c	/^static const char *math_function_gen7[16] = {$/;"	v	file:
math_function_gen8	./backend/gen/gen_mesa_disasm.c	/^static const char *math_function_gen8[16] = {$/;"	v	file:
math_gen5	./backend/gen7_instruction.hpp	/^      } math_gen5;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon65
math_gen5	./backend/gen8_instruction.hpp	/^      } math_gen5;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon130
math_gen5	./backend/gen_defs.hpp	/^      } math_gen5;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon24
math_gentype	./libocl/script/gen_vector.py	/^math_gentype = ["math_gentype", gen_vector_type(all_float_type)]$/;"	v
math_gentyped	./libocl/script/gen_vector.py	/^math_gentyped = ["math_gentyped", gen_vector_type(["double"])]$/;"	v
math_gentypef	./libocl/script/gen_vector.py	/^math_gentypef = ["math_gentypef", gen_vector_type(["float"])]$/;"	v
math_gentypeh	./libocl/script/gen_vector.py	/^math_gentypeh = ["math_gentypeh", gen_vector_type(["half"])]$/;"	v
max	./sys/cvar.hpp	/^      struct { float   min, *curr, max; } f; \/\/!< float variables with bounds$/;"	m	struct:gbe::CVarInit::__anon181::__anon183
max	./sys/cvar.hpp	/^      struct { int32_t min, *curr, max; } i; \/\/!< integer variables with bounds$/;"	m	struct:gbe::CVarInit::__anon181::__anon182
maxElemNum	./sys/alloc.hpp	/^      size_t allocated, maxElemNum;$/;"	m	class:gbe::GrowingPool::GrowingPoolElem
maxID	./backend/gen_reg_allocation.cpp	/^    int32_t minID, maxID; \/\/!< Starting and ending points$/;"	m	struct:gbe::GenRegInterval	file:
maxInsnNum	./backend/gen_insn_selection.cpp	/^    uint32_t maxInsnNum;$/;"	m	class:gbe::Selection::Opaque	file:
maxOffset	./backend/context.cpp	/^    int32_t maxOffset;$/;"	m	class:gbe::SimpleAllocator	file:
maxSize	./sys/alloc.hpp	/^    size_t maxSize;$/;"	m	class:gbe::LinearAllocator
max_size	./sys/alloc.hpp	/^    INLINE size_type max_size(void) const {$/;"	f	class:gbe::Allocator
memAlloc	./sys/alloc.cpp	/^  void* memAlloc(size_t size) {$/;"	f	namespace:gbe
memDebugger	./sys/alloc.cpp	/^  static MemDebugger *memDebugger = NULL;$/;"	m	namespace:gbe	file:
memFree	./sys/alloc.cpp	/^  void memFree(void *ptr) {$/;"	f	namespace:gbe
memoryFence	./sys/intrinsics.hpp	/^INLINE void memoryFence(void) { _mm_mfence(); }$/;"	f
memoryInitializationEnabled	./sys/alloc.cpp	/^  static bool memoryInitializationEnabled = true;$/;"	m	namespace:gbe	file:
memory_order	./libocl/include/ocl_types.h	/^} memory_order;$/;"	t	typeref:enum:__anon170
memory_order_acq_rel	./libocl/include/ocl_types.h	/^	memory_order_acq_rel,$/;"	e	enum:__anon170
memory_order_acquire	./libocl/include/ocl_types.h	/^	memory_order_acquire,$/;"	e	enum:__anon170
memory_order_relaxed	./libocl/include/ocl_types.h	/^	memory_order_relaxed,$/;"	e	enum:__anon170
memory_order_release	./libocl/include/ocl_types.h	/^	memory_order_release,$/;"	e	enum:__anon170
memory_order_seq_cst	./libocl/include/ocl_types.h	/^	memory_order_seq_cst$/;"	e	enum:__anon170
memory_scope	./libocl/include/ocl_types.h	/^} memory_scope;$/;"	t	typeref:enum:__anon171
memory_scope_all_svm_devices	./libocl/include/ocl_types.h	/^	memory_scope_all_svm_devices,$/;"	e	enum:__anon171
memory_scope_device	./libocl/include/ocl_types.h	/^	memory_scope_device,$/;"	e	enum:__anon171
memory_scope_sub_group	./libocl/include/ocl_types.h	/^	memory_scope_sub_group,$/;"	e	enum:__anon171
memory_scope_work_group	./libocl/include/ocl_types.h	/^	memory_scope_work_group,$/;"	e	enum:__anon171
memory_scope_work_item	./libocl/include/ocl_types.h	/^	memory_scope_work_item,$/;"	e	enum:__anon171
memspaces	./libocl/script/gen_vector.py	/^memspaces = ["__local ", "__private ", "__global ", "__generic "]$/;"	v
mergeLoad	./llvm/llvm_loadstore_optimization.cpp	/^  void GenLoadStoreOptimization::mergeLoad(BasicBlock &BB, SmallVector<Instruction*, 16> &merged) {$/;"	f	class:gbe::GenLoadStoreOptimization
mergeLoopBlock	./ir/structurizer.cpp	/^  Block* CFGStructurizer::mergeLoopBlock(BlockList& loopSets)$/;"	f	class:gbe::ir::CFGStructurizer
mergeSerialBlock	./ir/structurizer.cpp	/^  Block* CFGStructurizer::mergeSerialBlock(BlockList& serialBBs)$/;"	f	class:gbe::ir::CFGStructurizer
mergeStore	./llvm/llvm_loadstore_optimization.cpp	/^  void GenLoadStoreOptimization::mergeStore(BasicBlock &BB, SmallVector<Instruction*, 16> &merged) {$/;"	f	class:gbe::GenLoadStoreOptimization
messages	./llvm/llvm_to_gen.cpp	/^    llvm::raw_string_ostream messages;$/;"	m	class:gbe::gbeDiagnosticContext	file:
min	./sys/cvar.hpp	/^      struct { float   min, *curr, max; } f; \/\/!< float variables with bounds$/;"	m	struct:gbe::CVarInit::__anon181::__anon183
min	./sys/cvar.hpp	/^      struct { int32_t min, *curr, max; } i; \/\/!< integer variables with bounds$/;"	m	struct:gbe::CVarInit::__anon181::__anon182
minID	./backend/gen_reg_allocation.cpp	/^    int32_t minID, maxID; \/\/!< Starting and ending points$/;"	m	struct:gbe::GenRegInterval	file:
min_width	./ir/printf.hpp	/^      int min_width;$/;"	m	struct:gbe::ir::PrintfState
misc_gentypem	./libocl/script/gen_vector.py	/^misc_gentypem = ["misc_gentypem", gen_vector_type(all_type, [2, 4, 8, 16])]$/;"	v
misc_gentypen	./libocl/script/gen_vector.py	/^misc_gentypen = ["misc_gentypen", gen_vector_type(all_type, [2, 4, 8, 16])]$/;"	v
misc_ugentypem	./libocl/script/gen_vector.py	/^misc_ugentypem = ["misc_ugentypem", gen_vector_type(all_utype, [2, 4, 8, 16])]$/;"	v
misc_ugentypen	./libocl/script/gen_vector.py	/^misc_ugentypen = ["misc_ugentypen", gen_vector_type(all_utype, [2, 4, 8, 16])]$/;"	v
modAcc	./backend/gen_insn_selection.cpp	/^  bool SelectionInstruction::modAcc(void) const {$/;"	f	class:gbe::SelectionInstruction
module	./backend/gen_program.hpp	/^    void* module;$/;"	m	class:gbe::GenProgram
module	./llvm/llvm_printf_parser.cpp	/^    Module* module;$/;"	m	class:gbe::PrintfParser	file:
module	./llvm/llvm_profiling.cpp	/^    Module* module;$/;"	m	class:gbe::ProfilingInserter	file:
module	./llvm/llvm_scalarize.cpp	/^    Module* module;$/;"	m	class:gbe::Scalarize	file:
msg	./sys/exception.hpp	/^    std::string msg; \/\/!< String message$/;"	m	class:gbe::Exception
msg_control	./backend/gen7_instruction.hpp	/^        uint32_t msg_control:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon68
msg_control	./backend/gen8_instruction.hpp	/^        uint32_t msg_control:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon132
msg_control	./backend/gen_defs.hpp	/^        uint32_t msg_control:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon27
msg_gateway	./backend/gen7_instruction.hpp	/^      } msg_gateway;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon63
msg_gateway	./backend/gen8_instruction.hpp	/^      } msg_gateway;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon128
msg_gateway	./backend/gen_defs.hpp	/^      } msg_gateway;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon22
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon62
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon63
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon64
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon65
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon66
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon67
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon68
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon69
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon70
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon71
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon72
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon73
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon74
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon75
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon76
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon78
msg_length	./backend/gen7_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon80
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon127
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon128
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon129
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon130
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon131
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon132
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon133
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon134
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon135
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon136
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon137
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon138
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon140
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon141
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon142
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon143
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon146
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon147
msg_length	./backend/gen8_instruction.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon149
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon21
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon22
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon23
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon24
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon25
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon26
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon27
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon28
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon29
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon30
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon31
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon32
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon33
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon34
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon35
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon36
msg_length	./backend/gen_defs.hpp	/^        uint32_t msg_length:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon38
msg_sub_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_sub_type:2; \/\/ 00 OWord block R\/W 01 Unaligned OWord block read 10 Oword Dual Block R\/W 11 HWord Block R\/W$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon147
msg_type	./backend/gen7_instruction.hpp	/^        uint32_t msg_type:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon71
msg_type	./backend/gen7_instruction.hpp	/^        uint32_t msg_type:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon67
msg_type	./backend/gen7_instruction.hpp	/^        uint32_t msg_type:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon68
msg_type	./backend/gen7_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon69
msg_type	./backend/gen7_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon70
msg_type	./backend/gen7_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon72
msg_type	./backend/gen7_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon73
msg_type	./backend/gen7_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon74
msg_type	./backend/gen7_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon75
msg_type	./backend/gen7_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon76
msg_type	./backend/gen7_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon80
msg_type	./backend/gen7_instruction.hpp	/^        uint32_t msg_type:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon66
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon135
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon132
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon133
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon134
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon136
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon137
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon138
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon140
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon149
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:5;  \/\/ 10000 scatter read,  11010 scatter write 11001 a64 untyped write$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon143
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:5;  \/\/ 10100 A64 block read,  10101 A64 block write$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon147
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon131
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon141
msg_type	./backend/gen8_instruction.hpp	/^        uint32_t msg_type:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon142
msg_type	./backend/gen_defs.hpp	/^        uint32_t msg_type:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon30
msg_type	./backend/gen_defs.hpp	/^        uint32_t msg_type:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon26
msg_type	./backend/gen_defs.hpp	/^        uint32_t msg_type:3;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon27
msg_type	./backend/gen_defs.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon28
msg_type	./backend/gen_defs.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon29
msg_type	./backend/gen_defs.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon31
msg_type	./backend/gen_defs.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon32
msg_type	./backend/gen_defs.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon33
msg_type	./backend/gen_defs.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon34
msg_type	./backend/gen_defs.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon35
msg_type	./backend/gen_defs.hpp	/^        uint32_t msg_type:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon38
msg_type	./backend/gen_defs.hpp	/^        uint32_t msg_type:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon25
msg_type	./backend/gen_insn_selection.hpp	/^        uint16_t msg_type:2;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon89
msg_type	./ir/instruction.cpp	/^      uint8_t msg_type;$/;"	m	class:gbe::ir::internal::VmeInstruction	file:
msglen	./backend/gen_insn_selection.hpp	/^        uint16_t msglen:5;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon87
mutateArgAddressSpace	./llvm/llvm_device_enqueue.cpp	/^  void mutateArgAddressSpace(Argument *arg)$/;"	f	namespace:gbe
mutex	./sys/alloc.cpp	/^    MutexSys mutex;$/;"	m	struct:gbe::MemDebugger	file:
mutex	./sys/mutex.hpp	/^    Mutex& mutex;$/;"	m	class:gbe::Lock
mutex	./sys/mutex.hpp	/^    void* mutex;$/;"	m	class:gbe::MutexSys
n_instruction	./backend/gen_encoder.hpp	/^    uint32_t n_instruction(void) const { return store.size(); }$/;"	f	class:gbe::GenEncoder
name	./backend/context.hpp	/^    std::string name;                     \/\/!< Name of the kernel to compile$/;"	m	class:gbe::Context
name	./backend/gen/gen_mesa_disasm.c	/^  const char    *name;$/;"	m	struct:__anon41	file:
name	./backend/program.hpp	/^    std::string name;    \/\/!< Kernel name$/;"	m	class:gbe::Kernel
name	./ir/constant.hpp	/^    std::string name; \/\/!< Optional name of the constant$/;"	m	class:gbe::ir::Constant
name	./ir/function.hpp	/^    const std::string name; \/\/!< Holds the function name for IR output$/;"	m	struct:gbe::ir::FunctionArgument
name	./ir/function.hpp	/^    std::string name;               \/\/!< Function name$/;"	m	class:gbe::ir::Function
ndrange_info_t	./libocl/include/ocl_enqueue.h	/^struct ndrange_info_t {$/;"	s
ndrange_t	./libocl/include/ocl_enqueue.h	/^typedef struct ndrange_info_t ndrange_t;$/;"	t	typeref:struct:ndrange_info_t
ndst	./backend/gen/gen_mesa_disasm.c	/^  int	    ndst;$/;"	m	struct:__anon41	file:
needEndif	./ir/function.hpp	/^    bool needEndif;$/;"	m	class:gbe::ir::BasicBlock
needExpand	./llvm/ExpandConstantExpr.cpp	/^static bool needExpand(ConstantVector *CV) {$/;"	f	file:
needIf	./ir/function.hpp	/^    bool needIf;$/;"	m	class:gbe::ir::BasicBlock
needToSplitAlu1	./backend/gen_encoder.cpp	/^  INLINE bool needToSplitAlu1(GenEncoder *p, GenRegister dst, GenRegister src) {$/;"	f	namespace:gbe
needToSplitAlu2	./backend/gen_encoder.cpp	/^  INLINE bool needToSplitAlu2(GenEncoder *p, GenRegister dst, GenRegister src0, GenRegister src1) {$/;"	f	namespace:gbe
needToSplitCmp	./backend/gen_encoder.cpp	/^  INLINE bool needToSplitCmp(GenEncoder *p, GenRegister src0, GenRegister src1, GenRegister dst) {$/;"	f	namespace:gbe
negate	./backend/gen/gen_mesa_disasm.c	/^static const char *negate[2] = {$/;"	v	file:
negate	./backend/gen_register.hpp	/^    static INLINE GenRegister negate(GenRegister reg) {$/;"	f	class:gbe::GenRegister
newAuxLabel	./backend/gen_insn_selection.cpp	/^    INLINE ir::LabelIndex newAuxLabel()$/;"	f	class:gbe::Selection::Opaque	file:
newConstant	./ir/unit.cpp	/^  void Unit::newConstant(const std::string &name,$/;"	f	class:gbe::ir::Unit
newCurbeEntry	./backend/context.cpp	/^  uint32_t Context::newCurbeEntry(gbe_curbe_type value,$/;"	f	class:gbe::Context
newDoubleImmediate	./ir/context.hpp	/^    INLINE ImmediateIndex newDoubleImmediate(double x) {$/;"	f	class:gbe::ir::Context
newFloatImmediate	./ir/context.hpp	/^    INLINE ImmediateIndex newFloatImmediate(float x) {$/;"	f	class:gbe::ir::Context
newFunction	./ir/unit.cpp	/^  Function *Unit::newFunction(const std::string &name) {$/;"	f	class:gbe::ir::Unit
newImmediate	./ir/context.hpp	/^    INLINE ImmediateIndex newImmediate(vector<ImmediateIndex>indexVector, Type dstType) {$/;"	f	class:gbe::ir::Context
newImmediate	./ir/context.hpp	/^    template <typename T> INLINE ImmediateIndex newImmediate(T value) {$/;"	f	class:gbe::ir::Context
newImmediate	./ir/context.hpp	/^    template <typename T> INLINE ImmediateIndex newImmediate(T value, uint32_t num) {$/;"	f	class:gbe::ir::Context
newImmediate	./ir/function.hpp	/^    INLINE ImmediateIndex newImmediate(const Immediate &imm) {$/;"	f	class:gbe::ir::Function
newImmediate	./llvm/llvm_gen_backend.cpp	/^  ir::ImmediateIndex GenWriter::newImmediate(Constant *CPV, uint32_t index) {$/;"	f	class:gbe::GenWriter
newIntegerImmediate	./ir/context.hpp	/^    INLINE ImmediateIndex newIntegerImmediate(int64_t x, Type type) {$/;"	f	class:gbe::ir::Context
newLabel	./ir/function.cpp	/^  LabelIndex Function::newLabel(void) {$/;"	f	class:gbe::ir::Function
newLabelIndex	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::newLabelIndex(const BasicBlock *bb) {$/;"	f	class:gbe::GenWriter
newRegister	./ir/function.hpp	/^    INLINE Register newRegister(RegisterFamily family,$/;"	f	class:gbe::ir::Function
newRegister	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::newRegister(Value *value, Value *key, bool uniform) {$/;"	f	class:gbe::GenWriter
newScalar	./llvm/llvm_gen_backend.cpp	/^    ir::Register newScalar(Value *value, Value *key = NULL, uint32_t index = 0u, bool uniform = false)$/;"	f	class:gbe::RegisterTranslator
newScalarProxy	./llvm/llvm_gen_backend.cpp	/^    void newScalarProxy(ir::Register reg, Value *value, uint32_t index = 0u) {$/;"	f	class:gbe::RegisterTranslator
newSelection	./backend/gen75_context.cpp	/^  void Gen75Context::newSelection(void) {$/;"	f	class:gbe::Gen75Context
newSelection	./backend/gen8_context.cpp	/^  void ChvContext::newSelection(void) {$/;"	f	class:gbe::ChvContext
newSelection	./backend/gen8_context.cpp	/^  void Gen8Context::newSelection(void) {$/;"	f	class:gbe::Gen8Context
newSelection	./backend/gen9_context.cpp	/^  void BxtContext::newSelection(void) {$/;"	f	class:gbe::BxtContext
newSelection	./backend/gen9_context.cpp	/^  void Gen9Context::newSelection(void) {$/;"	f	class:gbe::Gen9Context
newSelection	./backend/gen9_context.cpp	/^  void GlkContext::newSelection(void) {$/;"	f	class:gbe::GlkContext
newSelection	./backend/gen9_context.cpp	/^  void KblContext::newSelection(void) {$/;"	f	class:gbe::KblContext
newSelection	./backend/gen_context.cpp	/^  void GenContext::newSelection(void) {$/;"	f	class:gbe::GenContext
newValueProxy	./llvm/llvm_gen_backend.cpp	/^    void newValueProxy(Value *real,$/;"	f	class:gbe::RegisterTranslator
newline	./backend/gen/gen_mesa_disasm.c	/^static int newline(FILE *f)$/;"	f	file:
next	./backend/context.cpp	/^      Block *prev, *next; \/\/!< Previous and next free blocks$/;"	m	struct:gbe::SimpleAllocator::Block	file:
next	./backend/gen_encoder.cpp	/^  GenNativeInstruction *GenEncoder::next(uint32_t opcode) {$/;"	f	class:gbe::GenEncoder
next	./backend/gen_register.hpp	/^    static INLINE GenRegister next(GenRegister reg) {$/;"	f	class:gbe::GenRegister
next	./sys/alloc.hpp	/^      GrowingPoolElem *next;$/;"	m	class:gbe::GrowingPool::GrowingPoolElem
next	./sys/alloc.hpp	/^      Segment *next;$/;"	m	struct:gbe::LinearAllocator::Segment
next	./sys/intrusive_list.hpp	/^    intrusive_list_node *next;$/;"	m	struct:gbe::intrusive_list_node
nextBlock	./ir/function.hpp	/^    BasicBlock *nextBlock; \/\/!< Block allocated just after this one$/;"	m	class:gbe::ir::BasicBlock
nextCompact	./backend/gen_encoder.cpp	/^  GenCompactInstruction *GenEncoder::nextCompact(uint32_t opcode) {$/;"	f	class:gbe::GenEncoder
nextHighestPowerOf2	./sys/platform.hpp	/^  INLINE uint32_t nextHighestPowerOf2(uint32_t x) {$/;"	f	namespace:gbe
nib_ctrl	./backend/gen7_instruction.hpp	/^        uint32_t nib_ctrl:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon45
nib_ctrl	./backend/gen7_instruction.hpp	/^        uint32_t nib_ctrl:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon46
nib_ctrl	./backend/gen7_instruction.hpp	/^        uint32_t nib_ctrl:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon47
nib_ctrl	./backend/gen7_instruction.hpp	/^        uint32_t nib_ctrl:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon48
nib_ctrl	./backend/gen8_instruction.hpp	/^      uint32_t nib_ctrl:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
nib_ctrl	./backend/gen9_instruction.hpp	/^      uint32_t nib_ctrl:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
nibble_control	./backend/gen_insn_compact.cpp	/^      uint32_t nibble_control:1;$/;"	m	struct:gbe::Src3ControlBits::__anon95	file:
node	./backend/gen_insn_scheduling.cpp	/^    ScheduleDAGNode *node;$/;"	m	struct:gbe::ScheduleListNode	file:
node	./sys/intrusive_list.hpp	/^    INLINE Pointer node(void) const { return m_node; }$/;"	f	class:gbe::intrusive_list_iterator
node_type	./sys/intrusive_list.hpp	/^    typedef T node_type;$/;"	t	class:gbe::intrusive_list
nodes	./backend/gen_insn_scheduling.cpp	/^    vector<ScheduleDAGNode*> nodes;$/;"	m	struct:gbe::DependencyTracker	file:
nodup	./llvm/llvm_barrier_nodup.cpp	/^      bool nodup;$/;"	m	class:gbe::BarrierNodup	file:
notification0	./backend/gen_register.hpp	/^    static INLINE GenRegister notification0(uint32_t subnr) {$/;"	f	class:gbe::GenRegister
notify	./backend/gen7_instruction.hpp	/^        uint32_t notify:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon63
notify	./backend/gen7_instruction.hpp	/^        uint32_t notify:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon78
notify	./backend/gen8_instruction.hpp	/^        uint32_t notify:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon128
notify	./backend/gen8_instruction.hpp	/^        uint32_t notify:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon146
notify	./backend/gen_defs.hpp	/^        uint32_t notify:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon22
notify	./backend/gen_defs.hpp	/^        uint32_t notify:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon36
nsrc	./backend/gen/gen_mesa_disasm.c	/^  int	    nsrc;$/;"	m	struct:__anon41	file:
null	./backend/gen_register.hpp	/^    static INLINE GenRegister null(void) {$/;"	f	class:gbe::GenRegister
nullud	./backend/gen_register.hpp	/^    static INLINE GenRegister nullud(void) {$/;"	f	class:gbe::GenRegister
numIfPatternMatch	./ir/structurizer.hpp	/^      int  numIfPatternMatch;$/;"	m	class:gbe::ir::CFGStructurizer
numLoopPatternMatch	./ir/structurizer.hpp	/^      int  numLoopPatternMatch;$/;"	m	class:gbe::ir::CFGStructurizer
numSerialPatternMatch	./ir/structurizer.hpp	/^      int  numSerialPatternMatch;$/;"	m	class:gbe::ir::CFGStructurizer
numgroup0	./ir/profile.hpp	/^    static const Register numgroup0 = Register(6); \/\/ get_num_groups(0)$/;"	m	namespace:gbe::ir::ocl
numgroup1	./ir/profile.hpp	/^    static const Register numgroup1 = Register(7); \/\/ get_num_groups(1)$/;"	m	namespace:gbe::ir::ocl
numgroup2	./ir/profile.hpp	/^    static const Register numgroup2 = Register(8); \/\/ get_num_groups(2)$/;"	m	namespace:gbe::ir::ocl
ocl	./ir/profile.cpp	/^  namespace ocl$/;"	n	namespace:gbe::ir	file:
ocl	./ir/profile.hpp	/^  namespace ocl$/;"	n	namespace:gbe::ir
oclVersion	./backend/program.hpp	/^    uint32_t oclVersion;       \/\/!< Opencl Version (120 for 1.2, 200 for 2.0)$/;"	m	class:gbe::Kernel
oclVersion	./ir/unit.hpp	/^    uint32_t oclVersion;$/;"	m	class:gbe::ir::Unit
offset	./backend/context.cpp	/^      int32_t offset;        \/\/!< Where the free block starts$/;"	m	struct:gbe::SimpleAllocator::Block	file:
offset	./backend/gen7_instruction.hpp	/^        uint32_t offset:12;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon71
offset	./backend/gen8_instruction.hpp	/^        uint32_t offset:12;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon135
offset	./backend/gen_defs.hpp	/^        uint32_t offset:12;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon30
offset	./backend/gen_insn_selection.hpp	/^        uint16_t offset:5;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon85
offset	./backend/gen_register.hpp	/^    static INLINE GenRegister offset(GenRegister reg, int nr, int subnr = 0) {$/;"	f	class:gbe::GenRegister
offset	./backend/program.hpp	/^    uint64_t offset : 16; \/\/!< Optional offset to encode$/;"	m	struct:gbe::PatchInfo
offset	./ir/constant.hpp	/^    uint32_t offset;    \/\/!< Offset of the constant in the data segment$/;"	m	class:gbe::ir::Constant
offset	./ir/function.hpp	/^    uint32_t offset;          \/\/!< Offset in the function argument$/;"	m	struct:gbe::ir::PushLocation
offset	./ir/instruction.cpp	/^      Register          offset;$/;"	m	class:gbe::ir::internal::MemInstruction	file:
offset	./ir/instruction.cpp	/^      uint32_t offset;$/;"	m	class:gbe::ir::internal::IndirectMovInstruction	file:
offset	./ir/instruction.cpp	/^      uint32_t offset;$/;"	m	class:gbe::ir::internal::RegionInstruction	file:
offset	./ir/lowering.cpp	/^    uint64_t offset;      \/\/!< Offset where to load in the structure$/;"	m	struct:gbe::ir::LoadAddImm	file:
offset	./sys/alloc.hpp	/^      size_t offset;$/;"	m	struct:gbe::LinearAllocator::Segment
offsetID	./backend/gen_insn_selection.hpp	/^    uint16_t offsetID;$/;"	m	class:gbe::SelectionVector
offsetReg	./backend/gen_reg_allocation.cpp	/^    map<uint32_t, ir::Register> offsetReg;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
onFailedAssertion	./sys/assert.cpp	/^  void onFailedAssertion(const char *msg, const char *file, const char *fn, int line)$/;"	f	namespace:gbe
one	./ir/profile.hpp	/^    static const Register one = Register(28);     \/\/  scalar register holds one.$/;"	m	namespace:gbe::ir::ocl
opaque	./backend/gen_insn_selection.hpp	/^    Opaque *opaque;$/;"	m	class:gbe::Selection
opaque	./backend/gen_reg_allocation.hpp	/^    Opaque *opaque;$/;"	m	class:gbe::GenRegAllocator
opcode	./backend/gen/gen_mesa_disasm.c	/^} opcode[128] = {$/;"	v	typeref:struct:__anon41	file:
opcode	./backend/gen7_instruction.hpp	/^        uint32_t opcode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon64
opcode	./backend/gen7_instruction.hpp	/^      uint32_t opcode:7;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
opcode	./backend/gen8_instruction.hpp	/^        uint32_t opcode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon129
opcode	./backend/gen8_instruction.hpp	/^      uint32_t opcode:7;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
opcode	./backend/gen9_instruction.hpp	/^      uint32_t opcode:7;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
opcode	./backend/gen_defs.hpp	/^        uint32_t opcode:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon23
opcode	./backend/gen_defs.hpp	/^      uint32_t opcode:7;$/;"	m	struct:GenCompactInstruction::__anon12::__anon13
opcode	./backend/gen_defs.hpp	/^      uint32_t opcode:7;$/;"	m	struct:GenCompactInstruction::__anon9::__anon10
opcode	./backend/gen_defs.hpp	/^      uint32_t opcode:7;$/;"	m	struct:GenNativeInstruction::__anon16::__anon17
opcode	./backend/gen_defs.hpp	/^enum opcode {$/;"	g
opcode	./backend/gen_insn_selection.hpp	/^    uint8_t opcode;$/;"	m	class:gbe::SelectionInstruction
opcode	./ir/instruction.cpp	/^      Opcode opcode;$/;"	m	struct:gbe::ir::internal::BasePolicy	file:
opcodes	./backend/gen_insn_selection.cpp	/^    vector<ir::Opcode> opcodes;$/;"	m	class:gbe::SelectionPattern	file:
operator !=	./ir/half.cpp	/^  bool half::operator !=(const half& other) const$/;"	f	class:gbe::ir::half
operator !=	./sys/alloc.hpp	/^    INLINE bool operator!=(Allocator const& a) { return !operator==(a); }$/;"	f	class:gbe::Allocator
operator !=	./sys/intrusive_list.hpp	/^    INLINE bool operator!= (const intrusive_list_iterator& rhs) const {$/;"	f	class:gbe::intrusive_list_iterator
operator %	./ir/half.cpp	/^  half half::operator %(const half& other) const$/;"	f	class:gbe::ir::half
operator &&	./ir/half.cpp	/^  bool half::operator &&(const half& other) const$/;"	f	class:gbe::ir::half
operator *	./ir/half.cpp	/^  half half::operator *(const half& other) const$/;"	f	class:gbe::ir::half
operator *	./sys/intrusive_list.hpp	/^    INLINE Reference operator*(void) const {$/;"	f	class:gbe::intrusive_list_iterator
operator +	./ir/half.cpp	/^  half half::operator +(const half& other) const$/;"	f	class:gbe::ir::half
operator ++	./sys/atomic.hpp	/^    INLINE friend T operator++ (AtomicInternal& value) { return atomic_add(&value.data,  1) + 1; }$/;"	f	struct:gbe::AtomicInternal
operator ++	./sys/atomic.hpp	/^    INLINE friend T operator++ (AtomicInternal& value, int) { return atomic_add(&value.data,  1); }$/;"	f	struct:gbe::AtomicInternal
operator ++	./sys/intrusive_list.hpp	/^    INLINE intrusive_list_iterator operator++(int) {$/;"	f	class:gbe::intrusive_list_iterator
operator ++	./sys/intrusive_list.hpp	/^    INLINE intrusive_list_iterator& operator++(void) {$/;"	f	class:gbe::intrusive_list_iterator
operator +=	./sys/atomic.hpp	/^    INLINE friend T operator+= (AtomicInternal& value, T input) { return atomic_add(&value.data, input) + input; }$/;"	f	struct:gbe::AtomicInternal
operator -	./ir/half.cpp	/^  half half::operator -(const half& other) const$/;"	f	class:gbe::ir::half
operator --	./sys/atomic.hpp	/^    INLINE friend T operator-- (AtomicInternal& value) { return atomic_add(&value.data, -1) - 1; }$/;"	f	struct:gbe::AtomicInternal
operator --	./sys/atomic.hpp	/^    INLINE friend T operator-- (AtomicInternal& value, int) { return atomic_add(&value.data, -1); }$/;"	f	struct:gbe::AtomicInternal
operator --	./sys/intrusive_list.hpp	/^    INLINE intrusive_list_iterator operator--(int) {$/;"	f	class:gbe::intrusive_list_iterator
operator --	./sys/intrusive_list.hpp	/^    INLINE intrusive_list_iterator& operator--(void) {$/;"	f	class:gbe::intrusive_list_iterator
operator ->	./sys/intrusive_list.hpp	/^    INLINE Pointer operator->(void) const { return m_node; }$/;"	f	class:gbe::intrusive_list_iterator
operator /	./ir/half.cpp	/^  half half::operator \/(const half& other) const$/;"	f	class:gbe::ir::half
operator <	./backend/program.hpp	/^  INLINE bool operator< (PatchInfo i0, PatchInfo i1) {$/;"	f	namespace:gbe
operator <	./ir/function.hpp	/^  INLINE bool operator< (const PushLocation &arg0, const PushLocation &arg1) {$/;"	f	namespace:gbe::ir
operator <	./ir/half.cpp	/^  bool half::operator <(const half& other) const$/;"	f	class:gbe::ir::half
operator <	./ir/immediate.hpp	/^  INLINE bool operator< (const Immediate &imm0, const Immediate &imm1) {$/;"	f	namespace:gbe::ir
operator <	./ir/register.hpp	/^  INLINE bool operator< (const Register &r0, const Register &r1) {$/;"	f	namespace:gbe::ir
operator <	./ir/value.hpp	/^  INLINE bool operator< (const ValueDef &def0, const ValueDef &def1) {$/;"	f	namespace:gbe::ir
operator <	./ir/value.hpp	/^  INLINE bool operator< (const ValueUse &use0, const ValueUse &use1) {$/;"	f	namespace:gbe::ir
operator <<	./ir/function.cpp	/^  std::ostream &operator<< (std::ostream &out, const Function &fn)$/;"	f	namespace:gbe::ir
operator <<	./ir/instruction.cpp	/^  std::ostream &operator<< (std::ostream &out, AddressSpace addrSpace) {$/;"	f	namespace:gbe::ir
operator <<	./ir/instruction.cpp	/^  std::ostream &operator<< (std::ostream &out, const Instruction &insn) {$/;"	f	namespace:gbe::ir
operator <<	./ir/liveness.cpp	/^  std::ostream &operator<< (std::ostream &out, const Liveness &live) {$/;"	f	namespace:gbe::ir
operator <<	./ir/register.cpp	/^  std::ostream &operator<< (std::ostream &out, const RegisterData &regData)$/;"	f	namespace:gbe::ir
operator <<	./ir/register.cpp	/^  std::ostream &operator<< (std::ostream &out, const RegisterFile &file)$/;"	f	namespace:gbe::ir
operator <<	./ir/type.cpp	/^  std::ostream &operator<< (std::ostream &out, const Type &type) {$/;"	f	namespace:gbe::ir
operator <<	./ir/unit.cpp	/^  std::ostream &operator<< (std::ostream &out, const Unit &unit) {$/;"	f	namespace:gbe::ir
operator <<	./ir/value.cpp	/^  std::ostream &operator<< (std::ostream &out, LiveOutSet &set) {$/;"	f	namespace:gbe::ir
operator <<	./ir/value.cpp	/^  std::ostream &operator<< (std::ostream &out, const FunctionDAG &dag) {$/;"	f	namespace:gbe::ir
operator <=	./ir/half.cpp	/^  bool half::operator <=(const half& other) const$/;"	f	class:gbe::ir::half
operator =	./gbe_bin_generater.cpp	/^    program_build_instance& operator= (const program_build_instance& other) {$/;"	f	class:program_build_instance
operator =	./ir/constant.hpp	/^    ConstantSet & operator = (const ConstantSet& other) {$/;"	f	class:gbe::ir::ConstantSet
operator =	./ir/constant.hpp	/^    INLINE Constant& operator= (const Constant &other) {$/;"	f	class:gbe::ir::Constant
operator =	./ir/image.hpp	/^    void operator = (const ImageSet& other) {$/;"	f	class:gbe::ir::ImageSet
operator =	./ir/immediate.cpp	/^    Immediate & Immediate::operator= (const Immediate & other) {$/;"	f	class:Immediate
operator =	./ir/instruction.hpp	/^    INLINE Instruction &operator= (const Instruction &other) { return *this; }$/;"	f	class:gbe::ir::Instruction
operator =	./ir/register.hpp	/^    INLINE RegisterData &operator= (const RegisterData &other) {$/;"	f	class:gbe::ir::RegisterData
operator =	./ir/sampler.hpp	/^    void operator = (const SamplerSet& other) {$/;"	f	class:gbe::ir::SamplerSet
operator =	./sys/atomic.hpp	/^    INLINE AtomicInternal& operator =(const T input) { data = input; return *this; }$/;"	f	struct:gbe::AtomicInternal
operator =	./sys/exception.hpp	/^    Exception &operator= (const Exception &other) throw() {$/;"	f	class:gbe::Exception
operator =	./sys/platform.hpp	/^  INLINE NonCopyable& operator= (const NonCopyable&) {return *this;}$/;"	f	class:NonCopyable
operator ==	./ir/half.cpp	/^  bool half::operator ==(const half& other) const$/;"	f	class:gbe::ir::half
operator ==	./sys/alloc.hpp	/^    INLINE bool operator==(Allocator const&) { return true; }$/;"	f	class:gbe::Allocator
operator ==	./sys/intrusive_list.hpp	/^    INLINE bool operator== (const intrusive_list_iterator& rhs) const {$/;"	f	class:gbe::intrusive_list_iterator
operator >	./ir/half.cpp	/^  bool half::operator >(const half& other) const$/;"	f	class:gbe::ir::half
operator >=	./ir/half.cpp	/^  bool half::operator >=(const half& other) const$/;"	f	class:gbe::ir::half
operator T	./sys/atomic.hpp	/^    INLINE operator T() const { return data; }$/;"	f	struct:gbe::AtomicInternal
operator []	./sys/fixed_array.hpp	/^    INLINE T& operator[] (size_t index) {$/;"	f	class:gbe::fixed_array
operator []	./sys/fixed_array.hpp	/^    INLINE const T& operator[] (size_t index) const {$/;"	f	class:gbe::fixed_array
operator []	./sys/vector.hpp	/^    T &operator[] (size_t index) {$/;"	f	class:gbe::vector
operator []	./sys/vector.hpp	/^    const T &operator[] (size_t index) const {$/;"	f	class:gbe::vector
operator double	./ir/half.cpp	/^  half::operator double(void) const {$/;"	f	class:gbe::ir::half
operator float	./ir/half.cpp	/^  half::operator float(void) const {$/;"	f	class:gbe::ir::half
operator int16_t	./ir/half.cpp	/^  half::operator int16_t(void) const {$/;"	f	class:gbe::ir::half
operator uint16_t	./ir/half.cpp	/^  half::operator uint16_t(void) const {$/;"	f	class:gbe::ir::half
operator ||	./ir/half.cpp	/^  bool half::operator ||(const half& other) const$/;"	f	class:gbe::ir::half
opt_features	./backend/gen_insn_selection.hpp	/^    uint32_t opt_features;$/;"	m	class:gbe::Selection
optimize	./backend/gen_insn_selection_optimize.cpp	/^  void Selection::optimize()$/;"	f	class:gbe::Selection
optimizeLoadStore	./llvm/llvm_loadstore_optimization.cpp	/^  bool GenLoadStoreOptimization::optimizeLoadStore(BasicBlock &BB) {$/;"	f	class:gbe::GenLoadStoreOptimization
optimizePhiCopy	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::optimizePhiCopy(ir::Liveness &liveness, ir::Function &fn,$/;"	f	class:gbe::GenWriter
optimized	./backend/gen_insn_selection_optimize.cpp	/^    bool optimized;$/;"	m	class:gbe::SelBasicBlockOptimizer	file:
orderIter	./ir/structurizer.hpp	/^      BlockList::iterator orderIter;$/;"	m	class:gbe::ir::CFGStructurizer
orderedBlks	./ir/structurizer.hpp	/^      BlockList orderedBlks;$/;"	m	class:gbe::ir::CFGStructurizer
other	./gbe_bin_generater.cpp	/^    explicit program_build_instance(const program_build_instance& other) = delete;$/;"	m	class:program_build_instance	file:
other	./gbe_bin_generater.cpp	/^    program_build_instance(program_build_instance&& other) = default;$/;"	m	class:program_build_instance	file:
other	./sys/alloc.hpp	/^    struct rebind { typedef Allocator<U> other; };$/;"	t	struct:gbe::Allocator::rebind
out	./ir/instruction.cpp	/^      INLINE void out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::CalcTimestampInstruction
out	./ir/instruction.cpp	/^      INLINE void out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::GetImageInfoInstruction
out	./ir/instruction.cpp	/^      INLINE void out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::MediaBlockReadInstruction
out	./ir/instruction.cpp	/^      INLINE void out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::MediaBlockWriteInstruction
out	./ir/instruction.cpp	/^      INLINE void out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::SampleInstruction
out	./ir/instruction.cpp	/^      INLINE void out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::StoreProfilingInstruction
out	./ir/instruction.cpp	/^      INLINE void out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::TypedWriteInstruction
out	./ir/instruction.cpp	/^      INLINE void out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::VmeInstruction
out	./ir/instruction.cpp	/^    INLINE void AtomicInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::AtomicInstruction
out	./ir/instruction.cpp	/^    INLINE void BitCastInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::BitCastInstruction
out	./ir/instruction.cpp	/^    INLINE void BranchInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::BranchInstruction
out	./ir/instruction.cpp	/^    INLINE void ConvertInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::ConvertInstruction
out	./ir/instruction.cpp	/^    INLINE void IndirectMovInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::IndirectMovInstruction
out	./ir/instruction.cpp	/^    INLINE void LabelInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::LabelInstruction
out	./ir/instruction.cpp	/^    INLINE void LoadImmInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::LoadImmInstruction
out	./ir/instruction.cpp	/^    INLINE void LoadInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::LoadInstruction
out	./ir/instruction.cpp	/^    INLINE void NaryInstruction<srcNum>::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::NaryInstruction
out	./ir/instruction.cpp	/^    INLINE void PrintfInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::PrintfInstruction
out	./ir/instruction.cpp	/^    INLINE void ReadARFInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::ReadARFInstruction
out	./ir/instruction.cpp	/^    INLINE void RegionInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::RegionInstruction
out	./ir/instruction.cpp	/^    INLINE void SelectInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::SelectInstruction
out	./ir/instruction.cpp	/^    INLINE void StoreInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::StoreInstruction
out	./ir/instruction.cpp	/^    INLINE void SubGroupInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::SubGroupInstruction
out	./ir/instruction.cpp	/^    INLINE void SyncInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::SyncInstruction
out	./ir/instruction.cpp	/^    INLINE void TernaryInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::TernaryInstruction
out	./ir/instruction.cpp	/^    INLINE void WaitInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::WaitInstruction
out	./ir/instruction.cpp	/^    INLINE void WorkGroupInstruction::out(std::ostream &out, const Function &fn) const {$/;"	f	class:gbe::ir::internal::WorkGroupInstruction
outBlockTypes	./ir/structurizer.cpp	/^  void CFGStructurizer::outBlockTypes(BlockType type)$/;"	f	class:gbe::ir::CFGStructurizer
outImmediate	./ir/function.cpp	/^  void Function::outImmediate(std::ostream &out, ImmediateIndex index) const {$/;"	f	class:gbe::ir::Function
outOpcode	./ir/instruction.cpp	/^      INLINE void outOpcode(std::ostream &out) const {$/;"	f	struct:gbe::ir::internal::BasePolicy
out_buf_sizeof_offset	./ir/printf.hpp	/^      int out_buf_sizeof_offset;  \/\/ Should *global_total_size to get the full offset.$/;"	m	struct:gbe::ir::PrintfState
output	./ir/context.cpp	/^  void Context::output(Register reg) {$/;"	f	class:gbe::ir::Context
output	./libocl/script/gen_vector.py	/^    def output(self):$/;"	m	class:builtinProto
output	./libocl/script/gen_vector.py	/^    def output(self, outFile):$/;"	m	class:builtinProto
outputAllocation	./backend/gen_reg_allocation.cpp	/^  INLINE void GenRegAllocator::Opaque::outputAllocation(void) {$/;"	f	class:gbe::GenRegAllocator::Opaque
outputAllocation	./backend/gen_reg_allocation.cpp	/^  void GenRegAllocator::outputAllocation(void) {$/;"	f	class:gbe::GenRegAllocator
outputAssembly	./backend/gen_context.cpp	/^  void GenContext::outputAssembly(FILE *file, GenKernel* genKernel) {$/;"	f	class:gbe::GenContext
outputCFG	./ir/function.cpp	/^  void Function::outputCFG(void) {$/;"	f	class:gbe::ir::Function
outputGenReg	./backend/gen_insn_selection_output.cpp	/^  static void outputGenReg(GenRegister& reg, bool dst)$/;"	f	namespace:gbe
outputNum	./ir/function.hpp	/^    INLINE uint32_t outputNum(void) const { return outputs.size(); }$/;"	f	class:gbe::ir::Function
outputPrintf	./ir/printf.cpp	/^    void PrintfSet::outputPrintf(void* buf_addr)$/;"	f	class:gbe::ir::PrintfSet
outputProfilingInfo	./backend/program.hpp	/^    void outputProfilingInfo(void* buf) {$/;"	f	class:gbe::Kernel
outputProfilingInfo	./ir/profiling.cpp	/^  void ProfilingInfo::outputProfilingInfo(void * logBuf)$/;"	f	class:gbe::ir::ProfilingInfo
outputSelectionIR	./backend/gen_insn_selection_output.cpp	/^  void outputSelectionIR(GenContext &ctx, Selection* sel, const char* KernelName)$/;"	f	namespace:gbe
outputSelectionInst	./backend/gen_insn_selection_output.cpp	/^  void outputSelectionInst(SelectionInstruction &insn) {$/;"	f	namespace:gbe
outputStr	./libocl/script/gen_vector.py	/^    outputStr = []$/;"	v	class:builtinProto
outputs	./ir/function.hpp	/^    vector<Register> outputs;       \/\/!< Output registers of the function$/;"	m	class:gbe::ir::Function
override	./llvm/ExpandLargeIntegers.cpp	/^  bool runOnFunction(Function &F) override;$/;"	m	class:__anon177::ExpandLargeIntegers	file:
p	./backend/gen_context.hpp	/^    GenEncoder *p;$/;"	m	class:gbe::GenContext
p	./ir/immediate.hpp	/^      void *p;$/;"	m	union:gbe::ir::Immediate::__anon154
p_bb	./ir/structurizer.hpp	/^    BasicBlock *p_bb;$/;"	m	class:gbe::ir::SimpleBlock
packLongVec	./backend/gen8_context.cpp	/^  void Gen8Context::packLongVec(GenRegister unpacked, GenRegister packed, uint32_t simd)$/;"	f	class:gbe::Gen8Context
packed_ud	./backend/gen_register.hpp	/^    static INLINE GenRegister packed_ud(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
pad	./backend/gen/gen_mesa_disasm.c	/^static int pad(FILE *f, int c)$/;"	f	file:
pad	./backend/gen7_instruction.hpp	/^        uint32_t pad:11;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon78
pad	./backend/gen7_instruction.hpp	/^        uint32_t pad:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon49
pad	./backend/gen7_instruction.hpp	/^        uint32_t pad:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon52
pad	./backend/gen7_instruction.hpp	/^        uint32_t pad:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon53
pad	./backend/gen7_instruction.hpp	/^        uint32_t pad:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
pad	./backend/gen7_instruction.hpp	/^        uint32_t pad:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
pad	./backend/gen7_instruction.hpp	/^        uint32_t pad:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon75
pad	./backend/gen7_instruction.hpp	/^      uint32_t pad:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
pad	./backend/gen8_instruction.hpp	/^        uint32_t pad:11;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon146
pad	./backend/gen8_instruction.hpp	/^        uint32_t pad:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon105
pad	./backend/gen8_instruction.hpp	/^        uint32_t pad:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon107
pad	./backend/gen8_instruction.hpp	/^        uint32_t pad:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon109
pad	./backend/gen8_instruction.hpp	/^        uint32_t pad:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon113
pad	./backend/gen8_instruction.hpp	/^        uint32_t pad:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
pad	./backend/gen8_instruction.hpp	/^        uint32_t pad:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon117
pad	./backend/gen8_instruction.hpp	/^        uint32_t pad:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
pad	./backend/gen8_instruction.hpp	/^        uint32_t pad:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon144
pad	./backend/gen8_instruction.hpp	/^        uint32_t pad:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon145
pad	./backend/gen8_instruction.hpp	/^      uint32_t pad:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
pad	./backend/gen9_instruction.hpp	/^      uint32_t pad:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
pad	./backend/gen_defs.hpp	/^        uint32_t pad:11;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon36
pad	./backend/gen_defs.hpp	/^        uint32_t pad:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon34
pad	./backend/gen_defs.hpp	/^      uint32_t pad:1;$/;"	m	struct:GenCompactInstruction::__anon12::__anon13
pad	./backend/gen_defs.hpp	/^      uint32_t pad:1;$/;"	m	struct:GenCompactInstruction::__anon9::__anon10
pad	./backend/gen_defs.hpp	/^      uint32_t pad:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon17
pad	./backend/gen_insn_compact.cpp	/^      uint32_t pad:11;$/;"	m	struct:gbe::Gen8DataTypeBits::__anon97	file:
pad	./backend/gen_insn_compact.cpp	/^      uint32_t pad:14;$/;"	m	struct:gbe::DataTypeBits::__anon96	file:
pad	./backend/gen_insn_compact.cpp	/^      uint32_t pad:17;$/;"	m	struct:gbe::SubRegBits::__anon98	file:
pad	./backend/gen_insn_compact.cpp	/^      uint32_t pad:20;$/;"	m	struct:gbe::SrcRegBits::__anon99	file:
pad	./backend/gen_insn_compact.cpp	/^      uint32_t pad:23;$/;"	m	struct:gbe::ControlBits::__anon94	file:
pad0	./backend/gen7_instruction.hpp	/^        uint32_t pad0:10;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon65
pad0	./backend/gen7_instruction.hpp	/^        uint32_t pad0:11;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon63
pad0	./backend/gen7_instruction.hpp	/^        uint32_t pad0:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
pad0	./backend/gen7_instruction.hpp	/^        uint32_t pad0:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
pad0	./backend/gen7_instruction.hpp	/^        uint32_t pad0:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
pad0	./backend/gen7_instruction.hpp	/^        uint32_t pad0:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon56
pad0	./backend/gen7_instruction.hpp	/^        uint32_t pad0:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon61
pad0	./backend/gen7_instruction.hpp	/^        uint32_t pad0:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon77
pad0	./backend/gen7_instruction.hpp	/^        uint32_t pad0:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon64
pad0	./backend/gen7_instruction.hpp	/^        uint32_t pad0:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon68
pad0	./backend/gen7_instruction.hpp	/^        uint32_t pad0:7;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon58
pad0	./backend/gen8_instruction.hpp	/^        uint32_t pad0:10;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon130
pad0	./backend/gen8_instruction.hpp	/^        uint32_t pad0:11;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon128
pad0	./backend/gen8_instruction.hpp	/^        uint32_t pad0:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
pad0	./backend/gen8_instruction.hpp	/^        uint32_t pad0:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
pad0	./backend/gen8_instruction.hpp	/^        uint32_t pad0:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon117
pad0	./backend/gen8_instruction.hpp	/^        uint32_t pad0:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon129
pad0	./backend/gen8_instruction.hpp	/^        uint32_t pad0:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon132
pad0	./backend/gen8_instruction.hpp	/^        uint32_t pad0:7;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon122
pad0	./backend/gen9_instruction.hpp	/^        uint32_t pad0:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon5::__anon6
pad0	./backend/gen9_instruction.hpp	/^        uint32_t pad0:3;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon3::__anon4
pad0	./backend/gen_defs.hpp	/^        uint32_t pad0:10;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon24
pad0	./backend/gen_defs.hpp	/^        uint32_t pad0:11;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon22
pad0	./backend/gen_defs.hpp	/^        uint32_t pad0:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon23
pad0	./backend/gen_defs.hpp	/^        uint32_t pad0:3;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon27
pad1	./backend/gen7_instruction.hpp	/^        uint32_t pad1:14;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon64
pad1	./backend/gen7_instruction.hpp	/^        uint32_t pad1:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon59
pad1	./backend/gen7_instruction.hpp	/^        uint32_t pad1:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon61
pad1	./backend/gen7_instruction.hpp	/^        uint32_t pad1:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon62
pad1	./backend/gen7_instruction.hpp	/^        uint32_t pad1:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon63
pad1	./backend/gen7_instruction.hpp	/^        uint32_t pad1:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon65
pad1	./backend/gen7_instruction.hpp	/^        uint32_t pad1:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon66
pad1	./backend/gen7_instruction.hpp	/^        uint32_t pad1:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon67
pad1	./backend/gen7_instruction.hpp	/^        uint32_t pad1:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon68
pad1	./backend/gen7_instruction.hpp	/^        uint32_t pad1:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon77
pad1	./backend/gen7_instruction.hpp	/^        uint32_t pad1:7;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
pad1	./backend/gen7_instruction.hpp	/^        uint32_t pad1:7;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon60
pad1	./backend/gen8_instruction.hpp	/^        uint32_t pad1:14;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon129
pad1	./backend/gen8_instruction.hpp	/^        uint32_t pad1:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon123
pad1	./backend/gen8_instruction.hpp	/^        uint32_t pad1:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon125
pad1	./backend/gen8_instruction.hpp	/^        uint32_t pad1:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon126
pad1	./backend/gen8_instruction.hpp	/^        uint32_t pad1:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon127
pad1	./backend/gen8_instruction.hpp	/^        uint32_t pad1:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon128
pad1	./backend/gen8_instruction.hpp	/^        uint32_t pad1:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon130
pad1	./backend/gen8_instruction.hpp	/^        uint32_t pad1:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon131
pad1	./backend/gen8_instruction.hpp	/^        uint32_t pad1:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon132
pad1	./backend/gen8_instruction.hpp	/^        uint32_t pad1:6;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon124
pad1	./backend/gen9_instruction.hpp	/^        uint32_t pad1:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon3::__anon4
pad1	./backend/gen_defs.hpp	/^        uint32_t pad1:14;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon23
pad1	./backend/gen_defs.hpp	/^        uint32_t pad1:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon21
pad1	./backend/gen_defs.hpp	/^        uint32_t pad1:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon22
pad1	./backend/gen_defs.hpp	/^        uint32_t pad1:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon24
pad1	./backend/gen_defs.hpp	/^        uint32_t pad1:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon25
pad1	./backend/gen_defs.hpp	/^        uint32_t pad1:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon26
pad1	./backend/gen_defs.hpp	/^        uint32_t pad1:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon27
pad1	./backend/gen_defs.hpp	/^      uint32_t pad1:32;$/;"	m	struct:GenNativeInstruction::__anon16::__anon18
pad1	./backend/gen_defs.hpp	/^      uint32_t pad1:3;$/;"	m	struct:GenNativeInstruction::__anon16::__anon17
pad1	./backend/gen_defs.hpp	/^      uint32_t pad1:9;$/;"	m	struct:GenCompactInstruction::__anon9::__anon10
pad2	./backend/gen7_instruction.hpp	/^        uint32_t pad2:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon74
pad2	./backend/gen7_instruction.hpp	/^        uint32_t pad2:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon75
pad2	./backend/gen7_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon63
pad2	./backend/gen7_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon64
pad2	./backend/gen7_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon69
pad2	./backend/gen7_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon70
pad2	./backend/gen7_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon71
pad2	./backend/gen7_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon72
pad2	./backend/gen7_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon73
pad2	./backend/gen7_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon78
pad2	./backend/gen7_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon80
pad2	./backend/gen7_instruction.hpp	/^        uint32_t pad2:7;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon59
pad2	./backend/gen7_instruction.hpp	/^        uint32_t pad2:7;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon61
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon138
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon128
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon129
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon133
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon134
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon135
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon136
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon137
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon142
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon143
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon146
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon147
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon149
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:6;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon125
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:7;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon123
pad2	./backend/gen8_instruction.hpp	/^        uint32_t pad2:7;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon126
pad2	./backend/gen9_instruction.hpp	/^        uint32_t pad2:1;    \/\/direct mode is used$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon3::__anon4
pad2	./backend/gen_defs.hpp	/^        uint32_t pad2:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon33
pad2	./backend/gen_defs.hpp	/^        uint32_t pad2:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon34
pad2	./backend/gen_defs.hpp	/^        uint32_t pad2:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon22
pad2	./backend/gen_defs.hpp	/^        uint32_t pad2:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon23
pad2	./backend/gen_defs.hpp	/^        uint32_t pad2:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon28
pad2	./backend/gen_defs.hpp	/^        uint32_t pad2:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon29
pad2	./backend/gen_defs.hpp	/^        uint32_t pad2:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon30
pad2	./backend/gen_defs.hpp	/^        uint32_t pad2:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon31
pad2	./backend/gen_defs.hpp	/^        uint32_t pad2:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon32
pad2	./backend/gen_defs.hpp	/^        uint32_t pad2:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon36
pad2	./backend/gen_defs.hpp	/^        uint32_t pad2:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon38
pad2	./backend/gen_defs.hpp	/^      uint32_t pad2:32;$/;"	m	struct:GenNativeInstruction::__anon16::__anon19
pad3	./backend/gen7_instruction.hpp	/^        uint32_t pad3:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon74
pad3	./backend/gen7_instruction.hpp	/^        uint32_t pad3:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon75
pad3	./backend/gen7_instruction.hpp	/^        uint32_t pad3:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon76
pad3	./backend/gen7_instruction.hpp	/^        uint32_t pad3:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon78
pad3	./backend/gen8_instruction.hpp	/^        uint32_t pad3:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon138
pad3	./backend/gen8_instruction.hpp	/^        uint32_t pad3:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
pad3	./backend/gen8_instruction.hpp	/^        uint32_t pad3:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon140
pad3	./backend/gen8_instruction.hpp	/^        uint32_t pad3:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon141
pad3	./backend/gen8_instruction.hpp	/^        uint32_t pad3:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon146
pad3	./backend/gen_defs.hpp	/^        uint32_t pad3:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon33
pad3	./backend/gen_defs.hpp	/^        uint32_t pad3:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon34
pad3	./backend/gen_defs.hpp	/^        uint32_t pad3:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon35
pad3	./backend/gen_defs.hpp	/^        uint32_t pad3:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon36
paramCount	./libocl/script/gen_vector.py	/^    paramCount = 0$/;"	v	class:builtinProto
paramTypeStrs	./libocl/script/gen_vector.py	/^    paramTypeStrs = []$/;"	v	class:builtinProto
parameters	./ir/instruction.cpp	/^      uint32_t parameters;$/;"	m	class:gbe::ir::internal::SyncInstruction	file:
parent	./backend/gen_insn_selection.hpp	/^    SelectionBlock *parent;$/;"	m	class:gbe::SelectionInstruction
parent	./ir/function.hpp	/^    int parent;$/;"	m	struct:gbe::ir::Loop
parent	./ir/instruction.hpp	/^    BasicBlock *parent;      \/\/!< The basic block containing the instruction$/;"	m	class:gbe::ir::Instruction
parent	./llvm/ExpandLargeIntegers.cpp	/^  Value *parent;$/;"	m	struct:__anon177::VectorElement	file:
parent_type	./sys/list.hpp	/^    typedef std::list<T, allocator_type> parent_type;$/;"	t	class:gbe::list
parent_type	./sys/map.hpp	/^    typedef std::map<Key,T,Pred,allocator_type> parent_type;$/;"	t	class:gbe::map
parent_type	./sys/set.hpp	/^    typedef std::set<Key,Pred,Allocator<Key>> parent_type;$/;"	t	class:gbe::set
parent_type	./sys/vector.hpp	/^    typedef std::vector<T, Allocator<T>>       parent_type;$/;"	t	class:gbe::vector
parseOnePrintfInstruction	./llvm/llvm_printf_parser.cpp	/^  bool PrintfParser::parseOnePrintfInstruction(CallInst * call)$/;"	f	class:gbe::PrintfParser
parser_printf_fmt	./llvm/llvm_printf_parser.cpp	/^  static PrintfSet::PrintfFmt* parser_printf_fmt(char* format, int& num)$/;"	f	namespace:gbe
partialWriteRegs	./backend/gen_insn_selection.cpp	/^    set<uint32_t> partialWriteRegs;$/;"	m	class:gbe::Selection::Opaque	file:
pass	./llvm/llvm_gen_backend.cpp	/^    } pass;$/;"	m	class:gbe::GenWriter	typeref:enum:gbe::GenWriter::Pass	file:
patchBranches	./backend/gen8_context.cpp	/^  bool Gen8Context::patchBranches(void) {$/;"	f	class:gbe::Gen8Context
patchBranches	./backend/gen_context.cpp	/^  bool GenContext::patchBranches(void) {$/;"	f	class:gbe::GenContext
patchForwardPHIs	./llvm/ExpandLargeIntegers.cpp	/^  void patchForwardPHIs() {$/;"	f	class:__anon178::ConversionState
patchJMPI	./backend/gen75_encoder.cpp	/^  void Gen75Encoder::patchJMPI(uint32_t insnID, int32_t jip, int32_t uip) {$/;"	f	class:gbe::Gen75Encoder
patchJMPI	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::patchJMPI(uint32_t insnID, int32_t jip, int32_t uip) {$/;"	f	class:gbe::Gen8Encoder
patchJMPI	./backend/gen_encoder.cpp	/^  void GenEncoder::patchJMPI(uint32_t insnID, int32_t jip, int32_t uip) {$/;"	f	class:gbe::GenEncoder
patches	./backend/program.hpp	/^    vector<PatchInfo> patches; \/\/!< Indicates how to build the curbe$/;"	m	class:gbe::Kernel
patternMatch	./ir/structurizer.cpp	/^  int CFGStructurizer::patternMatch(Block *block) {$/;"	f	class:gbe::ir::CFGStructurizer
patterns	./backend/gen_insn_selection.cpp	/^    PatternList patterns[ir::OP_INVALID];$/;"	m	class:gbe::SelectionLibrary	file:
payload	./ir/instruction.cpp	/^      Tuple payload;$/;"	m	class:gbe::ir::internal::AtomicInstruction	file:
payloadData	./ir/register.hpp	/^    PayloadRegisterData payloadData;$/;"	m	class:gbe::ir::RegisterData
phiMap	./llvm/llvm_gen_backend.cpp	/^    map<const ir::Register, const ir::Register> phiMap;$/;"	m	class:gbe::GenWriter	file:
pointNum	./backend/gen_insn_selection.hpp	/^        uint32_t pointNum:16;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon90
pointNum	./ir/instruction.cpp	/^      uint8_t pointNum;            \/\/!< The insert point number.$/;"	m	class:gbe::ir::internal::CalcTimestampInstruction	file:
pointer	./sys/alloc.hpp	/^    typedef value_type* pointer;$/;"	t	class:gbe::Allocator
pointer	./sys/intrusive_list.hpp	/^    typedef Pointer pointer;$/;"	t	class:gbe::intrusive_list_iterator
pointer	./sys/map.hpp	/^    typedef typename allocator_type::pointer pointer;$/;"	t	class:gbe::map
pointerBaseMap	./llvm/llvm_gen_backend.cpp	/^    map<Value *, Value *> pointerBaseMap;$/;"	m	class:gbe::GenWriter	file:
pointerOrigMap	./llvm/llvm_gen_backend.cpp	/^    map<Value *, SmallVector<Value *, 4>> pointerOrigMap;$/;"	m	class:gbe::GenWriter	file:
pointerSize	./ir/unit.hpp	/^    PointerSize pointerSize; \/\/!< Size shared by all pointers$/;"	m	class:gbe::ir::Unit
policy	./backend/gen_insn_scheduling.cpp	/^    SchedulePolicy policy;$/;"	m	struct:gbe::SelectionScheduler	file:
pop	./backend/gen_encoder.cpp	/^  void GenEncoder::pop(void) {$/;"	f	class:gbe::GenEncoder
pop	./backend/gen_insn_selection.cpp	/^    INLINE void pop(void) {$/;"	f	class:gbe::Selection::Opaque
pop_back	./sys/intrusive_list.hpp	/^    INLINE void pop_back(void) { unlink(m_root.prev); }$/;"	f	class:gbe::intrusive_list_base
pop_front	./sys/intrusive_list.hpp	/^    INLINE void pop_front(void) { unlink(m_root.next); }$/;"	f	class:gbe::intrusive_list_base
postPhiCopyOptimization	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::postPhiCopyOptimization(ir::Liveness &liveness,$/;"	f	class:gbe::GenWriter
postScheduleDAG	./backend/gen_insn_scheduling.cpp	/^  void SelectionScheduler::postScheduleDAG(SelectionBlock &bb, int32_t insnNum) {$/;"	f	class:gbe::SelectionScheduler
preRetired	./backend/gen_insn_scheduling.cpp	/^    bool preRetired;$/;"	m	struct:gbe::ScheduleDAGNode	file:
preScheduleDAG	./backend/gen_insn_scheduling.cpp	/^  void SelectionScheduler::preScheduleDAG(SelectionBlock &bb, int32_t insnNum) {$/;"	f	class:gbe::SelectionScheduler
precision	./backend/gen7_instruction.hpp	/^        uint32_t precision:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon65
precision	./backend/gen8_instruction.hpp	/^        uint32_t precision:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon130
precision	./backend/gen_defs.hpp	/^        uint32_t precision:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon24
precision	./ir/printf.hpp	/^      int precision;$/;"	m	struct:gbe::ir::PrintfState
pred_begin	./ir/structurizer.hpp	/^    sIterator pred_begin() { return predecessor.begin(); }$/;"	f	class:gbe::ir::Block
pred_ctrl_align1	./backend/gen/gen_mesa_disasm.c	/^static const char *pred_ctrl_align1[16] = {$/;"	v	file:
pred_ctrl_align16	./backend/gen/gen_mesa_disasm.c	/^static const char *pred_ctrl_align16[16] = {$/;"	v	file:
pred_end	./ir/structurizer.hpp	/^    sIterator pred_end() { return predecessor.end(); }$/;"	f	class:gbe::ir::Block
pred_inv	./backend/gen/gen_mesa_disasm.c	/^static const char *pred_inv[2] = {$/;"	v	file:
pred_size	./ir/structurizer.hpp	/^    size_t pred_size() { return predecessor.size(); }$/;"	f	class:gbe::ir::Block
predecessor	./ir/structurizer.hpp	/^    BlockSets predecessor;$/;"	m	class:gbe::ir::Block
predecessors	./ir/function.hpp	/^    BlockSet predecessors; \/\/!< Incoming blocks$/;"	m	class:gbe::ir::BasicBlock
predecessors	./ir/structurizer.hpp	/^    BlockSets& predecessors() { return predecessor; }$/;"	f	class:gbe::ir::Block
predicate	./ir/instruction.cpp	/^      Register predicate;    \/\/!< Predication means conditional branch$/;"	m	class:gbe::ir::internal::BranchInstruction	file:
predicate_control	./backend/gen7_instruction.hpp	/^      uint32_t predicate_control:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
predicate_control	./backend/gen8_instruction.hpp	/^      uint32_t predicate_control:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
predicate_control	./backend/gen9_instruction.hpp	/^      uint32_t predicate_control:4;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
predicate_control	./backend/gen_defs.hpp	/^      uint32_t predicate_control:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon17
predicate_control	./backend/gen_insn_compact.cpp	/^      uint32_t predicate_control:4;$/;"	m	struct:gbe::ControlBits::__anon94	file:
predicate_control	./backend/gen_insn_compact.cpp	/^      uint32_t predicate_control:4;$/;"	m	struct:gbe::Src3ControlBits::__anon95	file:
predicate_inverse	./backend/gen7_instruction.hpp	/^      uint32_t predicate_inverse:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
predicate_inverse	./backend/gen8_instruction.hpp	/^      uint32_t predicate_inverse:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
predicate_inverse	./backend/gen9_instruction.hpp	/^      uint32_t predicate_inverse:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
predicate_inverse	./backend/gen_defs.hpp	/^      uint32_t predicate_inverse:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon17
predicate_inverse	./backend/gen_insn_compact.cpp	/^      uint32_t predicate_inverse:1;$/;"	m	struct:gbe::ControlBits::__anon94	file:
predicate_inverse	./backend/gen_insn_compact.cpp	/^      uint32_t predicate_inverse:1;$/;"	m	struct:gbe::Src3ControlBits::__anon95	file:
prefix	./libocl/script/gen_vector.py	/^    prefix = ""$/;"	v	class:builtinProto
preheader	./ir/function.hpp	/^    LabelIndex preheader;$/;"	m	struct:gbe::ir::Loop
prepend	./backend/gen_insn_selection.cpp	/^  void SelectionBlock::prepend(SelectionInstruction *insn) {$/;"	f	class:gbe::SelectionBlock
prepend	./backend/gen_insn_selection.cpp	/^  void SelectionInstruction::prepend(SelectionInstruction &other) {$/;"	f	class:gbe::SelectionInstruction
prepend	./sys/intrusive_list.cpp	/^  void prepend(intrusive_list_node *node, intrusive_list_node *next) {$/;"	f	namespace:gbe
prettyInsnStrSize	./ir/liveness.cpp	/^  static const uint32_t prettyInsnStrSize = 48;$/;"	m	namespace:gbe::ir	file:
prettyRegStrSize	./ir/liveness.cpp	/^  static const uint32_t prettyRegStrSize = 5;$/;"	m	namespace:gbe::ir	file:
prev	./backend/context.cpp	/^      Block *prev, *next; \/\/!< Previous and next free blocks$/;"	m	struct:gbe::SimpleAllocator::Block	file:
prev	./sys/intrusive_list.hpp	/^    intrusive_list_node *prev;$/;"	m	struct:gbe::intrusive_list_node
prevBlock	./ir/function.hpp	/^    BasicBlock *prevBlock; \/\/!< Block allocated just before this one$/;"	m	class:gbe::ir::BasicBlock
print	./llvm/llvm_scalarize.cpp	/^  void Scalarize::print(raw_ostream&, const Module*) const$/;"	f	class:gbe::Scalarize
printOrderedBlocks	./ir/structurizer.cpp	/^  void CFGStructurizer::printOrderedBlocks()$/;"	f	class:gbe::ir::CFGStructurizer
printOutOneStatement	./ir/printf.cpp	/^    static void printOutOneStatement(PrintfSet::PrintfFmt& fmt, PrintfLog& log)$/;"	f	namespace:gbe::ir
printStatus	./backend/gen_program.cpp	/^  void GenKernel::printStatus(int indent, std::ostream& outs) {$/;"	f	class:gbe::GenKernel
printStatus	./backend/program.cpp	/^  void Kernel::printStatus(int indent, std::ostream& outs) {$/;"	f	class:gbe::Kernel
printStatus	./backend/program.cpp	/^  void Program::printStatus(int indent, std::ostream& outs) {$/;"	f	class:gbe::Program
printStatus	./ir/image.cpp	/^  void ImageSet::printStatus(int indent, std::ostream& outs) {$/;"	f	class:gbe::ir::ImageSet
printStatus	./ir/sampler.cpp	/^  void SamplerSet::printStatus(int indent, std::ostream& outs) {$/;"	f	class:gbe::ir::SamplerSet
printStatus	./sys/platform.hpp	/^  virtual void printStatus(int indent = 0, std::ostream& outs = std::cout) { }$/;"	f	class:Serializable
print_file	./gbe_bin_generater.cpp	/^    void print_file (void) {$/;"	f	class:program_build_instance
print_opcode	./backend/gen/gen_mesa_disasm.c	/^static int print_opcode(FILE *file, int id)$/;"	f	file:
printer	./llvm/llvm_to_gen.cpp	/^    llvm::DiagnosticPrinterRawOStream printer;$/;"	m	class:gbe::gbeDiagnosticContext	file:
printf	./libocl/include/ocl_printf.h	32;"	d
printfBTI	./backend/gen_insn_selection.hpp	/^        uint32_t printfBTI:8;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon92
printfBti	./llvm/llvm_gen_backend.cpp	/^    int printfBti;$/;"	m	class:gbe::GenWriter	file:
printfNum	./backend/gen_insn_selection.hpp	/^        uint32_t printfNum:16;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon92
printfNum	./llvm/llvm_gen_backend.cpp	/^    uint32_t printfNum;$/;"	m	class:gbe::GenWriter	file:
printfSet	./backend/program.hpp	/^    ir::PrintfSet *printfSet;  \/\/!< Copy from the corresponding function.$/;"	m	class:gbe::Kernel
printfSet	./ir/function.hpp	/^    PrintfSet *printfSet;           \/\/!< printfSet store the printf info.$/;"	m	class:gbe::ir::Function
printfSize	./backend/gen_insn_selection.hpp	/^        uint16_t printfSize;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon92
printfSplitSend	./backend/gen_insn_selection.hpp	/^        uint16_t printfSplitSend:1;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon92
printfs	./ir/unit.hpp	/^    map<void *, PrintfSet::PrintfFmt*> printfs;$/;"	m	class:gbe::ir::Unit
private	./libocl/include/ocl_types.h	69;"	d
process	./llvm/llvm_to_gen.cpp	/^    void process(const llvm::DiagnosticInfo &diagnostic)$/;"	f	class:gbe::gbeDiagnosticContext
processConstantImm	./llvm/llvm_gen_backend.cpp	/^  const ir::Immediate &GenWriter::processConstantImm(Constant *CPV, int32_t index) {$/;"	f	class:gbe::GenWriter
processConstantImmIndex	./llvm/llvm_gen_backend.cpp	/^  ir::ImmediateIndex GenWriter::processConstantImmIndex(Constant *CPV, int32_t index) {$/;"	f	class:gbe::GenWriter
processConstantImmIndexImpl	./llvm/llvm_gen_backend.cpp	/^  ir::ImmediateIndex GenWriter::processConstantImmIndexImpl(Constant *CPV, int32_t index)$/;"	f	class:gbe::GenWriter
processConstantVector	./llvm/llvm_gen_backend.cpp	/^  ir::ImmediateIndex GenWriter::processConstantVector(ConstantVector *cv, int index) {$/;"	f	class:gbe::GenWriter
processImm	./ir/context.hpp	/^    INLINE ImmediateIndex processImm(ImmOpCode op, ImmediateIndex src, Type type) {$/;"	f	class:gbe::ir::Context
processImm	./ir/context.hpp	/^    INLINE ImmediateIndex processImm(ImmOpCode op, ImmediateIndex src0,$/;"	f	class:gbe::ir::Context
processPointerArray	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::processPointerArray(Value *ptr, Value *bti, Value *base) {$/;"	f	class:gbe::GenWriter
processSeqConstant	./llvm/llvm_gen_backend.cpp	/^  ir::ImmediateIndex GenWriter::processSeqConstant(ConstantDataSequential *seq,$/;"	f	class:gbe::GenWriter
processSourceAndOption	./backend/program.cpp	/^  static bool processSourceAndOption(const char *source,$/;"	f	namespace:gbe
profile	./ir/function.hpp	/^    Profile profile;                \/\/!< Current function profile$/;"	m	class:gbe::ir::Function
profilingBTI	./backend/gen_insn_selection.hpp	/^        uint32_t profilingBTI:16;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon91
profilingInfo	./backend/program.hpp	/^    ir::ProfilingInfo *profilingInfo;  \/\/!< Copy from the corresponding function.$/;"	m	class:gbe::Kernel
profilingInfo	./ir/unit.hpp	/^    ProfilingInfo *profilingInfo; \/\/!< profilingInfo store the information for profiling.$/;"	m	class:gbe::ir::Unit
profilingProlog	./backend/gen_context.cpp	/^  void GenContext::profilingProlog(void) {$/;"	f	class:gbe::GenContext
profilingType	./backend/gen_insn_selection.hpp	/^        uint32_t profilingType:16;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon91
profilingType	./ir/instruction.cpp	/^      uint8_t profilingType;     \/\/!< Type format of profiling, 16bits or 32bits, eg.$/;"	m	class:gbe::ir::internal::StoreProfilingInstruction	file:
profilingType	./ir/profiling.hpp	/^      uint32_t profilingType;$/;"	m	class:gbe::ir::ProfilingInfo
profilingType	./llvm/llvm_profiling.cpp	/^    int profilingType;$/;"	m	class:gbe::ProfilingInserter	file:
profilingbptr	./ir/profile.hpp	/^    static const Register profilingbptr = Register(31); \/\/ buffer addr for profiling.$/;"	m	namespace:gbe::ir::ocl
profilingts0	./ir/profile.hpp	/^    static const Register profilingts0 = Register(32); \/\/ timestamp for profiling.$/;"	m	namespace:gbe::ir::ocl
profilingts1	./ir/profile.hpp	/^    static const Register profilingts1 = Register(33); \/\/ timestamp for profiling.$/;"	m	namespace:gbe::ir::ocl
profilingts2	./ir/profile.hpp	/^    static const Register profilingts2 = Register(34); \/\/ timestamp for profiling.$/;"	m	namespace:gbe::ir::ocl
profilingts3	./ir/profile.hpp	/^    static const Register profilingts3 = Register(35); \/\/ timestamp for profiling.$/;"	m	namespace:gbe::ir::ocl
profilingts4	./ir/profile.hpp	/^    static const Register profilingts4 = Register(36); \/\/ timestamp for profiling.$/;"	m	namespace:gbe::ir::ocl
prog_path	./gbe_bin_generater.cpp	/^    string prog_path;$/;"	m	class:program_build_instance	file:
prog_vector	./gbe_bin_generater.cpp	/^typedef vector<program_build_instance> prog_vector;$/;"	t	file:
programCheckOption	./backend/program.cpp	/^    static bool programCheckOption(const char * option)$/;"	f	namespace:gbe
programCleanLlvmResource	./backend/program.cpp	/^  static void programCleanLlvmResource(gbe_program gbeProgram) {$/;"	f	namespace:gbe
programCompileFromSource	./backend/program.cpp	/^  static gbe_program programCompileFromSource(uint32_t deviceID,$/;"	f	namespace:gbe
programDelete	./backend/program.cpp	/^  static void programDelete(gbe_program gbeProgram) {$/;"	f	namespace:gbe
programGetDeviceEnqueueKernelName	./backend/program.cpp	/^  const static char* programGetDeviceEnqueueKernelName(gbe_program gbeProgram, uint32_t index) {$/;"	f	namespace:gbe
programGetGlobalConstantData	./backend/program.cpp	/^  static void programGetGlobalConstantData(gbe_program gbeProgram, char *mem) {$/;"	f	namespace:gbe
programGetGlobalConstantSize	./backend/program.cpp	/^  static size_t programGetGlobalConstantSize(gbe_program gbeProgram) {$/;"	f	namespace:gbe
programGetGlobalRelocCount	./backend/program.cpp	/^  static size_t programGetGlobalRelocCount(gbe_program gbeProgram) {$/;"	f	namespace:gbe
programGetGlobalRelocTable	./backend/program.cpp	/^  static void programGetGlobalRelocTable(gbe_program gbeProgram, char *mem) {$/;"	f	namespace:gbe
programGetKernel	./backend/program.cpp	/^  static gbe_kernel programGetKernel(const gbe_program gbeProgram, uint32_t ID) {$/;"	f	namespace:gbe
programGetKernelByName	./backend/program.cpp	/^  static gbe_kernel programGetKernelByName(gbe_program gbeProgram, const char *name) {$/;"	f	namespace:gbe
programGetKernelNum	./backend/program.cpp	/^  static uint32_t programGetKernelNum(gbe_program gbeProgram) {$/;"	f	namespace:gbe
programLinkProgram	./backend/program.cpp	/^  static bool programLinkProgram(gbe_program           dst_program,$/;"	f	namespace:gbe
programNewFromLLVMFile	./backend/program.cpp	/^  static gbe_program programNewFromLLVMFile(uint32_t deviceID,$/;"	f	namespace:gbe
programNewFromSource	./backend/program.cpp	/^  static gbe_program programNewFromSource(uint32_t deviceID,$/;"	f	namespace:gbe
program_build_instance	./gbe_bin_generater.cpp	/^    explicit program_build_instance (const char* file_path, const char* option = NULL)$/;"	f	class:program_build_instance
program_build_instance	./gbe_bin_generater.cpp	/^    program_build_instance (void) : fd(-1), file_len(0), code(NULL), gbe_prog(NULL) { }$/;"	f	class:program_build_instance
program_build_instance	./gbe_bin_generater.cpp	/^class program_build_instance {$/;"	c	file:
propagateRegister	./backend/gen_register.hpp	/^    static INLINE void propagateRegister(GenRegister& dst, const GenRegister& src)$/;"	f	class:gbe::GenRegister
ptrTy	./llvm/llvm_profiling.cpp	/^    Type *ptrTy;$/;"	m	class:gbe::ProfilingInserter	file:
ptrdiff_t	./libocl/include/ocl_types.h	/^typedef __typeof__((int *)0-(int *)0) ptrdiff_t;$/;"	t
push	./backend/gen_encoder.cpp	/^  void GenEncoder::push(void) {$/;"	f	class:gbe::GenEncoder
push	./backend/gen_insn_selection.cpp	/^    INLINE void push(void) {$/;"	f	class:gbe::Selection::Opaque
pushMap	./ir/function.hpp	/^    PushMap pushMap;                \/\/!< Pushed function arguments (reg->loc)$/;"	m	class:gbe::ir::Function
pushStackSize	./ir/function.hpp	/^    INLINE void pushStackSize(uint32_t step) { this->stackSize += step; }$/;"	f	class:gbe::ir::Function
push_back	./sys/intrusive_list.hpp	/^    void push_back(value_type* v) { link(v, &m_root); }$/;"	f	class:gbe::intrusive_list
push_front	./sys/intrusive_list.hpp	/^    void push_front(value_type* v) { link(v, m_root.next); }$/;"	f	class:gbe::intrusive_list
pushed	./ir/value.hpp	/^      const PushLocation *pushed;$/;"	m	union:gbe::ir::ValueDef::Data
pushedNum	./ir/function.hpp	/^    INLINE uint32_t pushedNum(void) const { return pushMap.size(); }$/;"	f	class:gbe::ir::Function
puts	./libocl/include/ocl_printf.h	33;"	d
qtr_ctrl	./backend/gen/gen_mesa_disasm.c	/^static int qtr_ctrl(FILE *file, const void* inst)$/;"	f	file:
quarter_control	./backend/gen7_instruction.hpp	/^      uint32_t quarter_control:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
quarter_control	./backend/gen8_instruction.hpp	/^      uint32_t quarter_control:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
quarter_control	./backend/gen9_instruction.hpp	/^      uint32_t quarter_control:2;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
quarter_control	./backend/gen_defs.hpp	/^      uint32_t quarter_control:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon17
quarter_control	./backend/gen_insn_compact.cpp	/^      uint32_t quarter_control:2;$/;"	m	struct:gbe::ControlBits::__anon94	file:
quarter_control	./backend/gen_insn_compact.cpp	/^      uint32_t quarter_control:2;$/;"	m	struct:gbe::Src3ControlBits::__anon95	file:
ra	./backend/gen_context.hpp	/^    GenRegAllocator *ra;$/;"	m	class:gbe::GenContext
random	./sys/platform.hpp	/^  template<> INLINE double   random() { return random<uint32_t>()\/double(RAND_MAX); }$/;"	f	namespace:gbe
random	./sys/platform.hpp	/^  template<> INLINE float    random() { return random<uint32_t>()\/float(RAND_MAX); }$/;"	f	namespace:gbe
random	./sys/platform.hpp	/^  template<> INLINE int32_t  random() { return int(rand()); }$/;"	f	namespace:gbe
random	./sys/platform.hpp	/^  template<> INLINE uint32_t random() { return uint32_t(rand()); }$/;"	f	namespace:gbe
random	./sys/platform.hpp	/^  template<typename T> T     random() { return T(0); }$/;"	f	namespace:gbe
rbegin	./sys/intrusive_list.hpp	/^    const_iterator rbegin(void) const { return const_iterator(upcast(m_root.prev)); }$/;"	f	class:gbe::intrusive_list
rbegin	./sys/intrusive_list.hpp	/^    iterator rbegin(void) { return iterator(upcast(m_root.prev)); }$/;"	f	class:gbe::intrusive_list
rdbti	./backend/gen_insn_selection.hpp	/^        uint16_t rdbti:8;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon88
rdmsglen	./backend/gen_insn_selection.hpp	/^        uint16_t rdmsglen:3;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon88
read64Legacy	./backend/gen_insn_selection.cpp	/^    void read64Legacy(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
read64Stateless	./backend/gen_insn_selection.cpp	/^    void read64Stateless(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
readByteAsDWord	./backend/gen_insn_selection.cpp	/^    void readByteAsDWord(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
readDistance	./backend/gen_insn_scheduling.cpp	/^    uint32_t readDistance;$/;"	m	struct:gbe::ScheduleDAGNode	file:
readImageArgs	./llvm/llvm_gen_backend.cpp	/^    uint32_t readImageArgs;$/;"	m	struct:gbe::ImageArgsInfo	file:
ready	./backend/gen_insn_scheduling.cpp	/^    intrusive_list<ScheduleListNode> ready;$/;"	m	struct:gbe::SelectionScheduler	file:
rebind	./sys/alloc.hpp	/^    struct rebind { typedef Allocator<U> other; };$/;"	s	class:gbe::Allocator
recordConverted	./llvm/ExpandLargeIntegers.cpp	/^  void recordConverted(Instruction *From, Value *To) {$/;"	f	class:__anon178::ConversionState
recordConverted	./llvm/ExpandLargeIntegers.cpp	/^  void recordConverted(Instruction *From, const ValuePair &To) {$/;"	f	class:__anon178::ConversionState
recordConverted	./llvm/PromoteIntegers.cpp	/^  void recordConverted(Instruction *From, Value *To, bool TakeName=true) {$/;"	f	class:__anon175::ConversionState
recordForwardPHI	./llvm/ExpandLargeIntegers.cpp	/^  ValuePair recordForwardPHI(Value *Val, PHINode *Lo, PHINode *Hi,$/;"	f	class:__anon178::ConversionState
recordVectorMap	./llvm/ExpandLargeIntegers.cpp	/^  void recordVectorMap(Value *child, VectorElement elem) {$/;"	f	class:__anon178::ConversionState
refNum	./backend/gen_insn_scheduling.cpp	/^    uint32_t refNum;$/;"	m	struct:gbe::ScheduleDAGNode	file:
refOffset	./ir/reloc.hpp	/^    unsigned int refOffset;$/;"	m	struct:gbe::ir::RelocEntry
reference	./sys/alloc.hpp	/^    typedef value_type& reference;$/;"	t	class:gbe::Allocator
reference	./sys/intrusive_list.hpp	/^    typedef Reference reference;$/;"	t	class:gbe::intrusive_list_iterator
reference	./sys/map.hpp	/^    typedef typename allocator_type::reference reference;$/;"	t	class:gbe::map
reg	./backend/gen/gen_mesa_disasm.c	/^static int reg(FILE *file, uint32_t _reg_file, uint32_t _reg_nr)$/;"	f	file:
reg	./backend/gen_insn_selection.cpp	/^    INLINE ir::Register reg(ir::RegisterFamily family, bool scalar = false) {$/;"	f	class:gbe::Selection::Opaque
reg	./backend/gen_insn_selection.hpp	/^    GenRegister *reg;$/;"	m	class:gbe::SelectionVector
reg	./backend/gen_reg_allocation.cpp	/^    ir::Register reg;     \/\/!< (virtual) register of the interval$/;"	m	struct:gbe::GenRegInterval	file:
reg	./backend/gen_reg_allocation.cpp	/^    ir::Register reg;$/;"	m	struct:gbe::SpillInterval	file:
reg	./backend/gen_register.hpp	/^      uint32_t reg;$/;"	m	union:gbe::GenRegister::__anon40
reg	./backend/gen_register.hpp	/^    INLINE ir::Register reg(void) const { return ir::Register(value.reg); }$/;"	f	class:gbe::GenRegister
reg	./ir/context.cpp	/^  Register Context::reg(RegisterFamily family, bool uniform,$/;"	f	class:gbe::ir::Context
reg	./ir/function.hpp	/^    Register reg;  \/\/!< Holds the argument$/;"	m	struct:gbe::ir::FunctionArgument
reg	./ir/instruction.hpp	/^      Register reg;  \/\/ mixed reg$/;"	m	union:gbe::ir::BTI::__anon160
regAllocateAllocaInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateAllocaInst(AllocaInst &I) {$/;"	f	class:gbe::GenWriter
regAllocateAtomicCmpXchgInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateAtomicCmpXchgInst(AtomicCmpXchgInst &I) {$/;"	f	class:gbe::GenWriter
regAllocateAtomicRMWInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateAtomicRMWInst(AtomicRMWInst &I) {$/;"	f	class:gbe::GenWriter
regAllocateBinaryOperator	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateBinaryOperator(Instruction &I) {$/;"	f	class:gbe::GenWriter
regAllocateBranchInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateBranchInst(BranchInst &I) {}$/;"	f	class:gbe::GenWriter
regAllocateCallInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateCallInst(CallInst &I) {$/;"	f	class:gbe::GenWriter
regAllocateCastInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateCastInst(CastInst &I) {$/;"	f	class:gbe::GenWriter
regAllocateExtractElement	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateExtractElement(ExtractElementInst &I) {$/;"	f	class:gbe::GenWriter
regAllocateExtractValue	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateExtractValue(ExtractValueInst &I) {$/;"	f	class:gbe::GenWriter
regAllocateFCmpInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateFCmpInst(FCmpInst &I) {$/;"	f	class:gbe::GenWriter
regAllocateICmpInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateICmpInst(ICmpInst &I) {$/;"	f	class:gbe::GenWriter
regAllocateInsertElement	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateInsertElement(InsertElementInst &I) {}$/;"	f	class:gbe::GenWriter
regAllocateLoadInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateLoadInst(LoadInst &I) {$/;"	f	class:gbe::GenWriter
regAllocatePHINode	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocatePHINode(PHINode &I) {$/;"	f	class:gbe::GenWriter
regAllocateReturnInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateReturnInst(ReturnInst &I) {}$/;"	f	class:gbe::GenWriter
regAllocateSelectInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateSelectInst(SelectInst &I) {$/;"	f	class:gbe::GenWriter
regAllocateShuffleVectorInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateShuffleVectorInst(ShuffleVectorInst &I) {}$/;"	f	class:gbe::GenWriter
regAllocateStoreInst	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::regAllocateStoreInst(StoreInst &I) {}$/;"	f	class:gbe::GenWriter
regDAG	./backend/gen_insn_selection.cpp	/^    vector<SelectionDAG*> regDAG;$/;"	m	class:gbe::Selection::Opaque	file:
regDef	./ir/value.hpp	/^    map<Register, DefSet*> regDef;     \/\/!< All defs of registers$/;"	m	class:gbe::ir::FunctionDAG
regID	./ir/value.hpp	/^      uint32_t regID;$/;"	m	union:gbe::ir::ValueDef::Data
regMap	./ir/image.hpp	/^    map<Register, struct ImageInfo *> regMap;$/;"	m	class:gbe::ir::ImageSet
regNum	./backend/gen_insn_scheduling.cpp	/^    uint32_t regNum;$/;"	m	struct:gbe::ScheduleDAGNode	file:
regNum	./backend/gen_insn_selection.cpp	/^    uint32_t regNum;$/;"	m	class:gbe::Selection::Opaque	file:
regNum	./backend/gen_insn_selection.hpp	/^    uint16_t regNum;$/;"	m	class:gbe::SelectionVector
regNum	./ir/function.hpp	/^    INLINE uint32_t regNum(void) const { return file.regNum(); }$/;"	f	class:gbe::ir::Function
regNum	./ir/profile.hpp	/^    static const uint32_t regNum = 41;             \/\/ number of special registers$/;"	m	namespace:gbe::ir::ocl
regNum	./ir/register.hpp	/^    INLINE uint32_t regNum(void) const { return regs.size(); }$/;"	f	class:gbe::ir::RegisterFile
regSpillTick	./backend/gen_context.hpp	/^    uint32_t regSpillTick;$/;"	m	class:gbe::GenContext
regTranslator	./llvm/llvm_gen_backend.cpp	/^    RegisterTranslator regTranslator;$/;"	m	class:gbe::GenWriter	file:
regTuples	./ir/register.hpp	/^    vector<Register> regTuples;  \/\/!< Tuples are used for many src \/ dst$/;"	m	class:gbe::ir::RegisterFile
regUse	./ir/value.hpp	/^    map<Register, UseSet*> regUse;     \/\/!< All uses of registers$/;"	m	class:gbe::ir::FunctionDAG
reg_encoding	./backend/gen/gen_mesa_disasm.c	/^static const char *reg_encoding[11] = {$/;"	v	file:
reg_encoding_3src	./backend/gen/gen_mesa_disasm.c	/^static const char *reg_encoding_3src[5] = {$/;"	v	file:
reg_file	./backend/gen/gen_mesa_disasm.c	/^static const char *reg_file[4] = {$/;"	v	file:
reg_type_size	./backend/gen/gen_mesa_disasm.c	/^int reg_type_size[11] = {$/;"	v
registerAllocator	./backend/context.hpp	/^    RegisterAllocator *registerAllocator; \/\/!< physical register allocation$/;"	m	class:gbe::Context
regs	./backend/gen_insn_selection.hpp	/^    GenRegister regs[0];$/;"	m	class:gbe::SelectionInstruction
regs	./ir/register.hpp	/^    vector<RegisterData> regs;   \/\/!< All the registers together$/;"	m	class:gbe::ir::RegisterFile
relational_gentype	./libocl/script/gen_vector.py	/^relational_gentype = ["relational_gentype", gen_vector_type(all_type)]$/;"	v
relational_igentype	./libocl/script/gen_vector.py	/^relational_igentype = ["relational_igentype", gen_vector_type(all_itype)]$/;"	v
relational_ugentype	./libocl/script/gen_vector.py	/^relational_ugentype = ["relational_ugentype", gen_vector_type(all_utype)]$/;"	v
relaxMath	./backend/gen_context.hpp	/^    bool relaxMath;$/;"	m	class:gbe::GenContext
releaseLLVMContextLock	./backend/program.cpp	/^void releaseLLVMContextLock()$/;"	f
relocTable	./backend/program.hpp	/^    ir::RelocTable *relocTable;$/;"	m	class:gbe::Program
relocTable	./ir/unit.hpp	/^    RelocTable relocTable;$/;"	m	class:gbe::ir::Unit
remove	./ir/instruction.cpp	/^  void Instruction::remove(void) {$/;"	f	class:gbe::ir::Instruction
remove	./sys/intrusive_list.hpp	/^    static void remove(value_type* v) { unlink(v); }$/;"	f	class:gbe::intrusive_list
removeAlloc	./sys/alloc.cpp	/^  void MemDebugger::removeAlloc(void *ptr)$/;"	f	class:gbe::MemDebugger
removeFromReplaceInfoMap	./backend/gen_insn_selection_optimize.cpp	/^  void SelBasicBlockOptimizer::removeFromReplaceInfoMap(const SelectionInstruction& insn, const GenRegister& var)$/;"	f	class:gbe::SelBasicBlockOptimizer
removeLOADIs	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::removeLOADIs(const ir::Liveness &liveness, ir::Function &fn)$/;"	f	class:gbe::GenWriter
removeMOVs	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::removeMOVs(const ir::Liveness &liveness, ir::Function &fn)$/;"	f	class:gbe::GenWriter
removeRegs	./ir/liveness.cpp	/^  void Liveness::removeRegs(const set<Register> &removes) {$/;"	f	class:gbe::ir::Liveness
removeSimpleIfEndif	./backend/gen_insn_selection.hpp	/^    bool removeSimpleIfEndif;$/;"	m	class:gbe::SelectionBlock
rend	./sys/intrusive_list.hpp	/^    const_iterator rend(void) const   { return const_iterator(upcast(&m_root)); }$/;"	f	class:gbe::intrusive_list
rend	./sys/intrusive_list.hpp	/^    iterator rend(void)   { return iterator(upcast(&m_root)); }$/;"	f	class:gbe::intrusive_list
replace	./ir/instruction.cpp	/^  void Instruction::replace(Instruction *other) const {$/;"	f	class:gbe::ir::Instruction
replace	./ir/structurizer.cpp	/^  void CFGStructurizer::replace(Block* mergedBB,  BlockSets blockBBs)$/;"	f	class:gbe::ir::CFGStructurizer
replaceAllUsesOfWith	./llvm/llvm_scalarize.cpp	/^  void Scalarize::replaceAllUsesOfWith(Instruction* from, Instruction* to) {$/;"	f	class:gbe::Scalarize
replaceCallWith	./llvm/llvm_intrinsic_lowering.cpp	/^      static CallInst *replaceCallWith(const char *NewFn, CallInst *CI,$/;"	f	class:gbe::InstrinsicLowering
replaceDst	./backend/gen_insn_selection.cpp	/^  ir::Register Selection::Opaque::replaceDst(SelectionInstruction *insn, uint32_t regID, ir::Type type, bool needMov) {$/;"	f	class:gbe::Selection::Opaque
replaceDst	./backend/gen_insn_selection.cpp	/^  ir::Register Selection::replaceDst(SelectionInstruction *insn, uint32_t regID, ir::Type type, bool needMov) {$/;"	f	class:gbe::Selection
replaceDst	./llvm/llvm_gen_backend.cpp	/^  static void replaceDst(ir::Instruction *insn, ir::Register from, ir::Register to) {$/;"	f	namespace:gbe
replaceInfoMap	./backend/gen_insn_selection_optimize.cpp	/^    ReplaceInfoMap replaceInfoMap;$/;"	m	class:gbe::SelBasicBlockOptimizer	file:
replaceInst	./llvm/llvm_device_enqueue.cpp	/^  Instruction* replaceInst(Instruction *I, Value *v)$/;"	f	namespace:gbe
replaceReg	./backend/gen_reg_allocation.cpp	/^    INLINE ir::Register replaceReg(Selection &sel, SelectionInstruction *insn,$/;"	f	class:gbe::GenRegAllocator::Opaque	file:
replaceRegs	./ir/liveness.cpp	/^  void Liveness::replaceRegs(const map<Register, Register> &replaceMap) {$/;"	f	class:gbe::ir::Liveness
replaceSrc	./backend/gen_insn_selection.cpp	/^  ir::Register Selection::Opaque::replaceSrc(SelectionInstruction *insn, uint32_t regID, ir::Type type, bool needMov) {$/;"	f	class:gbe::Selection::Opaque
replaceSrc	./backend/gen_insn_selection.cpp	/^  ir::Register Selection::replaceSrc(SelectionInstruction *insn, uint32_t regID, ir::Type type, bool needMov) {$/;"	f	class:gbe::Selection
replaceSrc	./llvm/llvm_gen_backend.cpp	/^  static void replaceSrc(ir::Instruction *insn, ir::Register from, ir::Register to) {$/;"	f	namespace:gbe
replacement	./backend/gen_insn_selection_optimize.cpp	/^      const GenRegister& replacement;$/;"	m	class:gbe::SelBasicBlockOptimizer::ReplaceInfo	file:
replacementOverwritten	./backend/gen_insn_selection_optimize.cpp	/^      bool replacementOverwritten;$/;"	m	class:gbe::SelBasicBlockOptimizer::ReplaceInfo	file:
request	./backend/gen7_instruction.hpp	/^        uint32_t request:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon64
request	./backend/gen8_instruction.hpp	/^        uint32_t request:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon129
request	./backend/gen_defs.hpp	/^        uint32_t request:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon23
reserved	./backend/gen8_instruction.hpp	/^        uint32_t reserved:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon109
reserved	./libocl/include/ocl_enqueue.h	/^    unsigned long int reserved;         \/\/ NULL$/;"	m	struct:Block_literal::Block_descriptor_1
reserved	./libocl/include/ocl_enqueue.h	/^  int reserved;$/;"	m	struct:Block_literal
reserved0	./ir/profiling.hpp	/^            uint16_t reserved0:1;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151::GenInfo::Gen7Info
reserved1	./ir/profiling.hpp	/^            uint16_t reserved1:5;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151::GenInfo::Gen7Info
reserved1	./ir/profiling.hpp	/^            uint16_t reserved1:5;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151::GenInfo::Gen8Info
reservedReg	./backend/gen_reg_allocation.cpp	/^    uint32_t reservedReg;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
reservedSpillRegs	./backend/gen_context.hpp	/^    uint32_t reservedSpillRegs;$/;"	m	class:gbe::GenContext
reservedSpillRegs	./backend/gen_program.cpp	/^    uint32_t reservedSpillRegs;$/;"	m	struct:gbe::CodeGenStrategy	file:
reserved_mbz	./backend/gen7_instruction.hpp	/^        uint32_t reserved_mbz:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon67
reserved_mbz	./backend/gen_defs.hpp	/^        uint32_t reserved_mbz:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon26
resource	./backend/gen7_instruction.hpp	/^        uint32_t resource:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon64
resource	./backend/gen8_instruction.hpp	/^        uint32_t resource:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon129
resource	./backend/gen_defs.hpp	/^        uint32_t resource:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon23
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon62
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon63
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon64
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon65
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon66
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon67
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon68
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon69
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon70
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon71
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon72
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon73
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon74
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon75
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon76
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon78
response_length	./backend/gen7_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon80
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon127
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon128
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon129
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon130
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon131
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon132
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon133
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon134
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon135
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon136
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon137
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon138
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon139
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon140
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon141
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon142
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon143
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon146
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon147
response_length	./backend/gen8_instruction.hpp	/^        uint32_t response_length:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon149
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon21
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon22
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon23
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon24
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon25
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon26
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon27
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon28
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon29
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon30
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon31
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon32
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon33
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon34
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon35
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon36
response_length	./backend/gen_defs.hpp	/^        uint32_t response_length:5;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon38
retVal	./ir/profile.hpp	/^    static const Register retVal = Register(29);   \/\/ helper register to do data flow analysis.$/;"	m	namespace:gbe::ir::ocl
retiredCycle	./backend/gen_insn_scheduling.cpp	/^    uint32_t retiredCycle;$/;"	m	struct:gbe::ScheduleDAGNode	file:
return_data	./backend/gen7_instruction.hpp	/^        uint32_t return_data:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon76
return_data	./backend/gen8_instruction.hpp	/^        uint32_t return_data:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon140
return_data	./backend/gen8_instruction.hpp	/^        uint32_t return_data:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon141
return_data	./backend/gen_defs.hpp	/^        uint32_t return_data:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon35
retype	./backend/gen_register.hpp	/^    static INLINE GenRegister retype(GenRegister reg, uint32_t type) {$/;"	f	class:gbe::GenRegister
rewind	./sys/alloc.hpp	/^    void rewind(void) {$/;"	f	class:gbe::GrowingPool
rgba	./backend/gen7_instruction.hpp	/^        uint32_t rgba:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon69
rgba	./backend/gen8_instruction.hpp	/^        uint32_t rgba:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon133
rgba	./backend/gen8_instruction.hpp	/^        uint32_t rgba:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon142
rgba	./backend/gen_defs.hpp	/^        uint32_t rgba:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon28
run	./backend/gen_insn_selection_optimize.cpp	/^  void SelBasicBlockOptimizer::run()$/;"	f	class:gbe::SelBasicBlockOptimizer
run	./backend/gen_insn_selection_optimize.cpp	/^  void SelGlobalOptimizer::run()$/;"	f	class:gbe::SelGlobalOptimizer
runBitCodeLinker	./llvm/llvm_bitcode_link.cpp	/^  Module* runBitCodeLinker(Module *mod, bool strictMath, ir::Unit &unit)$/;"	f	namespace:gbe
runFuntionPass	./llvm/llvm_to_gen.cpp	/^  void runFuntionPass(Module &mod, TARGETLIBRARY *libraryInfo, const DataLayout &DL)$/;"	f	namespace:gbe
runModulePass	./llvm/llvm_to_gen.cpp	/^  void runModulePass(Module &mod, TARGETLIBRARY *libraryInfo, const DataLayout &DL, int optLevel, bool strictMath)$/;"	f	namespace:gbe
runOnBasicBlock	./llvm/llvm_intrinsic_lowering.cpp	/^      virtual bool runOnBasicBlock(BasicBlock &BB)$/;"	f	class:gbe::InstrinsicLowering
runOnBasicBlock	./llvm/llvm_loadstore_optimization.cpp	/^    virtual bool runOnBasicBlock(BasicBlock &BB) {$/;"	f	class:gbe::GenLoadStoreOptimization
runOnBasicBlock	./llvm/llvm_passes.cpp	/^    virtual bool runOnBasicBlock(BasicBlock &BB)$/;"	f	class:gbe::GenRemoveGEPPasss
runOnFunction	./llvm/ExpandConstantExpr.cpp	/^bool ExpandConstantExpr::runOnFunction(Function &Func) {$/;"	f	class:ExpandConstantExpr
runOnFunction	./llvm/ExpandLargeIntegers.cpp	/^bool ExpandLargeIntegers::runOnFunction(Function &F) {$/;"	f	class:ExpandLargeIntegers
runOnFunction	./llvm/PromoteIntegers.cpp	/^bool PromoteIntegers::runOnFunction(Function &F) {$/;"	f	class:PromoteIntegers
runOnFunction	./llvm/StripAttributes.cpp	/^bool StripAttributes::runOnFunction(Function &Func) {$/;"	f	class:StripAttributes
runOnFunction	./llvm/llvm_gen_backend.cpp	/^    bool runOnFunction(Function &F) {$/;"	f	class:gbe::GenWriter
runOnFunction	./llvm/llvm_printf_parser.cpp	/^  bool PrintfParser::runOnFunction(llvm::Function &F)$/;"	f	class:gbe::PrintfParser
runOnFunction	./llvm/llvm_profiling.cpp	/^  bool ProfilingInserter::runOnFunction(llvm::Function &F)$/;"	f	class:gbe::ProfilingInserter
runOnFunction	./llvm/llvm_sampler_fix.cpp	/^    bool runOnFunction(Function& F) {$/;"	f	class:gbe::SamplerFix
runOnFunction	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::runOnFunction(Function& F)$/;"	f	class:gbe::Scalarize
runOnLoop	./llvm/llvm_unroll.cpp	/^      virtual bool runOnLoop(Loop *L, LPPassManager &LPM) {$/;"	f	class:gbe::CustomLoopUnroll
runOnModule	./llvm/llvm_barrier_nodup.cpp	/^      virtual bool runOnModule(Module &M)$/;"	f	class:gbe::BarrierNodup
s16	./ir/immediate.hpp	/^      int16_t *s16;$/;"	m	union:gbe::ir::Immediate::__anon154
s32	./ir/immediate.hpp	/^      int32_t *s32;$/;"	m	union:gbe::ir::Immediate::__anon154
s64	./ir/immediate.hpp	/^      int64_t *s64;$/;"	m	union:gbe::ir::Immediate::__anon154
s8	./ir/immediate.hpp	/^      int8_t *s8;$/;"	m	union:gbe::ir::Immediate::__anon154
sIterator	./ir/structurizer.hpp	/^  typedef std::set<Block *>::iterator sIterator;$/;"	t	namespace:gbe::ir
sameAsDstRegion	./backend/gen_insn_selection.cpp	/^  bool SelectionInstruction::sameAsDstRegion(uint32_t srcID) {$/;"	f	class:gbe::SelectionInstruction
sampler	./backend/gen7_instruction.hpp	/^        uint32_t sampler:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon66
sampler	./backend/gen8_instruction.hpp	/^        uint32_t sampler:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon131
sampler	./backend/gen_defs.hpp	/^        uint32_t sampler:4;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon25
sampler	./backend/gen_insn_selection.hpp	/^        uint16_t sampler:5;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon88
samplerMap	./ir/sampler.hpp	/^    map<uint32_t, uint32_t> samplerMap;$/;"	m	class:gbe::ir::SamplerSet
samplerSet	./backend/program.hpp	/^    ir::SamplerSet *samplerSet;\/\/!< Copy from the corresponding function.$/;"	m	class:gbe::Kernel
samplerSet	./ir/function.hpp	/^    SamplerSet *samplerSet;         \/\/!< samplers used in this function.$/;"	m	class:gbe::ir::Function
sampler_gen7	./backend/gen7_instruction.hpp	/^      } sampler_gen7;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon66
sampler_gen7	./backend/gen8_instruction.hpp	/^      } sampler_gen7;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon131
sampler_gen7	./backend/gen_defs.hpp	/^      } sampler_gen7;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon25
saturate	./backend/gen/gen_mesa_disasm.c	/^static const char *saturate[2] = {$/;"	v	file:
saturate	./backend/gen7_instruction.hpp	/^        uint32_t saturate:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon65
saturate	./backend/gen7_instruction.hpp	/^      uint32_t saturate:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
saturate	./backend/gen8_instruction.hpp	/^        uint32_t saturate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon130
saturate	./backend/gen8_instruction.hpp	/^      uint32_t saturate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
saturate	./backend/gen9_instruction.hpp	/^      uint32_t saturate:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
saturate	./backend/gen_defs.hpp	/^        uint32_t saturate:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon24
saturate	./backend/gen_defs.hpp	/^      uint32_t saturate:1;$/;"	m	struct:GenCompactInstruction::__anon9::__anon10
saturate	./backend/gen_defs.hpp	/^      uint32_t saturate:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon17
saturate	./backend/gen_insn_compact.cpp	/^      uint32_t saturate:1;$/;"	m	struct:gbe::ControlBits::__anon94	file:
saveFlag	./backend/gen_context.cpp	/^  void GenContext::saveFlag(GenRegister dest, int flag, int subFlag) {$/;"	f	class:gbe::GenContext
scalarMap	./llvm/llvm_gen_backend.cpp	/^    map<ValueIndex, ir::Register> scalarMap;$/;"	m	class:gbe::RegisterTranslator	file:
scalarize	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::scalarize(Instruction* inst)$/;"	f	class:gbe::Scalarize
scalarizeArgs	./llvm/llvm_scalarize.cpp	/^  void Scalarize::scalarizeArgs(Function& F)  {$/;"	f	class:gbe::Scalarize
scalarizeBitCast	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::scalarizeBitCast(BitCastInst* bt)$/;"	f	class:gbe::Scalarize
scalarizeExtract	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::scalarizeExtract(ExtractElementInst* extr)$/;"	f	class:gbe::Scalarize
scalarizeFuncCall	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::scalarizeFuncCall(CallInst* call) {$/;"	f	class:gbe::Scalarize
scalarizeInsert	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::scalarizeInsert(InsertElementInst* ins)$/;"	f	class:gbe::Scalarize
scalarizeLoad	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::scalarizeLoad(LoadInst* ld)$/;"	f	class:gbe::Scalarize
scalarizePHI	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::scalarizePHI(PHINode* phi)$/;"	f	class:gbe::Scalarize
scalarizePerComponent	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::scalarizePerComponent(Instruction* inst)$/;"	f	class:gbe::Scalarize
scalarizeShuffleVector	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::scalarizeShuffleVector(ShuffleVectorInst* sv)$/;"	f	class:gbe::Scalarize
scalarizeStore	./llvm/llvm_scalarize.cpp	/^  bool Scalarize::scalarizeStore(StoreInst* st) {$/;"	f	class:gbe::Scalarize
schedulePostRegAllocation	./backend/gen_insn_scheduling.cpp	/^  void schedulePostRegAllocation(GenContext &ctx, Selection &selection) {$/;"	f	namespace:gbe
schedulePreRegAllocation	./backend/gen_insn_scheduling.cpp	/^  void schedulePreRegAllocation(GenContext &ctx, Selection &selection) {$/;"	f	namespace:gbe
scheduler	./backend/gen_insn_scheduling.cpp	/^    SelectionScheduler &scheduler;$/;"	m	struct:gbe::DependencyTracker	file:
scratchAllocator	./backend/context.hpp	/^    ScratchAllocator *scratchAllocator;   \/\/!< scratch memory allocator$/;"	m	class:gbe::Context
scratchMsgHeader	./backend/gen_insn_selection.hpp	/^        uint16_t scratchMsgHeader;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon86
scratchOffset	./backend/gen_insn_selection.hpp	/^        uint16_t scratchOffset;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon86
scratchRead	./backend/gen_context.cpp	/^  void GenContext::scratchRead(const GenRegister dst, const GenRegister header, uint32_t offset, uint32_t reg_num, uint32_t reg_type, uint32_t channel_mode) {$/;"	f	class:gbe::GenContext
scratchSize	./backend/program.hpp	/^    uint32_t scratchSize;      \/\/!< Scratch memory size (may be 0 if unused)$/;"	m	class:gbe::Kernel
scratchWrite	./backend/gen_context.cpp	/^  void GenContext::scratchWrite(const GenRegister header, uint32_t offset, uint32_t reg_num, uint32_t reg_type, uint32_t channel_mode) {$/;"	f	class:gbe::GenContext
sectionHeader	./libocl/script/gen_vector.py	/^    sectionHeader = ""$/;"	v	class:builtinProto
sel	./backend/gen_context.hpp	/^    Selection *sel;$/;"	m	class:gbe::GenContext
selLib	./backend/gen_insn_selection.cpp	/^  static SelectionLibrary *selLib = NULL;$/;"	m	namespace:gbe	file:
selReg	./backend/gen_insn_selection.cpp	/^  GenRegister Selection::Opaque::selReg(ir::Register reg, ir::Type type) const {$/;"	f	class:gbe::Selection::Opaque
selRegQn	./backend/gen_insn_selection.cpp	/^  GenRegister Selection::Opaque::selRegQn(ir::Register reg, uint32_t q, ir::Type type) const {$/;"	f	class:gbe::Selection::Opaque
sel_reg32_desc	./backend/gen9_instruction.hpp	/^        uint32_t sel_reg32_desc:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon5::__anon6
select	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::select(void)$/;"	f	class:gbe::Selection::Opaque
select	./backend/gen_insn_selection.cpp	/^  void Selection::select(void) {$/;"	f	class:gbe::Selection
select	./sys/platform.hpp	/^  INLINE bool  select(bool s, bool  t , bool f) { return s ? t : f; }$/;"	f	namespace:gbe
select	./sys/platform.hpp	/^  INLINE float select(bool s, float t, float f) { return s ? t : f; }$/;"	f	namespace:gbe
select	./sys/platform.hpp	/^  INLINE int   select(bool s, int   t,   int f) { return s ? t : f; }$/;"	f	namespace:gbe
selection	./backend/gen_insn_scheduling.cpp	/^    Selection &selection;$/;"	m	struct:gbe::SelectionScheduler	file:
selectionLibraryInitializer	./backend/gen_insn_selection.cpp	/^  } selectionLibraryInitializer;$/;"	m	namespace:gbe	typeref:struct:gbe::SelectionLibraryInitializer	file:
sends	./backend/gen9_instruction.hpp	/^      } sends;$/;"	m	union:Gen9NativeInstruction::__anon1::__anon3	typeref:struct:Gen9NativeInstruction::__anon1::__anon3::__anon4
sends	./backend/gen9_instruction.hpp	/^      } sends;$/;"	m	union:Gen9NativeInstruction::__anon1::__anon5	typeref:struct:Gen9NativeInstruction::__anon1::__anon5::__anon6
seq	./ir/lowering.cpp	/^    LoadAddImmSeq seq;  \/\/!< All the direct loads$/;"	m	class:gbe::ir::FunctionArgumentLowerer	file:
serialPatternMatch	./ir/structurizer.cpp	/^  int CFGStructurizer::serialPatternMatch(Block *block) {$/;"	f	class:gbe::ir::CFGStructurizer
serializeToBin	./backend/program.cpp	/^  uint32_t Kernel::serializeToBin(std::ostream& outs) {$/;"	f	class:gbe::Kernel
serializeToBin	./backend/program.cpp	/^  uint32_t Program::serializeToBin(std::ostream& outs) {$/;"	f	class:gbe::Program
serializeToBin	./ir/constant.cpp	/^  uint32_t ConstantSet::serializeToBin(std::ostream& outs) {$/;"	f	class:gbe::ir::ConstantSet
serializeToBin	./ir/image.cpp	/^  uint32_t ImageSet::serializeToBin(std::ostream& outs) {$/;"	f	class:gbe::ir::ImageSet
serializeToBin	./ir/reloc.cpp	/^  uint32_t RelocTable::serializeToBin(std::ostream& outs) {$/;"	f	class:gbe::ir::RelocTable
serializeToBin	./ir/sampler.cpp	/^  uint32_t SamplerSet::serializeToBin(std::ostream& outs) {$/;"	f	class:gbe::ir::SamplerSet
serializeToLLVM	./sys/platform.hpp	/^  virtual uint32_t serializeToLLVM(void) { return 0;\/* not implemented now. *\/}$/;"	f	class:Serializable
serialize_program	./gbe_bin_generater.cpp	/^void program_build_instance::serialize_program(void) throw(int)$/;"	f	class:program_build_instance
set	./ir/register.hpp	/^    INLINE void set(Tuple index, uint32_t which, Register reg) {$/;"	f	class:gbe::ir::RegisterFile
set	./sys/set.hpp	/^    INLINE set(InputIterator first,$/;"	f	class:gbe::set
set	./sys/set.hpp	/^    INLINE set(const key_compare &comp = key_compare(),$/;"	f	class:gbe::set
set	./sys/set.hpp	/^  class set : public std::set<Key,Pred,Allocator<Key>>, public NonCopyable$/;"	c	namespace:gbe
setA0Content	./backend/gen8_context.cpp	/^  void ChvContext::setA0Content(uint16_t new_a0[16], uint16_t max_offset, int sz) {$/;"	f	class:gbe::ChvContext
setA0Content	./backend/gen8_context.cpp	/^  void Gen8Context::setA0Content(uint16_t new_a0[16], uint16_t max_offset, int sz) {$/;"	f	class:gbe::Gen8Context
setA0Content	./backend/gen9_context.cpp	/^  void BxtContext::setA0Content(uint16_t new_a0[16], uint16_t max_offset, int sz) {$/;"	f	class:gbe::BxtContext
setA0Content	./backend/gen_context.cpp	/^  void GenContext::setA0Content(uint16_t new_a0[16], uint16_t max_offset, int sz) {$/;"	f	class:gbe::GenContext
setASMFileName	./backend/gen_context.cpp	/^  void GenContext::setASMFileName(const char* asmFname) {$/;"	f	class:gbe::GenContext
setAppendPoint	./llvm/llvm_scalarize.cpp	/^    void setAppendPoint(Instruction *insn)  {$/;"	f	class:gbe::Scalarize
setAsMergeable	./backend/gen_insn_selection.cpp	/^    INLINE void setAsMergeable(uint32_t which) { mergeable|=(1<<which); }$/;"	f	class:gbe::SelectionDAG
setAtomicA64MessageDesc	./backend/gen8_encoder.cpp	/^  unsigned Gen8Encoder::setAtomicA64MessageDesc(GenNativeInstruction *insn, unsigned function, unsigned bti, unsigned srcNum, int type_long) {$/;"	f	class:gbe::Gen8Encoder
setAtomicA64MessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::setAtomicA64MessageDesc(GenNativeInstruction *insn, unsigned function, unsigned bti, unsigned srcNum, int type_long) {$/;"	f	class:gbe::GenEncoder
setAtomicMessageDesc	./backend/gen75_encoder.cpp	/^  unsigned Gen75Encoder::setAtomicMessageDesc(GenNativeInstruction *insn, unsigned function, unsigned bti, unsigned srcNum) {$/;"	f	class:gbe::Gen75Encoder
setAtomicMessageDesc	./backend/gen8_encoder.cpp	/^  unsigned Gen8Encoder::setAtomicMessageDesc(GenNativeInstruction *insn, unsigned function, unsigned bti, unsigned srcNum) {$/;"	f	class:gbe::Gen8Encoder
setAtomicMessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::setAtomicMessageDesc(GenNativeInstruction *insn, unsigned function, unsigned bti, unsigned srcNum) {$/;"	f	class:gbe::GenEncoder
setBTI	./ir/profiling.hpp	/^      void setBTI(uint32_t b) {$/;"	f	class:gbe::ir::ProfilingInfo
setBlockIP	./backend/gen_context.cpp	/^  void GenContext::setBlockIP(GenRegister blockip, uint32_t label) {$/;"	f	class:gbe::GenContext
setBlockIP	./backend/gen_insn_selection.cpp	/^    void setBlockIP(GenRegister blockip, uint32_t labelValue) {$/;"	f	class:gbe::Selection::Opaque
setBtiReg	./ir/instruction.cpp	/^      void         setBtiReg(Register reg)        { BtiReg = reg;      }$/;"	f	class:gbe::ir::internal::MemInstruction
setBufBTI	./ir/printf.hpp	/^      void setBufBTI(uint8_t b)      { btiBuf = b; }$/;"	f	class:gbe::ir::PrintfSet
setByteGatherMessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::setByteGatherMessageDesc(GenNativeInstruction *insn, unsigned bti, unsigned elemSize) {$/;"	f	class:gbe::GenEncoder
setByteScatterMessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::setByteScatterMessageDesc(GenNativeInstruction *insn, unsigned bti, unsigned elemSize) {$/;"	f	class:gbe::GenEncoder
setByteScatterSendsMessageDesc	./backend/gen9_encoder.cpp	/^  unsigned Gen9Encoder::setByteScatterSendsMessageDesc(GenNativeInstruction *insn, unsigned bti, unsigned elemSize)$/;"	f	class:gbe::Gen9Encoder
setByteScatterSendsMessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::setByteScatterSendsMessageDesc(GenNativeInstruction *insn, unsigned bti, unsigned elemSize)$/;"	f	class:gbe::GenEncoder
setCode	./backend/gen_program.cpp	/^  void GenKernel::setCode(const char * ins, size_t size) {$/;"	f	class:gbe::GenKernel
setCompileWorkGroupSize	./backend/program.hpp	/^    void setCompileWorkGroupSize(const size_t wg_sz[3]) {$/;"	f	class:gbe::Kernel
setCompileWorkGroupSize	./ir/function.hpp	/^    void setCompileWorkGroupSize(size_t x, size_t y, size_t z) { compileWgSize[0] = x; compileWgSize[1] = y; compileWgSize[2] = z; }$/;"	f	class:gbe::ir::Function
setComponent	./llvm/llvm_scalarize.cpp	/^    void setComponent(VectorValues &vecVals, uint32_t c, llvm::Value* val) {$/;"	f	class:gbe::Scalarize
setComponent	./llvm/llvm_scalarize.cpp	/^    void setComponent(int c, llvm::Value* val)$/;"	f	struct:gbe::VectorValues
setDBGInfo	./backend/gen_encoder.cpp	/^  void GenEncoder::setDBGInfo(DebugInfo in, bool hasHigh)$/;"	f	class:gbe::GenEncoder
setDBGInfo	./backend/gen_insn_selection.hpp	/^    void setDBGInfo(DebugInfo in) { DBGInfo = in; }$/;"	f	class:gbe::SelectionInstruction
setDBGInfo	./ir/context.hpp	/^    void setDBGInfo(DebugInfo in) { DBGInfo = in; }$/;"	f	class:gbe::ir::Context
setDBGInfo	./ir/instruction.hpp	/^    void setDBGInfo(DebugInfo in) { DBGInfo = in; }$/;"	f	class:gbe::ir::Instruction
setDBGInfo_SEL	./backend/gen_insn_selection.cpp	/^    void setDBGInfo_SEL(DebugInfo in) { DBGInfo = in; }$/;"	f	class:gbe::Selection::Opaque
setDPByteScatterGather	./backend/gen_encoder.cpp	/^  void GenEncoder::setDPByteScatterGather(GenNativeInstruction *insn,$/;"	f	class:gbe::GenEncoder
setDPByteScatterGatherA64	./backend/gen8_encoder.cpp	/^  static void setDPByteScatterGatherA64(GenEncoder *p,$/;"	f	namespace:gbe
setDPUntypedRW	./backend/gen75_encoder.cpp	/^  void Gen75Encoder::setDPUntypedRW(GenNativeInstruction *insn,$/;"	f	class:gbe::Gen75Encoder
setDPUntypedRW	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::setDPUntypedRW(GenNativeInstruction *insn,$/;"	f	class:gbe::Gen8Encoder
setDPUntypedRW	./backend/gen_encoder.cpp	/^  void GenEncoder::setDPUntypedRW(GenNativeInstruction *insn, uint32_t bti,$/;"	f	class:gbe::GenEncoder
setDWordScatterMessgae	./backend/gen_encoder.cpp	/^  static void setDWordScatterMessgae(GenEncoder *p,$/;"	f	namespace:gbe
setData	./ir/constant.hpp	/^    void setData(char *mem, int offset, int size) {$/;"	f	class:gbe::ir::ConstantSet
setDebugInfo_CTX	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::setDebugInfo_CTX(llvm::Instruction * insn)$/;"	f	class:gbe::GenWriter
setDeviceID	./ir/profiling.hpp	/^      void setDeviceID(uint32_t id) {$/;"	f	class:gbe::ir::ProfilingInfo
setDst	./backend/gen7_encoder.cpp	/^  void Gen7Encoder::setDst(GenNativeInstruction *insn, GenRegister dest) {$/;"	f	class:gbe::Gen7Encoder
setDst	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::setDst(GenNativeInstruction *insn, GenRegister dest) {$/;"	f	class:gbe::Gen8Encoder
setDst	./ir/instruction.cpp	/^        INLINE void     setDst(Function &fn, unsigned id, Register reg) {$/;"	f	class:gbe::ir::internal::LoadInstruction
setDst	./ir/instruction.cpp	/^      INLINE void setDst(Function &fn, uint32_t ID, Register reg) {$/;"	f	struct:gbe::ir::internal::NDstPolicy
setDst	./ir/instruction.cpp	/^      INLINE void setDst(Function &fn, uint32_t ID, Register reg) {$/;"	f	struct:gbe::ir::internal::TupleDstPolicy
setDst	./ir/instruction.cpp	/^  void Instruction::setDst(uint32_t dstID, Register reg) {$/;"	f	class:gbe::ir::Instruction
setFlag	./backend/gen_context.cpp	/^  void GenContext::setFlag(GenRegister flagReg, GenRegister src) {$/;"	f	class:gbe::GenContext
setFunctionAsKernel	./llvm/llvm_device_enqueue.cpp	/^  Function* setFunctionAsKernel(Module *mod, Function *Fn)$/;"	f	namespace:gbe
setFunctionAttributes	./backend/program.hpp	/^    void setFunctionAttributes(const std::string& functionAttributes) {  this->functionAttributes= functionAttributes; }$/;"	f	class:gbe::Kernel
setFunctionAttributes	./ir/function.hpp	/^    void setFunctionAttributes(const std::string& functionAttributes) {  this->functionAttributes= functionAttributes; }$/;"	f	class:gbe::ir::Function
setGenReg	./backend/gen_reg_allocation.cpp	/^  INLINE GenRegister setGenReg(const GenRegister &src, uint32_t grfOffset) {$/;"	f	namespace:gbe
setHas32X32Mul	./backend/gen_insn_selection.cpp	/^    void setHas32X32Mul(bool b) { bHas32X32Mul = b; }$/;"	f	class:gbe::Selection::Opaque
setHasDoubleType	./backend/gen_insn_selection.cpp	/^    void setHasDoubleType(bool b) { bHasDoubleType = b; }$/;"	f	class:gbe::Selection::Opaque
setHasHalfType	./backend/gen_insn_selection.cpp	/^    void setHasHalfType(bool b) { bHasHalfType = b; }$/;"	f	class:gbe::Selection::Opaque
setHasLongType	./backend/gen_insn_selection.cpp	/^    void setHasLongType(bool b) { bHasLongType = b; }$/;"	f	class:gbe::Selection::Opaque
setHasSends	./backend/gen_insn_selection.cpp	/^    void setHasSends(bool b) { bHasSends = b; }$/;"	f	class:gbe::Selection::Opaque
setHeader	./backend/gen75_encoder.cpp	/^  void Gen75Encoder::setHeader(GenNativeInstruction *insn) {$/;"	f	class:gbe::Gen75Encoder
setHeader	./backend/gen7_encoder.cpp	/^  void Gen7Encoder::setHeader(GenNativeInstruction *insn) {$/;"	f	class:gbe::Gen7Encoder
setHeader	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::setHeader(GenNativeInstruction *insn) {$/;"	f	class:gbe::Gen8Encoder
setIFENDIFFix	./backend/gen_context.hpp	/^    void setIFENDIFFix(bool fix) { ifEndifFix = fix; }$/;"	f	class:gbe::GenContext
setImageSet	./backend/program.hpp	/^    void setImageSet(ir::ImageSet * from) {$/;"	f	class:gbe::Kernel
setInProfilingMode	./ir/unit.hpp	/^    void setInProfilingMode(bool b) { inProfilingMode = b; }$/;"	f	class:gbe::ir::Unit
setInfoOffset4Type	./ir/image.cpp	/^  static uint32_t setInfoOffset4Type(struct ImageInfo *imageInfo, int type, uint32_t offset)$/;"	f	namespace:gbe::ir
setLdMsgOrder	./backend/gen_insn_selection.cpp	/^    void setLdMsgOrder(uint32_t type)  { ldMsgOrder = type; }$/;"	f	class:gbe::Selection::Opaque
setLongRegRestrict	./backend/gen_insn_selection.cpp	/^    void setLongRegRestrict(bool b) { bLongRegRestrict = b; }$/;"	f	class:gbe::Selection::Opaque
setMBlockRW	./backend/gen_encoder.cpp	/^  void GenEncoder::setMBlockRW(GenNativeInstruction *insn,$/;"	f	class:gbe::GenEncoder
setMBlockRWGEN7	./backend/gen7_encoder.cpp	/^  static void setMBlockRWGEN7(GenEncoder *p,$/;"	f	namespace:gbe
setMessageDescriptor	./backend/gen_encoder.cpp	/^  void GenEncoder::setMessageDescriptor(GenNativeInstruction *inst, enum GenMessageTarget sfid,$/;"	f	class:gbe::GenEncoder
setOBlockRW	./backend/gen_encoder.cpp	/^  void GenEncoder::setOBlockRW(GenNativeInstruction *insn,$/;"	f	class:gbe::GenEncoder
setOBlockRWA64	./backend/gen8_encoder.cpp	/^  static void setOBlockRWA64(GenEncoder *p,$/;"	f	namespace:gbe
setOclVersion	./backend/program.hpp	/^    INLINE void setOclVersion(uint32_t version) { this->oclVersion = version; }$/;"	f	class:gbe::Kernel
setOclVersion	./ir/unit.hpp	/^    void setOclVersion(uint32_t version) { oclVersion = version; }$/;"	f	class:gbe::ir::Unit
setParent	./ir/instruction.hpp	/^    void setParent(BasicBlock *block) { this->parent = block; }$/;"	f	class:gbe::ir::Instruction
setPayloadType	./ir/register.hpp	/^    INLINE void setPayloadType(Register index, gbe_curbe_type curbeType, int subType) {$/;"	f	class:gbe::ir::RegisterFile
setPayloadType	./ir/register.hpp	/^    INLINE void setPayloadType(gbe_curbe_type curbeType, int subType) {$/;"	f	class:gbe::ir::RegisterData
setPointerSize	./ir/unit.hpp	/^    INLINE void setPointerSize(PointerSize size) { pointerSize = size; }$/;"	f	class:gbe::ir::Unit
setPrintfSet	./backend/program.hpp	/^    void setPrintfSet(ir::PrintfSet * from) {$/;"	f	class:gbe::Kernel
setProfilingInfo	./backend/program.hpp	/^    void setProfilingInfo(ir::ProfilingInfo * from) {$/;"	f	class:gbe::Kernel
setProfilingMode	./backend/gen_context.hpp	/^    void setProfilingMode(bool b) { inProfilingMode = b; }$/;"	f	class:gbe::GenContext
setProfilingType	./ir/profiling.hpp	/^      void setProfilingType(uint32_t t) {$/;"	f	class:gbe::ir::ProfilingInfo
setRegPayloadType	./ir/function.hpp	/^    INLINE void setRegPayloadType(Register reg, gbe_curbe_type curbeType, int subType) {$/;"	f	class:gbe::ir::Function
setRegister	./ir/function.hpp	/^    INLINE void setRegister(Tuple ID, uint32_t which, Register reg) {$/;"	f	class:gbe::ir::Function
setRegisterUniform	./ir/function.hpp	/^    INLINE void setRegisterUniform(Register reg, bool uniform) { file.setUniform(reg, uniform); }$/;"	f	class:gbe::ir::Function
setSLMSize	./ir/function.hpp	/^    INLINE void setSLMSize(uint32_t size) { this->slmSize = size; }$/;"	f	class:gbe::ir::Function
setSamplerMessage	./backend/gen_encoder.cpp	/^  void GenEncoder::setSamplerMessage(GenNativeInstruction *insn,$/;"	f	class:gbe::GenEncoder
setSamplerSet	./backend/program.hpp	/^    void setSamplerSet(ir::SamplerSet *from) {$/;"	f	class:gbe::Kernel
setScratchMessage	./backend/gen_encoder.cpp	/^  static void setScratchMessage(GenEncoder *p,$/;"	f	namespace:gbe
setSendsOperands	./backend/gen9_encoder.cpp	/^  void Gen9Encoder::setSendsOperands(Gen9NativeInstruction *gen9_insn, GenRegister dst, GenRegister src0, GenRegister src1)$/;"	f	class:gbe::Gen9Encoder
setSimdWidth	./ir/context.hpp	/^    void setSimdWidth(uint32_t width) const {$/;"	f	class:gbe::ir::Context
setSimdWidth	./ir/function.hpp	/^    INLINE void setSimdWidth(uint32_t width) { simdWidth = width; }$/;"	f	class:gbe::ir::Function
setSlowByteGather	./backend/gen_insn_selection.cpp	/^    void setSlowByteGather(bool b) { slowByteGather = b; }$/;"	f	class:gbe::Selection::Opaque
setSrc	./ir/instruction.cpp	/^        INLINE void     setSrc(Function &fn, unsigned id, Register reg) {$/;"	f	class:gbe::ir::internal::LoadInstruction
setSrc	./ir/instruction.cpp	/^        INLINE void     setSrc(Function &fn, unsigned id, Register reg) {$/;"	f	class:gbe::ir::internal::StoreInstruction
setSrc	./ir/instruction.cpp	/^      INLINE void setSrc(Function &fn, uint32_t ID, Register reg) {$/;"	f	class:gbe::ir::internal::AtomicInstruction
setSrc	./ir/instruction.cpp	/^      INLINE void setSrc(Function &fn, uint32_t ID, Register reg) {$/;"	f	class:gbe::ir::internal::BranchInstruction
setSrc	./ir/instruction.cpp	/^      INLINE void setSrc(Function &fn, uint32_t ID, Register reg) {$/;"	f	struct:gbe::ir::internal::NSrcPolicy
setSrc	./ir/instruction.cpp	/^      INLINE void setSrc(Function &fn, uint32_t ID, Register reg) {$/;"	f	struct:gbe::ir::internal::TupleSrcPolicy
setSrc	./ir/instruction.cpp	/^  void Instruction::setSrc(uint32_t srcID, Register reg) {$/;"	f	class:gbe::ir::Instruction
setSrc0	./backend/gen7_encoder.cpp	/^  void Gen7Encoder::setSrc0(GenNativeInstruction *insn, GenRegister reg) {$/;"	f	class:gbe::Gen7Encoder
setSrc0	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::setSrc0(GenNativeInstruction *insn, GenRegister reg) {$/;"	f	class:gbe::Gen8Encoder
setSrc0WithAcc	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::setSrc0WithAcc(GenNativeInstruction *insn, GenRegister reg, uint32_t accN) {$/;"	f	class:gbe::Gen8Encoder
setSrc1	./backend/gen7_encoder.cpp	/^  void Gen7Encoder::setSrc1(GenNativeInstruction *insn, GenRegister reg) {$/;"	f	class:gbe::Gen7Encoder
setSrc1	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::setSrc1(GenNativeInstruction *insn, GenRegister reg) {$/;"	f	class:gbe::Gen8Encoder
setSrc1WithAcc	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::setSrc1WithAcc(GenNativeInstruction *insn, GenRegister reg, uint32_t accN) {$/;"	f	class:gbe::Gen8Encoder
setSurfaceIndex	./ir/instruction.cpp	/^      void         setSurfaceIndex (unsigned id)  { SurfaceIndex = id; }$/;"	f	class:gbe::ir::internal::MemInstruction
setType	./ir/function.hpp	/^    INLINE void setType(Tuple ID, uint32_t which, uint8_t type) {$/;"	f	class:gbe::ir::Function
setType	./ir/register.hpp	/^    INLINE void setType(Tuple index, uint32_t which, uint8_t type) {$/;"	f	class:gbe::ir::RegisterFile
setTypedWriteMessage	./backend/gen75_encoder.cpp	/^  void Gen75Encoder::setTypedWriteMessage(GenNativeInstruction *insn, unsigned char bti,$/;"	f	class:gbe::Gen75Encoder
setTypedWriteMessage	./backend/gen8_encoder.cpp	/^  void Gen8Encoder::setTypedWriteMessage(GenNativeInstruction *insn, unsigned char bti,$/;"	f	class:gbe::Gen8Encoder
setTypedWriteMessage	./backend/gen_encoder.cpp	/^  void GenEncoder::setTypedWriteMessage(GenNativeInstruction *insn, unsigned char bti,$/;"	f	class:gbe::GenEncoder
setUniform	./ir/register.hpp	/^    INLINE void setUniform(Register index, bool uniform) { regs[index].setUniform(uniform); }$/;"	f	class:gbe::ir::RegisterFile
setUniform	./ir/register.hpp	/^    INLINE void setUniform(bool uni) { uniform = uni; }$/;"	f	class:gbe::ir::RegisterData
setUnrollID	./llvm/llvm_unroll.cpp	/^      void setUnrollID(Loop *L, bool enable) {$/;"	f	class:gbe::CustomLoopUnroll
setUntypedReadMessageDesc	./backend/gen75_encoder.cpp	/^  unsigned Gen75Encoder::setUntypedReadMessageDesc(GenNativeInstruction *insn, unsigned bti, unsigned elemNum) {$/;"	f	class:gbe::Gen75Encoder
setUntypedReadMessageDesc	./backend/gen8_encoder.cpp	/^  unsigned Gen8Encoder::setUntypedReadMessageDesc(GenNativeInstruction *insn, unsigned bti, unsigned elemNum) {$/;"	f	class:gbe::Gen8Encoder
setUntypedReadMessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::setUntypedReadMessageDesc(GenNativeInstruction *insn, unsigned bti, unsigned elemNum) {$/;"	f	class:gbe::GenEncoder
setUntypedWriteMessageDesc	./backend/gen75_encoder.cpp	/^  unsigned Gen75Encoder::setUntypedWriteMessageDesc(GenNativeInstruction *insn, unsigned bti, unsigned elemNum) {$/;"	f	class:gbe::Gen75Encoder
setUntypedWriteMessageDesc	./backend/gen8_encoder.cpp	/^  unsigned Gen8Encoder::setUntypedWriteMessageDesc(GenNativeInstruction *insn, unsigned bti, unsigned elemNum) {$/;"	f	class:gbe::Gen8Encoder
setUntypedWriteMessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::setUntypedWriteMessageDesc(GenNativeInstruction *insn, unsigned bti, unsigned elemNum) {$/;"	f	class:gbe::GenEncoder
setUntypedWriteSendsMessageDesc	./backend/gen9_encoder.cpp	/^  unsigned Gen9Encoder::setUntypedWriteSendsMessageDesc(GenNativeInstruction *insn, unsigned bti, unsigned elemNum)$/;"	f	class:gbe::Gen9Encoder
setUntypedWriteSendsMessageDesc	./backend/gen_encoder.cpp	/^  unsigned GenEncoder::setUntypedWriteSendsMessageDesc(GenNativeInstruction *insn, unsigned bti, unsigned elemNum)$/;"	f	class:gbe::GenEncoder
setUseDeviceEnqueue	./backend/program.hpp	/^    INLINE bool setUseDeviceEnqueue(bool useDeviceEnqueue) {$/;"	f	class:gbe::Kernel
setUseDeviceEnqueue	./ir/function.hpp	/^    INLINE bool setUseDeviceEnqueue(bool useDeviceEnqueue) {$/;"	f	class:gbe::ir::Function
setUseSLM	./ir/function.hpp	/^    INLINE bool setUseSLM(bool useSLM) { return this->useSLM = useSLM; }$/;"	f	class:gbe::ir::Function
setValid	./ir/unit.hpp	/^    void setValid(bool value) { valid = value; }$/;"	f	class:gbe::ir::Unit
setVmeMessage	./backend/gen_encoder.cpp	/^  void GenEncoder::setVmeMessage(GenNativeInstruction *insn,$/;"	f	class:gbe::GenEncoder
set_bin_path	./gbe_bin_generater.cpp	/^    static int set_bin_path (const char* path) {$/;"	f	class:program_build_instance
set_str_fmt_out	./gbe_bin_generater.cpp	/^    static void set_str_fmt_out (bool flag) {$/;"	f	class:program_build_instance
set_vector_memspace	./libocl/script/gen_vector.py	/^def set_vector_memspace(vector_type_set, memspace):$/;"	f
setbti	./backend/gen_insn_selection.hpp	/^    INLINE void setbti(uint32_t bti) {$/;"	f	class:gbe::SelectionInstruction
setionPrefix	./libocl/script/gen_vector.py	/^    setionPrefix = ""$/;"	v	class:builtinProto
settidMapSLM	./ir/function.hpp	/^    void settidMapSLM(int32_t v) { tidMapSLM = v; }$/;"	f	class:gbe::ir::Function
setwgBroadcastSLM	./ir/function.hpp	/^    void setwgBroadcastSLM(int32_t v) { wgBroadcastSLM = v; }$/;"	f	class:gbe::ir::Function
shootByteGatherMsg	./backend/gen_insn_selection.cpp	/^    void shootByteGatherMsg(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
shootByteScatterMsg	./backend/gen_insn_selection.cpp	/^    void shootByteScatterMsg(Selection::Opaque &sel,$/;"	f	class:gbe::StoreInstructionPattern
shootMessage	./llvm/llvm_gen_backend.cpp	/^  void MemoryInstHelper::shootMessage(ir::Type type, ir::Register offset, ir::Tuple value, unsigned elemNum) {$/;"	f	class:gbe::MemoryInstHelper
shootUntypedReadMsg	./backend/gen_insn_selection.cpp	/^    void shootUntypedReadMsg(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
shootUntypedWriteMsg	./backend/gen_insn_selection.cpp	/^    void shootUntypedWriteMsg(Selection::Opaque &sel,$/;"	f	class:gbe::StoreInstructionPattern
shouldConvert	./llvm/ExpandLargeIntegers.cpp	/^static bool shouldConvert(const Value *Val) {$/;"	f	file:
shouldConvert	./llvm/PromoteIntegers.cpp	/^static bool shouldConvert(Value *Val) {$/;"	f	file:
sign_symbol	./ir/printf.hpp	/^      char sign_symbol; \/\/0 for nothing, 1 for sign, 2 for space.$/;"	m	struct:gbe::ir::PrintfState
signature	./libocl/include/ocl_enqueue.h	/^    const char *signature;                         \/\/ IFF (1<<30)$/;"	m	struct:Block_literal::Block_descriptor_1
simdType	./ir/profiling.hpp	/^        uint32_t simdType:4;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
simdWidth	./backend/context.hpp	/^    uint32_t simdWidth;                   \/\/!< Number of lanes per HW threads$/;"	m	class:gbe::Context
simdWidth	./backend/gen_encoder.hpp	/^    uint32_t simdWidth;$/;"	m	class:gbe::GenEncoder
simdWidth	./backend/gen_program.cpp	/^    uint32_t simdWidth;$/;"	m	struct:gbe::CodeGenStrategy	file:
simdWidth	./backend/program.hpp	/^    uint32_t simdWidth;        \/\/!< SIMD size for the kernel (lane number)$/;"	m	class:gbe::Kernel
simdWidth	./ir/function.hpp	/^    uint32_t simdWidth;             \/\/!< 8 or 16 if forced, 0 otherwise$/;"	m	class:gbe::ir::Function
simd_mode	./backend/gen7_instruction.hpp	/^        uint32_t simd_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon70
simd_mode	./backend/gen7_instruction.hpp	/^        uint32_t simd_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon76
simd_mode	./backend/gen7_instruction.hpp	/^        uint32_t simd_mode:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon66
simd_mode	./backend/gen7_instruction.hpp	/^        uint32_t simd_mode:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon69
simd_mode	./backend/gen8_instruction.hpp	/^        uint32_t simd_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon134
simd_mode	./backend/gen8_instruction.hpp	/^        uint32_t simd_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon140
simd_mode	./backend/gen8_instruction.hpp	/^        uint32_t simd_mode:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon131
simd_mode	./backend/gen8_instruction.hpp	/^        uint32_t simd_mode:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon133
simd_mode	./backend/gen8_instruction.hpp	/^        uint32_t simd_mode:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon142
simd_mode	./backend/gen_defs.hpp	/^        uint32_t simd_mode:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon29
simd_mode	./backend/gen_defs.hpp	/^        uint32_t simd_mode:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon35
simd_mode	./backend/gen_defs.hpp	/^        uint32_t simd_mode:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon25
simd_mode	./backend/gen_defs.hpp	/^        uint32_t simd_mode:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon28
simplifyGEPInstructions	./llvm/llvm_passes.cpp	/^  bool GenRemoveGEPPasss::simplifyGEPInstructions(GetElementPtrInst* GEPInst)$/;"	f	class:gbe::GenRemoveGEPPasss
simplifyTerminator	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::simplifyTerminator(BasicBlock *bb) {$/;"	f	class:gbe::GenWriter
size	./backend/context.cpp	/^      int32_t size;          \/\/!< Size of the free block$/;"	m	struct:gbe::SimpleAllocator::Block	file:
size	./backend/program.hpp	/^    uint32_t size;     \/\/!< Size of the argument$/;"	m	struct:gbe::KernelArgument
size	./ir/constant.hpp	/^    uint32_t size;      \/\/!< Size of the constant$/;"	m	class:gbe::ir::Constant
size	./ir/function.hpp	/^    uint32_t size; \/\/!< == sizeof(void*) for ptr, sizeof(elem) for the rest$/;"	m	struct:gbe::ir::FunctionArgument
size	./ir/printf.hpp	/^      uint32_t size;  \/\/ Size of this printf log, include header.$/;"	m	struct:gbe::ir::PrintfLog
size	./libocl/include/ocl_enqueue.h	/^    unsigned long int size;         \/\/ sizeof(struct Block_literal_1)$/;"	m	struct:Block_literal::Block_descriptor_1
size	./sys/alloc.hpp	/^      size_t size;$/;"	m	struct:gbe::LinearAllocator::Segment
size	./sys/fixed_array.hpp	/^    size_t size(void) const { return N; }$/;"	f	class:gbe::fixed_array
size	./sys/intrusive_list.cpp	/^  intrusive_list_base::size_type intrusive_list_base::size() const {$/;"	f	class:gbe::intrusive_list_base
sizeMutex	./sys/alloc.cpp	/^  static MutexSys *sizeMutex = NULL;$/;"	m	namespace:gbe	file:
size_t	./libocl/include/ocl_types.h	/^typedef __typeof__(sizeof(int)) size_t;$/;"	t
size_type	./sys/alloc.hpp	/^    typedef std::size_t size_type;$/;"	t	class:gbe::Allocator
size_type	./sys/intrusive_list.hpp	/^    typedef size_t size_type;$/;"	t	class:gbe::intrusive_list_base
size_type	./sys/list.hpp	/^    typedef typename allocator_type::size_type size_type;$/;"	t	class:gbe::list
size_type	./sys/vector.hpp	/^    typedef typename allocator_type::size_type size_type;$/;"	t	class:gbe::vector
slice_id	./ir/profiling.hpp	/^            uint16_t slice_id:2;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151::GenInfo::Gen7Info
slice_id	./ir/profiling.hpp	/^            uint16_t slice_id:2;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151::GenInfo::Gen8Info
slmSize	./backend/program.hpp	/^    uint32_t slmSize;          \/\/!< slm size for kernel variable$/;"	m	class:gbe::Kernel
slmSize	./ir/function.hpp	/^    uint32_t slmSize;               \/\/!< local variable size inside kernel function$/;"	m	class:gbe::ir::Function
slot	./backend/gen7_instruction.hpp	/^        uint32_t slot:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon74
slot	./backend/gen8_instruction.hpp	/^        uint32_t slot:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon138
slot	./backend/gen_defs.hpp	/^        uint32_t slot:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon33
slowByteGather	./backend/gen_insn_selection.cpp	/^    bool slowByteGather;$/;"	m	class:gbe::Selection::Opaque	file:
snapshot	./backend/gen7_instruction.hpp	/^        uint32_t snapshot:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon65
snapshot	./backend/gen8_instruction.hpp	/^        uint32_t snapshot:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon130
snapshot	./backend/gen_defs.hpp	/^        uint32_t snapshot:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon24
sortBasicBlock	./llvm/llvm_gen_backend.cpp	/^  void GenWriter::sortBasicBlock(Function &F) {$/;"	f	class:gbe::GenWriter
sortLabels	./ir/function.cpp	/^  void Function::sortLabels(void) {$/;"	f	class:gbe::ir::Function
sourceMatch	./backend/gen_insn_selection.cpp	/^  static bool sourceMatch(SelectionDAG *src0DAG, uint32_t src0ID,$/;"	f	namespace:gbe
spawner_gen5	./backend/gen7_instruction.hpp	/^      } spawner_gen5;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon64
spawner_gen5	./backend/gen8_instruction.hpp	/^      } spawner_gen5;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121	typeref:struct:Gen8NativeInstruction::__anon102::__anon121::__anon129
spawner_gen5	./backend/gen_defs.hpp	/^      } spawner_gen5;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon23
specFile	./libocl/script/gen_vector.py	/^specFile = open(sys.argv[1], 'r')$/;"	v
specialRegMean	./ir/profile.cpp	/^    const char *specialRegMean[] = {$/;"	m	namespace:gbe::ir::ocl	file:
special_acc	./backend/gen/gen_mesa_disasm.c	/^static const char *special_acc[9] = {$/;"	v	file:
spillAtInterval	./backend/gen_reg_allocation.cpp	/^  INLINE bool GenRegAllocator::Opaque::spillAtInterval(GenRegInterval interval,$/;"	f	class:gbe::GenRegAllocator::Opaque
spillCandidate	./backend/gen_reg_allocation.cpp	/^    std::set<GenRegInterval*> spillCandidate;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
spillReg	./backend/gen_reg_allocation.cpp	/^  INLINE bool GenRegAllocator::Opaque::spillReg(GenRegInterval interval,$/;"	f	class:gbe::GenRegAllocator::Opaque
spillReg	./backend/gen_reg_allocation.cpp	/^  INLINE bool GenRegAllocator::Opaque::spillReg(ir::Register reg,$/;"	f	class:gbe::GenRegAllocator::Opaque
spillRegs	./backend/gen_insn_selection.cpp	/^  bool Selection::Opaque::spillRegs(const SpilledRegs &spilledRegs,$/;"	f	class:gbe::Selection::Opaque
spillRegs	./backend/gen_insn_selection.cpp	/^  bool Selection::spillRegs(const SpilledRegs &spilledRegs, uint32_t registerPool) {$/;"	f	class:gbe::Selection
spilledRegs	./backend/gen_reg_allocation.cpp	/^    SpilledRegs spilledRegs;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
spillinterval_cmp	./backend/gen_reg_allocation.cpp	/^  bool spillinterval_cmp(const SpillInterval &v1, const SpillInterval &v2) {$/;"	f	namespace:gbe
splitBlock	./backend/context.cpp	/^  void Context::splitBlock(int32_t offset, int32_t subOffset) {$/;"	f	class:gbe::Context
splitBlock	./backend/context.cpp	/^  void SimpleAllocator::splitBlock(int32_t offset, int32_t subOffset) {$/;"	f	class:gbe::SimpleAllocator
splitLoad	./llvm/PromoteIntegers.cpp	/^static Value *splitLoad(LoadInst *Inst, ConversionState &State) {$/;"	f	file:
splitReg	./backend/gen_register.hpp	/^    static INLINE GenRegister splitReg(GenRegister reg, uint32_t count, uint32_t sub_part) {$/;"	f	class:gbe::GenRegister
splitSend	./backend/gen_insn_selection.hpp	/^        uint16_t splitSend:1;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon84
splitSend	./backend/gen_insn_selection.hpp	/^        uint16_t splitSend:1;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon93
splitStore	./llvm/PromoteIntegers.cpp	/^static Value *splitStore(StoreInst *Inst, ConversionState &State) {$/;"	f	file:
sr	./backend/gen_register.hpp	/^    static INLINE GenRegister sr(uint32_t nr, uint32_t subnr = 0) {$/;"	f	class:gbe::GenRegister
src	./backend/gen_insn_selection.hpp	/^    GenRegister &src(uint32_t srcID) { return regs[dstNum+srcID]; }$/;"	f	class:gbe::SelectionInstruction
src	./backend/gen_insn_selection.hpp	/^    const GenRegister &src(uint32_t srcID) const { return regs[dstNum+srcID]; }$/;"	f	class:gbe::SelectionInstruction
src	./ir/instruction.cpp	/^        Tuple src;$/;"	m	class:gbe::ir::internal::PrintfInstruction	file:
src	./ir/instruction.cpp	/^        Tuple src;$/;"	m	class:gbe::ir::internal::SubGroupInstruction	file:
src	./ir/instruction.cpp	/^        Tuple src;$/;"	m	class:gbe::ir::internal::WorkGroupInstruction	file:
src	./ir/instruction.cpp	/^      Register dst[0], src[0];$/;"	m	class:gbe::ir::internal::CalcTimestampInstruction	file:
src	./ir/instruction.cpp	/^      Register dst[0], src[0];$/;"	m	class:gbe::ir::internal::LabelInstruction	file:
src	./ir/instruction.cpp	/^      Register dst[0], src[0];$/;"	m	class:gbe::ir::internal::SyncInstruction	file:
src	./ir/instruction.cpp	/^      Register dst[0], src[0];$/;"	m	class:gbe::ir::internal::WaitInstruction	file:
src	./ir/instruction.cpp	/^      Register src[0];               \/\/!< No source register$/;"	m	class:gbe::ir::internal::LoadImmInstruction	file:
src	./ir/instruction.cpp	/^      Register src[0];$/;"	m	class:gbe::ir::internal::ReadARFInstruction	file:
src	./ir/instruction.cpp	/^      Register src[0];$/;"	m	class:gbe::ir::internal::StoreProfilingInstruction	file:
src	./ir/instruction.cpp	/^      Register src[1];                  \/\/!< surface info register.$/;"	m	class:gbe::ir::internal::GetImageInfoInstruction	file:
src	./ir/instruction.cpp	/^      Register src[1];$/;"	m	class:gbe::ir::internal::ConvertInstruction	file:
src	./ir/instruction.cpp	/^      Register src[1];$/;"	m	class:gbe::ir::internal::RegionInstruction	file:
src	./ir/instruction.cpp	/^      Register src[2];$/;"	m	class:gbe::ir::internal::IndirectMovInstruction	file:
src	./ir/instruction.cpp	/^      Register src[srcNum]; \/\/!< Indices of the sources$/;"	m	class:gbe::ir::internal::NaryInstruction	file:
src	./ir/instruction.cpp	/^      Tuple src;       \/\/!< 3 sources do not fit in 8 bytes -> use a tuple$/;"	m	class:gbe::ir::internal::SelectInstruction	file:
src	./ir/instruction.cpp	/^      Tuple src;$/;"	m	class:gbe::ir::internal::BitCastInstruction	file:
src	./ir/instruction.cpp	/^      Tuple src;$/;"	m	class:gbe::ir::internal::MediaBlockReadInstruction	file:
src	./ir/instruction.cpp	/^      Tuple src;$/;"	m	class:gbe::ir::internal::MediaBlockWriteInstruction	file:
src	./ir/instruction.cpp	/^      Tuple src;$/;"	m	class:gbe::ir::internal::SampleInstruction	file:
src	./ir/instruction.cpp	/^      Tuple src;$/;"	m	class:gbe::ir::internal::TernaryInstruction	file:
src	./ir/instruction.cpp	/^      Tuple src;$/;"	m	class:gbe::ir::internal::TypedWriteInstruction	file:
src	./ir/instruction.cpp	/^      Tuple src;$/;"	m	class:gbe::ir::internal::VmeInstruction	file:
src0	./backend/gen/gen_mesa_disasm.c	/^static int src0(FILE *file, const void* inst)$/;"	f	file:
src0Index	./ir/instruction.hpp	/^    static const uint32_t src0Index = 1;$/;"	m	class:gbe::ir::SelectInstruction
src0_3src	./backend/gen/gen_mesa_disasm.c	/^static int src0_3src(FILE *file, const void* inst)$/;"	f	file:
src0_abs	./backend/gen7_instruction.hpp	/^        uint32_t src0_abs:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
src0_abs	./backend/gen7_instruction.hpp	/^        uint32_t src0_abs:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon52
src0_abs	./backend/gen7_instruction.hpp	/^        uint32_t src0_abs:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon53
src0_abs	./backend/gen7_instruction.hpp	/^        uint32_t src0_abs:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
src0_abs	./backend/gen7_instruction.hpp	/^        uint32_t src0_abs:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
src0_abs	./backend/gen8_instruction.hpp	/^        uint32_t src0_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
src0_abs	./backend/gen8_instruction.hpp	/^        uint32_t src0_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
src0_abs	./backend/gen8_instruction.hpp	/^        uint32_t src0_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon113
src0_abs	./backend/gen8_instruction.hpp	/^        uint32_t src0_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon114
src0_abs	./backend/gen8_instruction.hpp	/^        uint32_t src0_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
src0_abs	./backend/gen8_instruction.hpp	/^        uint32_t src0_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
src0_abs	./backend/gen8_instruction.hpp	/^        uint32_t src0_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon117
src0_address_mode	./backend/gen7_instruction.hpp	/^        uint32_t src0_address_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon52
src0_address_mode	./backend/gen7_instruction.hpp	/^        uint32_t src0_address_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon53
src0_address_mode	./backend/gen7_instruction.hpp	/^        uint32_t src0_address_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
src0_address_mode	./backend/gen7_instruction.hpp	/^        uint32_t src0_address_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
src0_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t src0_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon113
src0_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t src0_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon114
src0_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t src0_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
src0_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t src0_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
src0_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t src0_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon117
src0_address_mode	./backend/gen9_instruction.hpp	/^        uint32_t src0_address_mode:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon5::__anon6
src0_horiz_stride	./backend/gen7_instruction.hpp	/^        uint32_t src0_horiz_stride:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon52
src0_horiz_stride	./backend/gen7_instruction.hpp	/^        uint32_t src0_horiz_stride:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon53
src0_horiz_stride	./backend/gen8_instruction.hpp	/^        uint32_t src0_horiz_stride:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon113
src0_horiz_stride	./backend/gen8_instruction.hpp	/^        uint32_t src0_horiz_stride:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon114
src0_index_hi	./backend/gen_defs.hpp	/^      uint32_t src0_index_hi:3;$/;"	m	struct:GenCompactInstruction::__anon12::__anon14
src0_index_lo	./backend/gen_defs.hpp	/^      uint32_t src0_index_lo:2;$/;"	m	struct:GenCompactInstruction::__anon12::__anon13
src0_indirect_offset	./backend/gen7_instruction.hpp	/^        int src0_indirect_offset:10;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon53
src0_indirect_offset	./backend/gen7_instruction.hpp	/^        int src0_indirect_offset:6;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
src0_indirect_offset	./backend/gen8_instruction.hpp	/^        int src0_indirect_offset:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
src0_indirect_offset	./backend/gen8_instruction.hpp	/^        int src0_indirect_offset:9;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon114
src0_indirect_offset_9	./backend/gen8_instruction.hpp	/^        uint32_t src0_indirect_offset_9:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon114
src0_indirect_offset_9	./backend/gen8_instruction.hpp	/^        uint32_t src0_indirect_offset_9:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
src0_negate	./backend/gen7_instruction.hpp	/^        uint32_t src0_negate:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
src0_negate	./backend/gen7_instruction.hpp	/^        uint32_t src0_negate:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon52
src0_negate	./backend/gen7_instruction.hpp	/^        uint32_t src0_negate:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon53
src0_negate	./backend/gen7_instruction.hpp	/^        uint32_t src0_negate:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
src0_negate	./backend/gen7_instruction.hpp	/^        uint32_t src0_negate:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
src0_negate	./backend/gen8_instruction.hpp	/^        uint32_t src0_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
src0_negate	./backend/gen8_instruction.hpp	/^        uint32_t src0_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
src0_negate	./backend/gen8_instruction.hpp	/^        uint32_t src0_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon113
src0_negate	./backend/gen8_instruction.hpp	/^        uint32_t src0_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon114
src0_negate	./backend/gen8_instruction.hpp	/^        uint32_t src0_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
src0_negate	./backend/gen8_instruction.hpp	/^        uint32_t src0_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
src0_negate	./backend/gen8_instruction.hpp	/^        uint32_t src0_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon117
src0_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t src0_reg_file:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon45
src0_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t src0_reg_file:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon46
src0_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t src0_reg_file:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon47
src0_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t src0_reg_file:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon48
src0_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t src0_reg_file:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon49
src0_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon105
src0_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon106
src0_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon107
src0_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon108
src0_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon109
src0_reg_file	./backend/gen_insn_compact.cpp	/^      uint32_t src0_reg_file:2;$/;"	m	struct:gbe::DataTypeBits::__anon96	file:
src0_reg_file	./backend/gen_insn_compact.cpp	/^      uint32_t src0_reg_file:2;$/;"	m	struct:gbe::Gen8DataTypeBits::__anon97	file:
src0_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src0_reg_nr:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon52
src0_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src0_reg_nr:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
src0_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src0_reg_nr:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon56
src0_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon113
src0_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
src0_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon117
src0_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon118
src0_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon119
src0_reg_nr	./backend/gen9_instruction.hpp	/^        uint32_t src0_reg_nr:8;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon5::__anon6
src0_reg_nr	./backend/gen_defs.hpp	/^      uint32_t src0_reg_nr:7;$/;"	m	struct:GenCompactInstruction::__anon9::__anon11
src0_reg_nr	./backend/gen_defs.hpp	/^      uint32_t src0_reg_nr:8;$/;"	m	struct:GenCompactInstruction::__anon12::__anon14
src0_reg_type	./backend/gen7_instruction.hpp	/^        uint32_t src0_reg_type:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon45
src0_reg_type	./backend/gen7_instruction.hpp	/^        uint32_t src0_reg_type:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon46
src0_reg_type	./backend/gen7_instruction.hpp	/^        uint32_t src0_reg_type:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon47
src0_reg_type	./backend/gen7_instruction.hpp	/^        uint32_t src0_reg_type:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon48
src0_reg_type	./backend/gen7_instruction.hpp	/^        uint32_t src0_reg_type:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon49
src0_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon105
src0_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon106
src0_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon107
src0_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon108
src0_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t src0_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon109
src0_reg_type	./backend/gen_insn_compact.cpp	/^      uint32_t src0_reg_type:3;$/;"	m	struct:gbe::DataTypeBits::__anon96	file:
src0_reg_type	./backend/gen_insn_compact.cpp	/^      uint32_t src0_reg_type:4;$/;"	m	struct:gbe::Gen8DataTypeBits::__anon97	file:
src0_rep_ctrl	./backend/gen7_instruction.hpp	/^        uint32_t src0_rep_ctrl:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon56
src0_rep_ctrl	./backend/gen8_instruction.hpp	/^        uint32_t src0_rep_ctrl:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon118
src0_rep_ctrl	./backend/gen8_instruction.hpp	/^        uint32_t src0_rep_ctrl:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon119
src0_rep_ctrl	./backend/gen_defs.hpp	/^      uint32_t src0_rep_ctrl:1;$/;"	m	struct:GenCompactInstruction::__anon9::__anon10
src0_special_acc	./backend/gen8_instruction.hpp	/^        uint32_t src0_special_acc:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon119
src0_special_acc_hi	./backend/gen8_instruction.hpp	/^        uint32_t src0_special_acc_hi:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon117
src0_special_acc_lo	./backend/gen8_instruction.hpp	/^        uint32_t src0_special_acc_lo:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon117
src0_subnr	./backend/gen_defs.hpp	/^      uint32_t src0_subnr:3;$/;"	m	struct:GenCompactInstruction::__anon9::__anon11
src0_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src0_subreg_nr:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
src0_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src0_subreg_nr:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon53
src0_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src0_subreg_nr:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
src0_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src0_subreg_nr:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon56
src0_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src0_subreg_nr:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon52
src0_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src0_subreg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
src0_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src0_subreg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon117
src0_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src0_subreg_nr:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon118
src0_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src0_subreg_nr:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon119
src0_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src0_subreg_nr:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon114
src0_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src0_subreg_nr:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
src0_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src0_subreg_nr:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon113
src0_subreg_nr	./backend/gen9_instruction.hpp	/^        uint32_t src0_subreg_nr:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon5::__anon6
src0_subreg_nr	./backend/gen_insn_compact.cpp	/^      uint32_t src0_subreg_nr:5;$/;"	m	struct:gbe::SubRegBits::__anon98	file:
src0_subreg_nr_w	./backend/gen8_instruction.hpp	/^        uint32_t src0_subreg_nr_w:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon118
src0_subreg_nr_w	./backend/gen8_instruction.hpp	/^        uint32_t src0_subreg_nr_w:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon119
src0_swizzle	./backend/gen7_instruction.hpp	/^        uint32_t src0_swizzle:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon56
src0_swizzle	./backend/gen8_instruction.hpp	/^        uint32_t src0_swizzle:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon118
src0_swz_w	./backend/gen7_instruction.hpp	/^        uint32_t src0_swz_w:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
src0_swz_w	./backend/gen7_instruction.hpp	/^        uint32_t src0_swz_w:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
src0_swz_w	./backend/gen8_instruction.hpp	/^        uint32_t src0_swz_w:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
src0_swz_w	./backend/gen8_instruction.hpp	/^        uint32_t src0_swz_w:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
src0_swz_x	./backend/gen7_instruction.hpp	/^        uint32_t src0_swz_x:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
src0_swz_x	./backend/gen7_instruction.hpp	/^        uint32_t src0_swz_x:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
src0_swz_x	./backend/gen8_instruction.hpp	/^        uint32_t src0_swz_x:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
src0_swz_x	./backend/gen8_instruction.hpp	/^        uint32_t src0_swz_x:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
src0_swz_y	./backend/gen7_instruction.hpp	/^        uint32_t src0_swz_y:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
src0_swz_y	./backend/gen7_instruction.hpp	/^        uint32_t src0_swz_y:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
src0_swz_y	./backend/gen8_instruction.hpp	/^        uint32_t src0_swz_y:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
src0_swz_y	./backend/gen8_instruction.hpp	/^        uint32_t src0_swz_y:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
src0_swz_z	./backend/gen7_instruction.hpp	/^        uint32_t src0_swz_z:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
src0_swz_z	./backend/gen7_instruction.hpp	/^        uint32_t src0_swz_z:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
src0_swz_z	./backend/gen8_instruction.hpp	/^        uint32_t src0_swz_z:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
src0_swz_z	./backend/gen8_instruction.hpp	/^        uint32_t src0_swz_z:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
src0_vert_stride	./backend/gen7_instruction.hpp	/^        uint32_t src0_vert_stride:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon52
src0_vert_stride	./backend/gen7_instruction.hpp	/^        uint32_t src0_vert_stride:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon53
src0_vert_stride	./backend/gen7_instruction.hpp	/^        uint32_t src0_vert_stride:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon54
src0_vert_stride	./backend/gen7_instruction.hpp	/^        uint32_t src0_vert_stride:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon55
src0_vert_stride	./backend/gen8_instruction.hpp	/^        uint32_t src0_vert_stride:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon113
src0_vert_stride	./backend/gen8_instruction.hpp	/^        uint32_t src0_vert_stride:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon114
src0_vert_stride	./backend/gen8_instruction.hpp	/^        uint32_t src0_vert_stride:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
src0_vert_stride	./backend/gen8_instruction.hpp	/^        uint32_t src0_vert_stride:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
src0_vert_stride	./backend/gen8_instruction.hpp	/^        uint32_t src0_vert_stride:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon117
src0_width	./backend/gen7_instruction.hpp	/^        uint32_t src0_width:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon52
src0_width	./backend/gen7_instruction.hpp	/^        uint32_t src0_width:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon53
src0_width	./backend/gen8_instruction.hpp	/^        uint32_t src0_width:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon113
src0_width	./backend/gen8_instruction.hpp	/^        uint32_t src0_width:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon114
src1	./backend/gen/gen_mesa_disasm.c	/^static int src1(FILE *file, const void* inst)$/;"	f	file:
src1Index	./ir/instruction.hpp	/^    static const uint32_t src1Index = 2;$/;"	m	class:gbe::ir::SelectInstruction
src1_3src	./backend/gen/gen_mesa_disasm.c	/^static int src1_3src(FILE *file, const void* inst)$/;"	f	file:
src1_abs	./backend/gen7_instruction.hpp	/^        uint32_t src1_abs:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
src1_abs	./backend/gen7_instruction.hpp	/^        uint32_t src1_abs:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon58
src1_abs	./backend/gen7_instruction.hpp	/^        uint32_t src1_abs:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon59
src1_abs	./backend/gen7_instruction.hpp	/^        uint32_t src1_abs:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon60
src1_abs	./backend/gen7_instruction.hpp	/^        uint32_t src1_abs:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon61
src1_abs	./backend/gen8_instruction.hpp	/^        uint32_t src1_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
src1_abs	./backend/gen8_instruction.hpp	/^        uint32_t src1_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
src1_abs	./backend/gen8_instruction.hpp	/^        uint32_t src1_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon122
src1_abs	./backend/gen8_instruction.hpp	/^        uint32_t src1_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon123
src1_abs	./backend/gen8_instruction.hpp	/^        uint32_t src1_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon124
src1_abs	./backend/gen8_instruction.hpp	/^        uint32_t src1_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon125
src1_abs	./backend/gen8_instruction.hpp	/^        uint32_t src1_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon126
src1_address_mode	./backend/gen7_instruction.hpp	/^        uint32_t src1_address_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon58
src1_address_mode	./backend/gen7_instruction.hpp	/^        uint32_t src1_address_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon59
src1_address_mode	./backend/gen7_instruction.hpp	/^        uint32_t src1_address_mode:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon60
src1_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t src1_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon122
src1_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t src1_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon123
src1_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t src1_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon124
src1_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t src1_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon125
src1_address_mode	./backend/gen8_instruction.hpp	/^        uint32_t src1_address_mode:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon126
src1_horiz_stride	./backend/gen7_instruction.hpp	/^        uint32_t src1_horiz_stride:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon58
src1_horiz_stride	./backend/gen7_instruction.hpp	/^        uint32_t src1_horiz_stride:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon60
src1_horiz_stride	./backend/gen8_instruction.hpp	/^        uint32_t src1_horiz_stride:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon122
src1_horiz_stride	./backend/gen8_instruction.hpp	/^        uint32_t src1_horiz_stride:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon124
src1_index	./backend/gen_defs.hpp	/^      uint32_t src1_index:5;$/;"	m	struct:GenCompactInstruction::__anon12::__anon14
src1_indirect_offset	./backend/gen7_instruction.hpp	/^        int  src1_indirect_offset:10;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon60
src1_indirect_offset	./backend/gen7_instruction.hpp	/^        int  src1_indirect_offset:6;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon61
src1_indirect_offset	./backend/gen8_instruction.hpp	/^        int  src1_indirect_offset:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon125
src1_indirect_offset	./backend/gen8_instruction.hpp	/^        int  src1_indirect_offset:9;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon124
src1_indirect_offset_9	./backend/gen8_instruction.hpp	/^        int  src1_indirect_offset_9:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon124
src1_indirect_offset_9	./backend/gen8_instruction.hpp	/^        int  src1_indirect_offset_9:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon125
src1_length	./backend/gen9_instruction.hpp	/^        uint32_t src1_length:4;     \/\/exdesc_9_6$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon5::__anon6
src1_negate	./backend/gen7_instruction.hpp	/^        uint32_t src1_negate:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
src1_negate	./backend/gen7_instruction.hpp	/^        uint32_t src1_negate:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon58
src1_negate	./backend/gen7_instruction.hpp	/^        uint32_t src1_negate:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon59
src1_negate	./backend/gen7_instruction.hpp	/^        uint32_t src1_negate:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon60
src1_negate	./backend/gen7_instruction.hpp	/^        uint32_t src1_negate:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon61
src1_negate	./backend/gen8_instruction.hpp	/^        uint32_t src1_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
src1_negate	./backend/gen8_instruction.hpp	/^        uint32_t src1_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
src1_negate	./backend/gen8_instruction.hpp	/^        uint32_t src1_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon122
src1_negate	./backend/gen8_instruction.hpp	/^        uint32_t src1_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon123
src1_negate	./backend/gen8_instruction.hpp	/^        uint32_t src1_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon124
src1_negate	./backend/gen8_instruction.hpp	/^        uint32_t src1_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon125
src1_negate	./backend/gen8_instruction.hpp	/^        uint32_t src1_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon126
src1_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t src1_reg_file:2;        \/* 0x00000c00 *\/$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon46
src1_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t src1_reg_file:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon45
src1_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t src1_reg_file:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon47
src1_reg_file	./backend/gen7_instruction.hpp	/^        uint32_t src1_reg_file:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon49
src1_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon113
src1_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon114
src1_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
src1_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
src1_reg_file	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_file:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon117
src1_reg_file	./backend/gen_insn_compact.cpp	/^      uint32_t src1_reg_file:2;$/;"	m	struct:gbe::DataTypeBits::__anon96	file:
src1_reg_file	./backend/gen_insn_compact.cpp	/^      uint32_t src1_reg_file:2;$/;"	m	struct:gbe::Gen8DataTypeBits::__anon97	file:
src1_reg_file_0	./backend/gen9_instruction.hpp	/^        uint32_t src1_reg_file_0:1;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon3::__anon4
src1_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src1_reg_nr:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon58
src1_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src1_reg_nr:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon59
src1_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src1_reg_nr:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon77
src1_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon122
src1_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon123
src1_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon126
src1_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon144
src1_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon145
src1_reg_nr	./backend/gen9_instruction.hpp	/^        uint32_t src1_reg_nr:8;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon3::__anon4
src1_reg_nr	./backend/gen_defs.hpp	/^      uint32_t src1_reg_nr:7;$/;"	m	struct:GenCompactInstruction::__anon9::__anon11
src1_reg_nr	./backend/gen_defs.hpp	/^      uint32_t src1_reg_nr:8;$/;"	m	struct:GenCompactInstruction::__anon12::__anon14
src1_reg_type	./backend/gen7_instruction.hpp	/^        uint32_t src1_reg_type:3;        \/* 0x00007000 *\/$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon46
src1_reg_type	./backend/gen7_instruction.hpp	/^        uint32_t src1_reg_type:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon45
src1_reg_type	./backend/gen7_instruction.hpp	/^        uint32_t src1_reg_type:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon47
src1_reg_type	./backend/gen7_instruction.hpp	/^        uint32_t src1_reg_type:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon49
src1_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon113
src1_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon114
src1_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon115
src1_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon116
src1_reg_type	./backend/gen8_instruction.hpp	/^        uint32_t src1_reg_type:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon117
src1_reg_type	./backend/gen_insn_compact.cpp	/^      uint32_t src1_reg_type:3;$/;"	m	struct:gbe::DataTypeBits::__anon96	file:
src1_reg_type	./backend/gen_insn_compact.cpp	/^      uint32_t src1_reg_type:4;$/;"	m	struct:gbe::Gen8DataTypeBits::__anon97	file:
src1_rep_ctrl	./backend/gen7_instruction.hpp	/^        uint32_t src1_rep_ctrl:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon56
src1_rep_ctrl	./backend/gen8_instruction.hpp	/^        uint32_t src1_rep_ctrl:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon118
src1_rep_ctrl	./backend/gen8_instruction.hpp	/^        uint32_t src1_rep_ctrl:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon119
src1_rep_ctrl	./backend/gen_defs.hpp	/^      uint32_t src1_rep_ctrl:1;$/;"	m	struct:GenCompactInstruction::__anon9::__anon11
src1_special_acc	./backend/gen8_instruction.hpp	/^        uint32_t src1_special_acc:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon119
src1_special_acc_hi	./backend/gen8_instruction.hpp	/^        uint32_t src1_special_acc_hi:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon126
src1_special_acc_lo	./backend/gen8_instruction.hpp	/^        uint32_t src1_special_acc_lo:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon126
src1_subnr	./backend/gen_defs.hpp	/^      uint32_t src1_subnr:3;$/;"	m	struct:GenCompactInstruction::__anon9::__anon11
src1_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src1_subreg_nr:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon59
src1_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src1_subreg_nr:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon60
src1_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src1_subreg_nr:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon61
src1_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src1_subreg_nr:5;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon58
src1_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src1_subreg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon123
src1_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src1_subreg_nr:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon126
src1_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src1_subreg_nr:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon124
src1_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src1_subreg_nr:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon125
src1_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src1_subreg_nr:5;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon122
src1_subreg_nr	./backend/gen_insn_compact.cpp	/^      uint32_t src1_subreg_nr:5;$/;"	m	struct:gbe::SubRegBits::__anon98	file:
src1_subreg_nr_high	./backend/gen7_instruction.hpp	/^        uint32_t src1_subreg_nr_high:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon77
src1_subreg_nr_high	./backend/gen8_instruction.hpp	/^        uint32_t src1_subreg_nr_high:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon144
src1_subreg_nr_high	./backend/gen8_instruction.hpp	/^        uint32_t src1_subreg_nr_high:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon145
src1_subreg_nr_low	./backend/gen7_instruction.hpp	/^        uint32_t src1_subreg_nr_low:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon56
src1_subreg_nr_low	./backend/gen8_instruction.hpp	/^        uint32_t src1_subreg_nr_low:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon118
src1_subreg_nr_low	./backend/gen8_instruction.hpp	/^        uint32_t src1_subreg_nr_low:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon119
src1_subreg_nr_w	./backend/gen8_instruction.hpp	/^        uint32_t src1_subreg_nr_w:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon144
src1_subreg_nr_w	./backend/gen8_instruction.hpp	/^        uint32_t src1_subreg_nr_w:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon145
src1_swizzle	./backend/gen7_instruction.hpp	/^        uint32_t src1_swizzle:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon51::__anon56
src1_swizzle	./backend/gen8_instruction.hpp	/^        uint32_t src1_swizzle:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon118
src1_swz_w	./backend/gen7_instruction.hpp	/^        uint32_t src1_swz_w:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon59
src1_swz_w	./backend/gen7_instruction.hpp	/^        uint32_t src1_swz_w:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon61
src1_swz_w	./backend/gen8_instruction.hpp	/^        uint32_t src1_swz_w:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon123
src1_swz_w	./backend/gen8_instruction.hpp	/^        uint32_t src1_swz_w:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon125
src1_swz_x	./backend/gen7_instruction.hpp	/^        uint32_t src1_swz_x:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon59
src1_swz_x	./backend/gen7_instruction.hpp	/^        uint32_t src1_swz_x:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon61
src1_swz_x	./backend/gen8_instruction.hpp	/^        uint32_t src1_swz_x:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon123
src1_swz_x	./backend/gen8_instruction.hpp	/^        uint32_t src1_swz_x:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon125
src1_swz_y	./backend/gen7_instruction.hpp	/^        uint32_t src1_swz_y:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon59
src1_swz_y	./backend/gen7_instruction.hpp	/^        uint32_t src1_swz_y:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon61
src1_swz_y	./backend/gen8_instruction.hpp	/^        uint32_t src1_swz_y:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon123
src1_swz_y	./backend/gen8_instruction.hpp	/^        uint32_t src1_swz_y:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon125
src1_swz_z	./backend/gen7_instruction.hpp	/^        uint32_t src1_swz_z:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon59
src1_swz_z	./backend/gen7_instruction.hpp	/^        uint32_t src1_swz_z:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon61
src1_swz_z	./backend/gen8_instruction.hpp	/^        uint32_t src1_swz_z:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon123
src1_swz_z	./backend/gen8_instruction.hpp	/^        uint32_t src1_swz_z:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon125
src1_type	./backend/gen8_instruction.hpp	/^        uint32_t src1_type:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
src1_type	./backend/gen8_instruction.hpp	/^        uint32_t src1_type:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
src1_vert_stride	./backend/gen7_instruction.hpp	/^        uint32_t src1_vert_stride:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon58
src1_vert_stride	./backend/gen7_instruction.hpp	/^        uint32_t src1_vert_stride:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon59
src1_vert_stride	./backend/gen7_instruction.hpp	/^        uint32_t src1_vert_stride:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon60
src1_vert_stride	./backend/gen7_instruction.hpp	/^        uint32_t src1_vert_stride:4;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon61
src1_vert_stride	./backend/gen8_instruction.hpp	/^        uint32_t src1_vert_stride:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon122
src1_vert_stride	./backend/gen8_instruction.hpp	/^        uint32_t src1_vert_stride:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon123
src1_vert_stride	./backend/gen8_instruction.hpp	/^        uint32_t src1_vert_stride:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon124
src1_vert_stride	./backend/gen8_instruction.hpp	/^        uint32_t src1_vert_stride:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon125
src1_vert_stride	./backend/gen8_instruction.hpp	/^        uint32_t src1_vert_stride:4;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon126
src1_width	./backend/gen7_instruction.hpp	/^        uint32_t src1_width:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon58
src1_width	./backend/gen7_instruction.hpp	/^        uint32_t src1_width:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon60
src1_width	./backend/gen8_instruction.hpp	/^        uint32_t src1_width:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon122
src1_width	./backend/gen8_instruction.hpp	/^        uint32_t src1_width:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon124
src2_3src	./backend/gen/gen_mesa_disasm.c	/^static int src2_3src(FILE *file, const void* inst)$/;"	f	file:
src2_abs	./backend/gen7_instruction.hpp	/^        uint32_t src2_abs:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
src2_abs	./backend/gen8_instruction.hpp	/^        uint32_t src2_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
src2_abs	./backend/gen8_instruction.hpp	/^        uint32_t src2_abs:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
src2_negate	./backend/gen7_instruction.hpp	/^        uint32_t src2_negate:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon44::__anon50
src2_negate	./backend/gen8_instruction.hpp	/^        uint32_t src2_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
src2_negate	./backend/gen8_instruction.hpp	/^        uint32_t src2_negate:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
src2_reg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src2_reg_nr:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon77
src2_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src2_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon144
src2_reg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src2_reg_nr:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon145
src2_reg_nr	./backend/gen_defs.hpp	/^      uint32_t src2_reg_nr:7;$/;"	m	struct:GenCompactInstruction::__anon9::__anon11
src2_rep_ctrl	./backend/gen7_instruction.hpp	/^        uint32_t src2_rep_ctrl:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon77
src2_rep_ctrl	./backend/gen8_instruction.hpp	/^        uint32_t src2_rep_ctrl:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon144
src2_rep_ctrl	./backend/gen8_instruction.hpp	/^        uint32_t src2_rep_ctrl:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon145
src2_rep_ctrl	./backend/gen_defs.hpp	/^      uint32_t src2_rep_ctrl:1;$/;"	m	struct:GenCompactInstruction::__anon9::__anon11
src2_special_acc	./backend/gen8_instruction.hpp	/^        uint32_t src2_special_acc:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon145
src2_subnr	./backend/gen_defs.hpp	/^      uint32_t src2_subnr:3;$/;"	m	struct:GenCompactInstruction::__anon9::__anon11
src2_subreg_nr	./backend/gen7_instruction.hpp	/^        uint32_t src2_subreg_nr:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon77
src2_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src2_subreg_nr:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon144
src2_subreg_nr	./backend/gen8_instruction.hpp	/^        uint32_t src2_subreg_nr:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon145
src2_subreg_nr_w	./backend/gen8_instruction.hpp	/^        uint32_t src2_subreg_nr_w:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon144
src2_subreg_nr_w	./backend/gen8_instruction.hpp	/^        uint32_t src2_subreg_nr_w:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon145
src2_swizzle	./backend/gen7_instruction.hpp	/^        uint32_t src2_swizzle:8;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon77
src2_swizzle	./backend/gen8_instruction.hpp	/^        uint32_t src2_swizzle:8;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon144
src2_type	./backend/gen8_instruction.hpp	/^        uint32_t src2_type:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
src2_type	./backend/gen8_instruction.hpp	/^        uint32_t src2_type:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
src3Insn	./backend/gen_defs.hpp	/^  } src3Insn;$/;"	m	union:GenCompactInstruction	typeref:struct:GenCompactInstruction::__anon9
src3_control_table	./backend/gen_insn_compact.cpp	/^  static compact_table_entry src3_control_table[] = {$/;"	m	namespace:gbe	file:
srcID	./ir/value.hpp	/^    uint32_t srcID;          \/\/!< Index of the source in the instruction$/;"	m	class:gbe::ir::ValueUse
srcNum	./ir/instruction.cpp	/^      static const uint32_t srcNum = 3;$/;"	m	class:gbe::ir::internal::SelectInstruction	file:
srcNum	./ir/instruction.cpp	/^      static const uint32_t srcNum = 3;$/;"	m	class:gbe::ir::internal::TernaryInstruction	file:
srcNum	./ir/instruction.cpp	/^      uint32_t srcNum;$/;"	m	class:gbe::ir::internal::VmeInstruction	file:
srcNum	./ir/instruction.cpp	/^      uint8_t srcNum;     \/\/!<Src Number$/;"	m	class:gbe::ir::internal::BitCastInstruction	file:
srcNum	./ir/instruction.cpp	/^      uint8_t srcNum;$/;"	m	class:gbe::ir::internal::MediaBlockReadInstruction	file:
srcNum	./ir/instruction.cpp	/^      uint8_t srcNum;$/;"	m	class:gbe::ir::internal::MediaBlockWriteInstruction	file:
srcNum	./ir/instruction.cpp	/^      uint8_t srcNum;$/;"	m	class:gbe::ir::internal::SampleInstruction	file:
srcNum	./ir/instruction.cpp	/^      uint8_t srcNum;$/;"	m	class:gbe::ir::internal::TypedWriteInstruction	file:
srcType	./ir/instruction.cpp	/^      Type srcType; \/\/!< Type to convert from$/;"	m	class:gbe::ir::internal::ConvertInstruction	file:
srcType	./ir/instruction.cpp	/^      uint8_t srcType;$/;"	m	class:gbe::ir::internal::TypedWriteInstruction	file:
src_abs	./backend/gen_insn_compact.cpp	/^      uint32_t src_abs:1;$/;"	m	struct:gbe::SrcRegBits::__anon99	file:
src_address_mode	./backend/gen_insn_compact.cpp	/^      uint32_t src_address_mode:1;$/;"	m	struct:gbe::SrcRegBits::__anon99	file:
src_align1_region	./backend/gen/gen_mesa_disasm.c	/^static int src_align1_region(FILE *file,$/;"	f	file:
src_da1	./backend/gen/gen_mesa_disasm.c	/^static int src_da1(FILE *file, uint32_t type, uint32_t _reg_file,$/;"	f	file:
src_da16	./backend/gen/gen_mesa_disasm.c	/^static int src_da16(FILE *file, const void* inst, int src_num,$/;"	f	file:
src_horiz_stride	./backend/gen_insn_compact.cpp	/^      uint32_t src_horiz_stride:2;$/;"	m	struct:gbe::SrcRegBits::__anon99	file:
src_ia1	./backend/gen/gen_mesa_disasm.c	/^static int src_ia1(FILE *file,$/;"	f	file:
src_index	./backend/gen_defs.hpp	/^      uint32_t src_index:2;$/;"	m	struct:GenCompactInstruction::__anon9::__anon10
src_negate	./backend/gen_insn_compact.cpp	/^      uint32_t src_negate:1;$/;"	m	struct:gbe::SrcRegBits::__anon99	file:
src_type	./backend/gen8_instruction.hpp	/^        uint32_t src_type:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon110
src_type	./backend/gen8_instruction.hpp	/^        uint32_t src_type:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon104::__anon111
src_vert_stride	./backend/gen_insn_compact.cpp	/^      uint32_t src_vert_stride:4;$/;"	m	struct:gbe::SrcRegBits::__anon99	file:
src_width	./backend/gen_insn_compact.cpp	/^      uint32_t src_width:3;$/;"	m	struct:gbe::SrcRegBits::__anon99	file:
srcreg_table	./backend/gen_insn_compact.cpp	/^  static compact_table_entry srcreg_table[] = {$/;"	m	namespace:gbe	file:
stack	./backend/gen_encoder.hpp	/^    GenInstructionState stack[MAX_STATE_NUM];$/;"	m	class:gbe::GenEncoder
stack	./backend/gen_insn_selection.cpp	/^    GenInstructionState stack[MAX_STATE_NUM];$/;"	m	class:gbe::Selection::Opaque	file:
stackSize	./backend/program.hpp	/^    uint32_t stackSize;        \/\/!< Stack size (0 if unused)$/;"	m	class:gbe::Kernel
stackSize	./ir/function.hpp	/^    uint32_t stackSize;             \/\/!< stack size for private memory.$/;"	m	class:gbe::ir::Function
stackbuffer	./ir/profile.hpp	/^    static const Register stackbuffer = Register(22); \/\/ stack buffer base address.$/;"	m	namespace:gbe::ir::ocl
stackptr	./ir/profile.hpp	/^    static const Register stackptr = Register(21); \/\/ stack pointer$/;"	m	namespace:gbe::ir::ocl
stacksize	./ir/profile.hpp	/^    static const Register stacksize = Register(39); \/\/ stack buffer total size$/;"	m	namespace:gbe::ir::ocl
startBackwardGeneration	./backend/gen_insn_selection.cpp	/^  void Selection::Opaque::startBackwardGeneration(void) {$/;"	f	class:gbe::Selection::Opaque
startBlock	./ir/context.cpp	/^  void Context::startBlock(void) {$/;"	f	class:gbe::ir::Context
startFunction	./ir/context.cpp	/^  void Context::startFunction(const std::string &name) {$/;"	f	class:gbe::ir::Context
startNewCG	./backend/context.cpp	/^  void Context::startNewCG(uint32_t simdWidth) {$/;"	f	class:gbe::Context
startNewCG	./backend/gen_context.cpp	/^  void GenContext::startNewCG(uint32_t simdWidth, uint32_t reservedSpillRegs, bool limitRegisterPressure) {$/;"	f	class:gbe::GenContext
starting	./backend/gen_reg_allocation.cpp	/^    vector<GenRegInterval*> starting;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
state	./backend/gen_insn_selection.hpp	/^    GenInstructionState state;$/;"	m	class:gbe::SelectionInstruction
state	./ir/printf.hpp	/^      PrintfState state;$/;"	m	struct:gbe::ir::PrintfSlot
stateNum	./backend/gen_encoder.hpp	/^    uint32_t stateNum;$/;"	m	class:gbe::GenEncoder
stateNum	./backend/gen_insn_selection.cpp	/^    uint32_t stateNum;$/;"	m	class:gbe::Selection::Opaque	file:
statementNum	./ir/printf.hpp	/^      uint32_t statementNum; \/\/ which printf within one kernel.$/;"	m	struct:gbe::ir::PrintfLog
staticStringMap	./sys/alloc.cpp	/^    std::tr1::unordered_map<const char*, int> staticStringMap;$/;"	m	struct:gbe::MemDebugger	file:
staticStringVector	./sys/alloc.cpp	/^    std::vector<const char*> staticStringVector;$/;"	m	struct:gbe::MemDebugger	file:
store	./backend/gen_encoder.hpp	/^    vector<GenInstruction> store;$/;"	m	class:gbe::GenEncoder
storeBottomHalf	./backend/gen_context.cpp	/^  void GenContext::storeBottomHalf(GenRegister dest, GenRegister src) {$/;"	f	class:gbe::GenContext
storeRelease	./sys/atomic.hpp	/^    INLINE void storeRelease(T x) { __store_release(&data, x); }$/;"	f	struct:gbe::AtomicInternal
storeThreadMap	./backend/gen_insn_selection.cpp	/^    bool storeThreadMap;$/;"	m	class:gbe::Selection::Opaque	file:
storeTopHalf	./backend/gen_context.cpp	/^  void GenContext::storeTopHalf(GenRegister dest, GenRegister src) {$/;"	f	class:gbe::GenContext
storedbg	./backend/gen_encoder.hpp	/^    vector<DebugInfo> storedbg;$/;"	m	class:gbe::GenEncoder
str	./ir/printf.hpp	/^      std::string str;            \/\/if %s, the string store here.$/;"	m	struct:gbe::ir::PrintfState
str	./ir/printf.hpp	/^      std::string str;$/;"	m	struct:gbe::ir::PrintfSlot
str	./llvm/llvm_to_gen.cpp	/^    std::string str(){return messages.str();}$/;"	f	class:gbe::gbeDiagnosticContext
str	./sys/cvar.hpp	/^    std::string *str; \/\/!< string variable$/;"	m	class:gbe::CVarInit
str_fmt_out	./gbe_bin_generater.cpp	/^    static bool str_fmt_out;$/;"	m	class:program_build_instance	file:
str_fmt_out	./gbe_bin_generater.cpp	/^bool program_build_instance::str_fmt_out = false;$/;"	m	class:program_build_instance	file:
stream_in	./backend/gen7_instruction.hpp	/^        uint32_t stream_in:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon67
stream_in	./backend/gen_defs.hpp	/^        uint32_t stream_in:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon26
stream_out	./backend/gen7_instruction.hpp	/^        uint32_t stream_out:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon67
stream_out	./backend/gen_defs.hpp	/^        uint32_t stream_out:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon26
stride	./backend/gen_register.hpp	/^  INLINE uint32_t stride(uint32_t stride) {$/;"	f	namespace:gbe
string	./backend/gen/gen_mesa_disasm.c	/^static int string(FILE *file, const char *string)$/;"	f	file:
stripMemSpace	./libocl/script/gen_vector.py	/^def stripMemSpace(t):$/;"	f
subTimestamps	./backend/gen8_context.cpp	/^  void Gen8Context::subTimestamps(GenRegister& t0, GenRegister& t1, GenRegister& tmp)$/;"	f	class:gbe::Gen8Context
subTimestamps	./backend/gen_context.cpp	/^  void GenContext::subTimestamps(GenRegister& t0, GenRegister& t1, GenRegister& tmp)$/;"	f	class:gbe::GenContext
subType	./backend/program.hpp	/^    uint64_t subType : 32; \/\/!< Optional sub-type of the patch (see program.h)$/;"	m	struct:gbe::PatchInfo
subType	./ir/register.hpp	/^      int subType;$/;"	m	struct:gbe::ir::RegisterData::PayloadRegisterData
subWithBorrow	./backend/gen_context.cpp	/^  void GenContext::subWithBorrow(GenRegister dest, GenRegister src0, GenRegister src1) {$/;"	f	class:gbe::GenContext
sub_function_id	./backend/gen7_instruction.hpp	/^        uint32_t sub_function_id:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon63
sub_function_id	./backend/gen8_instruction.hpp	/^        uint32_t sub_function_id:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon128
sub_function_id	./backend/gen_defs.hpp	/^        uint32_t sub_function_id:3;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon22
sub_reg_index	./backend/gen_defs.hpp	/^      uint32_t sub_reg_index:5;$/;"	m	struct:GenCompactInstruction::__anon12::__anon13
subfunc	./backend/gen7_instruction.hpp	/^        uint32_t subfunc:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon78
subfunc	./backend/gen8_instruction.hpp	/^        uint32_t subfunc:3;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon146
subfunc	./backend/gen_defs.hpp	/^        uint32_t subfunc:3;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon36
suboffset	./backend/gen_register.hpp	/^    static INLINE GenRegister suboffset(GenRegister reg, uint32_t delta) {$/;"	f	class:gbe::GenRegister
subphysicaloffset	./backend/gen_register.hpp	/^    static INLINE GenRegister subphysicaloffset(GenRegister reg, uint32_t delta) {$/;"	f	class:gbe::GenRegister
subreg_table	./backend/gen_insn_compact.cpp	/^  static compact_table_entry subreg_table[] = {$/;"	m	namespace:gbe	file:
subslice_id	./ir/profiling.hpp	/^            uint16_t subslice_id:2;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151::GenInfo::Gen8Info
succ_begin	./ir/structurizer.hpp	/^    sIterator succ_begin() { return successor.begin(); }$/;"	f	class:gbe::ir::Block
succ_empty	./ir/structurizer.hpp	/^    bool succ_empty() { return successor.empty(); }$/;"	f	class:gbe::ir::Block
succ_end	./ir/structurizer.hpp	/^    sIterator succ_end() { return successor.end(); }$/;"	f	class:gbe::ir::Block
succ_size	./ir/structurizer.hpp	/^    size_t succ_size() { return successor.size(); }$/;"	f	class:gbe::ir::Block
successor	./ir/structurizer.hpp	/^    BlockSets successor;$/;"	m	class:gbe::ir::Block
successors	./ir/function.hpp	/^    BlockSet successors;   \/\/!< Outgoing blocks$/;"	m	class:gbe::ir::BasicBlock
successors	./ir/structurizer.hpp	/^    BlockSets& successors() { return successor; }$/;"	f	class:gbe::ir::Block
syncFieldNum	./ir/instruction.hpp	/^  static const uint32_t syncFieldNum = 6u;$/;"	m	namespace:gbe::ir
syncGlobalBarrier	./ir/instruction.hpp	/^  static const uint32_t syncGlobalBarrier = SYNC_WORKGROUP_EXEC | SYNC_GLOBAL_WRITE_FENCE | SYNC_GLOBAL_READ_FENCE;$/;"	m	namespace:gbe::ir
syncImageBarrier	./ir/instruction.hpp	/^  static const uint32_t syncImageBarrier =  SYNC_WORKGROUP_EXEC | SYNC_GLOBAL_WRITE_FENCE | SYNC_GLOBAL_READ_FENCE | SYNC_IMAGE_FENCE;$/;"	m	namespace:gbe::ir
syncLocalBarrier	./ir/instruction.hpp	/^  static const uint32_t syncLocalBarrier = SYNC_WORKGROUP_EXEC |SYNC_LOCAL_WRITE_FENCE | SYNC_LOCAL_READ_FENCE;$/;"	m	namespace:gbe::ir
syncStr	./ir/instruction.cpp	/^    static const char *syncStr[syncFieldNum] = {$/;"	m	namespace:gbe::ir::internal	file:
t	./sys/platform.hpp	/^  struct Helper { char x; T t; };$/;"	m	struct:AlignOf::Helper
tail	./backend/context.cpp	/^    Block *tail;$/;"	m	class:gbe::SimpleAllocator	file:
target_function_gen7	./backend/gen/gen_mesa_disasm.c	/^static const char *target_function_gen7[16] = {$/;"	v	file:
target_function_gen75	./backend/gen/gen_mesa_disasm.c	/^static const char *target_function_gen75[16] = {$/;"	v	file:
tempHeader	./libocl/script/gen_vector.py	/^tempHeader = open(headerFileName, 'a')$/;"	v
ternaryOrSelectOut	./ir/instruction.cpp	/^    static void ternaryOrSelectOut(const T &insn, std::ostream &out, const Function &fn) {$/;"	f	namespace:gbe::ir::internal
thisElseLabel	./ir/function.hpp	/^    LabelIndex thisElseLabel;$/;"	m	class:gbe::ir::BasicBlock
thread_control	./backend/gen7_instruction.hpp	/^      uint32_t thread_control:2;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon43
thread_control	./backend/gen8_instruction.hpp	/^      uint32_t thread_control:2;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon103
thread_control	./backend/gen9_instruction.hpp	/^      uint32_t thread_control:2;$/;"	m	struct:Gen9NativeInstruction::__anon1::__anon2
thread_control	./backend/gen_defs.hpp	/^      uint32_t thread_control:2;$/;"	m	struct:GenNativeInstruction::__anon16::__anon17
thread_control	./backend/gen_insn_compact.cpp	/^      uint32_t thread_control:2;$/;"	m	struct:gbe::ControlBits::__anon94	file:
thread_control	./backend/gen_insn_compact.cpp	/^      uint32_t thread_control:2;$/;"	m	struct:gbe::Src3ControlBits::__anon95	file:
thread_ctrl_gen7	./backend/gen/gen_mesa_disasm.c	/^static const char *thread_ctrl_gen7[4] = {$/;"	v	file:
thread_ctrl_gen8	./backend/gen/gen_mesa_disasm.c	/^static const char *thread_ctrl_gen8[4] = {$/;"	v	file:
thread_id	./ir/profiling.hpp	/^            uint16_t thread_id:3;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151::GenInfo::Gen7Info
thread_id	./ir/profiling.hpp	/^            uint16_t thread_id:3;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151::GenInfo::Gen8Info
threadid	./ir/profile.hpp	/^    static const Register threadid = Register(37); \/\/ the thread id of this thread.$/;"	m	namespace:gbe::ir::ocl
threadn	./ir/profile.hpp	/^    static const Register threadn = Register(25);  \/\/ number of threads$/;"	m	namespace:gbe::ir::ocl
tick	./libocl/include/ocl_misc.h	/^  ulong tick;$/;"	m	struct:time_stamp
tidMapSLM	./ir/function.hpp	/^    int32_t tidMapSLM;              \/\/!< Used to store the map between groupid and hw thread.$/;"	m	class:gbe::ir::Function
time_stamp	./libocl/include/ocl_misc.h	/^struct time_stamp {$/;"	s
timestampEpilogHi	./ir/profiling.hpp	/^        uint32_t timestampEpilogHi;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
timestampEpilogLo	./ir/profiling.hpp	/^        uint32_t timestampEpilogLo;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
timestampPrologHi	./ir/profiling.hpp	/^        uint32_t timestampPrologHi;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
timestampPrologLo	./ir/profiling.hpp	/^        uint32_t timestampPrologLo;$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
timestampType	./backend/gen_insn_selection.hpp	/^        uint32_t timestampType:16;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon90
timestampType	./ir/instruction.cpp	/^      uint8_t timestampType;       \/\/!< Type of the time stamp, 16bits or 32bits, eg.$/;"	m	class:gbe::ir::internal::CalcTimestampInstruction	file:
tm0	./backend/gen_register.hpp	/^    static INLINE GenRegister tm0(void) {$/;"	f	class:gbe::GenRegister
tmp	./backend/gen_insn_selection.hpp	/^    gbe::vector<ir::Register> tmp;$/;"	m	class:gbe::SelectionBlock
toBeReplaceds	./backend/gen_insn_selection_optimize.cpp	/^      set<GenRegister*> toBeReplaceds;$/;"	m	class:gbe::SelBasicBlockOptimizer::ReplaceInfo	file:
toFree	./backend/gen_insn_selection.cpp	/^    vector<const SelectionPattern*> toFree;$/;"	m	class:gbe::SelectionLibrary	file:
toUniform	./backend/gen_register.hpp	/^    static INLINE GenRegister toUniform(GenRegister reg, uint32_t type) {$/;"	f	class:gbe::GenRegister
to_indirect1xN	./backend/gen_register.hpp	/^    static INLINE GenRegister to_indirect1xN(GenRegister reg, uint32_t base_addr,$/;"	f	class:gbe::GenRegister
top_half	./backend/gen_register.hpp	/^    INLINE GenRegister top_half(int simdWidth) const {$/;"	f	class:gbe::GenRegister
tracker	./backend/gen_insn_scheduling.cpp	/^    DependencyTracker tracker;$/;"	m	struct:gbe::SelectionScheduler	file:
traverseReadNode	./backend/gen_insn_scheduling.cpp	/^  void SelectionScheduler::traverseReadNode(ScheduleDAGNode *node, uint32_t degree) {$/;"	f	class:gbe::SelectionScheduler
tuple	./ir/context.hpp	/^    template <typename... Args> INLINE Tuple tuple(Args...args) {$/;"	f	class:gbe::ir::Context
tupleNum	./ir/function.hpp	/^    INLINE uint32_t tupleNum(void) const { return file.tupleNum(); }$/;"	f	class:gbe::ir::Function
tupleNum	./ir/register.hpp	/^    INLINE uint32_t tupleNum(void) const { return regTuples.size(); }$/;"	f	class:gbe::ir::RegisterFile
type	./backend/program.hpp	/^    gbe_arg_type type; \/\/!< Pointer, structure, image, regular value?$/;"	m	struct:gbe::KernelArgument
type	./backend/program.hpp	/^    uint64_t type : 16;    \/\/!< Type of the patch (see program.h for the list)$/;"	m	struct:gbe::PatchInfo
type	./ir/function.hpp	/^    Type type;     \/\/!< Gives the type of argument we have$/;"	m	struct:gbe::ir::FunctionArgument
type	./ir/immediate.hpp	/^    ImmType type;  \/\/!< Type of the value$/;"	m	class:gbe::ir::Immediate
type	./ir/instruction.cpp	/^        Tuple type;$/;"	m	class:gbe::ir::internal::PrintfInstruction	file:
type	./ir/instruction.cpp	/^        Type type;                  \/\/!< Type of the instruction$/;"	m	class:gbe::ir::internal::SubGroupInstruction	file:
type	./ir/instruction.cpp	/^        Type type;                  \/\/!< Type of the instruction$/;"	m	class:gbe::ir::internal::WorkGroupInstruction	file:
type	./ir/instruction.cpp	/^      Type              type;$/;"	m	class:gbe::ir::internal::MemInstruction	file:
type	./ir/instruction.cpp	/^      Type type;                     \/\/!< Type of the immediate$/;"	m	class:gbe::ir::internal::LoadImmInstruction	file:
type	./ir/instruction.cpp	/^      Type type;            \/\/!< Type of the instruction$/;"	m	class:gbe::ir::internal::NaryInstruction	file:
type	./ir/instruction.cpp	/^      Type type;       \/\/!< Type of the instruction$/;"	m	class:gbe::ir::internal::SelectInstruction	file:
type	./ir/instruction.cpp	/^      Type type;$/;"	m	class:gbe::ir::internal::IndirectMovInstruction	file:
type	./ir/instruction.cpp	/^      Type type;$/;"	m	class:gbe::ir::internal::MediaBlockReadInstruction	file:
type	./ir/instruction.cpp	/^      Type type;$/;"	m	class:gbe::ir::internal::MediaBlockWriteInstruction	file:
type	./ir/instruction.cpp	/^      Type type;$/;"	m	class:gbe::ir::internal::ReadARFInstruction	file:
type	./ir/instruction.cpp	/^      Type type;$/;"	m	class:gbe::ir::internal::TernaryInstruction	file:
type	./ir/instruction.hpp	/^     uint8_t  type;  \/*! the information type *\/$/;"	m	struct:gbe::ir::_ImageInfoKey::__anon161
type	./ir/printf.hpp	/^      uint32_t type;$/;"	m	struct:gbe::ir::PrintfSlot
type	./ir/structurizer.hpp	/^    BlockType type() { return btype; }$/;"	f	class:gbe::ir::Block
type	./ir/value.hpp	/^    Type type;$/;"	m	class:gbe::ir::ValueDef
type	./libocl/include/ocl_enqueue.h	/^  int type;$/;"	m	struct:ndrange_info_t
typeBaseName	./ir/function.hpp	/^      std::string typeBaseName;$/;"	m	struct:gbe::ir::FunctionArgument::InfoFromLLVM
typeName	./backend/program.hpp	/^      std::string typeName;$/;"	m	struct:gbe::KernelArgument::ArgInfo
typeName	./ir/function.hpp	/^      std::string typeName;$/;"	m	struct:gbe::ir::FunctionArgument::InfoFromLLVM
typeQual	./backend/program.hpp	/^      std::string typeQual;$/;"	m	struct:gbe::KernelArgument::ArgInfo
typeQual	./ir/function.hpp	/^      std::string typeQual;$/;"	m	struct:gbe::ir::FunctionArgument::InfoFromLLVM
typeSize	./backend/gen_register.hpp	/^  INLINE int typeSize(uint32_t type) {$/;"	f	namespace:gbe
typeSize	./backend/program.hpp	/^      uint32_t typeSize;$/;"	m	struct:gbe::KernelArgument::ArgInfo
typeSize	./ir/function.hpp	/^      uint32_t typeSize;$/;"	m	struct:gbe::ir::FunctionArgument::InfoFromLLVM
typeTuples	./ir/register.hpp	/^    vector<uint8_t> typeTuples;  \/\/!< Tuples are used for one instruction has multi src\/dst types.$/;"	m	class:gbe::ir::RegisterFile
type_dict	./libocl/script/gen_vector.py	/^type_dict = {}$/;"	v
typedWriteSplitSend	./backend/gen_insn_selection.hpp	/^        uint16_t typedWriteSplitSend:1;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon87
u16	./ir/immediate.hpp	/^      uint16_t *u16;$/;"	m	union:gbe::ir::Immediate::__anon154
u32	./ir/immediate.hpp	/^      uint32_t *u32;$/;"	m	union:gbe::ir::Immediate::__anon154
u64	./backend/gen_register.hpp	/^      uint64_t u64;$/;"	m	union:gbe::GenRegister::__anon40
u64	./ir/immediate.hpp	/^      uint64_t *u64;$/;"	m	union:gbe::ir::Immediate::__anon154
u8	./ir/immediate.hpp	/^      uint8_t *u8;$/;"	m	union:gbe::ir::Immediate::__anon154
ub1	./backend/gen_register.hpp	/^    static INLINE GenRegister ub1(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
ub1	./backend/gen_register.hpp	/^    static INLINE GenRegister ub1(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ub16	./backend/gen_register.hpp	/^    static INLINE GenRegister ub16(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
ub16	./backend/gen_register.hpp	/^    static INLINE GenRegister ub16(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ub16grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ub16grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
ub16grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ub16grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ub1grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ub1grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
ub1grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ub1grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ub8	./backend/gen_register.hpp	/^    static INLINE GenRegister ub8(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
ub8	./backend/gen_register.hpp	/^    static INLINE GenRegister ub8(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ub8grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ub8grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
ub8grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ub8grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
uchar	./libocl/include/ocl_async.h	/^DEF(uchar);$/;"	v
uchar	./libocl/include/ocl_types.h	/^DEF(uchar);$/;"	v
uchar	./libocl/include/ocl_types.h	/^typedef unsigned char uchar;$/;"	t
uchar	./libocl/tmpl/ocl_integer.tmpl.h	/^UDEF(uchar);$/;"	v
ud	./backend/gen7_instruction.hpp	/^      uint32_t ud;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57
ud	./backend/gen8_instruction.hpp	/^      uint32_t ud;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon112
ud	./backend/gen8_instruction.hpp	/^      uint32_t ud;$/;"	m	union:Gen8NativeInstruction::__anon102::__anon121
ud	./backend/gen9_instruction.hpp	/^      uint32_t ud;$/;"	m	union:Gen9NativeInstruction::__anon1::__anon3
ud	./backend/gen9_instruction.hpp	/^      uint32_t ud;$/;"	m	union:Gen9NativeInstruction::__anon1::__anon5
ud	./backend/gen9_instruction.hpp	/^      uint32_t ud;$/;"	m	union:Gen9NativeInstruction::__anon1::__anon7
ud	./backend/gen_defs.hpp	/^      uint32_t ud;$/;"	m	union:GenNativeInstruction::__anon16::__anon20
ud	./backend/gen_register.hpp	/^      uint32_t ud;$/;"	m	union:gbe::GenRegister::__anon40
ud1	./backend/gen_register.hpp	/^    static INLINE GenRegister ud1(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
ud1	./backend/gen_register.hpp	/^    static INLINE GenRegister ud1(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ud16	./backend/gen_register.hpp	/^    static INLINE GenRegister ud16(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
ud16	./backend/gen_register.hpp	/^    static INLINE GenRegister ud16(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ud16grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ud16grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
ud16grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ud16grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ud1arf	./backend/gen_register.hpp	/^    static INLINE GenRegister ud1arf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ud1grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ud1grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
ud1grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ud1grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ud8	./backend/gen_register.hpp	/^    static INLINE GenRegister ud8(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
ud8	./backend/gen_register.hpp	/^    static INLINE GenRegister ud8(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ud8grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ud8grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
ud8grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ud8grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
udEmpty	./ir/value.hpp	/^    DefSet *udEmpty;                   \/\/!< Void use set$/;"	m	class:gbe::ir::FunctionDAG
udGraph	./ir/value.hpp	/^    UDGraph udGraph;                   \/\/!< All the UD chains$/;"	m	class:gbe::ir::FunctionDAG
uint	./libocl/include/ocl_async.h	/^DEF(uint);$/;"	v
uint	./libocl/include/ocl_types.h	/^DEF(uint);$/;"	v
uint	./libocl/include/ocl_types.h	/^typedef unsigned int uint;$/;"	t
uint	./libocl/tmpl/ocl_integer.tmpl.h	/^UDEF(uint);$/;"	v
uint16_t	./sys/platform.hpp	/^typedef unsigned __int16_t uint16_t;$/;"	t
uint32_t	./sys/platform.hpp	/^typedef unsigned __int32_t uint32_t;$/;"	t
uint64_t	./sys/platform.hpp	/^typedef unsigned __int64_t uint64_t;$/;"	t
uint8_t	./sys/platform.hpp	/^typedef unsigned __int8_t   uint8_t;$/;"	t
uintptr_t	./libocl/include/ocl_types.h	/^typedef __int_type(__UINT,__INTPTR_WIDTH__) uintptr_t;$/;"	t
uip	./backend/gen7_instruction.hpp	/^        uint32_t uip:16;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon79
uip	./backend/gen8_instruction.hpp	/^        uint32_t uip:32;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon112::__anon120
ul1	./backend/gen_register.hpp	/^    static INLINE GenRegister ul1(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
ul1	./backend/gen_register.hpp	/^    static INLINE GenRegister ul1(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ul16	./backend/gen_register.hpp	/^    static INLINE GenRegister ul16(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
ul16	./backend/gen_register.hpp	/^    static INLINE GenRegister ul16(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ul16grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ul16grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
ul16grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ul16grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ul1grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ul1grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
ul1grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ul1grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ul8	./backend/gen_register.hpp	/^    static INLINE GenRegister ul8(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
ul8	./backend/gen_register.hpp	/^    static INLINE GenRegister ul8(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ul8grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ul8grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
ul8grf	./backend/gen_register.hpp	/^    static INLINE GenRegister ul8grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
ulong	./libocl/include/ocl_async.h	/^DEF(ulong);$/;"	v
ulong	./libocl/include/ocl_types.h	/^DEF(ulong);$/;"	v
ulong	./libocl/include/ocl_types.h	/^typedef unsigned long ulong;$/;"	t
ulong	./libocl/tmpl/ocl_integer.tmpl.h	/^UDEF(ulong);$/;"	v
undefPhiRegs	./ir/function.hpp	/^    set <Register> undefPhiRegs;$/;"	m	class:gbe::ir::BasicBlock
undefined	./ir/value.hpp	/^    ValueDef *undefined;               \/\/!< Undefined value$/;"	m	class:gbe::ir::FunctionDAG
unfreedNum	./sys/alloc.cpp	/^    volatile intptr_t unfreedNum;$/;"	m	struct:gbe::MemDebugger	file:
uniform	./ir/register.hpp	/^    bool uniform;$/;"	m	class:gbe::ir::RegisterData
unifyElementType	./llvm/ExpandLargeIntegers.cpp	/^static void unifyElementType(IRBuilder<> &IRB, SmallVector<Value *, 16> &Src, SmallVector<Value *, 16> &Dst) {$/;"	f	file:
unit	./backend/context.hpp	/^    const ir::Unit &unit;                 \/\/!< Unit that contains the kernel$/;"	m	class:gbe::Context
unit	./ir/context.hpp	/^    Unit &unit;                 \/\/!< A unit is associated to a contect$/;"	m	class:gbe::ir::Context
unit	./ir/function.hpp	/^    const Unit &unit;               \/\/!< Function belongs to this unit$/;"	m	class:gbe::ir::Function
unit	./llvm/llvm_gen_backend.cpp	/^      ir::Unit               &unit;$/;"	m	class:gbe::MemoryInstHelper	file:
unit	./llvm/llvm_gen_backend.cpp	/^    ir::Unit &unit;$/;"	m	class:gbe::GenWriter	file:
unit	./llvm/llvm_passes.cpp	/^    const ir::Unit &unit;$/;"	m	class:gbe::GenRemoveGEPPasss	file:
unit	./llvm/llvm_printf_parser.cpp	/^    ir::Unit &unit;$/;"	m	class:gbe::PrintfParser	file:
unlink	./sys/intrusive_list.cpp	/^  void unlink(intrusive_list_node* node) {$/;"	f	namespace:gbe
unlock	./sys/mutex.cpp	/^  void MutexSys::unlock( void ) { LeaveCriticalSection((CRITICAL_SECTION*)mutex); }$/;"	f	class:gbe::MutexSys
unlock	./sys/mutex.cpp	/^  void MutexSys::unlock( void ) { pthread_mutex_unlock((pthread_mutex_t*)mutex); }$/;"	f	class:gbe::MutexSys
unlock	./sys/mutex.hpp	/^    INLINE void unlock(void) { _lock.storeRelease(LOCK_IS_FREE); }$/;"	f	class:gbe::MutexActive
unpackLongVec	./backend/gen8_context.cpp	/^  void Gen8Context::unpackLongVec(GenRegister packed, GenRegister unpacked, uint32_t simd)$/;"	f	class:gbe::Gen8Context
unpacked_ub	./backend/gen_insn_selection.cpp	/^    INLINE GenRegister unpacked_ub(const ir::Register &reg) const {$/;"	f	class:gbe::Selection::Opaque
unpacked_ub	./backend/gen_register.hpp	/^    static INLINE GenRegister unpacked_ub(ir::Register reg, bool uniform = false) {$/;"	f	class:gbe::GenRegister
unpacked_ud	./backend/gen8_context.cpp	/^  GenRegister Gen8Context::unpacked_ud(GenRegister reg, uint32_t offset)$/;"	f	class:gbe::Gen8Context
unpacked_ud	./backend/gen_insn_selection.cpp	/^    INLINE GenRegister unpacked_ud(const ir::Register &reg) const {$/;"	f	class:gbe::Selection::Opaque
unpacked_ud	./backend/gen_register.hpp	/^    static INLINE GenRegister unpacked_ud(ir::Register reg, bool uniform = false) {$/;"	f	class:gbe::GenRegister
unpacked_ud	./backend/gen_register.hpp	/^    static INLINE GenRegister unpacked_ud(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
unpacked_uw	./backend/gen_insn_selection.cpp	/^    INLINE GenRegister unpacked_uw(const ir::Register &reg) const {$/;"	f	class:gbe::Selection::Opaque
unpacked_uw	./backend/gen_register.hpp	/^    static INLINE GenRegister unpacked_uw(const GenRegister& reg) {$/;"	f	class:gbe::GenRegister
unpacked_uw	./backend/gen_register.hpp	/^    static INLINE GenRegister unpacked_uw(ir::Register reg, bool uniform = false,$/;"	f	class:gbe::GenRegister
unpacked_uw	./backend/gen_register.hpp	/^    static INLINE GenRegister unpacked_uw(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
untypedAtomicA64Stateless	./backend/gen_insn_selection.cpp	/^    void untypedAtomicA64Stateless(Selection::Opaque &sel,$/;"	f	class:gbe::AtomicInstructionPattern
untypedRWMask	./backend/gen75_encoder.cpp	/^static const uint32_t untypedRWMask[] = {$/;"	v	file:
untypedRWMask	./backend/gen8_encoder.cpp	/^static const uint32_t untypedRWMask[] = {$/;"	v	file:
untypedRWMask	./backend/gen9_encoder.cpp	/^static const uint32_t untypedRWMask[] = {$/;"	v	file:
untypedRWMask	./backend/gen_encoder.cpp	/^  static const uint32_t untypedRWMask[] = {$/;"	m	namespace:gbe	file:
untypedReadStateless	./backend/gen_insn_selection.cpp	/^    void untypedReadStateless(Selection::Opaque &sel,$/;"	f	class:gbe::LoadInstructionPattern
untypedWriteStateless	./backend/gen_insn_selection.cpp	/^    void untypedWriteStateless(Selection::Opaque &sel,$/;"	f	class:gbe::StoreInstructionPattern
unvisitBlocks	./ir/liveness.hpp	/^    WorkSet unvisitBlocks;$/;"	m	class:gbe::ir::Liveness
upcast	./sys/intrusive_list.hpp	/^    static INLINE const node_type* upcast(const intrusive_list_node* n) {$/;"	f	class:gbe::intrusive_list
upcast	./sys/intrusive_list.hpp	/^    static INLINE node_type* upcast(intrusive_list_node* n) {$/;"	f	class:gbe::intrusive_list
updatePointerSource	./llvm/llvm_gen_backend.cpp	/^  static void updatePointerSource(Value *parent, Value *theUser, Value *source, SmallVector<Value *, 4> &pointers) {$/;"	f	namespace:gbe
updateWrites	./backend/gen_insn_scheduling.cpp	/^  void DependencyTracker::updateWrites(ScheduleDAGNode *node) {$/;"	f	class:gbe::DependencyTracker
upwardUsed	./ir/liveness.hpp	/^      UEVar upwardUsed;$/;"	m	struct:gbe::ir::Liveness::BlockInfo
useDWLabel	./backend/context.hpp	/^    bool useDWLabel;                      \/\/!< false means using u16 label, true means using u32 label.$/;"	m	class:gbe::Context
useDeviceEnqueue	./backend/program.hpp	/^    bool useDeviceEnqueue;          \/\/!< Has device enqueue?$/;"	m	class:gbe::Kernel
useDeviceEnqueue	./ir/function.hpp	/^    bool useDeviceEnqueue;          \/\/!< Has device enqueue?$/;"	m	class:gbe::ir::Function
useFlag	./backend/gen_register.hpp	/^    void useFlag(int nr, int subnr) {$/;"	f	class:gbe::GenInstructionState
useName	./ir/value.hpp	/^    map<ValueUse, ValueUse*> useName;  \/\/!< Get the ValueUse pointer from the value$/;"	m	class:gbe::ir::FunctionDAG
useSLM	./backend/program.hpp	/^    bool useSLM;               \/\/!< SLM requires a special HW config$/;"	m	class:gbe::Kernel
useSLM	./ir/function.hpp	/^    bool useSLM;                    \/\/!< Is SLM required?$/;"	m	class:gbe::ir::Function
useStore	./ir/lowering.cpp	/^  bool FunctionArgumentLowerer::useStore(const ValueDef &def, set<const Instruction*> &visited)$/;"	f	class:gbe::ir::FunctionArgumentLowerer
useVirtualFlag	./backend/gen_register.hpp	/^    void useVirtualFlag(ir::Register flag, unsigned pred) {$/;"	f	class:gbe::GenInstructionState
usedLabels	./backend/context.hpp	/^    set<ir::LabelIndex> usedLabels;       \/\/!< Set of all used labels$/;"	m	class:gbe::Context
usedLabels	./ir/context.hpp	/^      vector<uint8_t> *usedLabels; \/\/!< Store all labels that are defined$/;"	m	struct:gbe::ir::Context::StackElem
usedLabels	./ir/context.hpp	/^    vector<uint8_t> *usedLabels;$/;"	m	class:gbe::ir::Context
usedVecVals	./llvm/llvm_scalarize.cpp	/^    DenseMap<Value*, SmallVector<VecValElement, 16>> usedVecVals;$/;"	m	class:gbe::Scalarize	file:
userTimestamp	./ir/profiling.hpp	/^        uint32_t userTimestamp[MaxTimestampProfilingPoints];$/;"	m	struct:gbe::ir::ProfilingInfo::__anon151
ushort	./libocl/include/ocl_async.h	/^DEF(ushort);$/;"	v
ushort	./libocl/include/ocl_types.h	/^DEF(ushort);$/;"	v
ushort	./libocl/include/ocl_types.h	/^typedef unsigned short ushort;$/;"	t
ushort	./libocl/tmpl/ocl_integer.tmpl.h	/^UDEF(ushort);$/;"	v
uw1	./backend/gen_register.hpp	/^    static INLINE GenRegister uw1(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
uw1	./backend/gen_register.hpp	/^    static INLINE GenRegister uw1(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
uw16	./backend/gen_register.hpp	/^    static INLINE GenRegister uw16(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
uw16	./backend/gen_register.hpp	/^    static INLINE GenRegister uw16(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
uw16grf	./backend/gen_register.hpp	/^    static INLINE GenRegister uw16grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
uw16grf	./backend/gen_register.hpp	/^    static INLINE GenRegister uw16grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
uw1grf	./backend/gen_register.hpp	/^    static INLINE GenRegister uw1grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
uw1grf	./backend/gen_register.hpp	/^    static INLINE GenRegister uw1grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
uw8	./backend/gen_register.hpp	/^    static INLINE GenRegister uw8(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
uw8	./backend/gen_register.hpp	/^    static INLINE GenRegister uw8(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
uw8grf	./backend/gen_register.hpp	/^    static INLINE GenRegister uw8grf(ir::Register reg) {$/;"	f	class:gbe::GenRegister
uw8grf	./backend/gen_register.hpp	/^    static INLINE GenRegister uw8grf(uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
val	./ir/half.hpp	/^      uint16_t val;$/;"	m	class:gbe::ir::half
valid	./ir/unit.hpp	/^    bool valid;$/;"	m	class:gbe::ir::Unit
validTempFlagReg	./backend/gen_reg_allocation.cpp	/^    uint32_t validTempFlagReg;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
validateFlag	./backend/gen_reg_allocation.cpp	/^  void GenRegAllocator::Opaque::validateFlag(Selection &selection,$/;"	f	class:gbe::GenRegAllocator::Opaque
validatedFlags	./backend/gen_reg_allocation.cpp	/^    set<uint32_t> validatedFlags;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
vals	./llvm/llvm_scalarize.cpp	/^    llvm::Value* vals[32];$/;"	m	struct:gbe::VectorValues	file:
value	./backend/gen_register.hpp	/^    } value;$/;"	m	class:gbe::GenRegister	typeref:union:gbe::GenRegister::__anon40
value	./ir/instruction.cpp	/^    enum { value = 0 };$/;"	e	enum:gbe::ir::HelperIntrospection::__anon167	file:
value	./ir/instruction.cpp	/^    enum { value = 1 };$/;"	e	enum:gbe::ir::HelperIntrospection::__anon168	file:
value	./ir/instruction.hpp	/^  template <typename T, typename U> struct EqualType {enum {value = false};};$/;"	e	enum:gbe::ir::EqualType::__anon164
value	./ir/instruction.hpp	/^  template <typename T> struct EqualType<T,T> { enum {value = true};};$/;"	e	enum:gbe::ir::EqualType::__anon165
value	./libocl/include/ocl_float.h	/^  float value;$/;"	m	union:__anon169
value	./sys/platform.hpp	/^  enum { value = offsetof(Helper, t) };$/;"	e	enum:AlignOf::__anon185
valueExists	./llvm/llvm_gen_backend.cpp	/^    bool valueExists(Value *value, uint32_t index) {$/;"	f	class:gbe::RegisterTranslator
valueMap	./llvm/llvm_gen_backend.cpp	/^    map<ValueIndex, ValueIndex> valueMap;$/;"	m	class:gbe::RegisterTranslator	file:
valueNum	./ir/instruction.cpp	/^        uint8_t         valueNum;$/;"	m	class:gbe::ir::internal::LoadInstruction	file:
valueNum	./ir/instruction.cpp	/^        uint8_t     valueNum;$/;"	m	class:gbe::ir::internal::StoreInstruction	file:
valueTypeStr	./libocl/script/gen_vector.py	/^    valueTypeStr = ""$/;"	v	class:builtinProto
value_type	./sys/alloc.hpp	/^    typedef T value_type;$/;"	t	class:gbe::Allocator
value_type	./sys/intrusive_list.hpp	/^    typedef T value_type;$/;"	t	class:gbe::intrusive_list
value_type	./sys/list.hpp	/^    typedef T value_type;$/;"	t	class:gbe::list
value_type	./sys/map.hpp	/^    typedef std::pair<const Key, T> value_type;$/;"	t	class:gbe::map
value_type	./sys/set.hpp	/^    typedef Key value_type;$/;"	t	class:gbe::set
values	./ir/instruction.cpp	/^        Tuple             values;$/;"	m	class:gbe::ir::internal::LoadInstruction	file:
values	./ir/instruction.cpp	/^        Tuple         values;$/;"	m	class:gbe::ir::internal::StoreInstruction	file:
varKill	./ir/liveness.hpp	/^      VarKill varKill;$/;"	m	struct:gbe::ir::Liveness::BlockInfo
varType	./sys/cvar.hpp	/^    int varType;      \/\/!< STRING, INTEGER or FLOAT$/;"	m	class:gbe::CVarInit
vec1	./backend/gen_register.hpp	/^    static INLINE GenRegister vec1(GenRegister reg) {$/;"	f	class:gbe::GenRegister
vec1	./backend/gen_register.hpp	/^    static INLINE GenRegister vec1(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
vec1	./backend/gen_register.hpp	/^    static INLINE GenRegister vec1(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
vec16	./backend/gen_register.hpp	/^    static INLINE GenRegister vec16(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
vec16	./backend/gen_register.hpp	/^    static INLINE GenRegister vec16(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
vec2	./backend/gen_register.hpp	/^    static INLINE GenRegister vec2(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
vec2	./backend/gen_register.hpp	/^    static INLINE GenRegister vec2(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
vec4	./backend/gen_register.hpp	/^    static INLINE GenRegister vec4(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
vec4	./backend/gen_register.hpp	/^    static INLINE GenRegister vec4(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
vec8	./backend/gen_register.hpp	/^    static INLINE GenRegister vec8(uint32_t file, ir::Register reg) {$/;"	f	class:gbe::GenRegister
vec8	./backend/gen_register.hpp	/^    static INLINE GenRegister vec8(uint32_t file, uint32_t nr, uint32_t subnr) {$/;"	f	class:gbe::GenRegister
vecVals	./llvm/llvm_scalarize.cpp	/^      VectorValues *vecVals;$/;"	m	struct:gbe::Scalarize::VecValElement	file:
vec_size	./ir/instruction.cpp	/^      uint8_t vec_size;$/;"	m	class:gbe::ir::internal::MediaBlockWriteInstruction	file:
vector	./sys/vector.hpp	/^    INLINE explicit vector(const allocator_type &a = allocator_type()) :$/;"	f	class:gbe::vector
vector	./sys/vector.hpp	/^    INLINE explicit vector(size_type n,$/;"	f	class:gbe::vector
vector	./sys/vector.hpp	/^    INLINE vector(InputIterator first,$/;"	f	class:gbe::vector
vector	./sys/vector.hpp	/^  class vector : public std::vector<T, Allocator<T>>$/;"	c	namespace:gbe
vectorAlloca	./llvm/llvm_scalarize.cpp	/^    std::map<Value*, Value*> vectorAlloca;$/;"	m	class:gbe::Scalarize	file:
vectorCanSpill	./backend/gen_reg_allocation.cpp	/^  INLINE bool GenRegAllocator::Opaque::vectorCanSpill(SelectionVector *vector) {$/;"	f	class:gbe::GenRegAllocator::Opaque
vectorList	./backend/gen_insn_selection.hpp	/^    intrusive_list<SelectionVector> vectorList;$/;"	m	class:gbe::SelectionBlock
vectorMap	./backend/gen_reg_allocation.cpp	/^    map<ir::Register, VectorLocation> vectorMap;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
vectorNum	./backend/gen_insn_selection.cpp	/^    uint32_t vectorNum;$/;"	m	class:gbe::Selection::Opaque	file:
vectorVals	./llvm/llvm_scalarize.cpp	/^    DenseMap<Value*, VectorValues> vectorVals;$/;"	m	class:gbe::Scalarize	file:
vector_n	./ir/printf.hpp	/^      char vector_n;$/;"	m	struct:gbe::ir::PrintfState
vectors	./backend/gen_reg_allocation.cpp	/^    vector<SelectionVector*> vectors;$/;"	m	class:gbe::GenRegAllocator::Opaque	file:
ver_line_stride	./backend/gen7_instruction.hpp	/^        uint32_t ver_line_stride:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon80
ver_line_stride	./backend/gen8_instruction.hpp	/^        uint32_t ver_line_stride:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon149
ver_line_stride	./backend/gen_defs.hpp	/^        uint32_t ver_line_stride:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon38
ver_line_stride_offset	./backend/gen7_instruction.hpp	/^        uint32_t ver_line_stride_offset:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon80
ver_line_stride_offset	./backend/gen8_instruction.hpp	/^        uint32_t ver_line_stride_offset:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon149
ver_line_stride_offset	./backend/gen_defs.hpp	/^        uint32_t ver_line_stride_offset:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon38
ver_line_stride_override	./backend/gen7_instruction.hpp	/^        uint32_t ver_line_stride_override:1;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon80
ver_line_stride_override	./backend/gen8_instruction.hpp	/^        uint32_t ver_line_stride_override:1;$/;"	m	struct:Gen8NativeInstruction::__anon102::__anon121::__anon149
ver_line_stride_override	./backend/gen_defs.hpp	/^        uint32_t ver_line_stride_override:1;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon38
vert_stride	./backend/gen/gen_mesa_disasm.c	/^static const char *vert_stride[16] = {$/;"	v	file:
visitCallInst	./llvm/llvm_sampler_fix.cpp	/^    bool visitCallInst(CallInst *I) {$/;"	f	class:gbe::SamplerFix
visitGetElementPtrInst	./llvm/llvm_gen_backend.cpp	/^    void visitGetElementPtrInst(GetElementPtrInst &I) {NOT_SUPPORTED;}$/;"	f	class:gbe::GenWriter
visitIndirectBrInst	./llvm/llvm_gen_backend.cpp	/^    void visitIndirectBrInst(IndirectBrInst &I) {NOT_SUPPORTED;}$/;"	f	class:gbe::GenWriter
visitInlineAsm	./llvm/llvm_gen_backend.cpp	/^    void visitInlineAsm(CallInst &I) {NOT_SUPPORTED;}$/;"	f	class:gbe::GenWriter
visitInsertValueInst	./llvm/llvm_gen_backend.cpp	/^    void visitInsertValueInst(InsertValueInst &I) {NOT_SUPPORTED;}$/;"	f	class:gbe::GenWriter
visitInstruction	./llvm/llvm_gen_backend.cpp	/^    void visitInstruction(Instruction &I) {NOT_SUPPORTED;}$/;"	f	class:gbe::GenWriter
visitInvokeInst	./llvm/llvm_gen_backend.cpp	/^    void visitInvokeInst(InvokeInst &I) {NOT_SUPPORTED;}$/;"	f	class:gbe::GenWriter
visitResumeInst	./llvm/llvm_gen_backend.cpp	/^    void visitResumeInst(ResumeInst &I) {NOT_SUPPORTED;}$/;"	f	class:gbe::GenWriter
visitSwitchInst	./llvm/llvm_gen_backend.cpp	/^    void visitSwitchInst(SwitchInst &I) {NOT_SUPPORTED;}$/;"	f	class:gbe::GenWriter
visitUnreachableInst	./llvm/llvm_gen_backend.cpp	/^    void visitUnreachableInst(UnreachableInst &I) {;}$/;"	f	class:gbe::GenWriter
visitVAArgInst	./llvm/llvm_gen_backend.cpp	/^    void visitVAArgInst(VAArgInst &I) {NOT_SUPPORTED;}$/;"	f	class:gbe::GenWriter
vme_bti	./backend/gen_insn_selection.hpp	/^        uint16_t vme_bti:8;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon89
vme_gen7	./backend/gen7_instruction.hpp	/^      } vme_gen7;$/;"	m	union:Gen7NativeInstruction::__anon42::__anon57	typeref:struct:Gen7NativeInstruction::__anon42::__anon57::__anon67
vme_gen7	./backend/gen_defs.hpp	/^      } vme_gen7;$/;"	m	union:GenNativeInstruction::__anon16::__anon20	typeref:struct:GenNativeInstruction::__anon16::__anon20::__anon26
vme_search_path_lut	./backend/gen7_instruction.hpp	/^        uint32_t vme_search_path_lut:3;$/;"	m	struct:Gen7NativeInstruction::__anon42::__anon57::__anon67
vme_search_path_lut	./backend/gen_defs.hpp	/^        uint32_t vme_search_path_lut:3;$/;"	m	struct:GenNativeInstruction::__anon16::__anon20::__anon26
vme_search_path_lut	./backend/gen_insn_selection.hpp	/^        uint16_t vme_search_path_lut:3;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon89
vme_search_path_lut	./ir/instruction.cpp	/^      uint8_t vme_search_path_lut;$/;"	m	class:gbe::ir::internal::VmeInstruction	file:
void_allocator_ptr	./sys/alloc.hpp	/^    typedef typename std::allocator<void>::const_pointer void_allocator_ptr;$/;"	t	class:gbe::Allocator
vstride	./backend/gen_insn_selection.hpp	/^        uint16_t vstride:5;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon85
vstride_size	./backend/gen_register.hpp	/^    static INLINE int vstride_size(GenRegister reg) {$/;"	f	class:gbe::GenRegister
wSlot	./backend/program.h	/^    int32_t wSlot;$/;"	m	struct:ImageInfo
waitType	./backend/gen_insn_selection.hpp	/^      uint32_t waitType;$/;"	m	union:gbe::SelectionInstruction::__anon83
wectrl	./backend/gen/gen_mesa_disasm.c	/^static const char *wectrl[2] = {$/;"	v	file:
wellFormed	./ir/instruction.cpp	/^    INLINE bool AtomicInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::AtomicInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool BitCastInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::BitCastInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool BranchInstruction::wellFormed(const Function &fn, std::string &whyNot) const {$/;"	f	class:gbe::ir::internal::BranchInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool CalcTimestampInstruction::wellFormed(const Function &fn, std::string &whyNot) const {$/;"	f	class:gbe::ir::internal::CalcTimestampInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool CompareInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::CompareInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool ConvertInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::ConvertInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool GetImageInfoInstruction::wellFormed(const Function &fn, std::string &why) const$/;"	f	class:gbe::ir::internal::GetImageInfoInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool IndirectMovInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::IndirectMovInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool LabelInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::LabelInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool LoadImmInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::LoadImmInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool LoadInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::LoadInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool MediaBlockReadInstruction::wellFormed(const Function &fn, std::string &whyNot) const {$/;"	f	class:gbe::ir::internal::MediaBlockReadInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool MediaBlockWriteInstruction::wellFormed(const Function &fn, std::string &whyNot) const {$/;"	f	class:gbe::ir::internal::MediaBlockWriteInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool NaryInstruction<srcNum>::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::NaryInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool PrintfInstruction::wellFormed(const Function &fn, std::string &whyNot) const {$/;"	f	class:gbe::ir::internal::PrintfInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool ReadARFInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::ReadARFInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool RegionInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::RegionInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool SampleInstruction::wellFormed(const Function &fn, std::string &why) const$/;"	f	class:gbe::ir::internal::SampleInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool SelectInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::SelectInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool SimdShuffleInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::SimdShuffleInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool StoreInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::StoreInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool StoreProfilingInstruction::wellFormed(const Function &fn, std::string &whyNot) const {$/;"	f	class:gbe::ir::internal::StoreProfilingInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool SubGroupInstruction::wellFormed(const Function &fn, std::string &whyNot) const {$/;"	f	class:gbe::ir::internal::SubGroupInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool SyncInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::SyncInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool TernaryInstruction::wellFormed(const Function &fn, std::string &whyNot) const$/;"	f	class:gbe::ir::internal::TernaryInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool TypedWriteInstruction::wellFormed(const Function &fn, std::string &why) const$/;"	f	class:gbe::ir::internal::TypedWriteInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool VmeInstruction::wellFormed(const Function &fn, std::string &why) const$/;"	f	class:gbe::ir::internal::VmeInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool WaitInstruction::wellFormed(const Function &fn, std::string &why) const$/;"	f	class:gbe::ir::internal::WaitInstruction
wellFormed	./ir/instruction.cpp	/^    INLINE bool WorkGroupInstruction::wellFormed(const Function &fn, std::string &whyNot) const {$/;"	f	class:gbe::ir::internal::WorkGroupInstruction
wellFormedLoadStore	./ir/instruction.cpp	/^    INLINE bool wellFormedLoadStore(const T &insn, const Function &fn, std::string &whyNot)$/;"	f	namespace:gbe::ir::internal
wgBroadcastSLM	./ir/function.hpp	/^    int32_t wgBroadcastSLM;         \/\/!< Used for broadcast the workgroup value.$/;"	m	class:gbe::ir::Function
wgOpInitValue	./backend/gen8_context.cpp	/^  static void wgOpInitValue(GenEncoder *p, GenRegister dataReg, uint32_t wg_op)$/;"	f	namespace:gbe
wgOpInitValue	./backend/gen_context.cpp	/^  static void wgOpInitValue(GenEncoder *p, GenRegister dataReg, uint32_t wg_op)$/;"	f	namespace:gbe
wgOpPerform	./backend/gen8_context.cpp	/^  static void wgOpPerform(GenRegister dst,$/;"	f	namespace:gbe
wgOpPerform	./backend/gen_context.cpp	/^  static void wgOpPerform(GenRegister dst,$/;"	f	namespace:gbe
wgOpPerformThread	./backend/gen8_context.cpp	/^  static void wgOpPerformThread(GenRegister threadDst,$/;"	f	namespace:gbe
wgOpPerformThread	./backend/gen_context.cpp	/^  static void wgOpPerformThread(GenRegister threadDst,$/;"	f	namespace:gbe
wgop	./backend/gen_insn_selection.hpp	/^      }wgop;$/;"	m	union:gbe::SelectionInstruction::__anon83	typeref:struct:gbe::SelectionInstruction::__anon83::__anon93
what	./sys/exception.hpp	/^    const char *what(void) const throw() { return msg.c_str(); }$/;"	f	class:gbe::Exception
whileLabel	./ir/function.hpp	/^    LabelIndex whileLabel;$/;"	m	class:gbe::ir::BasicBlock
width	./backend/gen/gen_mesa_disasm.c	/^static const char *width[8] = {$/;"	v	file:
width	./backend/gen_insn_selection.hpp	/^        uint16_t width:4;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon85
width_size	./backend/gen_register.hpp	/^    static INLINE int width_size(GenRegister reg) {$/;"	f	class:gbe::GenRegister
word	./libocl/include/ocl_float.h	/^  uint  word;$/;"	m	union:__anon169
workSet	./ir/liveness.hpp	/^    WorkSet workSet;$/;"	m	class:gbe::ir::Liveness
work_group_barrier	./libocl/include/ocl_sync.h	31;"	d
workdim	./ir/profile.hpp	/^    static const Register workdim = Register(26);  \/\/ work dimention.$/;"	m	namespace:gbe::ir::ocl
workgroupOp	./backend/gen_insn_selection.hpp	/^        uint16_t workgroupOp;$/;"	m	struct:gbe::SelectionInstruction::__anon83::__anon93
write64Legacy	./backend/gen_insn_selection.cpp	/^    void write64Legacy(Selection::Opaque &sel,$/;"	f	class:gbe::StoreInstructionPattern
write64Stateless	./backend/gen_insn_selection.cpp	/^    void write64Stateless(Selection::Opaque &sel,$/;"	f	class:gbe::StoreInstructionPattern
writeImageArgs	./llvm/llvm_gen_backend.cpp	/^    uint32_t writeImageArgs;$/;"	m	struct:gbe::ImageArgsInfo	file:
writemask	./backend/gen/gen_mesa_disasm.c	/^static const char *writemask[16] = {$/;"	v	file:
writer	./llvm/llvm_gen_backend.cpp	/^      GenWriter            *writer;$/;"	m	class:gbe::MemoryInstHelper	file:
x	./sys/platform.hpp	/^  struct Helper { char x; T t; };$/;"	m	struct:AlignOf::Helper
zero	./ir/profile.hpp	/^    static const Register zero = Register(27);     \/\/  scalar register holds zero.$/;"	m	namespace:gbe::ir::ocl
zero_padding	./ir/printf.hpp	/^      char zero_padding;$/;"	m	struct:gbe::ir::PrintfState
~Allocator	./sys/alloc.hpp	/^    INLINE ~Allocator(void) {}$/;"	f	class:gbe::Allocator
~BTI	./ir/instruction.hpp	/^    ~BTI() {}$/;"	f	struct:gbe::ir::BTI
~BasicBlock	./ir/function.cpp	/^  BasicBlock::~BasicBlock(void) {$/;"	f	class:gbe::ir::BasicBlock
~BinInterpCallBackInitializer	./gbe_bin_interpreter.cpp	/^  ~BinInterpCallBackInitializer() {$/;"	f	struct:BinInterpCallBackInitializer
~Block	./ir/structurizer.hpp	/^    virtual ~Block() {}$/;"	f	class:gbe::ir::Block
~BxtContext	./backend/gen9_context.hpp	/^    virtual ~BxtContext(void) { }$/;"	f	class:gbe::BxtContext
~CFGStructurizer	./ir/structurizer.cpp	/^  CFGStructurizer::~CFGStructurizer()$/;"	f	class:gbe::ir::CFGStructurizer
~CallBackInitializer	./backend/program.cpp	/^    ~CallBackInitializer() {$/;"	f	struct:gbe::CallBackInitializer
~ChvContext	./backend/gen8_context.hpp	/^    virtual ~ChvContext(void) { }$/;"	f	class:gbe::ChvContext
~Constant	./ir/constant.hpp	/^    INLINE ~Constant(void) {}$/;"	f	class:gbe::ir::Constant
~Context	./backend/context.cpp	/^  Context::~Context(void) {$/;"	f	class:gbe::Context
~Context	./ir/context.cpp	/^  Context::~Context(void) {$/;"	f	class:gbe::ir::Context
~Exception	./sys/exception.hpp	/^    ~Exception(void) throw() {}$/;"	f	class:gbe::Exception
~Function	./ir/function.cpp	/^  Function::~Function(void) {$/;"	f	class:gbe::ir::Function
~FunctionArgumentLowerer	./ir/lowering.cpp	/^  FunctionArgumentLowerer::~FunctionArgumentLowerer(void) {$/;"	f	class:gbe::ir::FunctionArgumentLowerer
~FunctionDAG	./ir/value.cpp	/^  FunctionDAG::~FunctionDAG(void) {$/;"	f	class:gbe::ir::FunctionDAG
~Gen75Context	./backend/gen75_context.hpp	/^    virtual ~Gen75Context(void) { }$/;"	f	class:gbe::Gen75Context
~Gen75Encoder	./backend/gen75_encoder.hpp	/^    virtual ~Gen75Encoder(void) { }$/;"	f	class:gbe::Gen75Encoder
~Gen7Encoder	./backend/gen7_encoder.hpp	/^    virtual ~Gen7Encoder(void) { }$/;"	f	class:gbe::Gen7Encoder
~Gen8Context	./backend/gen8_context.hpp	/^    virtual ~Gen8Context(void) { }$/;"	f	class:gbe::Gen8Context
~Gen8Encoder	./backend/gen8_encoder.hpp	/^    virtual ~Gen8Encoder(void) { }$/;"	f	class:gbe::Gen8Encoder
~Gen9Context	./backend/gen9_context.hpp	/^    virtual ~Gen9Context(void) { };$/;"	f	class:gbe::Gen9Context
~Gen9Encoder	./backend/gen9_encoder.hpp	/^    virtual ~Gen9Encoder(void) { }$/;"	f	class:gbe::Gen9Encoder
~GenContext	./backend/gen_context.cpp	/^  GenContext::~GenContext(void) {$/;"	f	class:gbe::GenContext
~GenEncoder	./backend/gen_encoder.hpp	/^    virtual ~GenEncoder(void) { }$/;"	f	class:gbe::GenEncoder
~GenKernel	./backend/gen_program.cpp	/^  GenKernel::~GenKernel(void) { GBE_SAFE_DELETE_ARRAY(insns); }$/;"	f	class:gbe::GenKernel
~GenProgram	./backend/gen_program.hpp	/^    virtual ~GenProgram(void) {};$/;"	f	class:gbe::GenProgram
~GenRegAllocator	./backend/gen_reg_allocation.cpp	/^  GenRegAllocator::~GenRegAllocator(void) {$/;"	f	class:gbe::GenRegAllocator
~GlkContext	./backend/gen9_context.hpp	/^      virtual ~GlkContext(void) { };$/;"	f	class:gbe::GlkContext
~GrowingPool	./sys/alloc.hpp	/^    ~GrowingPool(void) {$/;"	f	class:gbe::GrowingPool
~GrowingPoolElem	./sys/alloc.hpp	/^      ~GrowingPoolElem(void) {$/;"	f	class:gbe::GrowingPool::GrowingPoolElem
~IfElseBlock	./ir/structurizer.hpp	/^    virtual ~IfElseBlock() {}$/;"	f	class:gbe::ir::IfElseBlock
~IfThenBlock	./ir/structurizer.hpp	/^    virtual ~IfThenBlock() {}$/;"	f	class:gbe::ir::IfThenBlock
~ImageSet	./ir/image.cpp	/^  ImageSet::~ImageSet() {$/;"	f	class:gbe::ir::ImageSet
~Immediate	./ir/immediate.hpp	/^    ~Immediate() {$/;"	f	class:gbe::ir::Immediate
~Instruction	./ir/instruction.hpp	/^    INLINE ~Instruction(void) {}$/;"	f	class:gbe::ir::Instruction
~KblContext	./backend/gen9_context.hpp	/^      virtual ~KblContext(void) { };$/;"	f	class:gbe::KblContext
~Kernel	./backend/program.cpp	/^  Kernel::~Kernel(void) {$/;"	f	class:gbe::Kernel
~LinearAllocator	./sys/alloc.cpp	/^  LinearAllocator::~LinearAllocator(void) {$/;"	f	class:gbe::LinearAllocator
~LiveOutSet	./ir/value.cpp	/^  LiveOutSet::~LiveOutSet(void) {$/;"	f	class:gbe::ir::LiveOutSet
~Liveness	./ir/liveness.cpp	/^  Liveness::~Liveness(void) {$/;"	f	class:gbe::ir::Liveness
~Lock	./sys/mutex.hpp	/^    ~Lock() { mutex.unlock(); }$/;"	f	class:gbe::Lock
~LockOutput	./ir/printf.hpp	/^        ~LockOutput(void) {$/;"	f	struct:gbe::ir::PrintfSet::LockOutput
~LockOutput	./ir/profiling.hpp	/^        ~LockOutput(void) {$/;"	f	struct:gbe::ir::ProfilingInfo::LockOutput
~MemDebugger	./sys/alloc.cpp	/^    ~MemDebugger(void) { this->dumpAlloc(); }$/;"	f	struct:gbe::MemDebugger
~MutexSys	./sys/mutex.cpp	/^  MutexSys::~MutexSys( void ) { DeleteCriticalSection((CRITICAL_SECTION*)mutex); delete ((CRITICAL_SECTION*)mutex); }$/;"	f	class:gbe::MutexSys
~MutexSys	./sys/mutex.cpp	/^  MutexSys::~MutexSys( void ) { pthread_mutex_destroy((pthread_mutex_t*)mutex); delete ((pthread_mutex_t*)mutex); }$/;"	f	class:gbe::MutexSys
~NonCopyable	./sys/platform.hpp	/^  INLINE ~NonCopyable(void) {}$/;"	f	class:NonCopyable
~Opaque	./backend/gen_insn_selection.cpp	/^  Selection::Opaque::~Opaque(void) {$/;"	f	class:gbe::Selection::Opaque
~Opaque	./backend/gen_reg_allocation.cpp	/^  GenRegAllocator::Opaque::~Opaque(void) {}$/;"	f	class:gbe::GenRegAllocator::Opaque
~PrintfSlot	./ir/printf.hpp	/^      ~PrintfSlot(void) {$/;"	f	struct:gbe::ir::PrintfSlot
~ProfilingInserter	./llvm/llvm_profiling.cpp	/^    ~ProfilingInserter(void)$/;"	f	class:gbe::ProfilingInserter
~Program	./backend/program.cpp	/^  Program::~Program(void) {$/;"	f	class:gbe::Program
~RegisterData	./ir/register.hpp	/^    INLINE ~RegisterData(void) {}$/;"	f	class:gbe::ir::RegisterData
~ReplaceInfo	./backend/gen_insn_selection_optimize.cpp	/^      ~ReplaceInfo()$/;"	f	class:gbe::SelBasicBlockOptimizer::ReplaceInfo
~Segment	./sys/alloc.cpp	/^  LinearAllocator::Segment::~Segment(void) {$/;"	f	class:gbe::LinearAllocator::Segment
~SelBasicBlockOptimizer	./backend/gen_insn_selection_optimize.cpp	/^    ~SelBasicBlockOptimizer() {}$/;"	f	class:gbe::SelBasicBlockOptimizer
~SelGlobalOptimizer	./backend/gen_insn_selection_optimize.cpp	/^    ~SelGlobalOptimizer() {}$/;"	f	class:gbe::SelGlobalOptimizer
~SelOptimizer	./backend/gen_insn_selection_optimize.cpp	/^    virtual ~SelOptimizer() {}$/;"	f	class:gbe::SelOptimizer
~Selection	./backend/gen_insn_selection.cpp	/^  Selection::~Selection(void) { GBE_DELETE(this->opaque); }$/;"	f	class:gbe::Selection
~SelectionLibrary	./backend/gen_insn_selection.cpp	/^  SelectionLibrary::~SelectionLibrary(void) {$/;"	f	class:gbe::SelectionLibrary
~SelectionPattern	./backend/gen_insn_selection.cpp	/^    virtual ~SelectionPattern(void) {}$/;"	f	class:gbe::SelectionPattern
~SelfLoopBlock	./ir/structurizer.hpp	/^    virtual ~SelfLoopBlock() {}$/;"	f	class:gbe::ir::SelfLoopBlock
~SerialBlock	./ir/structurizer.hpp	/^    virtual ~SerialBlock(){}$/;"	f	class:gbe::ir::SerialBlock
~Serializable	./sys/platform.hpp	/^  virtual ~Serializable(void) { }$/;"	f	class:Serializable
~SimpleAllocator	./backend/context.cpp	/^  SimpleAllocator::~SimpleAllocator(void) {$/;"	f	class:gbe::SimpleAllocator
~SimpleBlock	./ir/structurizer.hpp	/^    virtual ~SimpleBlock() {}$/;"	f	class:gbe::ir::SimpleBlock
~Unit	./ir/unit.cpp	/^  Unit::~Unit(void) {$/;"	f	class:gbe::ir::Unit
~intrusive_list_base	./sys/intrusive_list.hpp	/^    INLINE ~intrusive_list_base(void) {}$/;"	f	class:gbe::intrusive_list_base
~program_build_instance	./gbe_bin_generater.cpp	/^    ~program_build_instance () {$/;"	f	class:program_build_instance
